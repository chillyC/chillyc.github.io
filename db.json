{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/images/bird_32_gray.png","path":"images/bird_32_gray.png","modified":0,"renderable":0},{"_id":"source/images/bird_32_gray_fail.png","path":"images/bird_32_gray_fail.png","modified":0,"renderable":0},{"_id":"source/images/christmas_rose.jpg","path":"images/christmas_rose.jpg","modified":0,"renderable":0},{"_id":"source/images/code_bg.png","path":"images/code_bg.png","modified":0,"renderable":0},{"_id":"source/images/dotted-border.png","path":"images/dotted-border.png","modified":0,"renderable":0},{"_id":"source/images/email.png","path":"images/email.png","modified":0,"renderable":0},{"_id":"source/images/line-tile.png","path":"images/line-tile.png","modified":0,"renderable":0},{"_id":"source/images/rss.png","path":"images/rss.png","modified":0,"renderable":0},{"_id":"source/images/noise.png","path":"images/noise.png","modified":0,"renderable":0},{"_id":"source/images/search.png","path":"images/search.png","modified":0,"renderable":0},{"_id":"source/images/share_to_sina.png","path":"images/share_to_sina.png","modified":0,"renderable":0},{"_id":"themes/landscape/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/js/script.js","path":"js/script.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","path":"css/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":0,"renderable":1},{"_id":"themes/jacman/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/jacman/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":0,"renderable":1},{"_id":"themes/jacman/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/jacman/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/jacman/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/jacman/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/jacman/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/jacman/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/jacman/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/jacman/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/jacman/source/font/coveredbyyourgrace-webfont.eot","path":"font/coveredbyyourgrace-webfont.eot","modified":0,"renderable":1},{"_id":"themes/jacman/source/font/FontAwesome.otf","path":"font/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/jacman/source/font/coveredbyyourgrace-webfont.woff","path":"font/coveredbyyourgrace-webfont.woff","modified":0,"renderable":1},{"_id":"themes/jacman/source/font/coveredbyyourgrace-webfont.ttf","path":"font/coveredbyyourgrace-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/jacman/source/font/fontawesome-webfont.eot","path":"font/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/jacman/source/font/fontawesome-webfont.woff","path":"font/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/jacman/source/font/fontdiao.eot","path":"font/fontdiao.eot","modified":0,"renderable":1},{"_id":"themes/jacman/source/img/author.jpg","path":"img/author.jpg","modified":0,"renderable":1},{"_id":"themes/jacman/source/font/fontdiao.ttf","path":"font/fontdiao.ttf","modified":0,"renderable":1},{"_id":"themes/jacman/source/img/cc-by-nc-nd.svg","path":"img/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/jacman/source/img/cc-by-nc-sa.svg","path":"img/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/jacman/source/img/cc-by-nc.svg","path":"img/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/jacman/source/img/cc-by-nd.svg","path":"img/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/jacman/source/img/cc-by-sa.svg","path":"img/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/jacman/source/img/cc-zero.svg","path":"img/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/jacman/source/img/cc-by.svg","path":"img/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/jacman/source/font/fontdiao.woff","path":"font/fontdiao.woff","modified":0,"renderable":1},{"_id":"themes/jacman/source/img/favicon.ico","path":"img/favicon.ico","modified":0,"renderable":1},{"_id":"themes/jacman/source/img/jacman.jpg","path":"img/jacman.jpg","modified":0,"renderable":1},{"_id":"themes/jacman/source/img/logo.svg","path":"img/logo.svg","modified":0,"renderable":1},{"_id":"themes/jacman/source/img/scrollup.png","path":"img/scrollup.png","modified":0,"renderable":1},{"_id":"themes/jacman/source/js/gallery.js","path":"js/gallery.js","modified":0,"renderable":1},{"_id":"themes/jacman/source/js/jquery.imagesloaded.min.js","path":"js/jquery.imagesloaded.min.js","modified":0,"renderable":1},{"_id":"themes/jacman/source/js/totop.js","path":"js/totop.js","modified":0,"renderable":1},{"_id":"themes/jacman/source/js/jquery.qrcode-0.12.0.min.js","path":"js/jquery.qrcode-0.12.0.min.js","modified":0,"renderable":1},{"_id":"themes/jacman/source/font/coveredbyyourgrace-webfont.svg","path":"font/coveredbyyourgrace-webfont.svg","modified":0,"renderable":1},{"_id":"themes/jacman/source/font/fontawesome-webfont.ttf","path":"font/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/jacman/source/font/fontdiao.svg","path":"font/fontdiao.svg","modified":0,"renderable":1},{"_id":"themes/jacman/source/img/logo.png","path":"img/logo.png","modified":0,"renderable":1},{"_id":"themes/jacman/source/js/jquery-2.0.3.min.js","path":"js/jquery-2.0.3.min.js","modified":0,"renderable":1},{"_id":"themes/jacman/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/jacman/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/jacman/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/jacman/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/jacman/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/jacman/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/jacman/source/font/fontawesome-webfont.svg","path":"font/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"themes/jacman/source/img/banner.jpg","path":"img/banner.jpg","modified":0,"renderable":1}],"Cache":[{"_id":"themes/landscape/Gruntfile.js","hash":"71adaeaac1f3cc56e36c49d549b8d8a72235c9b9","modified":1496628023000},{"_id":"themes/landscape/.gitignore","hash":"58d26d4b5f2f94c2d02a4e4a448088e4a2527c77","modified":1496628023000},{"_id":"themes/landscape/LICENSE","hash":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":1496628023000},{"_id":"themes/landscape/README.md","hash":"c7e83cfe8f2c724fc9cac32bd71bb5faf9ceeddb","modified":1496628023000},{"_id":"themes/landscape/_config.yml","hash":"fb8c98a0f6ff9f962637f329c22699721854cd73","modified":1496628023000},{"_id":"themes/landscape/package.json","hash":"85358dc34311c6662e841584e206a4679183943f","modified":1496628023000},{"_id":"source/images/bird_32_gray.png","hash":"55345ff7370047a6b825dd235c9ce201545a0952","modified":1496628023000},{"_id":"source/images/bird_32_gray_fail.png","hash":"0c30b159e4cbb7e8a1ad826be537fc4bd79b0a8f","modified":1496628023000},{"_id":"source/images/christmas_rose.jpg","hash":"6ec2a679882bc3049edc822ee90ec015d85e028a","modified":1496628023000},{"_id":"source/images/code_bg.png","hash":"c34acd76f73ef68d62c031856bd627ffac9378f3","modified":1496628023000},{"_id":"source/images/dotted-border.png","hash":"347784b401d0d38acf5e3b6d06a90346a16a8e8c","modified":1496628023000},{"_id":"source/images/email.png","hash":"2a5d251567fabcad68fa596ebaf1508296524930","modified":1496628023000},{"_id":"source/images/line-tile.png","hash":"a86a5d70fb0024dd295b85ea9058b43c1c5f25d3","modified":1496628023000},{"_id":"source/images/rss.png","hash":"d61fc1ccc66f081002b15532f66e054147d5f2fb","modified":1496628023000},{"_id":"source/images/noise.png","hash":"a839ae391fbbb0a1a2b22f8aba1d8ae2a702ef34","modified":1496628023000},{"_id":"source/images/search.png","hash":"3c0178651f38bff462d4feb927e4f4df87b0f9d0","modified":1496628023000},{"_id":"source/images/share_to_sina.png","hash":"1fd41e9629f6980b72c34bde0f063823e620b62a","modified":1496628023000},{"_id":"source/_posts/.2013-08-20-barchart-udt-er.markdown.swp","hash":"d825d8ee09a020dd6597e177fdaf07b83d0342e1","modified":1496628023000},{"_id":"source/_posts/2010-01-04-hello-world.markdown","hash":"8169a048245c1b1060d040b46b76ce856a3b89e4","modified":1496628023000},{"_id":"source/_posts/2010-01-06-funny-picture.markdown","hash":"e45d2e851610473dc5dd9244753401d8b0fc87b9","modified":1496628023000},{"_id":"source/_posts/2010-01-08-first-code.markdown","hash":"758f7d1cbe4d8022f7c5d5f3f485d4be53bf0b87","modified":1496628023000},{"_id":"source/_posts/2010-01-08-first-formula.markdown","hash":"1cfc46ab0044d70ff0205bf8cd42ce15dad2e7b9","modified":1496628023000},{"_id":"source/_posts/2010-01-09-funny-picture-2.markdown","hash":"ff67ee2da452727e281b85d220c222a29f7979fa","modified":1496628023000},{"_id":"source/_posts/2010-01-09-small-games.markdown","hash":"df62b7bdf399cc11ead6730739604cbb53bcda1b","modified":1496628023000},{"_id":"source/_posts/2010-01-11-look-back.markdown","hash":"e1993c5da2a7e7f3455297d5e0ef13e1a1353ddb","modified":1496628023000},{"_id":"source/_posts/2010-01-14-world-war-ii.markdown","hash":"cefee1a1f2aae751cbb95d0a87ee6a43141d7ed8","modified":1496628023000},{"_id":"source/_posts/2010-01-19-how-hard-we-choose-lessons.markdown","hash":"21c0fb678e524e081e88eb1dfbe14dbf09fd7a1a","modified":1496628023000},{"_id":"source/_posts/2010-01-26-never-forget-the-war-and-never-forgive-japan.markdown","hash":"c3faf3ef7dfd5c10376078a63d6f0afe816ee1ff","modified":1496628023000},{"_id":"source/_posts/2010-01-28-ping-shu-san-guo.markdown","hash":"1c07952fed72b44d3ff44cd357bf5c49c1613049","modified":1496628023000},{"_id":"source/_posts/2010-02-27-spam-comments.markdown","hash":"b01a6c563f93a1d5557a45d549207db5c370cb99","modified":1496628023000},{"_id":"source/_posts/2010-02-28-play-small-games.markdown","hash":"e4d02fb841559d4a82bb23681ebfe555ac0c729b","modified":1496628023000},{"_id":"source/_posts/2010-02-28-to-be-a-google-prayer-to-sing-songs.markdown","hash":"cf6c4d345fd832654b95ffa97adca8a9f14d8c7e","modified":1496628023000},{"_id":"source/_posts/2010-03-08-facebook-api.markdown","hash":"6d78b9e58c9b68803683d7018db8ca5ff5e80e81","modified":1496628023000},{"_id":"source/_posts/2010-03-08-international-womens-day.markdown","hash":"7caba18be9840e6b783059e84a2fd570e2ec6460","modified":1496628023000},{"_id":"source/_posts/2010-03-10-use-c-language-to-connect-postgresql.markdown","hash":"a91b954a6bfdb2cf71c9e14764ae5b8c0eb81101","modified":1496628023000},{"_id":"source/_posts/2010-03-10-math-symbol.markdown","hash":"bbc9005fcd52933bc1292b12746d80e46f2f73cd","modified":1496628023000},{"_id":"source/_posts/2010-03-23-listening-songs.markdown","hash":"b17122aaae549b460f537992fe94e3c248a6a75e","modified":1496628023000},{"_id":"source/_posts/2010-04-05-software-architecture-singleton.markdown","hash":"a06d5a8a680a6e313846e5bf80239ad44cc99c86","modified":1496628023000},{"_id":"source/_posts/2010-03-30-how-to-get-through-firewall-great.markdown","hash":"fd8430c75bdd86b3b3cbb78ceeb04c65df7806f3","modified":1496628023000},{"_id":"source/_posts/2010-03-23-ubuntu-10-04-belta-released.markdown","hash":"bb08aafdeae07eb8656cc5747d7592c9f74578a4","modified":1496628023000},{"_id":"source/_posts/2010-03-15-programmer-competency-matrix.markdown","hash":"10e29014ac15f5977474079c7cfa441b9c41335e","modified":1496628023000},{"_id":"source/_posts/2010-04-09-some-bugs-in-programing.markdown","hash":"d0f55f79720e4e031fe50ddad68b1b7a776ee75e","modified":1496628023000},{"_id":"source/_posts/2010-04-12-ascii.markdown","hash":"7e4291ad58e95821d5c784546ebc445cf1b5fd7f","modified":1496628023000},{"_id":"source/_posts/2010-04-12-the-scale-of-types.markdown","hash":"eca811c7dce5561e0d5f24720bb028ed202c3bce","modified":1496628023000},{"_id":"source/_posts/2010-04-14-gcc-error.markdown","hash":"cfffeb0fb65a26ed2d4b81468912d5d6a6b444ec","modified":1496628023000},{"_id":"source/_posts/2010-04-15-compare-double-numbers-in-cc-language.markdown","hash":"59994e6b9305e88e19c9873d4b8c7313bd619bf5","modified":1496628023000},{"_id":"source/_posts/2010-04-16-use-doxygen.markdown","hash":"6711bcb9348ab040c8e029e1210c1b1bd301f64f","modified":1496628023000},{"_id":"source/_posts/2010-04-19-quicksort-in-linux-or-unix.markdown","hash":"a950b92318aa88c272ff2334d0c4b76172accfaa","modified":1496628023000},{"_id":"source/_posts/2010-04-22-build-sqlite-in-codeblocks.markdown","hash":"e577c22c35fbc111223843707f2d017d82737f77","modified":1496628023000},{"_id":"source/_posts/2010-05-03-design-pattern-adapter.markdown","hash":"9a7a20d21ddf2d22c0ecd969293d9e1307553074","modified":1496628023000},{"_id":"source/_posts/2010-05-03-design-pattern-bridge.markdown","hash":"079d9ef18c6b7015fd602089a69f05d2445a6de9","modified":1496628023000},{"_id":"source/_posts/2010-05-03-design-pattern-composite-pattern.markdown","hash":"75bcd983f3c08c26ba0b1808feae38856bc98b50","modified":1496628023000},{"_id":"source/_posts/2010-05-03-design-pattern-decorator-pattern.markdown","hash":"6fe07c14ef637d4cc61da5d53286e345d60557e5","modified":1496628023000},{"_id":"source/_posts/2010-05-03-design-pattern-facade-pattern.markdown","hash":"3cfea0faa11d2e95ea598893c8446a59178321b1","modified":1496628023000},{"_id":"source/_posts/2010-05-05-design-pattern-flyweight.markdown","hash":"dc0d0b9bb4c74bb82ecab324ec5916336dce53cc","modified":1496628023000},{"_id":"source/_posts/2010-05-10-debug-postgresql.markdown","hash":"d0e9ccb94d040f9629837af9d5cd7d3fcca4696a","modified":1496628023000},{"_id":"source/_posts/2010-05-24-design-pattern-chain-reponsibility.markdown","hash":"720f23e64c5e1e51065b66bfc6b07d144b51db9a","modified":1496628023000},{"_id":"source/_posts/2010-05-26-climbing-wall.markdown","hash":"4932942853072bcdd6ca0693cb904e215e9a0fb0","modified":1496628023000},{"_id":"source/_posts/2010-06-17-sizeof-c.markdown","hash":"3edb7ae6bd0dbdc2c3134abee5ab77b0e06e5e63","modified":1496628023000},{"_id":"source/_posts/2010-06-21-volatile-do.markdown","hash":"23ed0bc41586fbc80f65111cf94de6952b7ab6f4","modified":1496628023000},{"_id":"source/_posts/2010-06-30-try-catch-exception-c.markdown","hash":"25810b5db79a9e52ad1153495500f4044333cf22","modified":1496628023000},{"_id":"source/_posts/2010-07-05-memory-allocation.markdown","hash":"2ce21469ca7378215fc45d2e42b88eae1ed6962c","modified":1496628023000},{"_id":"source/_posts/2010-07-07-absolute-valueinteger.markdown","hash":"93ff4c3dd2bf6efd4dab90cee0356b3954a3faa5","modified":1496628023000},{"_id":"source/_posts/2010-07-09-print-display-row.markdown","hash":"448d5a027e34ef80464de940c937cc8bf06046ee","modified":1496628023000},{"_id":"source/_posts/2010-07-16-quick-sort.markdown","hash":"8cd4ea21517b5c468d585b95fcafedab586b8c42","modified":1496628023000},{"_id":"source/_posts/2010-07-19-catalan.markdown","hash":"fafed138c1e4d238252fcc2d53dbd0f410702d9b","modified":1496637373000},{"_id":"source/_posts/2010-08-13-trickies-bugs.markdown","hash":"db7a5b8592f2638af4d7681992a705d520c43f8a","modified":1496628023000},{"_id":"source/_posts/2010-09-02-error-lnk2019.markdown","hash":"6538e27771a39a6ad38f0eb7fac527b424e197d1","modified":1496628023000},{"_id":"source/_posts/2010-09-03-postgresql-function-define.markdown","hash":"2b55e60cb37e7d15a04c762b28a2b449e334ff09","modified":1496628023000},{"_id":"source/_posts/2010-10-11-create-class-size-0.markdown","hash":"8ec515501bce3a171055ff0ebf9052dbc42aec06","modified":1496628023000},{"_id":"source/_posts/2010-12-06-jobs.markdown","hash":"b32ee56d9e65f7f2589525bf4abc0b84da1ea693","modified":1496628023000},{"_id":"source/_posts/2010-12-24-own-timer-replace-crontab.markdown","hash":"65c32d37fe281b92b8d45713ced8d070e67787ef","modified":1496628023000},{"_id":"source/_posts/2011-02-22-dian-ying-ji.markdown","hash":"544e2cf522736ccf0d6e0f8f395add61c1bc6807","modified":1496628023000},{"_id":"source/_posts/2011-03-02-bigdata.markdown","hash":"7ab98cdba9f2008fb077aefed756eb2805e1c6e4","modified":1496628023000},{"_id":"source/_posts/2011-03-16-google-search-update-speed.markdown","hash":"8a0175636a99aba05591408c880522bd47f2204d","modified":1496628023000},{"_id":"source/_posts/2011-03-10-husband-programmer.markdown","hash":"4f25f8ef7b8f6e95d4306a64cc5941124ac7fb32","modified":1496628023000},{"_id":"source/_posts/2011-03-16-jiang-bian-cheng-wai-kao-yu-dian-you-hui-zhe-kou.markdown","hash":"800a3d3bd39044a9033aa2c0b9ba03cfe89bbc89","modified":1496628023000},{"_id":"source/_posts/2011-03-16-python-unittest.markdown","hash":"1e7750ab32eb2a1e08b83891594a2ab42cce8825","modified":1496628023000},{"_id":"source/_posts/2011-03-17-message-queue.markdown","hash":"97d4bd22be2415f9bc77c3d1e51823e6d09a4d94","modified":1496628023000},{"_id":"source/_posts/2011-04-01-fun-clock.markdown","hash":"9446b9627359d5c32795d0083c2beadd40897f09","modified":1496628023000},{"_id":"source/_posts/2011-04-02-ji-suan-ji-kao-shi-ti.markdown","hash":"7634708000fd25c8cef6a1726b9210ed616d721c","modified":1496628023000},{"_id":"source/_posts/2011-04-08-python-valueerror-xx-values-unpack.markdown","hash":"56627affdcebce054dad620b86418329e7e86d67","modified":1496628023000},{"_id":"source/_posts/2011-04-09-python-net-socket-connect-fail.markdown","hash":"33fba72fc72a38b29fd060235c17f3c225711206","modified":1496628023000},{"_id":"source/_posts/2011-05-04-python-socket-send-recv-atomticly.markdown","hash":"c9d0ee094cd72155751632aa51c42543bbfab389","modified":1496628023000},{"_id":"source/_posts/2011-05-10-rpg-maker-xp.markdown","hash":"7a34d91e997abce8de47c54bf2840fa2e3b15bb1","modified":1496628023000},{"_id":"source/_posts/2011-05-12-googleadsenseshen-qing-cheng-gong.markdown","hash":"5d3cfebd535da5d0cdfdd44f3acaeba0275b65c2","modified":1496628023000},{"_id":"source/_posts/2011-05-13-eucalyptus-ssh-login.markdown","hash":"c877f04d9a0a255586722f66da325507d5dc2bd8","modified":1496628023000},{"_id":"source/_posts/2011-05-13-windowsapachepei-zhi-xu-ni-zhu-ji.markdown","hash":"bad0160069877073ad000b54a2a79f65e74d786d","modified":1496628023000},{"_id":"source/_posts/2011-05-13-wordpress-error-php-running-solution.markdown","hash":"be4ff83fd37c399c8378c09ef98d14be363583d9","modified":1496628023000},{"_id":"source/_posts/2011-05-19-blessing.markdown","hash":"85d82342b726b0db9c9d886ef57a7e1cd908bf1e","modified":1496628023000},{"_id":"source/_posts/2011-05-22-jia-le-bi-hai-dao-4.markdown","hash":"c277282d30a2b4ace166342823924cf52380ecb6","modified":1496628023000},{"_id":"source/_posts/2011-05-22-zuo-ri-chu-xing.markdown","hash":"fb9f997df4919950625ba33110c7eee1fc211955","modified":1496628023000},{"_id":"source/_posts/2011-06-02-page-rank-checker.markdown","hash":"d56820e49dc1e29844e6392ad01436adfedf84e8","modified":1496628023000},{"_id":"source/_posts/2011-06-27-zai-zhao-zhao-gong-zuo.markdown","hash":"8106ca027a32d2aec26dc687334bbd979af92646","modified":1496628023000},{"_id":"source/_posts/2011-06-27-zhao-fang-ji.markdown","hash":"c4b08f163ac32257ba1ef7e24985c7455966e8e9","modified":1496628023000},{"_id":"source/_posts/2011-06-29-yang-mei-ji.markdown","hash":"26357eace4779af44efff43e316728960b5578e6","modified":1496628023000},{"_id":"source/_posts/2011-06-30-qiao-pi-hua-zhuan-zai.markdown","hash":"0270b80d4a3bb5de1853e99684b4da06ff918e8d","modified":1496628023000},{"_id":"source/_posts/2011-07-03-pa-na-da-shi-de-mo-huan-mao-xian.markdown","hash":"0c9f12316b2a2046d973ba484ae6f1b14122e921","modified":1496628023000},{"_id":"source/_posts/2011-07-09-movie-spirit.markdown","hash":"d6c87b58558e8a2bf0db15c21f45d63b15d32911","modified":1496628023000},{"_id":"source/_posts/2011-07-18-ivyanteclipsepei-zhi-qi-dong.markdown","hash":"64d02cd7726cb071acbab5e2b110580bcdcdc525","modified":1496628023000},{"_id":"source/_posts/2011-07-19-ant-problem-load-definitions-resource-tasks-properties-found.markdown","hash":"5d22481ab8a7d0ff57bdeafd6a9f76efd4fd0ce1","modified":1496628023000},{"_id":"source/_posts/2011-07-19-dian-ying-ping-ya-ping.markdown","hash":"140e29e75a707cc3bc963dc7521031e083a5c0a7","modified":1496628023000},{"_id":"source/_posts/2011-07-20-vs2005hotkeykuai-jie-jian.markdown","hash":"8ef323873ee87e4339f72e2c241f5dfe40268207","modified":1496628023000},{"_id":"source/_posts/2011-09-05-hui-che-huan-xing-fu-carriagereturnlinefeed.markdown","hash":"e942d081d5422e4c866136afd5501fc1c8861510","modified":1496628023000},{"_id":"source/_posts/2011-09-07-htmlparser-rewrite-html.markdown","hash":"9159a99a090b59130c26655a621326aa418b489c","modified":1496628023000},{"_id":"source/_posts/2011-09-22-svn-commands.markdown","hash":"45059aec011080961dbbc8f4052b561f1acbf165","modified":1496628023000},{"_id":"source/_posts/2011-09-22-svn-roll.markdown","hash":"be83dd602ceb710f10b27032b2ae1395d1141d56","modified":1496628023000},{"_id":"source/_posts/2011-11-03-xing-ji-zheng-ba-1hua-ping-cuo-wu-jie-jue-winxpvistawin7.markdown","hash":"fc99ac7ea592ac2fd11696394b79cfd727c1c025","modified":1496628023000},{"_id":"source/_posts/2011-12-04-velocity-encoding-error-2.markdown","hash":"dcc76650bff5e6d8b0a43b85f8fe66047287ef1c","modified":1496628023000},{"_id":"source/_posts/2011-12-22-csdn-hacked.markdown","hash":"6bd5b97062aa4d67ec40a0efb7d81220b9e04c5b","modified":1496628023000},{"_id":"source/_posts/2012-01-14-new-title.markdown","hash":"06bfc1ccf85c958b263837e2b2488e8df1635831","modified":1496628023000},{"_id":"source/_posts/2012-01-14-new.markdown","hash":"cf4173c08e24f8a799cfa9b457036e8f8e37e00e","modified":1496628023000},{"_id":"source/_posts/2012-01-15-web-config-permission-of-files-and-dirs.markdown","hash":"1f3c56f92e837169e76f1cb612db2f33aa17f827","modified":1496628023000},{"_id":"source/_posts/2012-01-16-test.markdown","hash":"24bc3afa7423940de8ba7858eb5851ba0466fa2a","modified":1496628023000},{"_id":"source/_posts/2012-01-17-xin-lang-oauth.markdown","hash":"b048c8c7f119336145fe1e52045de6684808f41b","modified":1496628023000},{"_id":"source/_posts/2012-01-21-back-home.markdown","hash":"cbbbc63cba34c1427465f14c0675b4e07c74fec5","modified":1496628023000},{"_id":"source/_posts/2012-01-21-octopress-bugs.markdown","hash":"7a2e8070bd4f509406cd26f0924f09abda1f204f","modified":1496628023000},{"_id":"source/_posts/2012-01-25-octopress-deploy.markdown","hash":"a73a2b5beacf46cd359c3ad9a662016bfec345a4","modified":1496628023000},{"_id":"source/_posts/2012-01-26-kong-fu-kong-miao-kong-lin.markdown","hash":"2f54525242ddf7d1db2c6c45831389d817acc8db","modified":1496628023000},{"_id":"source/_posts/2012-01-31-git-alias.markdown","hash":"b636082fd99c1ebce3213c2fe81160df5edb1377","modified":1496628023000},{"_id":"source/_posts/2012-02-01-jstack-jmap-resin.markdown","hash":"a09356c249350c216f22a8e23cbd240469868d40","modified":1496628023000},{"_id":"source/_posts/2012-02-06-machine-learning.markdown","hash":"03b6e857929e56672f3a897e3fb6a7930fe98544","modified":1496628023000},{"_id":"source/_posts/2012-02-11-build-website-in-ubuntu.markdown","hash":"70e75b9bc3d2c9fbc9f94a5992a9dd92c1e4168c","modified":1496628023000},{"_id":"source/_posts/2012-02-13-xrange-and-range-in-python.markdown","hash":"400fe7bf7835a214573d28de2e12c3e946a0bcc5","modified":1496628023000},{"_id":"source/_posts/2012-02-20-jie-jue-cheng-xu-zhong-you-you-chi-de-slash-xxx-hu-lue-kong-zi-fu.markdown","hash":"c20fee29a170f5d24d61a857d45b979719d2328c","modified":1496628023000},{"_id":"source/_posts/2012-02-21-octopress-error.markdown","hash":"09f43afccd566db478a194ac314635c6a224cde7","modified":1496628023000},{"_id":"source/_posts/2012-02-21-windows-c-plus-plus-cheng-xu-qian-yi-dao-linux.markdown","hash":"b5216fe4988705d64b0981f76bd7c59dcf23a40d","modified":1496628023000},{"_id":"source/_posts/2012-02-23-you-dao-yun-bi-ji-1-dot-5zheng-shi-ban-shang-xian.markdown","hash":"0a8275eacc86ca9519a5b90c932e336026d83826","modified":1496628023000},{"_id":"source/_posts/2012-03-21-svn-diff.markdown","hash":"03829e1181e823b3ad25ff5969d5d5685a923f63","modified":1496628023000},{"_id":"source/_posts/2012-04-26-sina-oauth2.markdown","hash":"82d0e486d71b76e36c49ed056c7f7df8c53f0cab","modified":1496628023000},{"_id":"source/_posts/2012-05-11-cookie.markdown","hash":"0461c9f6a7f4f722031aea3a3518315b94c48603","modified":1496628023000},{"_id":"source/_posts/2012-05-11-server-1-dot-6-shang-xian.markdown","hash":"d9e7742ea15e80ff6f3e8afa83bca9fbadef8007","modified":1496628023000},{"_id":"source/_posts/2012-05-16-shang-chuan-da-wen-jian.markdown","hash":"cea0c6051dd8eb543452627a936b13e9d0326f19","modified":1496628023000},{"_id":"source/_posts/2012-07-08-java-mail-api-problem.markdown","hash":"88da498a971eee9f5ceb2100cb4708d2df70d530","modified":1496628023000},{"_id":"source/_posts/2012-07-08-java-zheng-ze-shi.markdown","hash":"4f9e83b3657e8a57414bf1b60c1108bcbdf91aaa","modified":1496628023000},{"_id":"source/_posts/2013-01-06-2013-dot-01-dot-07jin-ri-jian-wen.markdown","hash":"1d9151b903cbf1fdee23aae3361b47b37919d59b","modified":1496628023000},{"_id":"source/_posts/2013-01-08-long-weibochang-wei-bo.markdown","hash":"f1575feb30c785ef9b21a6b3722dbc598bfab062","modified":1496628023000},{"_id":"source/_posts/2013-04-05-sheng-dan-mei-gui.markdown","hash":"1d167679e29993bde9528420330b5cbebe514db6","modified":1496628023000},{"_id":"source/_posts/2013-07-15-jie-zhu-you-dao-yun-bi-ji-xie-blog.markdown","hash":"1e69948c9601f4dfa7a83891e26f8505558e874e","modified":1496628023000},{"_id":"source/_posts/2013-07-21-modify-octopress-blog.markdown","hash":"da651e2e1ce0d98057167f38bd5e2529acffe381","modified":1496628023000},{"_id":"source/_posts/2013-07-30-upgrade-to-octopress-2-dot-0.markdown","hash":"8aa8ad05119ffa98aa77a47811db98818dc4228f","modified":1496628023000},{"_id":"source/_posts/2013-08-10-barchart-udt.markdown","hash":"70961bd8fe67b6eca6302c75fa399e00b07335c9","modified":1496628023000},{"_id":"source/_posts/2013-08-20-barchart-udt-er.markdown","hash":"894ad6ddf5f3875b3069dd4d0c6eff3f733659e9","modified":1496628023000},{"_id":"source/_posts/2013-08-25-zhi-qing-chun.markdown","hash":"f726df53c3b89a210d99f08b20c755e05c9dd7cc","modified":1496628023000},{"_id":"source/_posts/2013-08-30-wei-xin-gong-zhong-ping-tai-kai-fa-zhong-de-an-quan-wen-ti.markdown","hash":"ae3cc38e39a5d0a458aca1911296eca7bb80b9ac","modified":1496628023000},{"_id":"source/_posts/hello-world.md","hash":"8a02477044e2b77f1b262da2c48c01429e4a32e4","modified":1496628023000},{"_id":"themes/landscape/languages/default.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1496628023000},{"_id":"themes/landscape/languages/fr.yml","hash":"84ab164b37c6abf625473e9a0c18f6f815dd5fd9","modified":1496628023000},{"_id":"themes/landscape/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1496628023000},{"_id":"themes/landscape/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1496628023000},{"_id":"themes/landscape/languages/zh-CN.yml","hash":"ca40697097ab0b3672a80b455d3f4081292d1eed","modified":1496628023000},{"_id":"themes/landscape/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1496628023000},{"_id":"themes/landscape/languages/zh-TW.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1496628023000},{"_id":"themes/landscape/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1496628023000},{"_id":"themes/landscape/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1496628023000},{"_id":"themes/landscape/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1496628023000},{"_id":"themes/landscape/layout/layout.ejs","hash":"f155824ca6130080bb057fa3e868a743c69c4cf5","modified":1496628023000},{"_id":"themes/landscape/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1496628023000},{"_id":"themes/landscape/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1496628023000},{"_id":"themes/landscape/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1496628023000},{"_id":"themes/landscape/scripts/fancybox.js","hash":"aa411cd072399df1ddc8e2181a3204678a5177d9","modified":1496628023000},{"_id":"themes/landscape/layout/_partial/after-footer.ejs","hash":"82a30f81c0e8ba4a8af17acd6cc99e93834e4d5e","modified":1496628023000},{"_id":"themes/landscape/layout/_partial/archive-post.ejs","hash":"c7a71425a946d05414c069ec91811b5c09a92c47","modified":1496628023000},{"_id":"themes/landscape/layout/_partial/archive.ejs","hash":"931aaaffa0910a48199388ede576184ff15793ee","modified":1496628023000},{"_id":"themes/landscape/layout/_partial/article.ejs","hash":"c4c835615d96a950d51fa2c3b5d64d0596534fed","modified":1496628023000},{"_id":"themes/landscape/layout/_partial/footer.ejs","hash":"93518893cf91287e797ebac543c560e2a63b8d0e","modified":1496628023000},{"_id":"themes/landscape/layout/_partial/google-analytics.ejs","hash":"f921e7f9223d7c95165e0f835f353b2938e40c45","modified":1496628023000},{"_id":"themes/landscape/layout/_partial/head.ejs","hash":"4fe8853e864d192701c03e5cd3a5390287b90612","modified":1496628023000},{"_id":"themes/landscape/layout/_partial/header.ejs","hash":"c21ca56f419d01a9f49c27b6be9f4a98402b2aa3","modified":1496628023000},{"_id":"themes/landscape/layout/_partial/mobile-nav.ejs","hash":"e952a532dfc583930a666b9d4479c32d4a84b44e","modified":1496628023000},{"_id":"themes/landscape/layout/_partial/sidebar.ejs","hash":"930da35cc2d447a92e5ee8f835735e6fd2232469","modified":1496628023000},{"_id":"themes/landscape/layout/_widget/archive.ejs","hash":"beb4a86fcc82a9bdda9289b59db5a1988918bec3","modified":1496628023000},{"_id":"themes/landscape/layout/_widget/category.ejs","hash":"dd1e5af3c6af3f5d6c85dfd5ca1766faed6a0b05","modified":1496628023000},{"_id":"themes/landscape/layout/_widget/recent_posts.ejs","hash":"0d4f064733f8b9e45c0ce131fe4a689d570c883a","modified":1496628023000},{"_id":"themes/landscape/layout/_widget/tag.ejs","hash":"2de380865df9ab5f577f7d3bcadf44261eb5faae","modified":1496628023000},{"_id":"themes/landscape/layout/_widget/tagcloud.ejs","hash":"b4a2079101643f63993dcdb32925c9b071763b46","modified":1496628023000},{"_id":"themes/landscape/source/css/_extend.styl","hash":"222fbe6d222531d61c1ef0f868c90f747b1c2ced","modified":1496628023000},{"_id":"themes/landscape/source/css/_variables.styl","hash":"5e37a6571caf87149af83ac1cc0cdef99f117350","modified":1496628023000},{"_id":"themes/landscape/source/css/style.styl","hash":"a70d9c44dac348d742702f6ba87e5bb3084d65db","modified":1496628023000},{"_id":"themes/landscape/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1496628023000},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1496628023000},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1496628023000},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1496628023000},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1496628023000},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1496628023000},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1496628023000},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1496628023000},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1496628023000},{"_id":"themes/landscape/source/js/script.js","hash":"2876e0b19ce557fca38d7c6f49ca55922ab666a1","modified":1496628023000},{"_id":"themes/landscape/layout/_partial/post/category.ejs","hash":"c6bcd0e04271ffca81da25bcff5adf3d46f02fc0","modified":1496628023000},{"_id":"themes/landscape/layout/_partial/post/date.ejs","hash":"6197802873157656e3077c5099a7dda3d3b01c29","modified":1496628023000},{"_id":"themes/landscape/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":1496628023000},{"_id":"themes/landscape/layout/_partial/post/nav.ejs","hash":"16a904de7bceccbb36b4267565f2215704db2880","modified":1496628023000},{"_id":"themes/landscape/layout/_partial/post/tag.ejs","hash":"2fcb0bf9c8847a644167a27824c9bb19ac74dd14","modified":1496628023000},{"_id":"themes/landscape/layout/_partial/post/title.ejs","hash":"2f275739b6f1193c123646a5a31f37d48644c667","modified":1496628023000},{"_id":"themes/landscape/source/css/_partial/archive.styl","hash":"db15f5677dc68f1730e82190bab69c24611ca292","modified":1496628023000},{"_id":"themes/landscape/source/css/_partial/article.styl","hash":"10685f8787a79f79c9a26c2f943253450c498e3e","modified":1496628023000},{"_id":"themes/landscape/source/css/_partial/comment.styl","hash":"79d280d8d203abb3bd933ca9b8e38c78ec684987","modified":1496628023000},{"_id":"themes/landscape/source/css/_partial/footer.styl","hash":"e35a060b8512031048919709a8e7b1ec0e40bc1b","modified":1496628023000},{"_id":"themes/landscape/source/css/_partial/header.styl","hash":"85ab11e082f4dd86dde72bed653d57ec5381f30c","modified":1496628023000},{"_id":"themes/landscape/source/css/_partial/highlight.styl","hash":"bf4e7be1968dad495b04e83c95eac14c4d0ad7c0","modified":1496628023000},{"_id":"themes/landscape/source/css/_partial/mobile.styl","hash":"a399cf9e1e1cec3e4269066e2948d7ae5854d745","modified":1496628023000},{"_id":"themes/landscape/source/css/_partial/sidebar-aside.styl","hash":"890349df5145abf46ce7712010c89237900b3713","modified":1496628023000},{"_id":"themes/landscape/source/css/_partial/sidebar-bottom.styl","hash":"8fd4f30d319542babfd31f087ddbac550f000a8a","modified":1496628023000},{"_id":"themes/landscape/source/css/_partial/sidebar.styl","hash":"404ec059dc674a48b9ab89cd83f258dec4dcb24d","modified":1496628023000},{"_id":"themes/landscape/source/css/_util/grid.styl","hash":"0bf55ee5d09f193e249083602ac5fcdb1e571aed","modified":1496628023000},{"_id":"themes/landscape/source/css/_util/mixin.styl","hash":"44f32767d9fd3c1c08a60d91f181ee53c8f0dbb3","modified":1496628023000},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1496628023000},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1496628023000},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1496628023000},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1496628023000},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1496628023000},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1496628023000},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1496628023000},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1496628023000},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1496628023000},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1496628023000},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1496628023000},{"_id":"themes/landscape/source/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1496628023000},{"_id":"public/2017/06/05/hello-world/index.html","hash":"06b7a1d96b7b2c1c9587542ea5a6701a53b75079","modified":1496633186861},{"_id":"public/archives/index.html","hash":"77dbeea397ef2336b8e37584dea760b711d06777","modified":1496633186860},{"_id":"public/archives/2017/index.html","hash":"a7b2e73467bb4dfdecefe88c0ff55efd0acfb3f7","modified":1496633186861},{"_id":"public/archives/2017/06/index.html","hash":"af09da8991861df0a02ca14b2a88057f41039fb1","modified":1496633186861},{"_id":"public/index.html","hash":"23b6f96c1cea3491145d68d9485ea75c639ddc07","modified":1496633186861},{"_id":"public/images/bird_32_gray_fail.png","hash":"0c30b159e4cbb7e8a1ad826be537fc4bd79b0a8f","modified":1496631083568},{"_id":"public/images/bird_32_gray.png","hash":"55345ff7370047a6b825dd235c9ce201545a0952","modified":1496631083568},{"_id":"public/images/christmas_rose.jpg","hash":"6ec2a679882bc3049edc822ee90ec015d85e028a","modified":1496631083568},{"_id":"public/images/code_bg.png","hash":"c34acd76f73ef68d62c031856bd627ffac9378f3","modified":1496631083568},{"_id":"public/images/dotted-border.png","hash":"347784b401d0d38acf5e3b6d06a90346a16a8e8c","modified":1496631083568},{"_id":"public/images/email.png","hash":"2a5d251567fabcad68fa596ebaf1508296524930","modified":1496631083568},{"_id":"public/images/line-tile.png","hash":"a86a5d70fb0024dd295b85ea9058b43c1c5f25d3","modified":1496631083568},{"_id":"public/images/rss.png","hash":"d61fc1ccc66f081002b15532f66e054147d5f2fb","modified":1496631083568},{"_id":"public/images/noise.png","hash":"a839ae391fbbb0a1a2b22f8aba1d8ae2a702ef34","modified":1496631083568},{"_id":"public/images/search.png","hash":"3c0178651f38bff462d4feb927e4f4df87b0f9d0","modified":1496631083568},{"_id":"public/images/share_to_sina.png","hash":"1fd41e9629f6980b72c34bde0f063823e620b62a","modified":1496631083568},{"_id":"public/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1496631083568},{"_id":"public/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1496631083568},{"_id":"public/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1496631083568},{"_id":"public/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1496631083568},{"_id":"public/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1496631083569},{"_id":"public/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1496631083569},{"_id":"public/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1496631083569},{"_id":"public/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1496631083569},{"_id":"public/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1496631083569},{"_id":"public/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1496631083569},{"_id":"public/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1496631084132},{"_id":"public/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1496631084137},{"_id":"public/js/script.js","hash":"2876e0b19ce557fca38d7c6f49ca55922ab666a1","modified":1496631084138},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1496631084138},{"_id":"public/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1496631084138},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1496631084138},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1496631084138},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1496631084138},{"_id":"public/css/style.css","hash":"a0c7b852b4a604c69998e1dc537c26fce7f384b7","modified":1496633187900},{"_id":"public/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1496631084138},{"_id":"public/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1496631084138},{"_id":"public/css/fonts/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1496631084142},{"_id":"public/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1496631084142},{"_id":"public/2013/08/30/2013-08-30-wei-xin-gong-zhong-ping-tai-kai-fa-zhong-de-an-quan-wen-ti/index.html","hash":"c252ddf94b10a7de5c797b2784b47c6bcf5593a7","modified":1496633186861},{"_id":"public/2013/08/25/2013-08-25-zhi-qing-chun/index.html","hash":"59863b0b73a06c10618549611f29f0ee3ba36325","modified":1496633186861},{"_id":"public/2013/08/20/2013-08-20-barchart-udt-er/index.html","hash":"42554e8412753f8b844ee945ac2d7ad8e156ca52","modified":1496633186861},{"_id":"public/2013/08/10/2013-08-10-barchart-udt/index.html","hash":"432fb326a4a43f7d84a1359e9f9d50d321b4c2c6","modified":1496633186861},{"_id":"public/archives/2013/index.html","hash":"6fed59a4810f5c06613021425b99820e95c56870","modified":1496633186860},{"_id":"public/archives/2013/08/index.html","hash":"f20659bafd95a1317d0a1e5ebc12b9be4dc016de","modified":1496633186861},{"_id":"public/categories/jni-UDT-barchart-c/index.html","hash":"2c4ee358aa4c281c6e848c977dddf54e657c2f15","modified":1496633154483},{"_id":"public/categories/udt-barchart-udp-tcp/index.html","hash":"69a5f0a8e862d6fc3579e07cd6ef2c7f07d8f4b4","modified":1496633186711},{"_id":"public/categories/movie-致青春-电影-影评/index.html","hash":"5c315117b8bf570ac3ee792c3f0212ab2d8cabbc","modified":1496633186860},{"_id":"public/categories/security-微信-公众平台-bug/index.html","hash":"4d5203c34ee01c426ffeef3ef51ded8499b65a24","modified":1496633186860},{"_id":"themes/jacman/.gitignore","hash":"7d65523f2a5afb69d76824dd1dfa62a34faa3197","modified":1496633032000},{"_id":"themes/jacman/LICENSE","hash":"931516aa36c53eb7843c83d82662eb50cc3c4367","modified":1496633032000},{"_id":"themes/jacman/README.md","hash":"75a5c9fbd7c9cec4d2f277042d2fee550e4936be","modified":1496633032000},{"_id":"themes/jacman/README_zh.md","hash":"d6014b16eaccc97dc54a7779c9e36003752410e1","modified":1496633032000},{"_id":"themes/jacman/_config.yml","hash":"558731fea51575250b313a0c77bf6a504d7170f4","modified":1496633032000},{"_id":"themes/jacman/.git/FETCH_HEAD","hash":"cdcebdf6642b2a9add97b6195a7323301017be0c","modified":1496633061000},{"_id":"themes/jacman/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1496633032000},{"_id":"themes/jacman/.git/ORIG_HEAD","hash":"3b070f924441565e4f7b0fa8eef85759d84fa265","modified":1496633061000},{"_id":"themes/jacman/.git/config","hash":"2d3ae691d19a816889480acb832a3813f5ad7605","modified":1496633032000},{"_id":"themes/jacman/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1496633006000},{"_id":"themes/jacman/.git/index","hash":"a900be7fd5809c2ee2ee05a42c3cf9fc69e183ec","modified":1496633032000},{"_id":"themes/jacman/.git/packed-refs","hash":"51efe8ada8797dcb79a000f3cf431d0dc42c5e59","modified":1496633032000},{"_id":"themes/jacman/languages/default.yml","hash":"eea72d6138497287c0b3f4bd93e4f6f62b7aff37","modified":1496633032000},{"_id":"themes/jacman/languages/zh-CN.yml","hash":"1f3b9d00dd4322352b0c9c82a76dc9865a616d41","modified":1496633032000},{"_id":"themes/jacman/languages/zh-TW.yml","hash":"61a02ba818d641579a86fcd7f5926ab1e6ab5f70","modified":1496633032000},{"_id":"themes/jacman/layout/archive.ejs","hash":"a18842e3d719fe3ca9b977a6995f8facc75c8673","modified":1496633032000},{"_id":"themes/jacman/layout/category.ejs","hash":"9b740fc33f6f028df60f0bc4312bf3ebd03aa8ea","modified":1496633032000},{"_id":"themes/jacman/layout/index.ejs","hash":"75cef2172c286994af412e11ab7f4f5a0daaf1f5","modified":1496633032000},{"_id":"themes/jacman/layout/layout.ejs","hash":"5b4289a4526899809b9c2facea535367ff51ba2b","modified":1496633032000},{"_id":"themes/jacman/layout/page.ejs","hash":"bd6bbf2ea8e183bd835867ff617dc6366b56748c","modified":1496633032000},{"_id":"themes/jacman/layout/post.ejs","hash":"3114134775bdde5a83cf14feb019606fa2b2b2be","modified":1496633032000},{"_id":"themes/jacman/layout/tag.ejs","hash":"45150a2365768b6b67880193c9264ad2bb4814db","modified":1496633032000},{"_id":"themes/jacman/scripts/fancybox.js","hash":"aa411cd072399df1ddc8e2181a3204678a5177d9","modified":1496633032000},{"_id":"themes/jacman/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1496633006000},{"_id":"themes/jacman/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1496633006000},{"_id":"themes/jacman/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1496633006000},{"_id":"themes/jacman/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1496633006000},{"_id":"themes/jacman/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1496633006000},{"_id":"themes/jacman/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1496633006000},{"_id":"themes/jacman/.git/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1496633006000},{"_id":"themes/jacman/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1496633006000},{"_id":"themes/jacman/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1496633006000},{"_id":"themes/jacman/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1496633006000},{"_id":"themes/jacman/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1496633006000},{"_id":"themes/jacman/.git/logs/HEAD","hash":"f71e6c78e6751b63683119b44e3669f7fb46ceb3","modified":1496633032000},{"_id":"themes/jacman/layout/_partial/analytics.ejs","hash":"697601996220fe0a0f9cd628be67dec3c86ae2aa","modified":1496633032000},{"_id":"themes/jacman/layout/_partial/after_footer.ejs","hash":"c703b0c25139b8a5f8f9d24a334a07905e2b7987","modified":1496633032000},{"_id":"themes/jacman/layout/_partial/archive.ejs","hash":"2c7395e7563fe016521712a645c28a13f952d52a","modified":1496633032000},{"_id":"themes/jacman/layout/_partial/article.ejs","hash":"261ecacb8456f4cb972632b6a9103860fa63b9a3","modified":1496633032000},{"_id":"themes/jacman/layout/_partial/article_row.ejs","hash":"4cb855d91ece7f67b2ca0992fffa55472d0b9c93","modified":1496633032000},{"_id":"themes/jacman/layout/_partial/categories.ejs","hash":"8a52d0344d5bce1925cf586ed73c11192925209b","modified":1496633032000},{"_id":"themes/jacman/layout/_partial/footer.ejs","hash":"5f80bf6c6ddcf8c28c4599cd1540b14b25d54f18","modified":1496633032000},{"_id":"themes/jacman/layout/_partial/head.ejs","hash":"761941be4922cd3c177c8130296b909bf7db5c09","modified":1496633032000},{"_id":"themes/jacman/layout/_partial/header.ejs","hash":"18515612344ff048b9372b91b7eef6f3b143801f","modified":1496633032000},{"_id":"themes/jacman/layout/_partial/mathjax.ejs","hash":"443029f6c39fac9b1019d35adfc61333caf5f5a1","modified":1496633440000},{"_id":"themes/jacman/layout/_partial/pagination.ejs","hash":"6146ac37dfb4f8613090bc52b3fc8cfa911a186a","modified":1496633032000},{"_id":"themes/jacman/layout/_partial/search.ejs","hash":"1083824a6c6c3df02767f2f3b727aee78ebb76ec","modified":1496633032000},{"_id":"themes/jacman/layout/_partial/sidebar.ejs","hash":"c4f527fff0070fbe65919053a16224412317f40d","modified":1496633032000},{"_id":"themes/jacman/layout/_partial/tags.ejs","hash":"b33b2b5d08f1d53a8de25a95f660f7f1cea7b3cb","modified":1496633032000},{"_id":"themes/jacman/layout/_partial/tinysou_search.ejs","hash":"06ecddc8a9d40b480fe2e958af1dab857a9d5441","modified":1496633032000},{"_id":"themes/jacman/layout/_partial/totop.ejs","hash":"bea5bb7cb9350b8af7d97a8d223af63a5b30ab78","modified":1496633032000},{"_id":"themes/jacman/layout/_widget/archive.ejs","hash":"39ea6b7888406fbd1b4cf236ebd718e881493374","modified":1496633032000},{"_id":"themes/jacman/layout/_widget/category.ejs","hash":"c1fae96b5053da021bcc04ab2ce5c2c8d30de8a2","modified":1496633032000},{"_id":"themes/jacman/layout/_widget/douban.ejs","hash":"e3820c36169e88663e6c9177666b2904c1ce47e6","modified":1496633032000},{"_id":"themes/jacman/layout/_widget/github-card.ejs","hash":"d49a8d609c5fbafa9e7ad328163565af03306519","modified":1496633032000},{"_id":"themes/jacman/layout/_widget/links.ejs","hash":"e49868063439c2092cdf9a8ec82cc295b0e42f66","modified":1496633032000},{"_id":"themes/jacman/layout/_widget/rss.ejs","hash":"0a4b5f2a2e36a1d504fe2e7c6c8372cbb4628aab","modified":1496633032000},{"_id":"themes/jacman/layout/_widget/tag.ejs","hash":"7e82ad9c916b9ce871b2f65ce8f283c5ba47947b","modified":1496633032000},{"_id":"themes/jacman/layout/_widget/tagcloud.ejs","hash":"10a1001189d5c28ce6d42494563b9637c302b454","modified":1496633032000},{"_id":"themes/jacman/layout/_widget/weibo.ejs","hash":"a31c2b223d0feb2a227e203cac9e5d13b7d328a8","modified":1496633032000},{"_id":"themes/jacman/source/css/style.styl","hash":"a0a45af186a72ae68979bf26f2a5d0d2303189ca","modified":1496633032000},{"_id":"themes/jacman/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1496633032000},{"_id":"themes/jacman/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1496633032000},{"_id":"themes/jacman/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1496633032000},{"_id":"themes/jacman/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1496633032000},{"_id":"themes/jacman/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1496633032000},{"_id":"themes/jacman/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1496633032000},{"_id":"themes/jacman/source/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1496633032000},{"_id":"themes/jacman/source/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1496633032000},{"_id":"themes/jacman/source/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1496633032000},{"_id":"themes/jacman/source/font/coveredbyyourgrace-webfont.eot","hash":"a17d0f10534303e40f210c506ebb8703fa23b7de","modified":1496633032000},{"_id":"themes/jacman/source/font/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1496633032000},{"_id":"themes/jacman/source/font/coveredbyyourgrace-webfont.woff","hash":"c6f8dc1a2f6ce914f120e80a876b8fd77b98888e","modified":1496633032000},{"_id":"themes/jacman/source/font/coveredbyyourgrace-webfont.ttf","hash":"194ccb4acf77a03dc25bcc174edb266143704fec","modified":1496633032000},{"_id":"themes/jacman/source/font/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1496633032000},{"_id":"themes/jacman/source/font/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1496633032000},{"_id":"themes/jacman/source/font/fontdiao.eot","hash":"9544a0d7ba208989302bc4da5a184faeb0e883c9","modified":1496633032000},{"_id":"themes/jacman/source/img/author.jpg","hash":"2a292e681b4c6c975eec9c8c356d99647a465542","modified":1496633032000},{"_id":"themes/jacman/source/font/fontdiao.ttf","hash":"ee9fd7be2493c9bf6d2841044e69a0830d9d3fab","modified":1496633032000},{"_id":"themes/jacman/source/img/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1496633032000},{"_id":"themes/jacman/source/img/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1496633032000},{"_id":"themes/jacman/source/img/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1496633032000},{"_id":"themes/jacman/source/img/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1496633032000},{"_id":"themes/jacman/source/img/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1496633032000},{"_id":"themes/jacman/source/img/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1496633032000},{"_id":"themes/jacman/source/img/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1496633032000},{"_id":"themes/jacman/source/font/fontdiao.woff","hash":"71f54eb6e98aa28cafeb04aab71c0e5b349ea89f","modified":1496633032000},{"_id":"themes/jacman/source/img/favicon.ico","hash":"2d22a3e0c7905a894e832c831dd91c29c209c7a5","modified":1496633032000},{"_id":"themes/jacman/source/img/jacman.jpg","hash":"0ba14a4a5e3be012826fc713c33479912126d34e","modified":1496633032000},{"_id":"themes/jacman/source/img/logo.svg","hash":"9ae38f7225c38624faeb7b74996efa9de7bf065b","modified":1496633032000},{"_id":"themes/jacman/source/img/scrollup.png","hash":"2137d4f1739aa8aa3fcb0348c3ddf1e41d62f2e3","modified":1496633032000},{"_id":"themes/jacman/source/js/gallery.js","hash":"f8a4ba7fb8349cca374a3c69fff9b2bf21f742ed","modified":1496633032000},{"_id":"themes/jacman/source/js/jquery.imagesloaded.min.js","hash":"4109837b1f6477bacc6b095a863b1b95b1b3693f","modified":1496633032000},{"_id":"themes/jacman/source/js/totop.js","hash":"cad23c5ea7163d1e5c05a0fd3ef9233469da10cb","modified":1496633032000},{"_id":"themes/jacman/source/js/jquery.qrcode-0.12.0.min.js","hash":"57c3987166a26415a71292162690e82c21e315ad","modified":1496633032000},{"_id":"themes/jacman/source/font/coveredbyyourgrace-webfont.svg","hash":"eabdb262d8e246865dfb56031f01ff6e8d2f9d53","modified":1496633032000},{"_id":"themes/jacman/source/font/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1496633032000},{"_id":"themes/jacman/source/font/fontdiao.svg","hash":"334a94e6a66a8b089be7315d876bec93efe38d2b","modified":1496633032000},{"_id":"themes/jacman/source/img/logo.png","hash":"fd08d12d1fa147cf894e8f8327e38f1758de32ed","modified":1496633032000},{"_id":"themes/jacman/source/js/jquery-2.0.3.min.js","hash":"a0ae3697b0ab8c0e8bd3186c80db42abd6d97a8d","modified":1496633032000},{"_id":"themes/jacman/.git/refs/heads/master","hash":"3b070f924441565e4f7b0fa8eef85759d84fa265","modified":1496633032000},{"_id":"themes/jacman/.git/objects/pack/pack-59d1466fc2cad8e01d76f6bac38b9407b4cf58b6.idx","hash":"c68460969a28afa29a2303a10822483b8a2b3af1","modified":1496633032000},{"_id":"themes/jacman/layout/_partial/post/catetags.ejs","hash":"0e37bababc8f4659f5b59a552a946b46d89e4158","modified":1496633032000},{"_id":"themes/jacman/layout/_partial/post/article.ejs","hash":"b09e3acea7076e1f01dfe0c2295e19951ea09437","modified":1496633032000},{"_id":"themes/jacman/layout/_partial/post/comment.ejs","hash":"c88bc8f5805173920a5fdd7e9234a850e3d8e151","modified":1496633032000},{"_id":"themes/jacman/layout/_partial/post/footer.ejs","hash":"b12ec08a5845a3d8c01257614f1dfead879c87d2","modified":1496633032000},{"_id":"themes/jacman/layout/_partial/post/gallery.ejs","hash":"fafc2501d7e65983b0f5c2b58151ca12e57c0574","modified":1496633032000},{"_id":"themes/jacman/layout/_partial/post/header.ejs","hash":"36a705942b691abe0d643ea8afa339981b32f6f2","modified":1496633032000},{"_id":"themes/jacman/layout/_partial/post/jiathis.ejs","hash":"d7f5960039ac74924559ab6ba03c64457b8f0966","modified":1496633032000},{"_id":"themes/jacman/layout/_partial/post/pagination.ejs","hash":"7de9c07a4c968429a8088c31a28b7f3a993ded1b","modified":1496633032000},{"_id":"themes/jacman/source/css/_base/font.styl","hash":"c8a0faf43b08e37ad07a5669db76d595da966159","modified":1496633032000},{"_id":"themes/jacman/source/css/_base/public.styl","hash":"f016180726019927b9a835ed01e04d153f27a149","modified":1496633032000},{"_id":"themes/jacman/source/css/_base/variable.styl","hash":"cb652eb83c28a208743fabab92de896f8b7cbf7b","modified":1496633032000},{"_id":"themes/jacman/source/css/_partial/article.styl","hash":"c69641b4a34a8c62986b335414413dbde26de25e","modified":1496633032000},{"_id":"themes/jacman/source/css/_partial/aside.styl","hash":"506fde1d67ce750452cbe84bee01a19c7d027c5e","modified":1496633032000},{"_id":"themes/jacman/source/css/_partial/duoshuo.styl","hash":"e85f1192283f043115c272a9deb3cb6ced793990","modified":1496633032000},{"_id":"themes/jacman/source/css/_partial/footer.styl","hash":"1911613a19b605a58f801c21b03b5d4c83b90f9c","modified":1496633032000},{"_id":"themes/jacman/source/css/_partial/gallery.styl","hash":"7246809f4ce3166ec1b259bf475cae1a48e29aad","modified":1496633032000},{"_id":"themes/jacman/source/css/_partial/header.styl","hash":"5121ceb712be3f2dde98b8b6e589b546e19eab8f","modified":1496633032000},{"_id":"themes/jacman/source/css/_partial/index.styl","hash":"a72ff14effd276015264f870f47ed8f8413bf5d3","modified":1496633032000},{"_id":"themes/jacman/source/css/_partial/helper.styl","hash":"1136600932b97534b88465bf05ef313630b2de3d","modified":1496633032000},{"_id":"themes/jacman/source/css/_partial/totop.styl","hash":"96363d7c5aaed5f649667fc0752a62620a67e872","modified":1496633032000},{"_id":"themes/jacman/source/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1496633032000},{"_id":"themes/jacman/source/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1496633032000},{"_id":"themes/jacman/source/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1496633032000},{"_id":"themes/jacman/source/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1496633032000},{"_id":"themes/jacman/source/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1496633032000},{"_id":"themes/jacman/source/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1496633032000},{"_id":"themes/jacman/source/font/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1496633032000},{"_id":"themes/jacman/source/img/banner.jpg","hash":"5104860c4f8b2e84ef734ba6c37fe7a288bf0d74","modified":1496633032000},{"_id":"themes/jacman/.git/logs/refs/heads/master","hash":"f71e6c78e6751b63683119b44e3669f7fb46ceb3","modified":1496633032000},{"_id":"themes/jacman/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1496633032000},{"_id":"themes/jacman/source/css/_base/highlight/highlight.styl","hash":"91b62bfc58390b0d5db782a75be6965ee3665eb3","modified":1496633032000},{"_id":"themes/jacman/source/css/_base/highlight/theme.styl","hash":"e3a59bd427ba37a54ead9eeba9a5356b3f720a48","modified":1496633032000},{"_id":"themes/jacman/.git/logs/refs/remotes/origin/HEAD","hash":"f71e6c78e6751b63683119b44e3669f7fb46ceb3","modified":1496633032000},{"_id":"themes/jacman/.git/objects/pack/pack-59d1466fc2cad8e01d76f6bac38b9407b4cf58b6.pack","hash":"d8bedf996101a93748127aa44b86c6d629ff237e","modified":1496633032000},{"_id":"public/categories/first/index.html","hash":"d604e52303b17b5469886aca8d7412e53e218e12","modified":1496633186891},{"_id":"public/categories/c/index.html","hash":"5ac20537e11a65a8f6a2d5f8937feebc75ea49eb","modified":1496633186891},{"_id":"public/categories/funny/index.html","hash":"ed2e43308bd362bd1adfc7559bfc9bec4bb65465","modified":1496633186891},{"_id":"public/categories/first/first/index.html","hash":"ac9b2a9c8c20a7c11765996c7cca645edbfb1574","modified":1496633186891},{"_id":"public/categories/funny/game/index.html","hash":"94b5780dd0db26f280a49e9081935788a1350852","modified":1496633186891},{"_id":"public/categories/funny/funny/index.html","hash":"198dbcbce861782c0ff31459c70dab3169954ab2","modified":1496633186891},{"_id":"public/categories/conclusion-summary/index.html","hash":"d31e577821b8b74ef519a1201301f91bbbd25599","modified":1496633186891},{"_id":"public/categories/flash/index.html","hash":"e2a15c0874158c8baf3310c01474866e9fe53d49","modified":1496633186891},{"_id":"public/categories/c/code/index.html","hash":"9c7597e055df08b867cb677ccd89e7d64f21e5b3","modified":1496633186891},{"_id":"public/categories/china/index.html","hash":"d2b78042dd05173c25b91a32e8f165a82ea7de3a","modified":1496633186891},{"_id":"public/categories/comedy/index.html","hash":"f87753aa317914ad8a573c8c6d76f58f6c52388d","modified":1496633186891},{"_id":"public/categories/first/first/formula/index.html","hash":"3a79433b5483117aebe8813adbb22ac09fbb2da8","modified":1496633186891},{"_id":"public/categories/see-hear/index.html","hash":"b318fc5d68a6390562d2f7785e0e5e98c9260dd5","modified":1496633186891},{"_id":"public/categories/funny/god/index.html","hash":"b3cf3e2a5b337d9ca106e03ecd90a60dad001f15","modified":1496633186891},{"_id":"public/categories/api/index.html","hash":"ff221e0d29e583d23f408ac56191ece8a424d5c7","modified":1496633186892},{"_id":"public/categories/funny/game/game/index.html","hash":"9e5ab5e174b79f6a34572a99381c68223b2486fa","modified":1496633186892},{"_id":"public/categories/math/index.html","hash":"3cd57e96ebb67e360a4e1962e9fbbfc70c238fd7","modified":1496633186892},{"_id":"public/categories/funny/funny/picture/index.html","hash":"d5e3e1fb4f2a478e5acb2890a8acc66f7437cc5c","modified":1496633186892},{"_id":"public/categories/listen/index.html","hash":"3a4d45c699ea148c606bd42245e1eea8b2106d51","modified":1496633186892},{"_id":"public/categories/architecture/index.html","hash":"88e7432f12aa65ebeeacd91de9a7480eee31cf17","modified":1496633186892},{"_id":"public/categories/ack/index.html","hash":"de25af8661eca4e73af2b78204fc00aa47b64407","modified":1496633186892},{"_id":"public/categories/conclusion-summary/rw/index.html","hash":"3b0de5a93ad3ab04d0fff5aed12e324bc912bf5a","modified":1496633186892},{"_id":"public/categories/code/index.html","hash":"4f20d4815a6cb67ee6b7debd85ea66c48e2def21","modified":1496633186892},{"_id":"public/categories/open-source/index.html","hash":"2d91c2eb8bab2014bdf9ff3d9fe96ec8941d29a0","modified":1496633186892},{"_id":"public/categories/bug/index.html","hash":"5bc68045d66f2e991cbfb74043b3b40a74c6890e","modified":1496633186892},{"_id":"public/categories/flash/second/index.html","hash":"d8c2e5516fc1ba2553bed8337b755fb0196da4df","modified":1496633186892},{"_id":"public/categories/art/index.html","hash":"5fb482a6e070a9e56d4387e330d0d9dd0228e895","modified":1496633186892},{"_id":"public/categories/cc/index.html","hash":"5776557ecf359636088d70d8bcae01a20d842e02","modified":1496633186893},{"_id":"public/categories/c/code/code/index.html","hash":"683626de2af0d08a2c957b4eed3a850ae0f82e39","modified":1496633186893},{"_id":"public/categories/allocate/index.html","hash":"4dd3fe3a490cc0ce4cfac3497d46907647814e24","modified":1496633186893},{"_id":"public/categories/c/cc/index.html","hash":"867dfd2fcbf2f7d2880100c1ecd6ef287493e530","modified":1496633186893},{"_id":"public/categories/funny/funny/lesson/index.html","hash":"42e7dee5691860ded86fd095817e4daad444d7a5","modified":1496633186893},{"_id":"public/categories/china/forget/index.html","hash":"39b905d1b6bbd26095e3d44ee4bb7acd02ce9ad0","modified":1496633186893},{"_id":"public/categories/auto/index.html","hash":"5ec29b5bc44293d92bb2eba85932f67221891ef7","modified":1496633186893},{"_id":"public/categories/asce/index.html","hash":"8c3ef0115725d2f8e529f227fba436d851841519","modified":1496633186893},{"_id":"public/categories/blocks/index.html","hash":"98ead7f01b980af958b57bb71cb878c4216ebd82","modified":1496633186893},{"_id":"public/categories/adapter/index.html","hash":"eaba5427808e95febba7a78cbb67aaba4f810f03","modified":1496633186893},{"_id":"public/categories/comedy/drama/index.html","hash":"8d72f9ecc8e7ce6ff9a18a1f66cc36c6cb4328d7","modified":1496633186893},{"_id":"public/categories/bridge/index.html","hash":"88117d4fc263e03cca43e60e0b66d4650a09eb56","modified":1496633186893},{"_id":"public/categories/first/first/formula/formula/index.html","hash":"4e6d74b6a88261d701f6a7978a90b4388b4bdf2f","modified":1496633186894},{"_id":"public/categories/see-hear/spam-flood-stop-captcha-cod-seo-comment/index.html","hash":"c90bf2293819fc5861de36c90d21f69e0be54d82","modified":1496633186894},{"_id":"public/categories/uncategorized/index.html","hash":"111ab9c7104ff85551bc70fdcf1c3f7838dab7c5","modified":1496633186894},{"_id":"public/categories/align/index.html","hash":"b40fcd7a97e22317096d50b09095c96c90213bf4","modified":1496633186894},{"_id":"public/categories/funny/god/google/index.html","hash":"59881207a06ccf7405d9189317e7db25fad50f65","modified":1496633186894},{"_id":"public/categories/api/facebook/index.html","hash":"9d2545f9efe7b225dcfaafb80269286bc5cd5237","modified":1496633186894},{"_id":"public/categories/allocation/index.html","hash":"dadee316a20db205a851d78111c78882b4e78490","modified":1496633186895},{"_id":"public/categories/absolute/index.html","hash":"62767ff163862d7247e247a5a66bc27ec30811fe","modified":1496633186895},{"_id":"public/categories/c/code/connect/index.html","hash":"e091a69769e2acb8d4c0e6845d3da94fc261ab4f","modified":1496633186895},{"_id":"public/categories/algorithm/index.html","hash":"9e02e2859fbf8eb31fb8f6e24f4f1014a5e0a302","modified":1496633186895},{"_id":"public/categories/first/it/index.html","hash":"7f875d02717ef9a0f3efea9c3ccd90e5f1fe2e05","modified":1496633186895},{"_id":"public/categories/math/math/index.html","hash":"78bf5469d2782196750bd6702b9a28af8a0413fa","modified":1496633186895},{"_id":"public/categories/funny/movie/index.html","hash":"69371cae2a20b8d434cdbeb09b61e30cf28b74f9","modified":1496633186895},{"_id":"public/categories/listen/see-hear/index.html","hash":"89ce23b0c4c5011750218e4ecca31875fdc0f52f","modified":1496633186895},{"_id":"public/categories/big/index.html","hash":"72b493b982701271f9f659917ff638dcdc424432","modified":1496633186895},{"_id":"public/categories/blog/index.html","hash":"229c908f2e7e4d545bed2516a40fe59a771194c5","modified":1496633186895},{"_id":"public/categories/life/index.html","hash":"d41242bd6aae06fe1c7f7e917aa2910e8fe6bbf4","modified":1496633186895},{"_id":"public/categories/chinese/index.html","hash":"d823529309ce93b39d7497a71b8f8e0f9b8bbe8a","modified":1496633186895},{"_id":"public/categories/queue/index.html","hash":"a7c2940db6370d129278ca077463bf1bb485a8f9","modified":1496633186895},{"_id":"public/categories/architecture/single/index.html","hash":"da0289a1322ef37d7a47531b699e411438eb3cc4","modified":1496633186895},{"_id":"public/categories/clock/index.html","hash":"59d1415ae3f926afe4522918b99689c30b2ed035","modified":1496633186896},{"_id":"public/categories/funny/see-hear/index.html","hash":"9f767e4602513aa40267eb676fd27167c38bbca0","modified":1496633186896},{"_id":"public/categories/ack/connection/index.html","hash":"8b7db4bd16471d8a70a25189f73243bcc2761f83","modified":1496633186896},{"_id":"public/categories/python/index.html","hash":"d9e979613c2f08e1ed870ed0d25c037ead279774","modified":1496633186896},{"_id":"public/categories/connect/index.html","hash":"b9a19d5aa4447b7ff5feada66df6e09410187796","modified":1496633186896},{"_id":"public/categories/client/index.html","hash":"874bcf458d2bb050cf1e0cb852a07601e758210b","modified":1496633186896},{"_id":"public/categories/dll/index.html","hash":"04a6dd59212d8a917959c552b1802e6010246fb4","modified":1496633186896},{"_id":"public/categories/open-source/project/index.html","hash":"d079fb6d1cafae247739c7e95d55b96e6c9dc15c","modified":1496633186896},{"_id":"public/categories/eucalyptus/index.html","hash":"033a960476ac607f5fe2b647a865d788897c7051","modified":1496633186896},{"_id":"public/categories/apache/index.html","hash":"acdc54509d73ff0e530f26e07bb47c7e7fbd84e3","modified":1496633186896},{"_id":"public/categories/code/competency/index.html","hash":"26da58be7cfbab399b737687ac2ccd028f083b91","modified":1496633186896},{"_id":"public/categories/error/index.html","hash":"9d719f66b4dcc6b08e01af8d1296a542a66f2630","modified":1496633186896},{"_id":"public/categories/blessing/index.html","hash":"67424aaf6346a6e455f025d8b66f855872d5d325","modified":1496633186896},{"_id":"public/categories/bug/c/index.html","hash":"17e87edebaa72f3ae1f1e02e63261774f6a9260b","modified":1496633186896},{"_id":"public/categories/eat/index.html","hash":"ce49eec53e52cf5949b1b7a3e72d5ea3a24b11ef","modified":1496633186896},{"_id":"public/categories/movie/index.html","hash":"00c0b51108d9835773f08b3feff2def16648a373","modified":1496633186896},{"_id":"public/categories/flash/second/see-hear/index.html","hash":"753d69ae0d887a01ee0fd35a2340fd14693e56fd","modified":1496633186896},{"_id":"public/categories/check/index.html","hash":"6925d8204bdaa8fcaaa559e32b1740ccac517b9e","modified":1496633186896},{"_id":"public/categories/art/ascii/index.html","hash":"837fa255df3a629f2339779a7d0765edaa7d09d5","modified":1496633186896},{"_id":"public/categories/see-hear/中介/index.html","hash":"7029430129ad58c7f269e57c1229757ca91fda2f","modified":1496633186896},{"_id":"public/categories/cc/code/index.html","hash":"ea0cdfbb6965a16044e652a3250c52f3b01abe9b","modified":1496633186896},{"_id":"public/categories/funny/funny/see-hear/index.html","hash":"074df6a22d2d605980960a913d1b6356dfc4fc4c","modified":1496633186896},{"_id":"public/categories/desire/index.html","hash":"f4f4f8c5132b38927f300a119e5176a881d1b6ce","modified":1496633186896},{"_id":"public/categories/c/code/code/first/index.html","hash":"7706bff4d4616de7e686abce9e6edfde21bb09ec","modified":1496633186897},{"_id":"public/categories/ant/index.html","hash":"97ac657e335ab7caa18f20096b3bdb83cdd62fbc","modified":1496633186897},{"_id":"public/categories/c/cc/code/index.html","hash":"d034c1d6878ad0b4a99840988e6b1192723f70db","modified":1496633186897},{"_id":"public/categories/allocate/array/index.html","hash":"01e91dc44fbd14ac4c08376eed94bacda58bcd3f","modified":1496633186897},{"_id":"public/categories/cr/index.html","hash":"486995c68e25c86e9bf7fa55707617a36d27dd19","modified":1496633186897},{"_id":"public/categories/api/code/index.html","hash":"1e9356ef07ce7581497d4bac0c1f74e7deb8d812","modified":1496633186897},{"_id":"public/categories/funny/funny/lesson/see-hear/index.html","hash":"d3a6ca7324f6309990a7489a614d82d133797ef3","modified":1496633186897},{"_id":"public/categories/project/index.html","hash":"c2ef213b6df68a79fda5f69488e2c9f893f20276","modified":1496633186897},{"_id":"public/categories/blurred/index.html","hash":"8313a1a18fec771584f7157eb96ed51b33bfb9a5","modified":1496633186897},{"_id":"public/categories/auto/code/index.html","hash":"a7f3f16c2da173009e53352d00f0435ee24efd16","modified":1496633186897},{"_id":"public/categories/charset/index.html","hash":"85cbfc84ef2fc0b0a6e58e7269fd42ab6326a128","modified":1496633186897},{"_id":"public/categories/asce/cc/index.html","hash":"93d8102e25121cbf62baab2cf1ece1925e498c57","modified":1496633186897},{"_id":"public/categories/csdn/index.html","hash":"43a18386c1266bd6f48624bdb802f011cd87e0e6","modified":1496633186897},{"_id":"public/categories/china/forget/forgive/index.html","hash":"35f412430e71bff5b5d16c100bba105b3eab6f58","modified":1496633186897},{"_id":"public/categories/new/index.html","hash":"9100b0a03c3b07af1b62bd1e4fc39165e89440e1","modified":1496633186897},{"_id":"public/categories/新浪/index.html","hash":"d2e75bd7729c2ee4019d7ccce182b00ee56e9dce","modified":1496633186897},{"_id":"public/categories/blocks/build/index.html","hash":"2611d41a7b08f5a8d7257ea2cc198a72cd4900eb","modified":1496633186897},{"_id":"public/categories/back/index.html","hash":"2b3150dae1635df7c3a22481b5c5e79fc7fd5d00","modified":1496633186897},{"_id":"public/categories/adapter/cc/index.html","hash":"31d7b66c917237852f76e8e76fccdfe9244de3f2","modified":1496633186897},{"_id":"public/categories/octopress/index.html","hash":"195a071e9ac67f07df61bd6640d2cf2b31a837ed","modified":1496633186897},{"_id":"public/categories/孔府，孔庙，孔林/index.html","hash":"090268318d664e6db5f8a46bd9715687033bb2c4","modified":1496633186897},{"_id":"public/categories/comedy/drama/funny/index.html","hash":"bd6e04ceb90c6280c5c0dd1375de0db731f4abfb","modified":1496633186897},{"_id":"public/categories/git-alias-别名/index.html","hash":"c4afb10fac898d4575fbd63ffeddc73ed62c0f05","modified":1496633186897},{"_id":"public/categories/jmap-jstack-resin/index.html","hash":"6b538992b8f7db2a77e5940705e6d27f8932de68","modified":1496633186897},{"_id":"public/categories/bridge/cc/index.html","hash":"f779ccfe12ef2e3958ec653bdd3ba3fa6a2f3dd8","modified":1496633186897},{"_id":"public/categories/machine-learning-introduce/index.html","hash":"eac3a59c71fe126f7d6e365953e77a6b8dbc3a0c","modified":1496633186897},{"_id":"public/categories/web-site-build-ubuntu-linux-php/index.html","hash":"2aa4388fd5be2093dc8d600511f666c7120adcc2","modified":1496633186898},{"_id":"public/categories/python-xrange-range-difference-区别/index.html","hash":"99e8ca3f858c3c8af729e80e5a3329f97aad5ecd","modified":1496633186898},{"_id":"public/categories/solve/index.html","hash":"f4ba2e96ff87e5a18d03da386603097a5a553604","modified":1496633186898},{"_id":"public/categories/SyntaxError-octopress-error-rake-generate/index.html","hash":"26b2eede2a98e0ad6facba0e99d8342a9da8522e","modified":1496633186898},{"_id":"public/categories/windows-c-linux-移植-迁移，程序/index.html","hash":"09e0ae50f07c76d3693198f86a0f102c200ce5a8","modified":1496633186898},{"_id":"public/categories/有道-云笔记-youdao-1-5-上线-正式版/index.html","hash":"455acb9d8ce2558d861c94d9c27981d80c9a8b70","modified":1496633186898},{"_id":"public/categories/svn-diff-merge-lost-patch/index.html","hash":"b21e77a03252bf48000ddb8f3df0f60e65a1ccfa","modified":1496633186898},{"_id":"public/categories/sina-oauth2-0-oauth-open-authorization-新浪-有道-有道云笔记/index.html","hash":"e18394d3b283d0ab63c5d19c07cf8e2ea0553384","modified":1496633186898},{"_id":"public/categories/cookie/index.html","hash":"7dc21745805cf5eeab2c77476badf06066b21bd3","modified":1496633186898},{"_id":"public/categories/upload-上传-nginx-resin-apache-spring-文件/index.html","hash":"d008543e70708c0314a4c12bed817b60620860ca","modified":1496633186898},{"_id":"public/categories/server/index.html","hash":"e28f36c936e778e1fc3ab34acd9f317c8c5941be","modified":1496633186899},{"_id":"public/categories/java-mail-email-API-problem-base64-mime-picture/index.html","hash":"554a0cab7d66aeeaf8aa2247ac4561a24a36e436","modified":1496633186899},{"_id":"public/categories/java-正则式-正则表达式/index.html","hash":"4ce2dab9c924a388d3b9012fdf9a75e9cad3406e","modified":1496633186900},{"_id":"public/categories/today-见闻-story/index.html","hash":"cc075bf0fbbf0d18f697a0088008b5f01846bf72","modified":1496633186900},{"_id":"public/categories/code/debug/index.html","hash":"e979e6e8defbcafcdcfb5986e7829e6b8c9806ef","modified":1496633186900},{"_id":"public/categories/weibo-long-长微博-有道云笔记/index.html","hash":"90e08040f4f947f678521dc43f6e1a870a960c20","modified":1496633186900},{"_id":"public/categories/cc/chain/index.html","hash":"52f37e5bfcecb7f34a1409b6668451650bbea26c","modified":1496633186900},{"_id":"public/categories/movie-圣诞玫瑰/index.html","hash":"c7af79da964160734d0df8cd4ec5d819355c7fd9","modified":1496633186900},{"_id":"public/categories/有道云笔记-blog-图片/index.html","hash":"448cd51001b41ef9a4c7e25691724460df201023","modified":1496633186900},{"_id":"public/categories/octopress-blog-修改-结构/index.html","hash":"68129639b389ee3e382c1720abd8ba0f87217740","modified":1496633186900},{"_id":"public/categories/funny/game/game/see-hear/index.html","hash":"18e6c01e7c097b720b73513472b642ed209f0a29","modified":1496633186900},{"_id":"public/categories/upgrade-octopress-2-0-bugs-solution/index.html","hash":"2b9784b3e56d0bb69b4a217e971ba282b28c6346","modified":1496633186900},{"_id":"public/categories/align/c/index.html","hash":"aa9eef7b3a7d860b98d33376998ec84630e2e4af","modified":1496633186900},{"_id":"public/categories/funny/god/google/see-hear/index.html","hash":"e7e68b9a98523a16796a9ea907146267c8143464","modified":1496633186900},{"_id":"public/categories/c/cc/catch/index.html","hash":"06a8427c2f93215224422aa87df7d5d0a8a7b94a","modified":1496633186900},{"_id":"public/categories/api/facebook/php/index.html","hash":"2faa96504ad1a082547b3b269648599471572c68","modified":1496633186900},{"_id":"public/categories/allocation/cc/index.html","hash":"4d87c9aa027ff73a543277606add0117ff19fccb","modified":1496633186900},{"_id":"public/categories/absolute/bit/index.html","hash":"8e4781de360bc6fdac23c512db8d68af5c8b185c","modified":1496633186900},{"_id":"public/categories/algorithm/c/index.html","hash":"6fbc095955455e6b1365f3c52b0c63123607210d","modified":1496633186900},{"_id":"public/categories/c/code/connect/database/index.html","hash":"dfaf451aad845e9b9b121d928d711f367d28e657","modified":1496633186900},{"_id":"public/categories/c/cc/class/index.html","hash":"e86202b74267dc25c171d4210ba2913bd1b00692","modified":1496633186900},{"_id":"public/categories/first/it/rw/index.html","hash":"1c7f09ae50c212a19e0fab09597f70db038b9424","modified":1496633186901},{"_id":"public/categories/math/math/symbol/index.html","hash":"f51cfd8796784b51f61c6f2a55f2e0edf1ce3df8","modified":1496633186901},{"_id":"public/categories/funny/movie/rw/index.html","hash":"56d32fa864728f7789f6d26a1a76e02f5c48e50f","modified":1496633186901},{"_id":"public/categories/big/chinese/index.html","hash":"a5cbaa8d90bcbd7b09ad7170507a4f5c6ec4f2d3","modified":1496633186901},{"_id":"public/categories/listen/see-hear/song/index.html","hash":"9f33f05c4d8f8dac832df81d4e94cebb576142da","modified":1496633186901},{"_id":"public/categories/blog/google/index.html","hash":"ee9a5e843ab33795d0c426e375b3ecd33b0438b8","modified":1496633186901},{"_id":"public/categories/life/programmer/index.html","hash":"f47a6a84af9cdacdf31a87eaa76919dadcc3d961","modified":1496633186901},{"_id":"public/categories/chinese/discount/index.html","hash":"4f2387c9bafc3822afe6d4efe18215bf1677c588","modified":1496633186901},{"_id":"public/categories/queue/see-hear/index.html","hash":"0cae42d441068d43ee6ee40b458c6dc78b21ad13","modified":1496633186901},{"_id":"public/categories/code/python/index.html","hash":"13126a7dd6412c63b9cd1bc3c45295b3127cb1fb","modified":1496633186901},{"_id":"public/categories/architecture/single/singleton/index.html","hash":"6ee77b8513f1e77e1f5fee10e776b174f18353d0","modified":1496633186901},{"_id":"public/categories/clock/funny/index.html","hash":"883f449238e3f1ecd9b287ccc560b9f220025ecd","modified":1496633186901},{"_id":"public/categories/funny/see-hear/考试/index.html","hash":"cbc06fdd5ec925782b02432996fb83a4629fe43f","modified":1496633186901},{"_id":"public/categories/ack/connection/firewall/index.html","hash":"73acbf31b431d2395ebd75668987f930c08772ae","modified":1496633186901},{"_id":"public/categories/python/python/index.html","hash":"4c670c0c7ae8e4922c589262b4b15b5250b13cfa","modified":1496633186901},{"_id":"public/categories/connect/error/index.html","hash":"245d0782c1285107c9b59efd20c608cc58a63546","modified":1496633186901},{"_id":"public/categories/client/code/index.html","hash":"945415e413cacbf27ebf85c612f5c83c54dc5988","modified":1496633186901},{"_id":"public/categories/dll/game/index.html","hash":"672d2f78f5937aa58491c7870142fc41506f810d","modified":1496633186901},{"_id":"public/categories/open-source/project/release/index.html","hash":"d21ab71c18c58e955261e835998fa3adb5881ccd","modified":1496633186901},{"_id":"public/categories/eucalyptus/login/index.html","hash":"91287a5a1e53acd9c340a77c0761465a879d25b4","modified":1496633186901},{"_id":"public/categories/apache/my-own/index.html","hash":"9926ac99f721ea4762e3dfdbe45bd6f1d33487a2","modified":1496633186901},{"_id":"public/categories/code/competency/logn/index.html","hash":"fdc57393364b9d6fc30a7abd318a222145ce4e28","modified":1496633186901},{"_id":"public/categories/error/open-source/index.html","hash":"9fab1b6f88e5e2988392a3b75481b647e4be3022","modified":1496633186901},{"_id":"public/categories/blessing/see-hear/index.html","hash":"26d0759e245c7f7696c16784f603d7c2a369324d","modified":1496633186901},{"_id":"public/categories/bug/c/cc/index.html","hash":"b913a04c9c30e864cfbe766848edcb5e3c210043","modified":1496633186901},{"_id":"public/categories/eat/see-hear/index.html","hash":"6ac962370a715b06029aa2bf7d250c1a95a0ae36","modified":1496633186901},{"_id":"public/categories/movie/see-hear/index.html","hash":"92a677638b70ac9f3e074c1b3b92fb69ac9f892b","modified":1496633186901},{"_id":"public/categories/flash/second/see-hear/war/index.html","hash":"28fd89c0cae46b89c433a86862e279fd8dab8f5c","modified":1496633186901},{"_id":"public/categories/check/pagerank/index.html","hash":"94f448e8ece8d6c09d8eace2494e738dcc7cba3c","modified":1496633186901},{"_id":"public/categories/chinese/see-hear/index.html","hash":"978c9d3bda4048929fcc2ff5dfe326b09481940e","modified":1496633186901},{"_id":"public/categories/art/ascii/char/index.html","hash":"9cb053626ada6014bddaa8527f49428d5bf07889","modified":1496633186901},{"_id":"public/categories/see-hear/中介/租房/index.html","hash":"8b0128c13fe9d9ca202a0ab291ce1bea9a9404ef","modified":1496633186901},{"_id":"public/categories/cc/code/int/index.html","hash":"5cd0617abf3991428d98aab25fed55a92f83b5fc","modified":1496633186901},{"_id":"public/categories/funny/funny/see-hear/笑/index.html","hash":"fed795affc50f4d9cc3e3e46f370b050f757a308","modified":1496633186901},{"_id":"public/categories/movie/movie/index.html","hash":"f813c2be5882dfb3d859dadf788abfac3340a956","modified":1496633186901},{"_id":"public/categories/desire/movie/index.html","hash":"32f0914d2517994375c2daa77bbda982caf2dc0d","modified":1496633186902},{"_id":"public/categories/c/code/code/first/first/index.html","hash":"a181cf90c78236b28f4aa6db01b1070d3e9d0c19","modified":1496633186902},{"_id":"public/categories/ant/code/index.html","hash":"772287e6a6eef8253f7f8dbf8fbfb04d677d3e5b","modified":1496633186902},{"_id":"public/categories/ant/error/index.html","hash":"92e440205b2c42416eb4173288eeeba925129dc6","modified":1496633186902},{"_id":"public/categories/allocate/array/big/index.html","hash":"314356be390c8f4889bbe7da340126e24a561703","modified":1496633186902},{"_id":"public/categories/cc/code/hotkey/index.html","hash":"39f8ac47b2b833ba4ea5648fd21619d879a92bb7","modified":1496633186902},{"_id":"public/categories/c/cc/code/double/index.html","hash":"30149a4082b1c81e64efc1722bc640ec9a066296","modified":1496633186902},{"_id":"public/categories/cr/lf/index.html","hash":"b38852b9c2eddd6c7289158b60478c897963d122","modified":1496633186902},{"_id":"public/categories/api/code/html/index.html","hash":"a5685fae932e01e9c38c58494d09a24392aea859","modified":1496633186902},{"_id":"public/categories/project/svn/index.html","hash":"b3fa2626fb6a426c654c24c46486b7df477cbdb2","modified":1496633186902},{"_id":"public/categories/funny/funny/lesson/see-hear/video/index.html","hash":"d464351e13dc6313d781e03fdbd7b3bf8479c0a3","modified":1496633186902},{"_id":"public/categories/blurred/game/index.html","hash":"f1e6328c86d5f4b8f51744d5f60d29cd0118775b","modified":1496633186902},{"_id":"public/categories/auto/code/document/index.html","hash":"b32f3a05cbf030ac41f4034120c5ac6fa64dde86","modified":1496633186902},{"_id":"public/categories/charset/encoding/index.html","hash":"908b156fc210147bf00b7e22aa02b1b48a056d04","modified":1496633186902},{"_id":"public/categories/csdn/see-hear/index.html","hash":"6efd46187776ed4f9a4ad673ac627ce3c3a0ef3f","modified":1496633186902},{"_id":"public/categories/asce/cc/code/index.html","hash":"cf25833f7ef31fa650cb3dd0c75b9e7721874c6b","modified":1496633186902},{"_id":"public/categories/china/forget/forgive/japan/index.html","hash":"c49e46348960bc0a170a256b213fe042e3923b7d","modified":1496633186902},{"_id":"public/categories/new/test/index.html","hash":"b1f58249321a04e2bfca26564f2b5e6960379e6a","modified":1496633186902},{"_id":"public/categories/新浪/oauth/index.html","hash":"5fc6b2574c9bcdad422034d84d6edd2fa7e44323","modified":1496633186902},{"_id":"public/categories/blocks/build/cc/index.html","hash":"1a6288f34c64dc151a1e48c5d3f0555262493191","modified":1496633186902},{"_id":"public/categories/back/home/index.html","hash":"c81b3f0dd734218d98484d61fca3450c07434ace","modified":1496633186902},{"_id":"public/categories/octopress/bug/index.html","hash":"45703d4feeae8c1fe727f3fc3c8fd79adcf4ac8e","modified":1496633186902},{"_id":"public/categories/adapter/cc/code/index.html","hash":"c3a1b872a66fab526519360e7fe6b2384c3ae7c6","modified":1496633186902},{"_id":"public/categories/octopress/principle/index.html","hash":"10f1019200a51f3a3c7309e4217c4f954cbf18c4","modified":1496633186902},{"_id":"public/categories/comedy/drama/funny/play/index.html","hash":"ecd59dddf9c26173c19ed3f0eb052533f7121d8e","modified":1496633186902},{"_id":"public/categories/bridge/cc/code/index.html","hash":"487c8b03f00e0118fca62d403f0999d250f7d00e","modified":1496633186902},{"_id":"public/categories/cc/code/code/index.html","hash":"2af3e8ac06f8ea5583cf0deca2fdf21f38c304cb","modified":1496633186902},{"_id":"public/categories/solve/解决/index.html","hash":"3482152a6d81d686814b17b62ba7a81c348d9a50","modified":1496633186902},{"_id":"public/categories/code/debug/postgresql/index.html","hash":"d8de6b8269ea14f7d589c0496d1a5c3bba0e26fa","modified":1496633186902},{"_id":"public/categories/cc/chain/code/index.html","hash":"9018f794fcc831686ef7e2c6c6913db95914d8f9","modified":1496633186902},{"_id":"public/categories/align/c/cc/index.html","hash":"b4fc2d172690e4e0d69c735c42dc6b72cca128b3","modified":1496633186902},{"_id":"public/categories/cc/code/synchronizes/index.html","hash":"e12a3fcb1384ed43109f4bfa9133c89f73bdd3dc","modified":1496633186902},{"_id":"public/categories/c/cc/catch/exception/index.html","hash":"24265341403bb64a9e9c5408c5e2c22be708155b","modified":1496633186902},{"_id":"public/categories/api/facebook/php/see-hear/index.html","hash":"5b2eff837e02815212376a891c462f42d2bb66c9","modified":1496633186902},{"_id":"public/categories/allocation/cc/calloc/index.html","hash":"f2f1dff27a9516cb24de14fd0b54f672a7ec39ee","modified":1496633186902},{"_id":"public/categories/absolute/bit/c/index.html","hash":"a3e6db6ece7190528ea16fbc8df7de0b0f0e5856","modified":1496633186902},{"_id":"public/categories/c/cc/code/fflush/index.html","hash":"ce5a36f7971ebba745095eb4136dbb4bcbf5dea9","modified":1496633186903},{"_id":"public/categories/algorithm/c/cc/index.html","hash":"a6f903a9e93044d90366aac157e3b7ff4e484ca8","modified":1496633186903},{"_id":"public/categories/c/code/connect/database/database/index.html","hash":"22d261b532a4a10c0f37e9380e7664cd2bd08609","modified":1496633186903},{"_id":"public/categories/c/cc/code/error/index.html","hash":"912dc06ea89fd50b3c1c48630764224ac2adb520","modified":1496633186903},{"_id":"public/categories/cc/code/database/index.html","hash":"364e109b1802f55e25d961e242ae171c6c893552","modified":1496633186903},{"_id":"public/categories/c/cc/class/code/index.html","hash":"40df343322fbe6e28d6771656e03716dd7ecbde4","modified":1496633186903},{"_id":"public/categories/first/it/rw/see-hear/index.html","hash":"a8cdaa2f691ea2fd3bad66de926b5c25e504f53a","modified":1496633186903},{"_id":"public/categories/funny/movie/rw/see-hear/index.html","hash":"a130adacc728235b7ada58e7773516ad0fbc210c","modified":1496633186903},{"_id":"public/categories/big/chinese/data/index.html","hash":"270191e0c66c89e1fc70c0f5be0f34fea9aac24f","modified":1496633186903},{"_id":"public/categories/blog/google/search/index.html","hash":"ce426e6d0cefac57ccaf263d89cee99d731f9029","modified":1496633186903},{"_id":"public/categories/life/programmer/ruby/index.html","hash":"d191a7bb16b7aba77feafd16c5509ef8cea4aa57","modified":1496633186903},{"_id":"public/categories/chinese/discount/see-hear/index.html","hash":"08651cad37e42171d6872fb940260ad3a1b52328","modified":1496633186903},{"_id":"public/categories/code/python/python/index.html","hash":"f43f010f5580c0ad1b41f6e9564ebf97a2ca5c2f","modified":1496633186903},{"_id":"public/categories/architecture/single/singleton/software-architecture-code/index.html","hash":"506423cfc2f5b3e2e7ebbbcb0836b065e7140d49","modified":1496633186903},{"_id":"public/categories/clock/funny/funny/index.html","hash":"2af0325d7c95964b045a2dc3f0c90a41258428f4","modified":1496633186903},{"_id":"public/categories/funny/see-hear/考试/计算机/index.html","hash":"8d3cd89e3b862b461435d68a6b53593aa0707ed4","modified":1496633186903},{"_id":"public/categories/ack/connection/firewall/open-source/index.html","hash":"e9af52319e856122d234581f8f18f6c872df0fe5","modified":1496633186903},{"_id":"public/categories/python/python/valueerror/index.html","hash":"9ada563a8a653bb0273c9fb834e0f8c46b96ed79","modified":1496633186903},{"_id":"public/categories/connect/error/python/index.html","hash":"00d24dfbc195bebdb51c40d9567965e55d06d634","modified":1496633186903},{"_id":"public/categories/client/code/python/index.html","hash":"45f00bdb044d0baf04a08b93535c54ca766ddb8a","modified":1496633186903},{"_id":"public/categories/dll/game/rmxp/index.html","hash":"910a26323c2ad11352c54ea901e6fa3abdff78a3","modified":1496633186903},{"_id":"public/categories/open-source/project/release/ubuntu/index.html","hash":"100da170b9e643e4d5dfc430ef77c70abd4d6e94","modified":1496633186903},{"_id":"public/categories/eucalyptus/login/open-source/index.html","hash":"c9513d504485ee940d09a33840fc1e2a39f147af","modified":1496633186903},{"_id":"public/categories/apache/my-own/project/index.html","hash":"5f3a929af3bd83cdfc4342b5cc830035f4a6e4c0","modified":1496633186903},{"_id":"public/categories/code/competency/logn/matrix/index.html","hash":"db7b977789823cd71a0cda3ed441b9f29540c358","modified":1496633186903},{"_id":"public/categories/error/open-source/php/index.html","hash":"c5b4bf95eb324b44d5c14696538061e4b50d2363","modified":1496633186903},{"_id":"public/categories/blessing/see-hear/sqlite/index.html","hash":"24c7fedb5658d52380c1e08d9391d9ff04366863","modified":1496633186903},{"_id":"public/categories/bug/c/cc/code/index.html","hash":"8876a2baccd06dee3ad1d94697075fb86b9bb6e4","modified":1496633186903},{"_id":"public/categories/flash/second/see-hear/war/world/index.html","hash":"d30ea089d52cae3e406a20f1e063c68f56d294cb","modified":1496633186903},{"_id":"public/categories/check/pagerank/see-hear/index.html","hash":"6a47db1b41c4fab1bdb6973232b6267dc7053ac6","modified":1496633186903},{"_id":"public/categories/chinese/see-hear/女/index.html","hash":"6cf086cfe05727581cf061d17d8e903998103477","modified":1496633186903},{"_id":"public/categories/art/ascii/char/character/index.html","hash":"9a4dd506eca72eb0602f372b3a2823613492b844","modified":1496633186903},{"_id":"public/categories/cc/code/int/long-long/index.html","hash":"88f2634782641405b3780296b67ec52dd69b315a","modified":1496633186903},{"_id":"public/categories/movie/movie/see-hear/index.html","hash":"ce5a569ae25702ff619af2efe2ac6025b8433875","modified":1496633186903},{"_id":"public/categories/desire/movie/movie/index.html","hash":"b6418335e440bf62093e9f0359c22998de8d8d4c","modified":1496633186903},{"_id":"public/categories/ant/code/eclipse/index.html","hash":"568a7c7104a6d1045791784b2dd2a19585530ed9","modified":1496633186903},{"_id":"public/categories/ant/error/open-source/index.html","hash":"166e644029719024d01415e3e44ad5b8f3fae54f","modified":1496633186903},{"_id":"public/categories/cc/code/hotkey/vs/index.html","hash":"48d5411dbe6067e8d7a70a6ee88291809e454116","modified":1496633186904},{"_id":"public/categories/allocate/array/big/cc/index.html","hash":"1e9227b178e5f20f7438ca7c6c866ca628b56a8c","modified":1496633186904},{"_id":"public/categories/cr/lf/project/index.html","hash":"62cbd3674cda50d7c70421cc10bb36a8f6fdf9f4","modified":1496633186904},{"_id":"public/categories/api/code/html/java/index.html","hash":"1816ad043b35b0432563ae9b07e324a6b1c7edf3","modified":1496633186904},{"_id":"public/categories/funny/funny/lesson/see-hear/video/war/index.html","hash":"f6ed27fb4181fb91f77855793bc8254a4ca6413d","modified":1496633186914},{"_id":"public/categories/blurred/game/startcraft/index.html","hash":"87ba972c456182d0d45741a7efdb9e1569b655b4","modified":1496633186914},{"_id":"public/categories/auto/code/document/doxygen/index.html","hash":"a01209a549e91de4ed0cba32fc25bb00957bcee6","modified":1496633186914},{"_id":"public/categories/charset/encoding/error/index.html","hash":"4bf95d9cff49e7b89d8413acf448f408171496e6","modified":1496633186914},{"_id":"public/categories/asce/cc/code/linux/index.html","hash":"c5e9b0787c1ad700ad29f986821fcf1e20d97865","modified":1496633186914},{"_id":"public/categories/china/forget/forgive/japan/see-hear/index.html","hash":"7d26282b4d850b26630ceba8fd3c3e1d967408ae","modified":1496633186914},{"_id":"public/categories/新浪/oauth/OAuth/index.html","hash":"116dee5cb83ba8e6acdb8062f7636c2cf080d06c","modified":1496633186914},{"_id":"public/categories/blocks/build/cc/code/index.html","hash":"288992f0253430011267304bff9004a8c9a06cf5","modified":1496633186914},{"_id":"public/categories/back/home/2012/index.html","hash":"f87e96f8b51f9dfcea09f23c09b95fd2d487df17","modified":1496633186914},{"_id":"public/categories/octopress/bug/solve/index.html","hash":"ebe3d5d440a18a5646612c6d5f0abfb92cae517f","modified":1496633186914},{"_id":"public/categories/comedy/drama/funny/play/rw/index.html","hash":"00d062dec0495356d40554b19d8fe1a5385044e0","modified":1496633186915},{"_id":"public/categories/adapter/cc/code/design/index.html","hash":"68c36e73917e52f1ad462c51fbfb0e7b004621f0","modified":1496633186915},{"_id":"public/categories/bridge/cc/code/design/index.html","hash":"b29a1df5fcf1547e4a86705439fed6080564e189","modified":1496633186915},{"_id":"public/categories/cc/code/code/composite/index.html","hash":"a4dcc3583ca9d45b4816d5267a304fca1fb539d1","modified":1496633186915},{"_id":"public/categories/solve/解决/c/index.html","hash":"a242b92ce9b7b8e33ded6f93590c5558deec60d3","modified":1496633186915},{"_id":"public/categories/cc/code/code/decorator/index.html","hash":"0c92b78efe1f1e58c4fcb89ff5098f0ea3057ce1","modified":1496633186915},{"_id":"public/categories/cc/code/code/design/index.html","hash":"5b6ddc7b9364987317fd9be7a840ecaa3b523122","modified":1496633186915},{"_id":"public/categories/code/debug/postgresql/postgresql/index.html","hash":"89b0869baa25ab290a6ba67637cdb880c80ad71b","modified":1496633186915},{"_id":"public/categories/cc/chain/code/design/index.html","hash":"ed074e35dd4529dc5fa2d9a62c2c24eac08dd04c","modified":1496633186915},{"_id":"public/categories/align/c/cc/code/index.html","hash":"59dc7e523fafd6831e910d89a514e72c896a8c04","modified":1496633186915},{"_id":"public/categories/cc/code/synchronizes/volatile/index.html","hash":"5a2199e107ec41d786220e2786d11fdf80615747","modified":1496633186915},{"_id":"public/categories/c/cc/catch/exception/throw/index.html","hash":"2cc9822075cc38e4447ff729237906d513121944","modified":1496633186915},{"_id":"public/categories/api/facebook/php/see-hear/structure/index.html","hash":"2dd0895b9cf6e0e49f166c28bc5a95a976145cdf","modified":1496633186915},{"_id":"public/categories/allocation/cc/calloc/code/index.html","hash":"0721ecfc7b07ef93c913075636e453893928cd52","modified":1496633186915},{"_id":"public/categories/absolute/bit/c/code/index.html","hash":"47d84893aa759da2d891902ba8bcc3f432520fa5","modified":1496633186915},{"_id":"public/categories/c/cc/code/fflush/n/index.html","hash":"a7bfc7e8d80e4915c158d9c38992e032f844e62d","modified":1496633186915},{"_id":"public/categories/algorithm/c/cc/optimiz/index.html","hash":"785f7eee6ae7e678c847d5b58f7d607ab80d1030","modified":1496633186915},{"_id":"public/categories/c/code/connect/database/database/postgresql/index.html","hash":"e4a0a424bd39302b3019dd179e0c7e7f114cebb0","modified":1496633186915},{"_id":"public/categories/c/cc/code/error/gethostname/index.html","hash":"baf78ebb74013b16b64f5a3cadb6021e34d0229e","modified":1496633186915},{"_id":"public/categories/cc/code/database/define/index.html","hash":"c049e53d1beca692d4883f1805254484818634d3","modified":1496633186915},{"_id":"public/categories/c/cc/class/code/sizeof/index.html","hash":"1a828779706e909a21810ac283faba681efb76f4","modified":1496633186915},{"_id":"public/categories/first/it/rw/see-hear/工作/index.html","hash":"841fe613f36d010ef9958e5cd06757bf86041b40","modified":1496633186915},{"_id":"public/categories/cc/code/code/crontab/index.html","hash":"96dc5aeac50609f5ca299f0906a8c304206bcf7f","modified":1496633186915},{"_id":"public/categories/funny/movie/rw/see-hear/喜剧/index.html","hash":"93e204aa396ef104cc0e1ade5d3b5b24b2284988","modified":1496633186915},{"_id":"public/categories/big/chinese/data/math/index.html","hash":"3d6ceef8964aa0a2b51c4a07614611aafcd9c67f","modified":1496633186915},{"_id":"public/categories/blog/google/search/see-hear/index.html","hash":"c03ab3d74c52f0fa9fe17a750c85c2ee2d717bb3","modified":1496633186915},{"_id":"public/categories/life/programmer/ruby/see-hear/index.html","hash":"e3570cfc6c52349f38bf29e4bf3485e1aa94c4ae","modified":1496633186915},{"_id":"public/categories/code/python/python/test/index.html","hash":"fc9b2e7c55bc631f5b5efe8fdf38e9d564afc031","modified":1496633186915},{"_id":"public/categories/architecture/single/singleton/software-architecture-code/software-architecture/index.html","hash":"963c0e866a31850b176e107d083f5db341f71f52","modified":1496633186915},{"_id":"public/categories/clock/funny/funny/see-hear/index.html","hash":"6603beee5725209853725577055e917f5b63922a","modified":1496633186915},{"_id":"public/categories/ack/connection/firewall/open-source/see-hear/index.html","hash":"90183228ed3d5a90bf3107e7defd12b7df036421","modified":1496633186915},{"_id":"public/categories/connect/error/python/python/index.html","hash":"e3612fba08358b95fd048bc38a05fff7e1a0e41a","modified":1496633186915},{"_id":"public/categories/client/code/python/python/index.html","hash":"f48fcc31b52a30600296f365c3a5071558cdd92a","modified":1496633186915},{"_id":"public/categories/dll/game/rmxp/rpg/index.html","hash":"e1e65dd66622ba1ebdb327153351586ac629bbe1","modified":1496633186915},{"_id":"public/categories/eucalyptus/login/open-source/project/index.html","hash":"1a79e42ab3ecb38727bb52ebbe1e662a58c2db4c","modified":1496633186916},{"_id":"public/categories/apache/my-own/project/windows/index.html","hash":"f79693f58686a89bd247511af0204f9381a44363","modified":1496633186916},{"_id":"public/categories/code/competency/logn/matrix/n/index.html","hash":"3817e3c5e7668e4bc2aea81cca5e491c85c8a77c","modified":1496633186916},{"_id":"public/categories/error/open-source/php/project/index.html","hash":"c2a8c5cc4b5ef857dc7648abcada24e2dd7deb63","modified":1496633186916},{"_id":"public/categories/bug/c/cc/code/define/index.html","hash":"7f3b176f30d5330a17fa5655782d86f0d644aa33","modified":1496633186916},{"_id":"public/categories/chinese/see-hear/女/工作/index.html","hash":"8647904c05cf35124af860e79403068fc03e33b6","modified":1496633186916},{"_id":"public/categories/art/ascii/char/character/code/index.html","hash":"9e0a9d4379946da15121a69e920e503dec86bc33","modified":1496633186916},{"_id":"public/categories/cc/code/int/long-long/scale/index.html","hash":"c79507ec1252258e21cbc0af2053beb47ea0bbf6","modified":1496633186916},{"_id":"public/categories/desire/movie/movie/see-hear/index.html","hash":"1ac42d171eb785cae8c336b49375c06b272f4dbb","modified":1496633186916},{"_id":"public/categories/ant/code/eclipse/ivy/index.html","hash":"dfc10145b0a297ff8e0d3b3ce5a18a64871a60a7","modified":1496633186916},{"_id":"public/categories/ant/error/open-source/problem/index.html","hash":"50f6084423653a143431f90cbc9dd261e334c040","modified":1496633186916},{"_id":"public/categories/allocate/array/big/cc/code/index.html","hash":"3bc680fc8549f3215d33550178ac7729b03ec765","modified":1496633186916},{"_id":"public/categories/cr/lf/project/回车/index.html","hash":"68c50f8f0094e0ec47cb5aa87601a76313db946c","modified":1496633186916},{"_id":"public/categories/api/code/html/java/java/index.html","hash":"8d105519204e82fc9389d87e41d28fc432ecd64d","modified":1496633186916},{"_id":"public/categories/funny/funny/lesson/see-hear/video/war/world/index.html","hash":"1c2af1a1646147206376ad141cc4b148debaa924","modified":1496633186916},{"_id":"public/categories/blurred/game/startcraft/win7/index.html","hash":"6576e4bdec4aa56c45b22ec400f56c7f4f3db296","modified":1496633186916},{"_id":"public/categories/auto/code/document/doxygen/generate/index.html","hash":"d1335bbe4a9313c55149702ad1b3c319f57f016b","modified":1496633186916},{"_id":"public/categories/charset/encoding/error/exception/index.html","hash":"efb8f4b01793a0d93c8daf222cf092b651f7cc2c","modified":1496633186916},{"_id":"public/categories/asce/cc/code/linux/qsort/index.html","hash":"2e44fdf5c44b265318be3fe19b51e53677a01cbb","modified":1496633186916},{"_id":"public/categories/china/forget/forgive/japan/see-hear/war/index.html","hash":"2175d4f9e7ec595b7ad23e706c1681061c706c17","modified":1496633186916},{"_id":"public/categories/新浪/oauth/OAuth/callback/index.html","hash":"ca293c51d06c69cccf6521d0cf4a2ac01fef8d10","modified":1496633186916},{"_id":"public/categories/blocks/build/cc/code/database/index.html","hash":"caf436e0055b0428dd5aa3cfd8be04b5b3fa83d2","modified":1496633186916},{"_id":"public/categories/adapter/cc/code/design/pattern/index.html","hash":"cdceae671bd89f924eec72ca6cee02b86a9e47c1","modified":1496633186916},{"_id":"public/categories/bridge/cc/code/design/pattern/index.html","hash":"63c7f02fb6e6224dcee34ab91ce92f08f9bd92d8","modified":1496633186916},{"_id":"public/categories/cc/code/code/composite/design/index.html","hash":"98a48aa2c243d49e882b87afb8114f96ea5f55d0","modified":1496633186916},{"_id":"public/categories/solve/解决/c/c/index.html","hash":"4c981c96237daf3356bcd871c9bd646dc8c4d8e1","modified":1496633186916},{"_id":"public/categories/cc/code/code/decorator/design/index.html","hash":"cefd141f567d826387248ca696df3b0ffe095db0","modified":1496633186916},{"_id":"public/categories/cc/code/code/design/facade/index.html","hash":"9c73a026ba41db0d59fe6dbcc7622bf93db1f19c","modified":1496633186916},{"_id":"public/categories/cc/code/code/design/flyweight/index.html","hash":"66580515784becb3001215675888294dab72351f","modified":1496633186916},{"_id":"public/categories/code/debug/postgresql/postgresql/symbol/index.html","hash":"fa36b2ef5c109d8706a27d3aa0d18a714117966c","modified":1496633186916},{"_id":"public/categories/cc/chain/code/design/pattern/index.html","hash":"6cf7af77a0d1fb04c78757faf1bf71c70505c346","modified":1496633186916},{"_id":"public/categories/align/c/cc/code/memory/index.html","hash":"126301fa80ad097aa921da53619a9b255cf11c00","modified":1496633186916},{"_id":"public/categories/c/cc/catch/exception/throw/try/index.html","hash":"9efc077b8d05bb6bfa67ec0a274ca8aec316127d","modified":1496633186916},{"_id":"public/categories/allocation/cc/calloc/code/code/index.html","hash":"64fb390817bf88cb0da761921679d0067010c08f","modified":1496633186916},{"_id":"public/categories/absolute/bit/c/code/complement/index.html","hash":"ab06639beb96ec97c65c47c9eb9c6b3c29ce691b","modified":1496633186916},{"_id":"public/categories/c/cc/code/fflush/n/output/index.html","hash":"91166329f98a7767db6406a50643eced2cbb4af3","modified":1496633186916},{"_id":"public/categories/algorithm/c/cc/optimiz/quick/index.html","hash":"35ca55e0f15893c6dd223034b6b60a1d1320c504","modified":1496633186917},{"_id":"public/categories/bug/c/cc/code/macro/index.html","hash":"e16e96c71ceaa49d478fb3ac16d476d6f09ab514","modified":1496633186917},{"_id":"public/categories/c/code/connect/database/database/postgresql/postgresql/index.html","hash":"94577570886432ee0ed40093288ad601d0132a57","modified":1496633186917},{"_id":"public/categories/c/cc/code/error/gethostname/lnk2019/index.html","hash":"742b491e9c7cc2f9f322400c790d3087e2ecf09f","modified":1496633186917},{"_id":"public/categories/cc/code/database/define/function/index.html","hash":"440c512d44fca717583d5d6cb96ad186dd7669ac","modified":1496633186917},{"_id":"public/categories/first/it/rw/see-hear/工作/教训/index.html","hash":"8217b5eb375ee7fc3367b0fe5ff4118735c0519d","modified":1496633186917},{"_id":"public/categories/cc/code/code/crontab/environment/index.html","hash":"b517f4e390546c248ca16bc42023b49a0ae2cd22","modified":1496633186917},{"_id":"public/categories/funny/movie/rw/see-hear/喜剧/影评/index.html","hash":"96305fd7094c80832331f8bf21b6156db3020460","modified":1496633186917},{"_id":"public/categories/big/chinese/data/math/大数据/index.html","hash":"24a294ed07f539403f1d44f399d94a654dca9ac8","modified":1496633186917},{"_id":"public/categories/blog/google/search/see-hear/update/index.html","hash":"3f8268d76ba5aae06f1ff96b3597248cec9efba4","modified":1496633186917},{"_id":"public/categories/code/python/python/test/unit/index.html","hash":"f2e4e7b9d87aee4f0ec7c2f83a5f1309ac57fc17","modified":1496633186917},{"_id":"public/categories/connect/error/python/python/see-hear/index.html","hash":"b93ac7eec07ebe1c2d45550f9aa45a5e8111afd4","modified":1496633186917},{"_id":"public/categories/client/code/python/python/recv/index.html","hash":"5fc9019a7d215cf090a2cb62174c09417e927e58","modified":1496633186917},{"_id":"public/categories/dll/game/rmxp/rpg/rtp/index.html","hash":"d6fd7912fd6bb029eb0fbf251102dce31f0b9d91","modified":1496633186917},{"_id":"public/categories/eucalyptus/login/open-source/project/solution/index.html","hash":"1e572523cb2db8030fc916bb0cd0fa342b8defb3","modified":1496633186917},{"_id":"public/categories/apache/my-own/project/windows/虚拟主机/index.html","hash":"97f4fde51af024726b8ecbf5192c9dfaf2019207","modified":1496633186917},{"_id":"public/categories/code/competency/logn/matrix/n/programming/index.html","hash":"c4a51a4c097550c269ab5776584f3428daf53efc","modified":1496633186917},{"_id":"public/categories/error/open-source/php/project/solution/index.html","hash":"41fd442abb81e7ca64702b532ac3e3dc6857d091","modified":1496633186917},{"_id":"public/categories/bug/c/cc/code/define/freopen/index.html","hash":"db4eb98ccd14eced4dd5e31c5d8c71d74e03835c","modified":1496633186917},{"_id":"public/categories/chinese/see-hear/女/工作/歧视/index.html","hash":"258b6e6d1e5d4d5235b6ca9ef04adcc8396dd1af","modified":1496633186917},{"_id":"public/categories/art/ascii/char/character/code/conversion/index.html","hash":"f7237a651f692d8aa290de9f1230fe7b5995c04e","modified":1496633186917},{"_id":"public/categories/cc/code/int/long-long/scale/type/index.html","hash":"42c0d6099514eb3c1a29a99d8dc498097999010d","modified":1496633186917},{"_id":"public/categories/desire/movie/movie/see-hear/spirit/index.html","hash":"b8be35f5435ae4c72ed1ece0fd23f55c1af2c0fc","modified":1496633186917},{"_id":"public/categories/ant/error/open-source/problem/project/index.html","hash":"5077294219d1cae910a76a151c35435a1f3d6916","modified":1496633186917},{"_id":"public/categories/allocate/array/big/cc/code/const/index.html","hash":"ed46d1a43fe9547632299e904cda7e0619533f50","modified":1496633186917},{"_id":"public/categories/cr/lf/project/回车/换行/index.html","hash":"b5bf7e3d3028fbd5a75e58114b298baf93587ce5","modified":1496633186917},{"_id":"public/categories/api/code/html/java/java/parser/index.html","hash":"44b0cf460e07be0c8edc6b6122231dd075ff7c30","modified":1496633186917},{"_id":"public/categories/blurred/game/startcraft/win7/星际争霸/index.html","hash":"79bdd3fb5faf2fd4503051c8c0a5021175e7fc9f","modified":1496633186917},{"_id":"public/categories/auto/code/document/doxygen/generate/how-to/index.html","hash":"86ee0c79f1c4581f6f80e90104c46aaed440672b","modified":1496633186917},{"_id":"public/categories/charset/encoding/error/exception/java/index.html","hash":"5cf999394fe84154bef2f47afd6fccba9e6fd743","modified":1496633186917},{"_id":"public/categories/asce/cc/code/linux/qsort/quicksort/index.html","hash":"4b1fabbd1b791bd498cf2088e835a07bbc5331e2","modified":1496633186917},{"_id":"public/categories/blocks/build/cc/code/database/error/index.html","hash":"e540076171ace1d16fc44fd3bc8a2a49de956884","modified":1496633186917},{"_id":"public/categories/adapter/cc/code/design/pattern/software-architecture-code/index.html","hash":"86dc675a97202a00df83b1b683be7e90bb4f1c03","modified":1496633186917},{"_id":"public/categories/bridge/cc/code/design/pattern/software-architecture-code/index.html","hash":"7c2ff84dfaa37b230d8ebedc50b7c37e8392106d","modified":1496633186917},{"_id":"public/categories/cc/code/code/composite/design/pattern/index.html","hash":"f1b77e2872f4aacd8b96563dbff4288f9f5fb84b","modified":1496633186917},{"_id":"public/categories/solve/解决/c/c/windows/index.html","hash":"b4760e3cb50d996d74ee1f4c6489e5b11611ece8","modified":1496633186917},{"_id":"public/categories/cc/code/code/decorator/design/pattern/index.html","hash":"6ff54d2cfc33465ff587b0dc0dc10fa3c441cb6a","modified":1496633186918},{"_id":"public/categories/cc/code/code/design/facade/pattern/index.html","hash":"28e5585437426c7638aed2d735960ea93ff370f6","modified":1496633186918},{"_id":"public/categories/cc/code/code/design/flyweight/pattern/index.html","hash":"c48e84077cd5a6cc20fc627e643a6a109b2b5297","modified":1496633186918},{"_id":"public/categories/cc/chain/code/design/pattern/reposibility/index.html","hash":"63d2b2e9042628291798a99cd60e28af23269ddd","modified":1496633186918},{"_id":"public/categories/align/c/cc/code/memory/sizeof/index.html","hash":"f58f28516de9a10acbb4af57153e4291ca1e9ad0","modified":1496633186918},{"_id":"public/categories/allocation/cc/calloc/code/code/free/index.html","hash":"0c8ffac375887b39bc2c7651c060926546ccb223","modified":1496633186918},{"_id":"public/categories/absolute/bit/c/code/complement/math/index.html","hash":"0e9911555b58bd33a7fd62bdcc8ffb8069145656","modified":1496633186918},{"_id":"public/categories/c/cc/code/fflush/n/output/printf/index.html","hash":"d789ecf378c1b0d1ba600160cfe55fcbb9c37a59","modified":1496633186918},{"_id":"public/categories/algorithm/c/cc/optimiz/quick/see-hear/index.html","hash":"3849c0b3c0defc6affbf3e6c34731a15fd280874","modified":1496633186918},{"_id":"public/categories/bug/c/cc/code/macro/point/index.html","hash":"53fdc8fcde754bd4ad747426180dbb9b539b6d75","modified":1496633186918},{"_id":"public/categories/c/code/connect/database/database/postgresql/postgresql/programming/index.html","hash":"d61b58fe9932ddd327e449c2fc478781ff3e2a12","modified":1496633186918},{"_id":"public/categories/c/cc/code/error/gethostname/lnk2019/winsock/index.html","hash":"3627c4f63d4e56a4abe924ebb0e99a4677504db6","modified":1496633186918},{"_id":"public/categories/cc/code/database/define/function/own/index.html","hash":"ef1a07040498fd430f5526b28fed171e0b412735","modified":1496633186918},{"_id":"public/categories/first/it/rw/see-hear/工作/教训/经验/index.html","hash":"c021bcdb2ba590ad303556495cfb4650e1c1f7dd","modified":1496633186918},{"_id":"public/categories/cc/code/code/crontab/environment/execute/index.html","hash":"8cb1fbc0e1abe6ea11bd9258cf942681cf5fb2dc","modified":1496633186918},{"_id":"public/categories/funny/movie/rw/see-hear/喜剧/影评/电影/index.html","hash":"ebf3289b6840e430c62b5377040ce4eda2459309","modified":1496633186918},{"_id":"public/categories/connect/error/python/python/see-hear/socket/index.html","hash":"335e2de5f2dff27682e3622516946794f0af03e6","modified":1496633186918},{"_id":"public/categories/client/code/python/python/recv/send/index.html","hash":"a679fb5287a903219b7bb83e42b49d773305298e","modified":1496633186918},{"_id":"public/categories/eucalyptus/login/open-source/project/solution/ssh/index.html","hash":"97977d2c4c01cb9a8b5312f17db3010852bebfcb","modified":1496633186918},{"_id":"public/categories/error/open-source/php/project/solution/wordpress/index.html","hash":"69a4b40c4190bef1a601291b8e948a3ade1e8106","modified":1496633186918},{"_id":"public/categories/bug/c/cc/code/define/freopen/macro/index.html","hash":"0f98a3969ef7d6e906af8dfa5efcbbc83b24d98f","modified":1496633186918},{"_id":"public/categories/chinese/see-hear/女/工作/歧视/高薪/index.html","hash":"0be14a248f0135ffef3617920dc4da6b31f0b5fe","modified":1496633186918},{"_id":"public/categories/art/ascii/char/character/code/conversion/see-hear/index.html","hash":"a49c94dc944619d31cec39c8408815f473c39a82","modified":1496633186918},{"_id":"public/categories/allocate/array/big/cc/code/const/define/index.html","hash":"88cfdb02b8ba7ff2da3974ea49016b2496d3c3e0","modified":1496633186918},{"_id":"public/categories/blurred/game/startcraft/win7/星际争霸/花屏/index.html","hash":"ad5f8768beaf6dccf00db7ca39532de447998710","modified":1496633186918},{"_id":"public/categories/auto/code/document/doxygen/generate/how-to/open-source/index.html","hash":"62efcd4cb1c93507152c58f9e256f482ef467d8e","modified":1496633186918},{"_id":"public/categories/charset/encoding/error/exception/java/java/index.html","hash":"7cfb836c02a3a6aed5c4ed188a09b6a557220b51","modified":1496633186919},{"_id":"public/categories/asce/cc/code/linux/qsort/quicksort/sort/index.html","hash":"b0bcd8337f4d73f7fd2e60fd0d1610ee885ba82b","modified":1496633186919},{"_id":"public/categories/blocks/build/cc/code/database/error/open-source/index.html","hash":"7575b4bc71e0a078fa603f76e8971ab7d2217ff4","modified":1496633186919},{"_id":"public/categories/adapter/cc/code/design/pattern/software-architecture-code/virtual/index.html","hash":"7bbd32db331b6882a92e3619dec9402dbcae7d2b","modified":1496633186919},{"_id":"public/categories/cc/code/code/composite/design/pattern/software-architecture-code/index.html","hash":"c3a5362cb61beb4170d0deb45ab791a73f821763","modified":1496633186919},{"_id":"public/categories/solve/解决/c/c/windows/linux/index.html","hash":"43796e4536e659ba865e8e713aae45e1d770072c","modified":1496633186919},{"_id":"public/categories/cc/code/code/decorator/design/pattern/software-architecture-code/index.html","hash":"6f312f8eae7d4d2087662bd6987f37ec5100b621","modified":1496633186919},{"_id":"public/categories/cc/code/code/design/facade/pattern/software-architecture-code/index.html","hash":"c271f448c4713d50972bc7a5e58ebfb1a8ec5abe","modified":1496633186919},{"_id":"public/categories/cc/code/code/design/flyweight/pattern/software-architecture-code/index.html","hash":"09fbe02a05005c24005a9ea98f7cd15fc663072f","modified":1496633186919},{"_id":"public/categories/cc/chain/code/design/pattern/reposibility/software-architecture-code/index.html","hash":"841bc364efe21ac4abd39a1f2d620012f955cd31","modified":1496633186919},{"_id":"public/categories/allocation/cc/calloc/code/code/free/malloc/index.html","hash":"e24900f7b796d731c886cfea9cf4bd9863c5a01b","modified":1496633186919},{"_id":"public/categories/absolute/bit/c/code/complement/math/math/index.html","hash":"e945d8c5cc86641e7f5be1aaadf7501f9f74ea46","modified":1496633186919},{"_id":"public/categories/c/cc/code/fflush/n/output/printf/r/index.html","hash":"87b352c30d203526db79aed6e4677b50f4dbf87c","modified":1496633186919},{"_id":"public/categories/algorithm/c/cc/optimiz/quick/see-hear/sort/index.html","hash":"37308f463ad9d425c19fc97c0e64f8b2aa6fc0e5","modified":1496633186919},{"_id":"public/categories/bug/c/cc/code/macro/point/tricky/index.html","hash":"2555b8452530a9f55a0ce0476983b2e804d8b811","modified":1496633186920},{"_id":"public/categories/c/code/connect/database/database/postgresql/postgresql/programming/remote/index.html","hash":"dae3a64b5062af7256b9bbbe2bfda2b2d3a8f1c7","modified":1496633186920},{"_id":"public/categories/cc/code/database/define/function/own/postgresql/index.html","hash":"693d49691d98581b9137a4f17cb71b035fbf6e5a","modified":1496633186920},{"_id":"public/categories/cc/code/code/crontab/environment/execute/not/index.html","hash":"6476faa50fb6b35cc5f2e8dad8e13cd65a05b9b9","modified":1496633186920},{"_id":"public/categories/client/code/python/python/recv/send/server/index.html","hash":"efe0a9fc60b7b8661f6318be763260b0d08a343f","modified":1496633186920},{"_id":"public/categories/bug/c/cc/code/define/freopen/macro/math/index.html","hash":"54c07bed36d49694a3949ff11cfccd21897063cf","modified":1496633186920},{"_id":"public/categories/art/ascii/char/character/code/conversion/see-hear/tool/index.html","hash":"a6b1db84d83a66837a74d917b12d98e2923fbcdb","modified":1496633186920},{"_id":"public/categories/allocate/array/big/cc/code/const/define/error/index.html","hash":"73129ddf494d64df4e62d349653e5db0014fc8a9","modified":1496633186920},{"_id":"public/categories/auto/code/document/doxygen/generate/how-to/open-source/project/index.html","hash":"92035cf4f291b6fafb70ce976f3fc98df84d6ee1","modified":1496633186920},{"_id":"public/categories/charset/encoding/error/exception/java/java/see-hear/index.html","hash":"5e893cc8fa252b758bc205ccb6e8a76867252487","modified":1496633186920},{"_id":"public/categories/asce/cc/code/linux/qsort/quicksort/sort/stable/index.html","hash":"44c8010301cb2ed1048c9fbf205d8fe6fcc12674","modified":1496633186920},{"_id":"public/categories/blocks/build/cc/code/database/error/open-source/project/index.html","hash":"609285939f1b3c73a53f1cfd9476e2d54e7f88ca","modified":1496633186920},{"_id":"public/categories/solve/解决/c/c/windows/linux/编译/index.html","hash":"7dfdb03a7dfd0e912c7ae095e6ab59f3f384237a","modified":1496633186920},{"_id":"public/categories/allocation/cc/calloc/code/code/free/malloc/memory/index.html","hash":"92b0f4106eba09a62cbdb40fe4135d7df1bcfcaa","modified":1496633186920},{"_id":"public/categories/absolute/bit/c/code/complement/math/math/priority/index.html","hash":"232430ab0864ef8dd04618b56b71c2167fdda141","modified":1496633186920},{"_id":"public/categories/cc/code/database/define/function/own/postgresql/postgresql/index.html","hash":"5eeaa0118fcbb50dce7fe470c312024ae6a03831","modified":1496633186920},{"_id":"public/categories/cc/code/code/crontab/environment/execute/not/program/index.html","hash":"f245b57894feee9d5c5263facca12d4905029828","modified":1496633186920},{"_id":"public/categories/client/code/python/python/recv/send/server/socket/index.html","hash":"d6e88d48502a320d9d2eef610e1d797c5d59bbee","modified":1496633186920},{"_id":"public/categories/bug/c/cc/code/define/freopen/macro/math/programming/index.html","hash":"ffdc7db5fbda2c7c46183bae73c646d87423ffb3","modified":1496633186920},{"_id":"public/categories/art/ascii/char/character/code/conversion/see-hear/tool/word/index.html","hash":"7597e6f6153d325e81135544b7ab755a5193a012","modified":1496633186920},{"_id":"public/categories/allocate/array/big/cc/code/const/define/error/gcc/index.html","hash":"eb56fd7ece5c7514903375df4bffd50e2c3a0800","modified":1496633186920},{"_id":"public/categories/auto/code/document/doxygen/generate/how-to/open-source/project/see-hear/index.html","hash":"ba4f012371a4b4cfcf053013fa9c75392859a5cd","modified":1496633186920},{"_id":"public/categories/charset/encoding/error/exception/java/java/see-hear/velocity/index.html","hash":"4243582cc2dc06a5eb4013b37e0007d77f929b02","modified":1496633186920},{"_id":"public/categories/asce/cc/code/linux/qsort/quicksort/sort/stable/unix/index.html","hash":"7d116406e928138c85d252347226ff812a34852b","modified":1496633186920},{"_id":"public/categories/blocks/build/cc/code/database/error/open-source/project/readline/index.html","hash":"cdc0ae38a2f290c550021742abd927a7d333216b","modified":1496633186920},{"_id":"public/categories/allocation/cc/calloc/code/code/free/malloc/memory/realloc/index.html","hash":"24c59c1f52c96ad97c792fe869d8e29411c26bc2","modified":1496633186920},{"_id":"public/categories/cc/code/database/define/function/own/postgresql/postgresql/self/index.html","hash":"290da2807ef503dee1e8fed87b48347daa26e015","modified":1496633186920},{"_id":"public/categories/cc/code/code/crontab/environment/execute/not/program/timer/index.html","hash":"4abb5f497b5bfc7a18d118a66490259fcfd17b34","modified":1496633186921},{"_id":"public/categories/bug/c/cc/code/define/freopen/macro/math/programming/redirect/index.html","hash":"72a8f62c9f4af763ff6960cd30e7d8e6c3c1f5f1","modified":1496633186921},{"_id":"public/categories/allocate/array/big/cc/code/const/define/error/gcc/see-hear/index.html","hash":"c39aa1f22d8642b69e1a73cdc04496b7acd527c2","modified":1496633186921},{"_id":"public/categories/blocks/build/cc/code/database/error/open-source/project/readline/sqlite/index.html","hash":"bccc10f705559d6abbbae45b42a4c5f6ac4373dd","modified":1496633186921},{"_id":"public/categories/cc/code/database/define/function/own/postgresql/postgresql/self/type/index.html","hash":"512fea48bee84850be8b598c1e93666948842e86","modified":1496633186921},{"_id":"public/categories/allocate/array/big/cc/code/const/define/error/gcc/see-hear/warning/index.html","hash":"e6621a326f2e29232b6cd3786407a1376c4ad82d","modified":1496633186921},{"_id":"public/categories/blocks/build/cc/code/database/error/open-source/project/readline/sqlite/sqlite3api/index.html","hash":"489fc088ffdacb76b540c6f958ab506969674c4b","modified":1496633186921},{"_id":"public/categories/blocks/build/cc/code/database/error/open-source/project/readline/sqlite/sqlite3api/tcl/index.html","hash":"347c37585140aadf99c8e3c732f706e5c1750ef1","modified":1496633186921},{"_id":"public/archives/page/2/index.html","hash":"88e751711a7ebe81b2b433c4e514260724e47366","modified":1496633186921},{"_id":"public/archives/page/3/index.html","hash":"d6806dcc634fe122a3df5c5b67a1b86120e89a2c","modified":1496633186921},{"_id":"public/archives/page/4/index.html","hash":"8b3a4e1b982b040ab8602192d77c465b1d5cf497","modified":1496633186921},{"_id":"public/archives/page/5/index.html","hash":"a2a580aabc7eb87913f85979c58052738ecc1232","modified":1496633186921},{"_id":"public/archives/page/6/index.html","hash":"482edad657837caaa286d715b2e260ec990872da","modified":1496633186921},{"_id":"public/archives/page/7/index.html","hash":"90fd86300f63917c5c28b0b29576846644e3b225","modified":1496633186921},{"_id":"public/archives/page/8/index.html","hash":"b162cf045e58471ada91ddc48ed8677ad960335d","modified":1496633186921},{"_id":"public/archives/page/9/index.html","hash":"394dc307e552395874581c5e79b8c6ebd4644611","modified":1496633186921},{"_id":"public/archives/page/10/index.html","hash":"99857ad38e4944ea217707985b5e8d2a57d0af19","modified":1496633186921},{"_id":"public/archives/page/11/index.html","hash":"1e9438b876f1308303d42740167542a6383ed2dd","modified":1496633186921},{"_id":"public/archives/page/12/index.html","hash":"1db8c86e9a706d00bb35f13b23fe503c7e81cec4","modified":1496633186921},{"_id":"public/archives/page/13/index.html","hash":"9c2217f69866afa45b0a9a7a384a8953121d4640","modified":1496633186921},{"_id":"public/archives/2010/page/2/index.html","hash":"e7fa2922e5b921f17f4ace5ac580d1f6b33ebef8","modified":1496633186921},{"_id":"public/archives/2010/index.html","hash":"a2d0babd6b6de1c3d29d7f8c53e9a5e830ab15f6","modified":1496633186921},{"_id":"public/archives/2010/page/3/index.html","hash":"083367799ea615e041a4aa1b1a76f79f91549c27","modified":1496633186921},{"_id":"public/archives/2010/page/4/index.html","hash":"b6131762c8753bc20b0bc0180ce6d9ecd8293e83","modified":1496633186921},{"_id":"public/archives/2010/page/6/index.html","hash":"a97dc7f0c08c07b0cc1e4b456d5e7dd9e64d4e85","modified":1496633186921},{"_id":"public/archives/2010/page/5/index.html","hash":"5884a86d3d9c3442e829438906f345063b5138c5","modified":1496633186921},{"_id":"public/archives/2010/01/index.html","hash":"bbb0897c7a94e94894e44421855224b5998cb155","modified":1496633186921},{"_id":"public/archives/2010/01/page/2/index.html","hash":"a56f66777b5c37748fe56454337d54a332c2486b","modified":1496633186921},{"_id":"public/archives/2010/02/index.html","hash":"8711aa1594e4bd1ea752b48e836e1023e1b3a250","modified":1496633186921},{"_id":"public/archives/2010/03/index.html","hash":"ee3d3c1a0557b531ff48c07a5892b5c3720f331e","modified":1496633186921},{"_id":"public/archives/2010/04/index.html","hash":"6b2c6aa71f89ee6168faa1697d92beb44ab8d129","modified":1496633186921},{"_id":"public/archives/2010/05/index.html","hash":"28ef1a07ae02b58366787582584c9c0bfd4ed9de","modified":1496633186921},{"_id":"public/archives/2010/06/index.html","hash":"bd9bb12c076ca3d459e2d77c73640d543666468e","modified":1496633186922},{"_id":"public/archives/2010/07/index.html","hash":"6a161254f39bd4461b089e96f680af72a470aa27","modified":1496633186922},{"_id":"public/archives/2010/08/index.html","hash":"28b9b9d2a6217af53fd45627839cc2c2f9a80c60","modified":1496633186922},{"_id":"public/archives/2010/09/index.html","hash":"41c2933f0e418bf077d0efe3493d1020f6d79c3c","modified":1496633186922},{"_id":"public/archives/2010/10/index.html","hash":"d19e3e79a084fd87aaaff33ad92bd8b6f3d1c522","modified":1496633186922},{"_id":"public/archives/2010/12/index.html","hash":"09ad4e5eccd5a0e57a58c25342af3fbe8e2c1d20","modified":1496633186922},{"_id":"public/archives/2011/page/2/index.html","hash":"440a58fce0d67d4f1966d65cc69a2a43ed3ea07d","modified":1496633186922},{"_id":"public/archives/2011/index.html","hash":"a17c483c29ba68657fbd69c143d81a29bd3dfcdd","modified":1496633186922},{"_id":"public/archives/2011/page/3/index.html","hash":"7dd1253e38ec940687cc0f82eb1081a8c38694ac","modified":1496633186922},{"_id":"public/archives/2011/page/4/index.html","hash":"77b2754169e994e13b7e09f1f14257bce06ad158","modified":1496633186922},{"_id":"public/archives/2011/02/index.html","hash":"39d11f3cfaea39fc361295c722309d485dc584e3","modified":1496633186922},{"_id":"public/archives/2011/03/index.html","hash":"87a26a0e303b5d7a2e82ea45869337dc5fc01fb6","modified":1496633186922},{"_id":"public/archives/2011/04/index.html","hash":"9c680768675ecf8bfe08da61331be13f8bc4e81b","modified":1496633186922},{"_id":"public/archives/2011/05/index.html","hash":"29d95b411647b7d464e442b7365a04acff5af250","modified":1496633186922},{"_id":"public/archives/2011/06/index.html","hash":"39d98f43d00074de5c97a91dc832d71cac750e2e","modified":1496633186922},{"_id":"public/archives/2011/07/index.html","hash":"ef5119522294b6fd74f10d93066a2ce59bfc7f84","modified":1496633186922},{"_id":"public/archives/2011/09/index.html","hash":"0c99ec47a0e211776dd68f18afc70679f262c5c5","modified":1496633186922},{"_id":"public/archives/2011/11/index.html","hash":"0b66f17ba8b4327dd370b18314dc1498b7360c21","modified":1496633186922},{"_id":"public/archives/2011/12/index.html","hash":"0bce2df175e5ba895f0e40091a5431dbe83f2cc1","modified":1496633186922},{"_id":"public/archives/2012/page/2/index.html","hash":"b9e039cf093e252217a911020cc9db71ed09c925","modified":1496633186922},{"_id":"public/archives/2012/index.html","hash":"d090c1e5dd8657d80ded1a1be0e5b50918d2fcc8","modified":1496633186922},{"_id":"public/archives/2012/page/3/index.html","hash":"434bf59f3ca479f467f31f45c3b67e0d07c8f74e","modified":1496633186922},{"_id":"public/archives/2012/01/index.html","hash":"5615dabbe49c611e0ab10ed6d97e198eb37d91d1","modified":1496633186922},{"_id":"public/archives/2012/02/index.html","hash":"d1ff6e28c1a279adc2ea57f218558e26c7556748","modified":1496633186922},{"_id":"public/archives/2012/03/index.html","hash":"c553035828ee83d399a8917d2a7d316a64860bb9","modified":1496633186922},{"_id":"public/archives/2012/04/index.html","hash":"06913c623df5b2fa849c51a55fcbdab1619a5ed1","modified":1496633186922},{"_id":"public/archives/2012/05/index.html","hash":"00e4d4c6d102cf9d2692097de167a6637459c835","modified":1496633186922},{"_id":"public/archives/2012/07/index.html","hash":"ff104f6b323cc5072d878f2f68cc4f6f092f809d","modified":1496633186922},{"_id":"public/archives/2013/01/index.html","hash":"5dc1eef863e91453fccf4eebc25114a29eeaa657","modified":1496633186922},{"_id":"public/archives/2013/04/index.html","hash":"9cf23a8244ebef6f6ebacd0b36e10bfe7be08e02","modified":1496633186922},{"_id":"public/archives/2013/07/index.html","hash":"ecf54e5012e1bcf77b627299a14f512262368709","modified":1496633186923},{"_id":"public/2017/06/05/2010-07-19-catalan/index.html","hash":"168bea79f589130e0042aa22c8726a62b2557a53","modified":1496633186923},{"_id":"public/2013/07/30/2013-07-30-upgrade-to-octopress-2-dot-0/index.html","hash":"558aac3d6288da16f24798b7ee04071df04d5818","modified":1496633186923},{"_id":"public/2013/07/21/2013-07-21-modify-octopress-blog/index.html","hash":"bbe2106c323b9f906292da3d03f706f9913a0e64","modified":1496633186923},{"_id":"public/2013/07/15/2013-07-15-jie-zhu-you-dao-yun-bi-ji-xie-blog/index.html","hash":"72c9ae6cfb03bb5896394a6d82f43b29704dde1f","modified":1496633186923},{"_id":"public/2013/01/08/2013-01-08-long-weibochang-wei-bo/index.html","hash":"1439bc3307912f1747317dd9f50f9bf7623a7f5d","modified":1496633186923},{"_id":"public/2013/04/05/2013-04-05-sheng-dan-mei-gui/index.html","hash":"a5c25121e4f2d12a6a15486800c3d7020f12b5e1","modified":1496633186923},{"_id":"public/2013/01/06/2013-01-06-2013-dot-01-dot-07jin-ri-jian-wen/index.html","hash":"fcd61a9bee0227ee28ce9f5274b6aae3ab186fa1","modified":1496633186923},{"_id":"public/2012/07/08/2012-07-08-java-mail-api-problem/index.html","hash":"4dfab8678911fe6852bf35a855ffc7d3f2098718","modified":1496633186923},{"_id":"public/2012/07/08/2012-07-08-java-zheng-ze-shi/index.html","hash":"f5b73afe8bd78b5c94b244b6901b2d256f421d1f","modified":1496633186923},{"_id":"public/2012/05/16/2012-05-16-shang-chuan-da-wen-jian/index.html","hash":"623474562fec795e5f578b1b5c082e4f0278bc25","modified":1496633186923},{"_id":"public/2012/05/11/2012-05-11-cookie/index.html","hash":"360bcc3148549463e985441eaaa2162798d56e96","modified":1496633186923},{"_id":"public/2012/04/26/2012-04-26-sina-oauth2/index.html","hash":"b24a431c65aa4d3e84e5ed7295a27e8c293c90cd","modified":1496633186923},{"_id":"public/2012/05/11/2012-05-11-server-1-dot-6-shang-xian/index.html","hash":"20735cf15f1739e162190df500971cf351be9f2c","modified":1496633186923},{"_id":"public/2012/03/21/2012-03-21-svn-diff/index.html","hash":"66899c51e1774250709d56f8e3380b009ed5eacb","modified":1496633186923},{"_id":"public/2012/02/23/2012-02-23-you-dao-yun-bi-ji-1-dot-5zheng-shi-ban-shang-xian/index.html","hash":"5a4eda8ea5765a3cdd4189e648276bedd005eeab","modified":1496633186923},{"_id":"public/2012/02/21/2012-02-21-windows-c-plus-plus-cheng-xu-qian-yi-dao-linux/index.html","hash":"85e4bd2329412a45b02df08167debf8a11219f09","modified":1496633186923},{"_id":"public/2012/02/21/2012-02-21-octopress-error/index.html","hash":"89ab5509589c89b24fe2e2b89c262024de2599f5","modified":1496633186924},{"_id":"public/2012/02/20/2012-02-20-jie-jue-cheng-xu-zhong-you-you-chi-de-slash-xxx-hu-lue-kong-zi-fu/index.html","hash":"af415c783aa9d3606e96a22eca0b9b73f9d01ac7","modified":1496633186924},{"_id":"public/2012/02/13/2012-02-13-xrange-and-range-in-python/index.html","hash":"268a7eef36842f6b3292eaefc4da97b1cd0f90e5","modified":1496633186924},{"_id":"public/2012/02/11/2012-02-11-build-website-in-ubuntu/index.html","hash":"db09269ba8f9291a0e9d97b50d7425712bb6704c","modified":1496633186924},{"_id":"public/2012/02/06/2012-02-06-machine-learning/index.html","hash":"f354225bb52376816f73de6ca2517ad37d4377eb","modified":1496633186924},{"_id":"public/2012/02/01/2012-02-01-jstack-jmap-resin/index.html","hash":"3f8ccaf97dffb4022dd43e089ad32c19a1dc9d5f","modified":1496633186924},{"_id":"public/2012/01/31/2012-01-31-git-alias/index.html","hash":"ec891d696bdd6b9fe39056fd704edc69c0f0d5a5","modified":1496633186924},{"_id":"public/2012/01/26/2012-01-26-kong-fu-kong-miao-kong-lin/index.html","hash":"ab2b253f1083410620631a892788a3c36f5d5172","modified":1496633186924},{"_id":"public/2012/01/25/2012-01-25-octopress-deploy/index.html","hash":"8d08704f10c39e4cf81a2e1fdd20b778050bcf0b","modified":1496633186924},{"_id":"public/2012/01/21/2012-01-21-octopress-bugs/index.html","hash":"695861b50ace0701e33826cf57d394a68f681a04","modified":1496633186924},{"_id":"public/2012/01/21/2012-01-21-back-home/index.html","hash":"ba9c1ecc347de67e12d70a33934a596f1bc1b147","modified":1496633186924},{"_id":"public/2012/01/17/2012-01-17-xin-lang-oauth/index.html","hash":"cce935b51ad627925eea207dd55255226ca98ad3","modified":1496633186925},{"_id":"public/2012/01/16/2012-01-16-test/index.html","hash":"195ac20a88d61b7dc08ae99fd8522991599f24aa","modified":1496633186925},{"_id":"public/2012/01/15/2012-01-15-web-config-permission-of-files-and-dirs/index.html","hash":"33339e6b12a668cc01aaf6aba0f354c8b91e04a9","modified":1496633186925},{"_id":"public/2012/01/14/2012-01-14-new-title/index.html","hash":"143f70386fe9cfa296638197bded08d97aa69fc1","modified":1496633186925},{"_id":"public/2012/01/14/2012-01-14-new/index.html","hash":"f1dd74ac0a95b24bc306302112aa3126ffb65880","modified":1496633186925},{"_id":"public/2011/12/22/2011-12-22-csdn-hacked/index.html","hash":"f5319fd47a0e95ed23ca5268580cbaecd305f909","modified":1496633186925},{"_id":"public/2011/11/03/2011-11-03-xing-ji-zheng-ba-1hua-ping-cuo-wu-jie-jue-winxpvistawin7/index.html","hash":"7204f773ec17586744eb629908c99e2c5a78fba8","modified":1496633186925},{"_id":"public/2011/12/04/2011-12-04-velocity-encoding-error-2/index.html","hash":"2bba29358cb67583de4b6ef8284f2a2a9e0d6dca","modified":1496633186925},{"_id":"public/2011/09/22/2011-09-22-svn-roll/index.html","hash":"a55bf0389d00713fcb7b9ae40f1bb0e6f4550fd2","modified":1496633186926},{"_id":"public/2011/09/22/2011-09-22-svn-commands/index.html","hash":"43e49e37b23d4baa04a4fb52b64fd5ccc6038a9e","modified":1496633186926},{"_id":"public/2011/09/07/2011-09-07-htmlparser-rewrite-html/index.html","hash":"fcce2210858fc1786fcbd25e198bdb4e4da35e9e","modified":1496633186926},{"_id":"public/2011/09/05/2011-09-05-hui-che-huan-xing-fu-carriagereturnlinefeed/index.html","hash":"95fe1c536093d315607eda6bcbbb247f81bcc29b","modified":1496633186926},{"_id":"public/2011/07/20/2011-07-20-vs2005hotkeykuai-jie-jian/index.html","hash":"84af24c7ac1a9e645be9ad28e8e108945d944eda","modified":1496633186926},{"_id":"public/2011/07/19/2011-07-19-dian-ying-ping-ya-ping/index.html","hash":"f0cb3dfdbdb67e7d5a163d39bfb5de86701e0d6b","modified":1496633186926},{"_id":"public/2011/07/19/2011-07-19-ant-problem-load-definitions-resource-tasks-properties-found/index.html","hash":"7d93f7630336bff8bed54989332a7974252d69dc","modified":1496633186926},{"_id":"public/2011/07/18/2011-07-18-ivyanteclipsepei-zhi-qi-dong/index.html","hash":"1b4ec9818a2683fa243d874d6ac28d84b2e77258","modified":1496633186926},{"_id":"public/2011/07/09/2011-07-09-movie-spirit/index.html","hash":"690780c8e6ffc1aed1fe712a964c4814e93a80b6","modified":1496633186926},{"_id":"public/2011/07/03/2011-07-03-pa-na-da-shi-de-mo-huan-mao-xian/index.html","hash":"792fd78a7ac0668eae303db6400475122410c233","modified":1496633186926},{"_id":"public/2011/06/30/2011-06-30-qiao-pi-hua-zhuan-zai/index.html","hash":"4805b8a4ff60f38543c7ea82fac1a48c02c3da14","modified":1496633186926},{"_id":"public/2011/06/29/2011-06-29-yang-mei-ji/index.html","hash":"446aad12364cd1b84ff4841ffb6368d73602f9b7","modified":1496633186926},{"_id":"public/2011/06/27/2011-06-27-zhao-fang-ji/index.html","hash":"cfa8b4b716d3aa82fdecedb5e36ae1b1570f74ef","modified":1496633186926},{"_id":"public/2011/06/02/2011-06-02-page-rank-checker/index.html","hash":"54931da3f74542c8bbb68ea36a2ea95d3756e61f","modified":1496633186926},{"_id":"public/2011/06/27/2011-06-27-zai-zhao-zhao-gong-zuo/index.html","hash":"e36e190cf2b6b1abad4577857fe07ee1b7e21c76","modified":1496633186927},{"_id":"public/2011/05/22/2011-05-22-zuo-ri-chu-xing/index.html","hash":"e8ad909f4c61e7098a9227ada6e066402d7de69c","modified":1496633186927},{"_id":"public/2011/05/22/2011-05-22-jia-le-bi-hai-dao-4/index.html","hash":"4fe63aa9e428586f03d78f618f1f3e3d7084f923","modified":1496633186927},{"_id":"public/2011/05/19/2011-05-19-blessing/index.html","hash":"93600cc4eeb8cceb0b37de587437df43c6802418","modified":1496633186927},{"_id":"public/2011/05/13/2011-05-13-wordpress-error-php-running-solution/index.html","hash":"5196fef270a8cca1744e0330dc4a5dded731fdf8","modified":1496633186927},{"_id":"public/2011/05/13/2011-05-13-windowsapachepei-zhi-xu-ni-zhu-ji/index.html","hash":"859ea359503eff05ca03b7c87869b7729d78fc51","modified":1496633186927},{"_id":"public/2011/05/13/2011-05-13-eucalyptus-ssh-login/index.html","hash":"6387d8cc4abc9ec734ddf88f4f15165593b65711","modified":1496633186927},{"_id":"public/2011/05/12/2011-05-12-googleadsenseshen-qing-cheng-gong/index.html","hash":"cd84d2dab2cac9007f611283f4c5d36f8d9ec2ba","modified":1496633186927},{"_id":"public/2011/05/10/2011-05-10-rpg-maker-xp/index.html","hash":"8499450e0bcc38a16902d2bb22267f950b8bf309","modified":1496633186927},{"_id":"public/2011/05/04/2011-05-04-python-socket-send-recv-atomticly/index.html","hash":"a5ce08c1e52237a6c669190165c7201c2e8297b5","modified":1496633186927},{"_id":"public/2011/04/09/2011-04-09-python-net-socket-connect-fail/index.html","hash":"1aba80e207a6c43433783d07570a5517aff6c427","modified":1496633186927},{"_id":"public/2011/04/08/2011-04-08-python-valueerror-xx-values-unpack/index.html","hash":"0a03348b098da97558427ce3fea0b95058f1c297","modified":1496633186927},{"_id":"public/2011/04/02/2011-04-02-ji-suan-ji-kao-shi-ti/index.html","hash":"59dcc9859eb229990e972b0fb9b85316bd405879","modified":1496633186927},{"_id":"public/2011/04/01/2011-04-01-fun-clock/index.html","hash":"156541684977a3374b1f2d9a224d760e6fc2f28c","modified":1496633186928},{"_id":"public/2011/03/17/2011-03-17-message-queue/index.html","hash":"9c6b2870f514bb47b1f04de0a077f0209293dae3","modified":1496633186928},{"_id":"public/2011/03/16/2011-03-16-jiang-bian-cheng-wai-kao-yu-dian-you-hui-zhe-kou/index.html","hash":"8d49e03e8b6f9eb603c2e4013777d214762b3fff","modified":1496633186928},{"_id":"public/2011/03/16/2011-03-16-google-search-update-speed/index.html","hash":"f88658279bebe00cc4d3a502280e5533eaa481de","modified":1496633186928},{"_id":"public/2011/03/16/2011-03-16-python-unittest/index.html","hash":"8fdeb52a7d5f91e2010b698da8339e13ee40abe8","modified":1496633186928},{"_id":"public/2011/03/10/2011-03-10-husband-programmer/index.html","hash":"b1a325fa078591704c71ed90a33e6032937d38d2","modified":1496633186928},{"_id":"public/2011/03/02/2011-03-02-bigdata/index.html","hash":"721e2a0ae1888bd93a1d1380b495589f3d51349f","modified":1496633186928},{"_id":"public/2011/02/22/2011-02-22-dian-ying-ji/index.html","hash":"928e58617d185100f1d6f0d7beff1b860401e1bc","modified":1496633186928},{"_id":"public/2010/12/24/2010-12-24-own-timer-replace-crontab/index.html","hash":"b68e490cd23360c0d3239ba0403b1d9aa9823cf0","modified":1496633186928},{"_id":"public/2010/12/06/2010-12-06-jobs/index.html","hash":"9fecba631cdcd398f25970203a1b1b50741e0893","modified":1496633186928},{"_id":"public/2010/10/11/2010-10-11-create-class-size-0/index.html","hash":"a871a82285dce6e74ba047973956b9d0bd84d4b3","modified":1496633186928},{"_id":"public/2010/09/03/2010-09-03-postgresql-function-define/index.html","hash":"12595ce217eadf29ff09535a7b7773c41ecc0802","modified":1496633186928},{"_id":"public/2010/09/02/2010-09-02-error-lnk2019/index.html","hash":"694883a92c15b608fee45e125362a9f8ee4ebafb","modified":1496633186929},{"_id":"public/2010/08/13/2010-08-13-trickies-bugs/index.html","hash":"b56f8be5b96ca66f361b2f6997e2f8293ca73226","modified":1496633186929},{"_id":"public/2010/07/16/2010-07-16-quick-sort/index.html","hash":"34f64f61c0590dc0df2a0bd115107b8c992d5117","modified":1496633186929},{"_id":"public/2010/07/09/2010-07-09-print-display-row/index.html","hash":"d945f9ef38463019e716b0638452c84fe7d2f40a","modified":1496633186929},{"_id":"public/2010/07/07/2010-07-07-absolute-valueinteger/index.html","hash":"ff1a6724f77600840add7e68ffc03b8810428c85","modified":1496633186929},{"_id":"public/2010/07/05/2010-07-05-memory-allocation/index.html","hash":"59df378b3b5d48f912bdb9185ee21a5bbd663c75","modified":1496633186929},{"_id":"public/2010/06/30/2010-06-30-try-catch-exception-c/index.html","hash":"5b653d60a85079b8a808c5bf056fd989e61e7d11","modified":1496633186929},{"_id":"public/2010/06/21/2010-06-21-volatile-do/index.html","hash":"bb13d744a6fc8cea14a6d94cb7aea11ca26101cf","modified":1496633186929},{"_id":"public/2010/06/17/2010-06-17-sizeof-c/index.html","hash":"097e21fd26c72e583220c40495edaf926133214d","modified":1496633186929},{"_id":"public/2010/05/26/2010-05-26-climbing-wall/index.html","hash":"33874df4fe34707e29911d3b7904fb545e4d226b","modified":1496633186929},{"_id":"public/2010/05/24/2010-05-24-design-pattern-chain-reponsibility/index.html","hash":"afb7f48539e5bbc885f0b854649f7a2f8f69e4bc","modified":1496633186929},{"_id":"public/2010/05/10/2010-05-10-debug-postgresql/index.html","hash":"26b4bdd8c8192659ab055201f7e31a56ef010bdd","modified":1496633186929},{"_id":"public/2010/05/05/2010-05-05-design-pattern-flyweight/index.html","hash":"9abfd3bfb58edd95a18f3476a9a0ef86b4a5fb6c","modified":1496633186929},{"_id":"public/2010/05/03/2010-05-03-design-pattern-decorator-pattern/index.html","hash":"3921470e38c769bd6e519a313fbcf33533550de0","modified":1496633186930},{"_id":"public/2010/05/03/2010-05-03-design-pattern-composite-pattern/index.html","hash":"b61b59b5b72966947e9dc03e47d30316b37e187b","modified":1496633186930},{"_id":"public/2010/05/03/2010-05-03-design-pattern-adapter/index.html","hash":"639d9b1489f3c1269beca9efbd09a7127de72a4c","modified":1496633186930},{"_id":"public/2010/05/03/2010-05-03-design-pattern-bridge/index.html","hash":"0348514698f74ff9074d25ed002b998bd651337c","modified":1496633186930},{"_id":"public/2010/05/03/2010-05-03-design-pattern-facade-pattern/index.html","hash":"6f4219e55ce49125ccd2b40b1ce89b4d2950aa47","modified":1496633186930},{"_id":"public/2010/04/22/2010-04-22-build-sqlite-in-codeblocks/index.html","hash":"cfc7ddce12ff8a256eeac64c98a493e3e6ec2951","modified":1496633186930},{"_id":"public/2010/04/19/2010-04-19-quicksort-in-linux-or-unix/index.html","hash":"f1e3a9dbfabc403992b364c84da5ef746f0e94ca","modified":1496633186930},{"_id":"public/2010/04/16/2010-04-16-use-doxygen/index.html","hash":"33642fd9697dfeb6d03f961ade6b75002d558075","modified":1496633186930},{"_id":"public/2010/04/15/2010-04-15-compare-double-numbers-in-cc-language/index.html","hash":"427685790cae39a7fb2e400954301de1d06d13cd","modified":1496633186930},{"_id":"public/2010/04/14/2010-04-14-gcc-error/index.html","hash":"171c192b5989450ae896f1ef75d044e8a78185f0","modified":1496633186930},{"_id":"public/2010/04/12/2010-04-12-ascii/index.html","hash":"04f72c86ac7a2a83c3c5c9e23e615444cd8d989f","modified":1496633186930},{"_id":"public/2010/04/12/2010-04-12-the-scale-of-types/index.html","hash":"9a1811920d12baae7069344d1827ae4e793385a3","modified":1496633186930},{"_id":"public/2010/04/09/2010-04-09-some-bugs-in-programing/index.html","hash":"3fdc2e8b314ad63e3839988f85dd6bacc0ec27fc","modified":1496633186930},{"_id":"public/2010/04/05/2010-04-05-software-architecture-singleton/index.html","hash":"0488ab3734e9b43caa8de09d4d08247da0c5ba3d","modified":1496633186931},{"_id":"public/2010/03/30/2010-03-30-how-to-get-through-firewall-great/index.html","hash":"14ba6ced469a7391c2c6ae1fac63ed9c1fe56586","modified":1496633186931},{"_id":"public/2010/03/23/2010-03-23-listening-songs/index.html","hash":"82b5ad2bf0d5440297b790541d046772ddc3ad4c","modified":1496633186931},{"_id":"public/2010/03/23/2010-03-23-ubuntu-10-04-belta-released/index.html","hash":"b2d914f9c01f3b5ed5e6107719a4950276e19e7d","modified":1496633186931},{"_id":"public/2010/03/15/2010-03-15-programmer-competency-matrix/index.html","hash":"9d9effbda5a673c93e80b406f2c53a6d069a2402","modified":1496633186931},{"_id":"public/2010/03/10/2010-03-10-use-c-language-to-connect-postgresql/index.html","hash":"265aad237979645c46684065980d9ffa181ae75a","modified":1496633186931},{"_id":"public/2010/03/10/2010-03-10-math-symbol/index.html","hash":"9de6ff1b1b4dfc9f95bc27d48b421912b5cad8b0","modified":1496633186931},{"_id":"public/2010/03/08/2010-03-08-facebook-api/index.html","hash":"b44355e7d5c133772c6be97f196a61368fdf9d72","modified":1496633186931},{"_id":"public/2010/03/08/2010-03-08-international-womens-day/index.html","hash":"2e4a737b659d571bb87ac5261fbe8f53ab6a6ecc","modified":1496633186931},{"_id":"public/2010/02/28/2010-02-28-to-be-a-google-prayer-to-sing-songs/index.html","hash":"ccdb0ad10873b544a0c88039536234b271094e58","modified":1496633186931},{"_id":"public/2010/02/28/2010-02-28-play-small-games/index.html","hash":"062d5c3b7fca70c441035dad318240b6e77a398a","modified":1496633186931},{"_id":"public/2010/02/27/2010-02-27-spam-comments/index.html","hash":"aeafe941c21e010f85dae91af123ff2208b915b0","modified":1496633186931},{"_id":"public/2010/01/28/2010-01-28-ping-shu-san-guo/index.html","hash":"d94d4b7d266e23f9092ed6a488463802de695bc2","modified":1496633186931},{"_id":"public/2010/01/26/2010-01-26-never-forget-the-war-and-never-forgive-japan/index.html","hash":"bcee5b64f349760c5d6edaede5940216616d0086","modified":1496633186931},{"_id":"public/2010/01/19/2010-01-19-how-hard-we-choose-lessons/index.html","hash":"ddd30002664629369484edacbb7200980c31c53f","modified":1496633186932},{"_id":"public/2010/01/14/2010-01-14-world-war-ii/index.html","hash":"9201f3e11b45c8140b59c2aba486b1478f09e851","modified":1496633186932},{"_id":"public/2010/01/11/2010-01-11-look-back/index.html","hash":"6378167c4c6c6faf5b75a4d3c22062e51d643375","modified":1496633186932},{"_id":"public/2010/01/09/2010-01-09-funny-picture-2/index.html","hash":"3ec9b980f0d3fa278dc8e50aa67b446937361b7e","modified":1496633186932},{"_id":"public/2010/01/09/2010-01-09-small-games/index.html","hash":"f10a60e051af91218d51b846f2734f99bd054cde","modified":1496633186932},{"_id":"public/2010/01/08/2010-01-08-first-formula/index.html","hash":"1959572bec1e445e1d479dc9e95ed5db0efe4165","modified":1496633186932},{"_id":"public/2010/01/08/2010-01-08-first-code/index.html","hash":"c7481195cb94e7f2d3192271c32df6841c71ffc6","modified":1496633186932},{"_id":"public/2010/01/06/2010-01-06-funny-picture/index.html","hash":"eb58c6603dcc79517d3328e7fba644535c14951a","modified":1496633186932},{"_id":"public/2010/01/04/2010-01-04-hello-world/index.html","hash":"8f6a4a76328f08b1cf42dbd60ed8fe5328f5ab68","modified":1496633186932},{"_id":"public/page/2/index.html","hash":"4929862d83671b246553c84e5537182d2109d032","modified":1496633186932},{"_id":"public/page/3/index.html","hash":"e658483a1ee213e97c3ce355ee479cf8074e960d","modified":1496633186932},{"_id":"public/page/4/index.html","hash":"393f36a462a742c5e8a90e52a7b9f1b17a18392f","modified":1496633186932},{"_id":"public/page/5/index.html","hash":"9aa563c0e5b656ee9c21df5835b42e5af35885e1","modified":1496633186932},{"_id":"public/page/6/index.html","hash":"416c92b2909dd3888859ad68d6817b6a97bbbb1e","modified":1496633186932},{"_id":"public/page/7/index.html","hash":"fe2b46ce7bf7e5e92174ee54b27a855f72e22ca9","modified":1496633186932},{"_id":"public/page/8/index.html","hash":"1a323d2c509bc54f6eca035edfc1b9a4b60691f9","modified":1496633186932},{"_id":"public/page/9/index.html","hash":"814f25ad4c8813f7d6ff9e958ab44dd322bd8ee1","modified":1496633186932},{"_id":"public/page/10/index.html","hash":"0ef379c238795547c5d9cfba9b341dff04932205","modified":1496633186932},{"_id":"public/page/11/index.html","hash":"27a01699d5dbcb161cbacbbdbf3bd1f4d2654b7e","modified":1496633186932},{"_id":"public/page/12/index.html","hash":"ea69fa30c3d3058fac2eb0d1951f4855b4abc376","modified":1496633186932},{"_id":"public/page/13/index.html","hash":"5d6d598c18c402184e5c78fbbe1a345cf3447115","modified":1496633186932},{"_id":"public/font/coveredbyyourgrace-webfont.eot","hash":"a17d0f10534303e40f210c506ebb8703fa23b7de","modified":1496633186970},{"_id":"public/font/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1496633186971},{"_id":"public/font/coveredbyyourgrace-webfont.woff","hash":"c6f8dc1a2f6ce914f120e80a876b8fd77b98888e","modified":1496633186971},{"_id":"public/font/coveredbyyourgrace-webfont.ttf","hash":"194ccb4acf77a03dc25bcc174edb266143704fec","modified":1496633186971},{"_id":"public/font/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1496633186971},{"_id":"public/font/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1496633186971},{"_id":"public/font/fontdiao.eot","hash":"9544a0d7ba208989302bc4da5a184faeb0e883c9","modified":1496633186971},{"_id":"public/img/author.jpg","hash":"2a292e681b4c6c975eec9c8c356d99647a465542","modified":1496633186971},{"_id":"public/img/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1496633186971},{"_id":"public/img/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1496633186971},{"_id":"public/img/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1496633186971},{"_id":"public/font/fontdiao.ttf","hash":"ee9fd7be2493c9bf6d2841044e69a0830d9d3fab","modified":1496633186971},{"_id":"public/img/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1496633186971},{"_id":"public/img/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1496633186971},{"_id":"public/img/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1496633186971},{"_id":"public/img/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1496633186971},{"_id":"public/font/fontdiao.woff","hash":"71f54eb6e98aa28cafeb04aab71c0e5b349ea89f","modified":1496633186971},{"_id":"public/img/favicon.ico","hash":"2d22a3e0c7905a894e832c831dd91c29c209c7a5","modified":1496633186971},{"_id":"public/img/jacman.jpg","hash":"0ba14a4a5e3be012826fc713c33479912126d34e","modified":1496633186971},{"_id":"public/img/logo.svg","hash":"9ae38f7225c38624faeb7b74996efa9de7bf065b","modified":1496633186971},{"_id":"public/img/scrollup.png","hash":"2137d4f1739aa8aa3fcb0348c3ddf1e41d62f2e3","modified":1496633186971},{"_id":"public/font/coveredbyyourgrace-webfont.svg","hash":"eabdb262d8e246865dfb56031f01ff6e8d2f9d53","modified":1496633187841},{"_id":"public/font/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1496633187845},{"_id":"public/img/logo.png","hash":"fd08d12d1fa147cf894e8f8327e38f1758de32ed","modified":1496633187845},{"_id":"public/font/fontdiao.svg","hash":"334a94e6a66a8b089be7315d876bec93efe38d2b","modified":1496633187846},{"_id":"public/js/gallery.js","hash":"f8a4ba7fb8349cca374a3c69fff9b2bf21f742ed","modified":1496633187900},{"_id":"public/js/jquery.imagesloaded.min.js","hash":"4109837b1f6477bacc6b095a863b1b95b1b3693f","modified":1496633187900},{"_id":"public/js/totop.js","hash":"cad23c5ea7163d1e5c05a0fd3ef9233469da10cb","modified":1496633187900},{"_id":"public/js/jquery.qrcode-0.12.0.min.js","hash":"57c3987166a26415a71292162690e82c21e315ad","modified":1496633187901},{"_id":"public/js/jquery-2.0.3.min.js","hash":"a0ae3697b0ab8c0e8bd3186c80db42abd6d97a8d","modified":1496633187901},{"_id":"public/font/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1496633187940},{"_id":"public/img/banner.jpg","hash":"5104860c4f8b2e84ef734ba6c37fe7a288bf0d74","modified":1496633187940}],"Category":[{"name":"first","_id":"cj3jhpam00002pcmjx5wuta7p"},{"name":"funny","_id":"cj3jhpama0006pcmjvyefgb6d"},{"name":"c","_id":"cj3jhpamf0009pcmjf6wqoef7"},{"name":"first","parent":"cj3jhpam00002pcmjx5wuta7p","_id":"cj3jhpamh000cpcmjlv8i2n84"},{"name":"game","parent":"cj3jhpama0006pcmjvyefgb6d","_id":"cj3jhpams000mpcmj4p7i47lk"},{"name":"funny","parent":"cj3jhpama0006pcmjvyefgb6d","_id":"cj3jhpamv000rpcmjs41omyhu"},{"name":"conclusion-summary","_id":"cj3jhpamz000upcmj0u0jdw0q"},{"name":"flash","_id":"cj3jhpan3000xpcmj839h38m1"},{"name":"code","parent":"cj3jhpamf0009pcmjf6wqoef7","_id":"cj3jhpan50010pcmjx2pxcmwd"},{"name":"china","_id":"cj3jhpang0017pcmjptzs4f9k"},{"name":"comedy","_id":"cj3jhpanl001apcmjn6dbwpqj"},{"name":"formula","parent":"cj3jhpamh000cpcmjlv8i2n84","_id":"cj3jhpanp001dpcmj4sgb9hwc"},{"name":"see-hear","_id":"cj3jhpans001gpcmj5qadzvka"},{"name":"god","parent":"cj3jhpama0006pcmjvyefgb6d","_id":"cj3jhpao1001npcmjq2aan8x9"},{"name":"api","_id":"cj3jhpao5001qpcmjwqpi4oxd"},{"name":"game","parent":"cj3jhpams000mpcmj4p7i47lk","_id":"cj3jhpaon0023pcmj2xq4yjig"},{"name":"math","_id":"cj3jhpaop0026pcmjmn5up0yx"},{"name":"listen","_id":"cj3jhpaou002bpcmjuzp1nzks"},{"name":"picture","parent":"cj3jhpamv000rpcmjs41omyhu","_id":"cj3jhpaox002gpcmjo69xcqtl"},{"name":"architecture","_id":"cj3jhpap0002jpcmj73z69rgv"},{"name":"ack","_id":"cj3jhpap4002npcmjjxaj6aou"},{"name":"rw","parent":"cj3jhpamz000upcmj0u0jdw0q","_id":"cj3jhpap8002tpcmjn76cz79k"},{"name":"open-source","_id":"cj3jhpapc002wpcmjnfotiro8"},{"name":"code","_id":"cj3jhpape0030pcmjk05ot7zs"},{"name":"bug","_id":"cj3jhpapj0035pcmjnry5waap"},{"name":"second","parent":"cj3jhpan3000xpcmj839h38m1","_id":"cj3jhpapm0039pcmjbdxzzjpv"},{"name":"art","_id":"cj3jhpapo003cpcmj15k43fg8"},{"name":"cc","_id":"cj3jhpaps003fpcmjvhi7l6r2"},{"name":"code","parent":"cj3jhpan50010pcmjx2pxcmwd","_id":"cj3jhpapu003ipcmjiudrsu20"},{"name":"allocate","_id":"cj3jhpapw003mpcmjng7tv2gn"},{"name":"cc","parent":"cj3jhpamf0009pcmjf6wqoef7","_id":"cj3jhpaq0003ppcmjvx8dah1e"},{"name":"lesson","parent":"cj3jhpamv000rpcmjs41omyhu","_id":"cj3jhpaq1003spcmjs850sm5f"},{"name":"auto","_id":"cj3jhpaq4003vpcmjq9sqz9i6"},{"name":"asce","_id":"cj3jhpaq9003zpcmjm0uj51bl"},{"name":"forget","parent":"cj3jhpang0017pcmjptzs4f9k","_id":"cj3jhpaqb0042pcmjw1v7oczb"},{"name":"blocks","_id":"cj3jhpaqd0045pcmj3j1slfk2"},{"name":"adapter","_id":"cj3jhpaqf0048pcmjiyypj2qf"},{"name":"drama","parent":"cj3jhpanl001apcmjn6dbwpqj","_id":"cj3jhpaqi004cpcmj3l8l4u6l"},{"name":"bridge","_id":"cj3jhpaqj004fpcmjs8fvvzpw"},{"name":"formula","parent":"cj3jhpanp001dpcmj4sgb9hwc","_id":"cj3jhpaqp004opcmjxrc2m0c7"},{"name":"spam-flood-stop-captcha-cod-seo-comment","parent":"cj3jhpans001gpcmj5qadzvka","_id":"cj3jhpaqw0050pcmjkl77lr01"},{"name":"uncategorized","_id":"cj3jhpar5005gpcmjiz1tjhe2"},{"name":"align","_id":"cj3jhpar8005jpcmj9wuoltrn"},{"name":"google","parent":"cj3jhpao1001npcmjq2aan8x9","_id":"cj3jhpara005npcmj9a6o8gby"},{"name":"facebook","parent":"cj3jhpao5001qpcmjwqpi4oxd","_id":"cj3jhpard005rpcmjzbp0ni20"},{"name":"allocation","_id":"cj3jhpare005spcmjk1146kzw"},{"name":"absolute","_id":"cj3jhpare005tpcmj552zuzen"},{"name":"algorithm","_id":"cj3jhparf005xpcmjxd8ksmkm"},{"name":"catalan","_id":"cj3jhparf0060pcmjrluje5m9"},{"name":"connect","parent":"cj3jhpan50010pcmjx2pxcmwd","_id":"cj3jhparf0062pcmjvl93gzjp"},{"name":"it","parent":"cj3jhpam00002pcmjx5wuta7p","_id":"cj3jhpari0066pcmjvngueenm"},{"name":"math","parent":"cj3jhpaop0026pcmjmn5up0yx","_id":"cj3jhpari0068pcmjjtg4iapm"},{"name":"movie","parent":"cj3jhpama0006pcmjvyefgb6d","_id":"cj3jhparj0069pcmjzlzf2z1l"},{"name":"big","_id":"cj3jhparj006apcmjh3fqwn43"},{"name":"see-hear","parent":"cj3jhpaou002bpcmjuzp1nzks","_id":"cj3jhparj006bpcmjchd9pjlh"},{"name":"blog","_id":"cj3jhparj006cpcmjjdcflxz4"},{"name":"life","_id":"cj3jhparj006dpcmj7eei96bv"},{"name":"chinese","_id":"cj3jhpark006epcmjldebqckq"},{"name":"queue","_id":"cj3jhpark006gpcmjl26kwb6q"},{"name":"single","parent":"cj3jhpap0002jpcmj73z69rgv","_id":"cj3jhpark006hpcmj7g9b70ql"},{"name":"clock","_id":"cj3jhparl006ipcmj1ejt9032"},{"name":"see-hear","parent":"cj3jhpama0006pcmjvyefgb6d","_id":"cj3jhparl006jpcmjm03wu75d"},{"name":"connection","parent":"cj3jhpap4002npcmjjxaj6aou","_id":"cj3jhparl006kpcmje5q6cew7"},{"name":"python","_id":"cj3jhparl006lpcmj6fr36ftu"},{"name":"connect","_id":"cj3jhparl006mpcmj8eu96ayy"},{"name":"client","_id":"cj3jhparm006npcmjkj1geng0"},{"name":"dll","_id":"cj3jhparm006opcmjrw6n84fp"},{"name":"project","parent":"cj3jhpapc002wpcmjnfotiro8","_id":"cj3jhparm006ppcmjcpgj1ltu"},{"name":"eucalyptus","_id":"cj3jhparm006qpcmjjawwl57h"},{"name":"apache","_id":"cj3jhparm006rpcmjwt29wuk7"},{"name":"competency","parent":"cj3jhpape0030pcmjk05ot7zs","_id":"cj3jhparn006spcmjwrw6rq0l"},{"name":"error","_id":"cj3jhparn006tpcmjj08g82p8"},{"name":"blessing","_id":"cj3jhparn006upcmjclkbugyk"},{"name":"c","parent":"cj3jhpapj0035pcmjnry5waap","_id":"cj3jhparo006vpcmjs1j1mlol"},{"name":"eat","_id":"cj3jhparo006wpcmj4w3jszo2"},{"name":"movie","_id":"cj3jhparp006xpcmjk2pgc1la"},{"name":"see-hear","parent":"cj3jhpapm0039pcmjbdxzzjpv","_id":"cj3jhparp006ypcmj2k0hxj9i"},{"name":"check","_id":"cj3jhparp006zpcmjarkx95bv"},{"name":"ascii","parent":"cj3jhpapo003cpcmj15k43fg8","_id":"cj3jhparq0071pcmjwc2th8zk"},{"name":"中介","parent":"cj3jhpans001gpcmj5qadzvka","_id":"cj3jhparq0072pcmjfsk1prru"},{"name":"code","parent":"cj3jhpaps003fpcmjvhi7l6r2","_id":"cj3jhparr0074pcmj40omw9mf"},{"name":"see-hear","parent":"cj3jhpamv000rpcmjs41omyhu","_id":"cj3jhparr0075pcmjcc025erg"},{"name":"desire","_id":"cj3jhpars0077pcmj89i7yopf"},{"name":"first","parent":"cj3jhpapu003ipcmjiudrsu20","_id":"cj3jhpars0078pcmjzhjgb1k4"},{"name":"ant","_id":"cj3jhpars0079pcmjxe0gghtz"},{"name":"array","parent":"cj3jhpapw003mpcmjng7tv2gn","_id":"cj3jhpart007bpcmjk38epfd9"},{"name":"code","parent":"cj3jhpaq0003ppcmjvx8dah1e","_id":"cj3jhparu007epcmjm2dc5y9b"},{"name":"cr","_id":"cj3jhparu007fpcmjrwewgkv3"},{"name":"code","parent":"cj3jhpao5001qpcmjwqpi4oxd","_id":"cj3jhparu007gpcmjrh9wswlz"},{"name":"project","_id":"cj3jhparu007hpcmj354gvtz9"},{"name":"see-hear","parent":"cj3jhpaq1003spcmjs850sm5f","_id":"cj3jhparu007ipcmjpw1sqf4w"},{"name":"blurred","_id":"cj3jhparv007kpcmjh0xi1szd"},{"name":"code","parent":"cj3jhpaq4003vpcmjq9sqz9i6","_id":"cj3jhparv007lpcmj5sw52amq"},{"name":"charset","_id":"cj3jhparw007mpcmjh8lzpg0z"},{"name":"csdn","_id":"cj3jhparw007npcmjs0up8h6z"},{"name":"cc","parent":"cj3jhpaq9003zpcmjm0uj51bl","_id":"cj3jhparw007opcmj2u8g50g7"},{"name":"new","_id":"cj3jhparw007ppcmj6gzzgd77"},{"name":"forgive","parent":"cj3jhpaqb0042pcmjw1v7oczb","_id":"cj3jhparx007spcmjgkbmyhkp"},{"name":"新浪","_id":"cj3jhpary007vpcmjt4y910b2"},{"name":"build","parent":"cj3jhpaqd0045pcmj3j1slfk2","_id":"cj3jhparz007wpcmj26draiss"},{"name":"back","_id":"cj3jhpas0007xpcmjv2f4jel0"},{"name":"octopress","_id":"cj3jhpas0007ypcmjpisab7cb"},{"name":"cc","parent":"cj3jhpaqf0048pcmjiyypj2qf","_id":"cj3jhpas1007zpcmjgkjy8f3n"},{"name":"孔府，孔庙，孔林","_id":"cj3jhpas20081pcmj81c8hakg"},{"name":"funny","parent":"cj3jhpaqi004cpcmj3l8l4u6l","_id":"cj3jhpas20082pcmjzjdcrcgs"},{"name":"git, alias, 别名","_id":"cj3jhpas30084pcmj5rxfp8a8"},{"name":"jmap, jstack, resin","_id":"cj3jhpas30085pcmj4c5jiazw"},{"name":"cc","parent":"cj3jhpaqj004fpcmjs8fvvzpw","_id":"cj3jhpas40087pcmj3281a5vf"},{"name":"machine, learning, introduce","_id":"cj3jhpas40089pcmjwjqnavrg"},{"name":"web,site,build,ubuntu,linux,php","_id":"cj3jhpas4008apcmjano7lw10"},{"name":"python, xrange, range, difference,区别","_id":"cj3jhpas6008epcmj3aztkz6b"},{"name":"solve","_id":"cj3jhpasb008fpcmjvms8podl"},{"name":"SyntaxError, octopress, error, rake generate","_id":"cj3jhpasd008ipcmj9zefyo1i"},{"name":"windows, c++, linux, 移植, 迁移，程序","_id":"cj3jhpasd008jpcmjn7uklalc"},{"name":"有道,云笔记,youdao,1.5,上线,正式版","_id":"cj3jhpase008lpcmjn6ybpibm"},{"name":"svn,diff,merge,lost,patch","_id":"cj3jhpase008npcmjwf0jgsha"},{"name":"sina, oauth2.0, oauth, open, authorization, 新浪, 有道, 有道云笔记","_id":"cj3jhpasf008ppcmj89b86w3r"},{"name":"cookie","_id":"cj3jhpasg008tpcmjtr01vdnn"},{"name":"upload,上传,nginx,resin,apache,spring,文件","_id":"cj3jhpasg008upcmjy9ksp5ii"},{"name":"server","_id":"cj3jhpash008ypcmjpj8yi6fj"},{"name":"java, mail, email, API, problem, base64, mime, picture","_id":"cj3jhpasi008zpcmjlvr03wev"},{"name":"java, 正则式, 正则表达式","_id":"cj3jhpasi0091pcmj420j9bth"},{"name":"today,见闻,story","_id":"cj3jhpasi0093pcmjr8udkih5"},{"name":"debug","parent":"cj3jhpape0030pcmjk05ot7zs","_id":"cj3jhpasi0095pcmjrvmql6cu"},{"name":"weibo,long,长微博,有道云笔记","_id":"cj3jhpasj0097pcmjnwwozdw1"},{"name":"movie,圣诞玫瑰","_id":"cj3jhpasj0098pcmjbt26m2gq"},{"name":"chain","parent":"cj3jhpaps003fpcmjvhi7l6r2","_id":"cj3jhpasj009apcmj37fwzl5b"},{"name":"有道云笔记,blog,图片","_id":"cj3jhpasj009cpcmjc7iol530"},{"name":"octopress,blog,修改,结构","_id":"cj3jhpask009dpcmj7fhedonb"},{"name":"see-hear","parent":"cj3jhpaon0023pcmj2xq4yjig","_id":"cj3jhpask009fpcmjgvt1x7bq"},{"name":"upgrade, octopress, 2.0, bugs, solution","_id":"cj3jhpask009hpcmjg9gzc8dt"},{"name":"jni,UDT,barchart,c++","_id":"cj3jhpasl009jpcmjsa9s9rlp"},{"name":"udt,barchart,udp,tcp","_id":"cj3jhpasm009mpcmjvfaynyxe"},{"name":"movie,致青春,电影,影评","_id":"cj3jhpasm009ppcmjfalev8q8"},{"name":"c","parent":"cj3jhpar8005jpcmj9wuoltrn","_id":"cj3jhpasm009spcmjuiduzony"},{"name":"security,微信,公众平台,bug","_id":"cj3jhpasn009upcmjkdd6i64g"},{"name":"see-hear","parent":"cj3jhpara005npcmj9a6o8gby","_id":"cj3jhpasn009vpcmj5zss7cre"},{"name":"catch","parent":"cj3jhpaq0003ppcmjvx8dah1e","_id":"cj3jhpaso009zpcmj4ehx108v"},{"name":"php","parent":"cj3jhpard005rpcmjzbp0ni20","_id":"cj3jhpasp00a2pcmju65slgun"},{"name":"cc","parent":"cj3jhpare005spcmjk1146kzw","_id":"cj3jhpasp00a4pcmjcoq4uelb"},{"name":"bit","parent":"cj3jhpare005tpcmj552zuzen","_id":"cj3jhpasp00a5pcmj1gx0616w"},{"name":"c","parent":"cj3jhparf005xpcmjxd8ksmkm","_id":"cj3jhpasq00a7pcmj5juzchht"},{"name":"combine","parent":"cj3jhparf0060pcmjrluje5m9","_id":"cj3jhpasq00a8pcmjff5h5fha"},{"name":"database","parent":"cj3jhparf0062pcmjvl93gzjp","_id":"cj3jhpasr00aapcmje7u0nk3z"},{"name":"class","parent":"cj3jhpaq0003ppcmjvx8dah1e","_id":"cj3jhpass00adpcmjreuqaf7h"},{"name":"rw","parent":"cj3jhpari0066pcmjvngueenm","_id":"cj3jhpass00aepcmjzg7xosd9"},{"name":"symbol","parent":"cj3jhpari0068pcmjjtg4iapm","_id":"cj3jhpast00agpcmjaoy7n9vw"},{"name":"rw","parent":"cj3jhparj0069pcmjzlzf2z1l","_id":"cj3jhpasu00ahpcmjqttgke9n"},{"name":"chinese","parent":"cj3jhparj006apcmjh3fqwn43","_id":"cj3jhpasu00ajpcmj3778p5fs"},{"name":"song","parent":"cj3jhparj006bpcmjchd9pjlh","_id":"cj3jhpasv00ampcmjd0a8wp46"},{"name":"google","parent":"cj3jhparj006cpcmjjdcflxz4","_id":"cj3jhpasv00anpcmj3ogez5pz"},{"name":"programmer","parent":"cj3jhparj006dpcmj7eei96bv","_id":"cj3jhpasv00appcmjchv5k41r"},{"name":"discount","parent":"cj3jhpark006epcmjldebqckq","_id":"cj3jhpasw00aspcmjm4qtellf"},{"name":"python","parent":"cj3jhpape0030pcmjk05ot7zs","_id":"cj3jhpasw00atpcmj78vyfw2b"},{"name":"see-hear","parent":"cj3jhpark006gpcmjl26kwb6q","_id":"cj3jhpasw00aupcmjlyn2j6n4"},{"name":"singleton","parent":"cj3jhpark006hpcmj7g9b70ql","_id":"cj3jhpasw00avpcmjbfyb355r"},{"name":"funny","parent":"cj3jhparl006ipcmj1ejt9032","_id":"cj3jhpasx00axpcmjojhcvcqh"},{"name":"考试","parent":"cj3jhparl006jpcmjm03wu75d","_id":"cj3jhpasx00azpcmjctr3xhim"},{"name":"firewall","parent":"cj3jhparl006kpcmje5q6cew7","_id":"cj3jhpasx00b0pcmj60vmgaq8"},{"name":"python","parent":"cj3jhparl006lpcmj6fr36ftu","_id":"cj3jhpasy00b1pcmjgmbjrair"},{"name":"error","parent":"cj3jhparl006mpcmj8eu96ayy","_id":"cj3jhpasy00b2pcmjzlcocij3"},{"name":"code","parent":"cj3jhparm006npcmjkj1geng0","_id":"cj3jhpasy00b3pcmjypax9s5m"},{"name":"game","parent":"cj3jhparm006opcmjrw6n84fp","_id":"cj3jhpasz00b4pcmj96s4nx33"},{"name":"release","parent":"cj3jhparm006ppcmjcpgj1ltu","_id":"cj3jhpasz00b5pcmjg0eazkao"},{"name":"login","parent":"cj3jhparm006qpcmjjawwl57h","_id":"cj3jhpasz00b6pcmjel2y5fll"},{"name":"my-own","parent":"cj3jhparm006rpcmjwt29wuk7","_id":"cj3jhpasz00b7pcmja7exf5pa"},{"name":"logn","parent":"cj3jhparn006spcmjwrw6rq0l","_id":"cj3jhpat000b8pcmjwiezur7g"},{"name":"open-source","parent":"cj3jhparn006tpcmjj08g82p8","_id":"cj3jhpat000b9pcmjpsc8a1k3"},{"name":"see-hear","parent":"cj3jhparn006upcmjclkbugyk","_id":"cj3jhpat000bapcmj54eyj6yr"},{"name":"cc","parent":"cj3jhparo006vpcmjs1j1mlol","_id":"cj3jhpat100bbpcmjl9yr7oli"},{"name":"see-hear","parent":"cj3jhparo006wpcmj4w3jszo2","_id":"cj3jhpat100bcpcmjxn4o9e8i"},{"name":"see-hear","parent":"cj3jhparp006xpcmjk2pgc1la","_id":"cj3jhpat100bdpcmjkcveled9"},{"name":"war","parent":"cj3jhparp006ypcmj2k0hxj9i","_id":"cj3jhpat100bfpcmjxo03b3oa"},{"name":"pagerank","parent":"cj3jhparp006zpcmjarkx95bv","_id":"cj3jhpat200bipcmjmikbk74h"},{"name":"see-hear","parent":"cj3jhpark006epcmjldebqckq","_id":"cj3jhpat200bkpcmjpknvd0tq"},{"name":"char","parent":"cj3jhparq0071pcmjwc2th8zk","_id":"cj3jhpat300blpcmjdb2z24dz"},{"name":"租房","parent":"cj3jhparq0072pcmjfsk1prru","_id":"cj3jhpat300bmpcmjll1s5bof"},{"name":"int","parent":"cj3jhparr0074pcmj40omw9mf","_id":"cj3jhpat400bppcmjn0sg7crx"},{"name":"笑","parent":"cj3jhparr0075pcmjcc025erg","_id":"cj3jhpat400bspcmj8pe20kpu"},{"name":"movie","parent":"cj3jhparp006xpcmjk2pgc1la","_id":"cj3jhpat500bvpcmj581lafyi"},{"name":"movie","parent":"cj3jhpars0077pcmj89i7yopf","_id":"cj3jhpat500bxpcmjxuyy83ci"},{"name":"first","parent":"cj3jhpars0078pcmjzhjgb1k4","_id":"cj3jhpat500c0pcmjxql5cyvq"},{"name":"code","parent":"cj3jhpars0079pcmjxe0gghtz","_id":"cj3jhpat800c2pcmj6abdlbyt"},{"name":"error","parent":"cj3jhpars0079pcmjxe0gghtz","_id":"cj3jhpat900c4pcmjky5ltr36"},{"name":"big","parent":"cj3jhpart007bpcmjk38epfd9","_id":"cj3jhpata00c7pcmjqiizcoir"},{"name":"hotkey","parent":"cj3jhparr0074pcmj40omw9mf","_id":"cj3jhpatb00cbpcmj309j585u"},{"name":"double","parent":"cj3jhparu007epcmjm2dc5y9b","_id":"cj3jhpatb00ccpcmjh5a4iclj"},{"name":"lf","parent":"cj3jhparu007fpcmjrwewgkv3","_id":"cj3jhpatc00cdpcmjdoczpae3"},{"name":"html","parent":"cj3jhparu007gpcmjrh9wswlz","_id":"cj3jhpatc00cfpcmjiobi6ysl"},{"name":"svn","parent":"cj3jhparu007hpcmj354gvtz9","_id":"cj3jhpatc00cipcmjsqwup1o0"},{"name":"video","parent":"cj3jhparu007ipcmjpw1sqf4w","_id":"cj3jhpatd00ckpcmj59fxh91h"},{"name":"game","parent":"cj3jhparv007kpcmjh0xi1szd","_id":"cj3jhpate00copcmj5a97mh1f"},{"name":"document","parent":"cj3jhparv007lpcmj5sw52amq","_id":"cj3jhpate00cqpcmj1k13noxn"},{"name":"encoding","parent":"cj3jhparw007mpcmjh8lzpg0z","_id":"cj3jhpatf00cspcmjzly0emhh"},{"name":"see-hear","parent":"cj3jhparw007npcmjs0up8h6z","_id":"cj3jhpatf00ctpcmjon4jtazm"},{"name":"code","parent":"cj3jhparw007opcmj2u8g50g7","_id":"cj3jhpatf00cupcmj2p35rnnb"},{"name":"japan","parent":"cj3jhparx007spcmjgkbmyhkp","_id":"cj3jhpatg00cwpcmja7m9ebns"},{"name":"test","parent":"cj3jhparw007ppcmj6gzzgd77","_id":"cj3jhpath00cypcmjtwkg6nnx"},{"name":"oauth","parent":"cj3jhpary007vpcmjt4y910b2","_id":"cj3jhpati00czpcmjcx6glqh4"},{"name":"cc","parent":"cj3jhparz007wpcmj26draiss","_id":"cj3jhpatj00d1pcmjh0kl40uz"},{"name":"home","parent":"cj3jhpas0007xpcmjv2f4jel0","_id":"cj3jhpatj00d3pcmjt7x3dyvh"},{"name":"bug","parent":"cj3jhpas0007ypcmjpisab7cb","_id":"cj3jhpatk00d4pcmj5asrfbkw"},{"name":"code","parent":"cj3jhpas1007zpcmjgkjy8f3n","_id":"cj3jhpatk00d5pcmjkp9l4y2x"},{"name":"principle","parent":"cj3jhpas0007ypcmjpisab7cb","_id":"cj3jhpatl00d6pcmjksfd2rds"},{"name":"play","parent":"cj3jhpas20082pcmjzjdcrcgs","_id":"cj3jhpatl00d7pcmjm74iggoo"},{"name":"code","parent":"cj3jhpas40087pcmj3281a5vf","_id":"cj3jhpatm00d9pcmj8sdqiy9n"},{"name":"code","parent":"cj3jhparr0074pcmj40omw9mf","_id":"cj3jhpatm00dbpcmjl8qr3of4"},{"name":"解决","parent":"cj3jhpasb008fpcmjvms8podl","_id":"cj3jhpatn00dcpcmjc75pj0sp"},{"name":"postgresql","parent":"cj3jhpasi0095pcmjrvmql6cu","_id":"cj3jhpatp00dgpcmjwqq3dp6p"},{"name":"code","parent":"cj3jhpasj009apcmj37fwzl5b","_id":"cj3jhpatp00dhpcmjd81kp2c0"},{"name":"cc","parent":"cj3jhpasm009spcmjuiduzony","_id":"cj3jhpatq00dipcmjd89q31id"},{"name":"synchronizes","parent":"cj3jhparr0074pcmj40omw9mf","_id":"cj3jhpatr00djpcmjf20oegk2"},{"name":"exception","parent":"cj3jhpaso009zpcmj4ehx108v","_id":"cj3jhpats00dkpcmjzqgyi5yw"},{"name":"see-hear","parent":"cj3jhpasp00a2pcmju65slgun","_id":"cj3jhpats00dlpcmj2zkshsyl"},{"name":"calloc","parent":"cj3jhpasp00a4pcmjcoq4uelb","_id":"cj3jhpatt00dmpcmj2xogct4c"},{"name":"c","parent":"cj3jhpasp00a5pcmj1gx0616w","_id":"cj3jhpatt00dnpcmjwg97ujy5"},{"name":"fflush","parent":"cj3jhparu007epcmjm2dc5y9b","_id":"cj3jhpatt00dopcmjqxsix4z4"},{"name":"cc","parent":"cj3jhpasq00a7pcmj5juzchht","_id":"cj3jhpatu00dppcmjuns3umsx"},{"name":"formula","parent":"cj3jhpasq00a8pcmjff5h5fha","_id":"cj3jhpatu00dqpcmjcnae88ss"},{"name":"database","parent":"cj3jhpasr00aapcmje7u0nk3z","_id":"cj3jhpatv00dspcmjb077u4nk"},{"name":"error","parent":"cj3jhparu007epcmjm2dc5y9b","_id":"cj3jhpatw00dtpcmjn7gc1ymx"},{"name":"database","parent":"cj3jhparr0074pcmj40omw9mf","_id":"cj3jhpatw00dupcmjm6y2z3t9"},{"name":"code","parent":"cj3jhpass00adpcmjreuqaf7h","_id":"cj3jhpatw00dvpcmja3wsya6y"},{"name":"see-hear","parent":"cj3jhpass00aepcmjzg7xosd9","_id":"cj3jhpatx00dwpcmj2bwgaxwi"},{"name":"see-hear","parent":"cj3jhpasu00ahpcmjqttgke9n","_id":"cj3jhpaty00dypcmjwrxnalnh"},{"name":"data","parent":"cj3jhpasu00ajpcmj3778p5fs","_id":"cj3jhpatz00dzpcmjpopws18v"},{"name":"search","parent":"cj3jhpasv00anpcmj3ogez5pz","_id":"cj3jhpatz00e0pcmjqmly6ok4"},{"name":"ruby","parent":"cj3jhpasv00appcmjchv5k41r","_id":"cj3jhpatz00e1pcmjppi1h7wa"},{"name":"see-hear","parent":"cj3jhpasw00aspcmjm4qtellf","_id":"cj3jhpau000e2pcmjzc3ail8b"},{"name":"python","parent":"cj3jhpasw00atpcmj78vyfw2b","_id":"cj3jhpau000e3pcmjgwfjmuze"},{"name":"software-architecture-code","parent":"cj3jhpasw00avpcmjbfyb355r","_id":"cj3jhpau100e5pcmjm96saec7"},{"name":"funny","parent":"cj3jhpasx00axpcmjojhcvcqh","_id":"cj3jhpau100e8pcmjdsfwrl15"},{"name":"计算机","parent":"cj3jhpasx00azpcmjctr3xhim","_id":"cj3jhpau100e9pcmj1xjgio1h"},{"name":"open-source","parent":"cj3jhpasx00b0pcmj60vmgaq8","_id":"cj3jhpau200eapcmja3q9cmf9"},{"name":"valueerror","parent":"cj3jhpasy00b1pcmjgmbjrair","_id":"cj3jhpau200ecpcmjae13cl59"},{"name":"python","parent":"cj3jhpasy00b2pcmjzlcocij3","_id":"cj3jhpau300efpcmj05rpakst"},{"name":"python","parent":"cj3jhpasy00b3pcmjypax9s5m","_id":"cj3jhpau300eipcmjcd2nrtp3"},{"name":"rmxp","parent":"cj3jhpasz00b4pcmj96s4nx33","_id":"cj3jhpau400elpcmjo943oc6h"},{"name":"ubuntu","parent":"cj3jhpasz00b5pcmjg0eazkao","_id":"cj3jhpau400empcmjh1hgu090"},{"name":"open-source","parent":"cj3jhpasz00b6pcmjel2y5fll","_id":"cj3jhpau500enpcmjc8impnii"},{"name":"project","parent":"cj3jhpasz00b7pcmja7exf5pa","_id":"cj3jhpau500eppcmj7yroj2ii"},{"name":"matrix","parent":"cj3jhpat000b8pcmjwiezur7g","_id":"cj3jhpau600espcmjg86qczpl"},{"name":"php","parent":"cj3jhpat000b9pcmjpsc8a1k3","_id":"cj3jhpau600eupcmjlh9gmjkm"},{"name":"sqlite","parent":"cj3jhpat000bapcmj54eyj6yr","_id":"cj3jhpau700evpcmjnc7l0vke"},{"name":"code","parent":"cj3jhpat100bbpcmjl9yr7oli","_id":"cj3jhpau700ewpcmj9hfqvtib"},{"name":"world","parent":"cj3jhpat100bfpcmjxo03b3oa","_id":"cj3jhpau800eypcmju1nctx95"},{"name":"see-hear","parent":"cj3jhpat200bipcmjmikbk74h","_id":"cj3jhpau800f1pcmjueek9cja"},{"name":"女","parent":"cj3jhpat200bkpcmjpknvd0tq","_id":"cj3jhpau900f3pcmje29xdmql"},{"name":"character","parent":"cj3jhpat300blpcmjdb2z24dz","_id":"cj3jhpau900f6pcmjp7o2gt7r"},{"name":"long-long","parent":"cj3jhpat400bppcmjn0sg7crx","_id":"cj3jhpaua00f9pcmjos8frrhd"},{"name":"see-hear","parent":"cj3jhpat500bvpcmj581lafyi","_id":"cj3jhpaua00fdpcmjyen1x85p"},{"name":"movie","parent":"cj3jhpat500bxpcmjxuyy83ci","_id":"cj3jhpaub00fepcmj7abto0py"},{"name":"eclipse","parent":"cj3jhpat800c2pcmj6abdlbyt","_id":"cj3jhpaub00fgpcmjhwk12p2y"},{"name":"open-source","parent":"cj3jhpat900c4pcmjky5ltr36","_id":"cj3jhpauc00fjpcmjl9917yvo"},{"name":"cc","parent":"cj3jhpata00c7pcmjqiizcoir","_id":"cj3jhpauc00fkpcmjzt30rqaz"},{"name":"vs","parent":"cj3jhpatb00cbpcmj309j585u","_id":"cj3jhpaud00fmpcmjnfkxyniw"},{"name":"project","parent":"cj3jhpatc00cdpcmjdoczpae3","_id":"cj3jhpaue00fopcmjngnb04fx"},{"name":"java","parent":"cj3jhpatc00cfpcmjiobi6ysl","_id":"cj3jhpauf00frpcmjn2pd1abu"},{"name":"war","parent":"cj3jhpatd00ckpcmj59fxh91h","_id":"cj3jhpaug00fupcmjv8w1hjc1"},{"name":"startcraft","parent":"cj3jhpate00copcmj5a97mh1f","_id":"cj3jhpauh00fxpcmjf1ytu7h3"},{"name":"doxygen","parent":"cj3jhpate00cqpcmj1k13noxn","_id":"cj3jhpaui00fypcmj0m9bqi9k"},{"name":"error","parent":"cj3jhpatf00cspcmjzly0emhh","_id":"cj3jhpaui00fzpcmjq4igfxwi"},{"name":"linux","parent":"cj3jhpatf00cupcmj2p35rnnb","_id":"cj3jhpauj00g0pcmjc8t0gfxg"},{"name":"see-hear","parent":"cj3jhpatg00cwpcmja7m9ebns","_id":"cj3jhpauj00g1pcmjv4mteau7"},{"name":"OAuth","parent":"cj3jhpati00czpcmjcx6glqh4","_id":"cj3jhpauk00g2pcmjlumuo771"},{"name":"code","parent":"cj3jhpatj00d1pcmjh0kl40uz","_id":"cj3jhpauk00g3pcmj4j0uyrqu"},{"name":"2012","parent":"cj3jhpatj00d3pcmjt7x3dyvh","_id":"cj3jhpaul00g4pcmjbpag279o"},{"name":"solve","parent":"cj3jhpatk00d4pcmj5asrfbkw","_id":"cj3jhpaul00g5pcmjr5h8q28l"},{"name":"design","parent":"cj3jhpatk00d5pcmjkp9l4y2x","_id":"cj3jhpaum00g7pcmjff0xekso"},{"name":"rw","parent":"cj3jhpatl00d7pcmjm74iggoo","_id":"cj3jhpaum00gapcmjksrswjhi"},{"name":"design","parent":"cj3jhpatm00d9pcmj8sdqiy9n","_id":"cj3jhpaun00gdpcmj50jfsgb2"},{"name":"composite","parent":"cj3jhpatm00dbpcmjl8qr3of4","_id":"cj3jhpauo00ggpcmjfynlm9sx"},{"name":"c++","parent":"cj3jhpatn00dcpcmjc75pj0sp","_id":"cj3jhpauo00gjpcmjc1g879m4"},{"name":"decorator","parent":"cj3jhpatm00dbpcmjl8qr3of4","_id":"cj3jhpaup00gmpcmj2ty3cn08"},{"name":"design","parent":"cj3jhpatm00dbpcmjl8qr3of4","_id":"cj3jhpaup00gnpcmjw16z7iy7"},{"name":"postgresql","parent":"cj3jhpatp00dgpcmjwqq3dp6p","_id":"cj3jhpauq00gppcmjhubct5yj"},{"name":"design","parent":"cj3jhpatp00dhpcmjd81kp2c0","_id":"cj3jhpaur00gqpcmj55yb4za0"},{"name":"code","parent":"cj3jhpatq00dipcmjd89q31id","_id":"cj3jhpauv00grpcmjyrkxuot1"},{"name":"volatile","parent":"cj3jhpatr00djpcmjf20oegk2","_id":"cj3jhpauv00gspcmj63j9aor6"},{"name":"throw","parent":"cj3jhpats00dkpcmjzqgyi5yw","_id":"cj3jhpauw00gtpcmjpawbh1fz"},{"name":"structure","parent":"cj3jhpats00dlpcmj2zkshsyl","_id":"cj3jhpaux00gvpcmj0zouggz5"},{"name":"code","parent":"cj3jhpatt00dmpcmj2xogct4c","_id":"cj3jhpaux00gypcmjsxorxdo9"},{"name":"code","parent":"cj3jhpatt00dnpcmjwg97ujy5","_id":"cj3jhpauy00h1pcmjyk5fpucp"},{"name":"n","parent":"cj3jhpatt00dopcmjqxsix4z4","_id":"cj3jhpauy00h4pcmjhwjly6qs"},{"name":"optimiz","parent":"cj3jhpatu00dppcmjuns3umsx","_id":"cj3jhpauz00h7pcmj5nzr00rd"},{"name":"math","parent":"cj3jhpatu00dqpcmjcnae88ss","_id":"cj3jhpauz00h8pcmjhx1iqdnk"},{"name":"postgresql","parent":"cj3jhpatv00dspcmjb077u4nk","_id":"cj3jhpav000hapcmj05l6r4p3"},{"name":"gethostname","parent":"cj3jhpatw00dtpcmjn7gc1ymx","_id":"cj3jhpav100hbpcmjpbyc6hga"},{"name":"define","parent":"cj3jhpatw00dupcmjm6y2z3t9","_id":"cj3jhpav200hcpcmjxr3pjsz5"},{"name":"sizeof","parent":"cj3jhpatw00dvpcmja3wsya6y","_id":"cj3jhpav200hdpcmj0i00i8xm"},{"name":"工作","parent":"cj3jhpatx00dwpcmj2bwgaxwi","_id":"cj3jhpav200hepcmj2x52nm3f"},{"name":"crontab","parent":"cj3jhpatm00dbpcmjl8qr3of4","_id":"cj3jhpav300hgpcmjur361zzj"},{"name":"喜剧","parent":"cj3jhpaty00dypcmjwrxnalnh","_id":"cj3jhpav400hjpcmj2044b1nd"},{"name":"math","parent":"cj3jhpatz00dzpcmjpopws18v","_id":"cj3jhpav400hmpcmjifmzd3oh"},{"name":"see-hear","parent":"cj3jhpatz00e0pcmjqmly6ok4","_id":"cj3jhpav500hnpcmjxjm3bxxq"},{"name":"see-hear","parent":"cj3jhpatz00e1pcmjppi1h7wa","_id":"cj3jhpav500hopcmjjw5s52l8"},{"name":"test","parent":"cj3jhpau000e3pcmjgwfjmuze","_id":"cj3jhpav600hppcmjapw7dk3q"},{"name":"software-architecture","parent":"cj3jhpau100e5pcmjm96saec7","_id":"cj3jhpav600hrpcmjmzg5k0v6"},{"name":"see-hear","parent":"cj3jhpau100e8pcmjdsfwrl15","_id":"cj3jhpav700hupcmj0f149yyn"},{"name":"see-hear","parent":"cj3jhpau200eapcmja3q9cmf9","_id":"cj3jhpav800hxpcmjz227sj8g"},{"name":"python","parent":"cj3jhpau300efpcmj05rpakst","_id":"cj3jhpav800i0pcmjumd6605y"},{"name":"python","parent":"cj3jhpau300eipcmjcd2nrtp3","_id":"cj3jhpav900i3pcmjkoqfshzy"},{"name":"rpg","parent":"cj3jhpau400elpcmjo943oc6h","_id":"cj3jhpava00i7pcmjzto77hot"},{"name":"project","parent":"cj3jhpau500enpcmjc8impnii","_id":"cj3jhpava00iapcmjos9zct9v"},{"name":"windows","parent":"cj3jhpau500eppcmj7yroj2ii","_id":"cj3jhpavb00idpcmje71an92v"},{"name":"n","parent":"cj3jhpau600espcmjg86qczpl","_id":"cj3jhpavb00igpcmjw5k8xs1r"},{"name":"project","parent":"cj3jhpau600eupcmjlh9gmjkm","_id":"cj3jhpavc00ihpcmjy9m69mdb"},{"name":"define","parent":"cj3jhpau700ewpcmj9hfqvtib","_id":"cj3jhpavd00iipcmjx1rw5f3u"},{"name":"工作","parent":"cj3jhpau900f3pcmje29xdmql","_id":"cj3jhpavd00ijpcmjjoinw9ks"},{"name":"code","parent":"cj3jhpau900f6pcmjp7o2gt7r","_id":"cj3jhpave00ikpcmjwu0sh7od"},{"name":"scale","parent":"cj3jhpaua00f9pcmjos8frrhd","_id":"cj3jhpave00ilpcmj0cmcnll4"},{"name":"see-hear","parent":"cj3jhpaub00fepcmj7abto0py","_id":"cj3jhpavf00impcmj9clqxg9u"},{"name":"ivy","parent":"cj3jhpaub00fgpcmjhwk12p2y","_id":"cj3jhpavf00inpcmjt3sm0012"},{"name":"problem","parent":"cj3jhpauc00fjpcmjl9917yvo","_id":"cj3jhpavg00iopcmjhwtspff3"},{"name":"code","parent":"cj3jhpauc00fkpcmjzt30rqaz","_id":"cj3jhpavg00iqpcmjsrwdi68u"},{"name":"回车","parent":"cj3jhpaue00fopcmjngnb04fx","_id":"cj3jhpavh00itpcmjme3rr9s1"},{"name":"java","parent":"cj3jhpauf00frpcmjn2pd1abu","_id":"cj3jhpavi00ivpcmj5377vquw"},{"name":"world","parent":"cj3jhpaug00fupcmjv8w1hjc1","_id":"cj3jhpavi00iwpcmj9kde417z"},{"name":"win7","parent":"cj3jhpauh00fxpcmjf1ytu7h3","_id":"cj3jhpavj00ixpcmj8zjq7baq"},{"name":"generate","parent":"cj3jhpaui00fypcmj0m9bqi9k","_id":"cj3jhpavk00izpcmjlpavij06"},{"name":"exception","parent":"cj3jhpaui00fzpcmjq4igfxwi","_id":"cj3jhpavk00j2pcmj14hbacza"},{"name":"qsort","parent":"cj3jhpauj00g0pcmjc8t0gfxg","_id":"cj3jhpavl00j5pcmj7yd3xo9b"},{"name":"war","parent":"cj3jhpauj00g1pcmjv4mteau7","_id":"cj3jhpavm00j8pcmjf1a1clsa"},{"name":"callback","parent":"cj3jhpauk00g2pcmjlumuo771","_id":"cj3jhpavm00j9pcmj78hhx9bc"},{"name":"database","parent":"cj3jhpauk00g3pcmj4j0uyrqu","_id":"cj3jhpavn00jbpcmjxj8u6p8f"},{"name":"pattern","parent":"cj3jhpaum00g7pcmjff0xekso","_id":"cj3jhpavo00jepcmj1xttlw0w"},{"name":"pattern","parent":"cj3jhpaun00gdpcmj50jfsgb2","_id":"cj3jhpavo00jhpcmjtup39dnt"},{"name":"design","parent":"cj3jhpauo00ggpcmjfynlm9sx","_id":"cj3jhpavp00jlpcmj8x85xzdu"},{"name":"c","parent":"cj3jhpauo00gjpcmjc1g879m4","_id":"cj3jhpavq00jopcmj107eolab"},{"name":"design","parent":"cj3jhpaup00gmpcmj2ty3cn08","_id":"cj3jhpavq00jppcmj4gx5t1ah"},{"name":"facade","parent":"cj3jhpaup00gnpcmjw16z7iy7","_id":"cj3jhpavr00jqpcmj43ns8k2p"},{"name":"flyweight","parent":"cj3jhpaup00gnpcmjw16z7iy7","_id":"cj3jhpavr00jrpcmjsd3eeikt"},{"name":"symbol","parent":"cj3jhpauq00gppcmjhubct5yj","_id":"cj3jhpavs00jspcmj5mepx815"},{"name":"pattern","parent":"cj3jhpaur00gqpcmj55yb4za0","_id":"cj3jhpavt00jtpcmj21e87j6v"},{"name":"memory","parent":"cj3jhpauv00grpcmjyrkxuot1","_id":"cj3jhpavt00jvpcmjpjmrud65"},{"name":"try","parent":"cj3jhpauw00gtpcmjpawbh1fz","_id":"cj3jhpavu00jypcmj8p6cwps8"},{"name":"code","parent":"cj3jhpaux00gypcmjsxorxdo9","_id":"cj3jhpavv00k1pcmj8t1nqwl6"},{"name":"complement","parent":"cj3jhpauy00h1pcmjyk5fpucp","_id":"cj3jhpavw00k3pcmjrxn6lwde"},{"name":"output","parent":"cj3jhpauy00h4pcmjhwjly6qs","_id":"cj3jhpavw00k6pcmjk46uy9au"},{"name":"quick","parent":"cj3jhpauz00h7pcmj5nzr00rd","_id":"cj3jhpavx00k9pcmjaixyy0i9"},{"name":"math","parent":"cj3jhpauz00h8pcmjhx1iqdnk","_id":"cj3jhpavy00kbpcmjhr0917vr"},{"name":"macro","parent":"cj3jhpau700ewpcmj9hfqvtib","_id":"cj3jhpavz00kcpcmjm8ww7exn"},{"name":"postgresql","parent":"cj3jhpav000hapcmj05l6r4p3","_id":"cj3jhpavz00kdpcmjoo7dm5au"},{"name":"lnk2019","parent":"cj3jhpav100hbpcmjpbyc6hga","_id":"cj3jhpaw000kepcmj1eistcsq"},{"name":"function","parent":"cj3jhpav200hcpcmjxr3pjsz5","_id":"cj3jhpaw000kfpcmj7hjm1z8q"},{"name":"教训","parent":"cj3jhpav200hepcmj2x52nm3f","_id":"cj3jhpaw100kgpcmj0wbejysb"},{"name":"environment","parent":"cj3jhpav300hgpcmjur361zzj","_id":"cj3jhpaw200khpcmjnadwozey"},{"name":"影评","parent":"cj3jhpav400hjpcmj2044b1nd","_id":"cj3jhpaw200kipcmjq6j1hqyk"},{"name":"大数据","parent":"cj3jhpav400hmpcmjifmzd3oh","_id":"cj3jhpaw300kjpcmj739ebyze"},{"name":"update","parent":"cj3jhpav500hnpcmjxjm3bxxq","_id":"cj3jhpaw300kkpcmjnmrquspz"},{"name":"unit","parent":"cj3jhpav600hppcmjapw7dk3q","_id":"cj3jhpaw400kmpcmjvb3zftro"},{"name":"see-hear","parent":"cj3jhpav800i0pcmjumd6605y","_id":"cj3jhpaw500kppcmjntrn652n"},{"name":"recv","parent":"cj3jhpav900i3pcmjkoqfshzy","_id":"cj3jhpaw600kspcmjgcb7gxdl"},{"name":"rtp","parent":"cj3jhpava00i7pcmjzto77hot","_id":"cj3jhpaw700kwpcmjhiu3di90"},{"name":"solution","parent":"cj3jhpava00iapcmjos9zct9v","_id":"cj3jhpaw800kzpcmjxs000why"},{"name":"虚拟主机","parent":"cj3jhpavb00idpcmje71an92v","_id":"cj3jhpaw800l2pcmj1qyz16s9"},{"name":"programming","parent":"cj3jhpavb00igpcmjw5k8xs1r","_id":"cj3jhpaw900l5pcmj4u8y6w08"},{"name":"solution","parent":"cj3jhpavc00ihpcmjy9m69mdb","_id":"cj3jhpawa00l9pcmj24mx5pgs"},{"name":"freopen","parent":"cj3jhpavd00iipcmjx1rw5f3u","_id":"cj3jhpawc00lcpcmjgig2yzxb"},{"name":"歧视","parent":"cj3jhpavd00ijpcmjjoinw9ks","_id":"cj3jhpawd00lfpcmjcjlrl87l"},{"name":"conversion","parent":"cj3jhpave00ikpcmjwu0sh7od","_id":"cj3jhpawe00lipcmjarjni6pt"},{"name":"type","parent":"cj3jhpave00ilpcmj0cmcnll4","_id":"cj3jhpawf00lmpcmjz2ynex37"},{"name":"spirit","parent":"cj3jhpavf00impcmj9clqxg9u","_id":"cj3jhpawf00lppcmjaiprlq9h"},{"name":"project","parent":"cj3jhpavg00iopcmjhwtspff3","_id":"cj3jhpawg00lspcmjvdozdx5d"},{"name":"const","parent":"cj3jhpavg00iqpcmjsrwdi68u","_id":"cj3jhpawh00lvpcmjzqx9xvq4"},{"name":"换行","parent":"cj3jhpavh00itpcmjme3rr9s1","_id":"cj3jhpawi00lzpcmjrjojd6zf"},{"name":"parser","parent":"cj3jhpavi00ivpcmj5377vquw","_id":"cj3jhpawj00m2pcmjnnpq4hzf"},{"name":"星际争霸","parent":"cj3jhpavj00ixpcmj8zjq7baq","_id":"cj3jhpawk00m5pcmjc2c2lmx5"},{"name":"how-to","parent":"cj3jhpavk00izpcmjlpavij06","_id":"cj3jhpawl00m8pcmj2vx1iwzd"},{"name":"java","parent":"cj3jhpavk00j2pcmj14hbacza","_id":"cj3jhpawm00mcpcmjg6t2zqcy"},{"name":"quicksort","parent":"cj3jhpavl00j5pcmj7yd3xo9b","_id":"cj3jhpawm00mfpcmjyhxlo9rk"},{"name":"error","parent":"cj3jhpavn00jbpcmjxj8u6p8f","_id":"cj3jhpawn00mipcmjrjyl8liw"},{"name":"software-architecture-code","parent":"cj3jhpavo00jepcmj1xttlw0w","_id":"cj3jhpawo00mlpcmj3isnttp4"},{"name":"software-architecture-code","parent":"cj3jhpavo00jhpcmjtup39dnt","_id":"cj3jhpawp00mppcmj8u8r8rzz"},{"name":"pattern","parent":"cj3jhpavp00jlpcmj8x85xzdu","_id":"cj3jhpawq00mspcmjfndaig0k"},{"name":"windows","parent":"cj3jhpavq00jopcmj107eolab","_id":"cj3jhpawr00mvpcmjy1318sz3"},{"name":"pattern","parent":"cj3jhpavq00jppcmj4gx5t1ah","_id":"cj3jhpaws00mypcmj7rnpg6rs"},{"name":"pattern","parent":"cj3jhpavr00jqpcmj43ns8k2p","_id":"cj3jhpawt00n2pcmjlcxrccnk"},{"name":"pattern","parent":"cj3jhpavr00jrpcmjsd3eeikt","_id":"cj3jhpawu00n5pcmjum0vmo52"},{"name":"reposibility","parent":"cj3jhpavt00jtpcmj21e87j6v","_id":"cj3jhpawu00n6pcmj9ps65dks"},{"name":"sizeof","parent":"cj3jhpavt00jvpcmjpjmrud65","_id":"cj3jhpawv00n7pcmjwqi0aves"},{"name":"free","parent":"cj3jhpavv00k1pcmj8t1nqwl6","_id":"cj3jhpawy00n8pcmjcfmjbzkl"},{"name":"math","parent":"cj3jhpavw00k3pcmjrxn6lwde","_id":"cj3jhpawz00napcmjrb5pqulq"},{"name":"printf","parent":"cj3jhpavw00k6pcmjk46uy9au","_id":"cj3jhpax000ndpcmjjhu41zdv"},{"name":"see-hear","parent":"cj3jhpavx00k9pcmjaixyy0i9","_id":"cj3jhpax100ngpcmj05o2p4ij"},{"name":"maths","parent":"cj3jhpavy00kbpcmjhr0917vr","_id":"cj3jhpax200nipcmjyrncz57e"},{"name":"point","parent":"cj3jhpavz00kcpcmjm8ww7exn","_id":"cj3jhpax300njpcmjmuz2ht29"},{"name":"programming","parent":"cj3jhpavz00kdpcmjoo7dm5au","_id":"cj3jhpax300nkpcmjlx9uaf4a"},{"name":"winsock","parent":"cj3jhpaw000kepcmj1eistcsq","_id":"cj3jhpax400nlpcmjkf3houoz"},{"name":"own","parent":"cj3jhpaw000kfpcmj7hjm1z8q","_id":"cj3jhpax500nmpcmjyal6ogx4"},{"name":"经验","parent":"cj3jhpaw100kgpcmj0wbejysb","_id":"cj3jhpax600nopcmjl3qzglz6"},{"name":"execute","parent":"cj3jhpaw200khpcmjnadwozey","_id":"cj3jhpax700nrpcmjxbec3r9e"},{"name":"电影","parent":"cj3jhpaw200kipcmjq6j1hqyk","_id":"cj3jhpax800nupcmjiyv71ibe"},{"name":"socket","parent":"cj3jhpaw500kppcmjntrn652n","_id":"cj3jhpax900nypcmjkrorwfin"},{"name":"send","parent":"cj3jhpaw600kspcmjgcb7gxdl","_id":"cj3jhpaxa00o1pcmj53sgvmyl"},{"name":"ssh","parent":"cj3jhpaw800kzpcmjxs000why","_id":"cj3jhpaxb00o4pcmjiqpfm31z"},{"name":"wordpress","parent":"cj3jhpawa00l9pcmj24mx5pgs","_id":"cj3jhpaxc00o7pcmjmf5vaqfc"},{"name":"macro","parent":"cj3jhpawc00lcpcmjgig2yzxb","_id":"cj3jhpaxd00obpcmjhg97dx2u"},{"name":"高薪","parent":"cj3jhpawd00lfpcmjcjlrl87l","_id":"cj3jhpaxf00oepcmjhcj4i7c1"},{"name":"see-hear","parent":"cj3jhpawe00lipcmjarjni6pt","_id":"cj3jhpaxf00ohpcmjopvi04sy"},{"name":"define","parent":"cj3jhpawh00lvpcmjzqx9xvq4","_id":"cj3jhpaxh00okpcmj7w66cs15"},{"name":"花屏","parent":"cj3jhpawk00m5pcmjc2c2lmx5","_id":"cj3jhpaxh00oopcmjo1fl1sde"},{"name":"open-source","parent":"cj3jhpawl00m8pcmj2vx1iwzd","_id":"cj3jhpaxi00orpcmjzramtdvg"},{"name":"java","parent":"cj3jhpawm00mcpcmjg6t2zqcy","_id":"cj3jhpaxk00oupcmjclbzsv1d"},{"name":"sort","parent":"cj3jhpawm00mfpcmjyhxlo9rk","_id":"cj3jhpaxk00oxpcmjwkb0a8e7"},{"name":"open-source","parent":"cj3jhpawn00mipcmjrjyl8liw","_id":"cj3jhpaxl00p1pcmjuf59p97s"},{"name":"virtual","parent":"cj3jhpawo00mlpcmj3isnttp4","_id":"cj3jhpaxm00p4pcmjhvxxlers"},{"name":"software-architecture-code","parent":"cj3jhpawq00mspcmjfndaig0k","_id":"cj3jhpaxn00p7pcmjelmyr0ur"},{"name":"linux","parent":"cj3jhpawr00mvpcmjy1318sz3","_id":"cj3jhpaxo00papcmjqeytwg10"},{"name":"software-architecture-code","parent":"cj3jhpaws00mypcmj7rnpg6rs","_id":"cj3jhpaxq00pepcmj1shx9wlr"},{"name":"software-architecture-code","parent":"cj3jhpawt00n2pcmjlcxrccnk","_id":"cj3jhpaxr00phpcmjpevdpa1m"},{"name":"software-architecture-code","parent":"cj3jhpawu00n5pcmjum0vmo52","_id":"cj3jhpaxs00pkpcmj0vmh5xzd"},{"name":"software-architecture-code","parent":"cj3jhpawu00n6pcmj9ps65dks","_id":"cj3jhpaxt00pnpcmjf84gmh02"},{"name":"malloc","parent":"cj3jhpawy00n8pcmjcfmjbzkl","_id":"cj3jhpaxv00prpcmjvgxsivtz"},{"name":"math","parent":"cj3jhpawz00napcmjrb5pqulq","_id":"cj3jhpaxw00pupcmjdgbgp3ow"},{"name":"r","parent":"cj3jhpax000ndpcmjjhu41zdv","_id":"cj3jhpaxx00pxpcmjy5c4i1ts"},{"name":"sort","parent":"cj3jhpax100ngpcmj05o2p4ij","_id":"cj3jhpaxy00q0pcmjetr6lkf1"},{"name":"see-hear","parent":"cj3jhpax200nipcmjyrncz57e","_id":"cj3jhpay000q4pcmj4skdpxnu"},{"name":"tricky","parent":"cj3jhpax300njpcmjmuz2ht29","_id":"cj3jhpay100q7pcmj0cookvx2"},{"name":"remote","parent":"cj3jhpax300nkpcmjlx9uaf4a","_id":"cj3jhpay300qapcmjg17av3k6"},{"name":"postgresql","parent":"cj3jhpax500nmpcmjyal6ogx4","_id":"cj3jhpay500qdpcmj6r970ff6"},{"name":"not","parent":"cj3jhpax700nrpcmjxbec3r9e","_id":"cj3jhpay700qhpcmj1y4xnnwg"},{"name":"server","parent":"cj3jhpaxa00o1pcmj53sgvmyl","_id":"cj3jhpay800qkpcmjxp67logn"},{"name":"math","parent":"cj3jhpaxd00obpcmjhg97dx2u","_id":"cj3jhpay900qnpcmjmzme3g29"},{"name":"tool","parent":"cj3jhpaxf00ohpcmjopvi04sy","_id":"cj3jhpaya00qqpcmjx474o3en"},{"name":"error","parent":"cj3jhpaxh00okpcmj7w66cs15","_id":"cj3jhpayb00qupcmjjmmcgftr"},{"name":"project","parent":"cj3jhpaxi00orpcmjzramtdvg","_id":"cj3jhpayc00qxpcmjgxb2nb9s"},{"name":"see-hear","parent":"cj3jhpaxk00oupcmjclbzsv1d","_id":"cj3jhpayd00r0pcmjenfmva5p"},{"name":"stable","parent":"cj3jhpaxk00oxpcmjwkb0a8e7","_id":"cj3jhpaye00r3pcmjjpx1gbvk"},{"name":"project","parent":"cj3jhpaxl00p1pcmjuf59p97s","_id":"cj3jhpayf00r7pcmj122lsio9"},{"name":"编译","parent":"cj3jhpaxo00papcmjqeytwg10","_id":"cj3jhpayg00rapcmjouvvn49i"},{"name":"memory","parent":"cj3jhpaxv00prpcmjvgxsivtz","_id":"cj3jhpayh00rdpcmjq5yst938"},{"name":"priority","parent":"cj3jhpaxw00pupcmjdgbgp3ow","_id":"cj3jhpayi00rgpcmj3ip7ncfo"},{"name":"postgresql","parent":"cj3jhpay500qdpcmj6r970ff6","_id":"cj3jhpayj00rkpcmjtussridq"},{"name":"program","parent":"cj3jhpay700qhpcmj1y4xnnwg","_id":"cj3jhpayl00rnpcmjkuvqccu3"},{"name":"socket","parent":"cj3jhpay800qkpcmjxp67logn","_id":"cj3jhpaym00rqpcmj896kddtb"},{"name":"programming","parent":"cj3jhpay900qnpcmjmzme3g29","_id":"cj3jhpaym00rtpcmjqu1qtsme"},{"name":"word","parent":"cj3jhpaya00qqpcmjx474o3en","_id":"cj3jhpayo00rxpcmjhjwx6ca7"},{"name":"gcc","parent":"cj3jhpayb00qupcmjjmmcgftr","_id":"cj3jhpayp00s0pcmjdl5r1o2p"},{"name":"see-hear","parent":"cj3jhpayc00qxpcmjgxb2nb9s","_id":"cj3jhpayr00s3pcmjt5fuqjj8"},{"name":"velocity","parent":"cj3jhpayd00r0pcmjenfmva5p","_id":"cj3jhpays00s6pcmjzug2tgki"},{"name":"unix","parent":"cj3jhpaye00r3pcmjjpx1gbvk","_id":"cj3jhpayu00sapcmjpo5y3aok"},{"name":"readline","parent":"cj3jhpayf00r7pcmj122lsio9","_id":"cj3jhpayw00sdpcmjvttq0oa0"},{"name":"realloc","parent":"cj3jhpayh00rdpcmjq5yst938","_id":"cj3jhpaz100sgpcmj7p5hswml"},{"name":"self","parent":"cj3jhpayj00rkpcmjtussridq","_id":"cj3jhpaz200sjpcmjbol98x3g"},{"name":"timer","parent":"cj3jhpayl00rnpcmjkuvqccu3","_id":"cj3jhpaz400snpcmjozp5iwy5"},{"name":"redirect","parent":"cj3jhpaym00rtpcmjqu1qtsme","_id":"cj3jhpaz500sqpcmjtqjd5g9u"},{"name":"see-hear","parent":"cj3jhpayp00s0pcmjdl5r1o2p","_id":"cj3jhpaz700stpcmj255thwfj"},{"name":"sqlite","parent":"cj3jhpayw00sdpcmjvttq0oa0","_id":"cj3jhpaz900swpcmj64k4ewx8"},{"name":"type","parent":"cj3jhpaz200sjpcmjbol98x3g","_id":"cj3jhpaza00t0pcmj6w17mgyn"},{"name":"warning","parent":"cj3jhpaz700stpcmj255thwfj","_id":"cj3jhpazc00t3pcmjzgg82pqu"},{"name":"sqlite3api","parent":"cj3jhpaz900swpcmj64k4ewx8","_id":"cj3jhpazf00t6pcmjvdw06c1k"},{"name":"tcl","parent":"cj3jhpazf00t6pcmjvdw06c1k","_id":"cj3jhpazh00tapcmjwhh7xdzg"}],"Data":[],"Page":[],"Post":[{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","slug":"hello-world","published":1,"date":"2017-06-05T02:51:17.000Z","updated":"2017-06-05T02:51:17.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj3jji6id0000jnmj5h7yuejj","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"external\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"external\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"external\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"external\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"external\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"external\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"external\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"external\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"external\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"external\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"external\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"external\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"external\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"external\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"external\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"external\">Deployment</a></p>\n"},{"layout":"post","title":"barchart UDT（一）","date":"2013-08-09T19:27:00.000Z","comments":1,"_content":"\n## UDT简单介绍\n\n &nbsp;&nbsp;&nbsp;&nbsp;最近在研究UDT相关的东西。这个主要用于高带宽时延积。也就是适用于网络带宽较高，但是丢包还是比较频繁的网络。给个公式：   \n\n        高带宽时延积（缩写）=带宽 * RTT   \n\n &nbsp;&nbsp;&nbsp;&nbsp;UDT相关的可以在这里找到：[http://udt.sourceforge.net](http://udt.sourceforge.net) 另外对于UDT原版(c++)版，这里有两个下载路径。一个是CVS的。另外一个是git的。   \n\n<!-- more -->\n\n * &nbsp;&nbsp;&nbsp;&nbsp;这个站点里，还有一个软件barchart UDT. 这个是jni的UDT.就是底层还是C/C++的库，上层wapper了Java.现在发布的最新的版本是2.3.0.第一个可以使用，而且大规模使用的版本是1.0.2.大家可以在网上找。这几次的升级加了很多没有用的东西。最核心的东西没有怎么变化。不过1.0.2没有javaDoc,基本上要先看一下UDT C版的源码才行。另外1.0.2现在已经没有了源码，因为开源的作者没有写清楚1.0.2是从那个version发布的（也可能是我看得粗糙）。   \n\n * &nbsp;&nbsp;&nbsp;&nbsp;这个站点里还有一款软件叫做UDT-JAVA.大家最好不要下，这个软件的网络行为和UDT原生的网络行为不太一致。另外这个软件在serverSocket.accept();这个地方开源的作者写的有bug。我使用一次UDT连接时，竟然可以获取到多个UDT socket.不管是怎么回事，最后还是弃之不用了。   \n\n## barchart UDT  (mvn需要3.0.4以上版本)\n\n这里要着重介绍这个UDT.最好使用的版本是2.3.0。不过该版本从git上download下来。编译花了我一天的功夫。第一个问题就是贵司集群上该死的mvn环境。这个环境是默认的repository是在~/.m2/repository. 这个环境会报：`java.io.IOException: No locks available`.这个问题就是需要你在$M2\\_home/conf/settings.xml中加入：`<localRepository>/your-path/.m2/repository</localRepository>` 这里的路径需要是绝对路径。第二个问题，贵司没有$M2\\_home这个变量!这个变量切不可自己随便写，必须找到那个安装的路径,否则mvn不能被执行。当然贵司是不可能有人知道这个路径的。所以...解决方法就是使用`mvn -s your-conf`来执行mvn.   \n\n下面看起来就可以直接执行mvn install了。作者说最好进入barchart-udt-archon再执行. 然后遇到这个错误：`Exception in thread \"main\" java.lang.NoSuchMethodError: org.apache.maven.wagon.shared.http4.AbstractHttpClientWagon.getReadTimeout()I` 这个错误是mvn的，不过更加可气。这个解决方法就是在pom.xml中加入：\n\n        <extensions>\n          <!-- Whysoever version 2.2 has issues with Maven 3.0.3:\n               java.lang.NoSuchMethodError: org.apache.maven.wagon.shared.http4.AbstractHttpClientWagon.getReadTimeout()I\n          -->\n          <extension>\n            <groupId>org.apache.maven.wagon</groupId>\n            <artifactId>wagon-ssh</artifactId>\n            <version>2.1</version>\n          </extension>\n          <extension>\n            <groupId>org.apache.maven.wagon</groupId>\n            <artifactId>wagon-http</artifactId>\n            <version>2.1</version>\n          </extension>\n          <extension>\n            <groupId>org.apache.maven.wagon</groupId>\n            <artifactId>wagon-file</artifactId>\n            <version>2.1</version>\n          </extension>\n        </extensions>   \n\n上面这块代码必须放在 `<project><build>放在这里</build></project>`, 否则mvn会报no Tags错误。  \n\n看起来可以正常运行了。结果......更加悲剧的事情是mvn需要3.0.4版本。只好在官网上download一个高版本的maven.然后在集群上解压。执行ant命令。这里需要首先设置$M2\\_HOME这个变量。然后看官网的文档安装。不过这还不算完，最后编译barchart-udt后，bundle那个项目一直不能正常的编译。不过如果你只是为了替换某些不能运行的libxxx.so文件，只要编译完了core项目。就可以从core项目中找到相应的.so文件。然后下载一个2.3.0的jar包。解压后，把相应的文件替换掉。然后再打成jar包。打jar包命令：`jar c [jarfile] -m [MANIFEST file]  [other files]`    \n\n然后放在你的程序中运行即可。barchart-udt的那个Jar可以自动解压出来so文件，然后放在相应的地方。之后就可以使用jni调用了。和正常的使用java socket一样。下一篇会讲如何使用barchart-udt进行编程。\n","source":"_posts/2013-08-10-barchart-udt.markdown","raw":"---\nlayout: post\ntitle: \"barchart UDT（一）\"\ndate: 2013-08-10 03:27\ncomments: true\ncategories: jni,UDT,barchart,c++ \n---\n\n## UDT简单介绍\n\n &nbsp;&nbsp;&nbsp;&nbsp;最近在研究UDT相关的东西。这个主要用于高带宽时延积。也就是适用于网络带宽较高，但是丢包还是比较频繁的网络。给个公式：   \n\n        高带宽时延积（缩写）=带宽 * RTT   \n\n &nbsp;&nbsp;&nbsp;&nbsp;UDT相关的可以在这里找到：[http://udt.sourceforge.net](http://udt.sourceforge.net) 另外对于UDT原版(c++)版，这里有两个下载路径。一个是CVS的。另外一个是git的。   \n\n<!-- more -->\n\n * &nbsp;&nbsp;&nbsp;&nbsp;这个站点里，还有一个软件barchart UDT. 这个是jni的UDT.就是底层还是C/C++的库，上层wapper了Java.现在发布的最新的版本是2.3.0.第一个可以使用，而且大规模使用的版本是1.0.2.大家可以在网上找。这几次的升级加了很多没有用的东西。最核心的东西没有怎么变化。不过1.0.2没有javaDoc,基本上要先看一下UDT C版的源码才行。另外1.0.2现在已经没有了源码，因为开源的作者没有写清楚1.0.2是从那个version发布的（也可能是我看得粗糙）。   \n\n * &nbsp;&nbsp;&nbsp;&nbsp;这个站点里还有一款软件叫做UDT-JAVA.大家最好不要下，这个软件的网络行为和UDT原生的网络行为不太一致。另外这个软件在serverSocket.accept();这个地方开源的作者写的有bug。我使用一次UDT连接时，竟然可以获取到多个UDT socket.不管是怎么回事，最后还是弃之不用了。   \n\n## barchart UDT  (mvn需要3.0.4以上版本)\n\n这里要着重介绍这个UDT.最好使用的版本是2.3.0。不过该版本从git上download下来。编译花了我一天的功夫。第一个问题就是贵司集群上该死的mvn环境。这个环境是默认的repository是在~/.m2/repository. 这个环境会报：`java.io.IOException: No locks available`.这个问题就是需要你在$M2\\_home/conf/settings.xml中加入：`<localRepository>/your-path/.m2/repository</localRepository>` 这里的路径需要是绝对路径。第二个问题，贵司没有$M2\\_home这个变量!这个变量切不可自己随便写，必须找到那个安装的路径,否则mvn不能被执行。当然贵司是不可能有人知道这个路径的。所以...解决方法就是使用`mvn -s your-conf`来执行mvn.   \n\n下面看起来就可以直接执行mvn install了。作者说最好进入barchart-udt-archon再执行. 然后遇到这个错误：`Exception in thread \"main\" java.lang.NoSuchMethodError: org.apache.maven.wagon.shared.http4.AbstractHttpClientWagon.getReadTimeout()I` 这个错误是mvn的，不过更加可气。这个解决方法就是在pom.xml中加入：\n\n        <extensions>\n          <!-- Whysoever version 2.2 has issues with Maven 3.0.3:\n               java.lang.NoSuchMethodError: org.apache.maven.wagon.shared.http4.AbstractHttpClientWagon.getReadTimeout()I\n          -->\n          <extension>\n            <groupId>org.apache.maven.wagon</groupId>\n            <artifactId>wagon-ssh</artifactId>\n            <version>2.1</version>\n          </extension>\n          <extension>\n            <groupId>org.apache.maven.wagon</groupId>\n            <artifactId>wagon-http</artifactId>\n            <version>2.1</version>\n          </extension>\n          <extension>\n            <groupId>org.apache.maven.wagon</groupId>\n            <artifactId>wagon-file</artifactId>\n            <version>2.1</version>\n          </extension>\n        </extensions>   \n\n上面这块代码必须放在 `<project><build>放在这里</build></project>`, 否则mvn会报no Tags错误。  \n\n看起来可以正常运行了。结果......更加悲剧的事情是mvn需要3.0.4版本。只好在官网上download一个高版本的maven.然后在集群上解压。执行ant命令。这里需要首先设置$M2\\_HOME这个变量。然后看官网的文档安装。不过这还不算完，最后编译barchart-udt后，bundle那个项目一直不能正常的编译。不过如果你只是为了替换某些不能运行的libxxx.so文件，只要编译完了core项目。就可以从core项目中找到相应的.so文件。然后下载一个2.3.0的jar包。解压后，把相应的文件替换掉。然后再打成jar包。打jar包命令：`jar c [jarfile] -m [MANIFEST file]  [other files]`    \n\n然后放在你的程序中运行即可。barchart-udt的那个Jar可以自动解压出来so文件，然后放在相应的地方。之后就可以使用jni调用了。和正常的使用java socket一样。下一篇会讲如何使用barchart-udt进行编程。\n","slug":"2013-08-10-barchart-udt","published":1,"updated":"2017-06-05T02:52:04.000Z","photos":[],"link":"","_id":"cj3jjjbaq0000k5mj0rgcw01c","content":"<h2 id=\"UDT简单介绍\"><a href=\"#UDT简单介绍\" class=\"headerlink\" title=\"UDT简单介绍\"></a>UDT简单介绍</h2><p> &nbsp;&nbsp;&nbsp;&nbsp;最近在研究UDT相关的东西。这个主要用于高带宽时延积。也就是适用于网络带宽较高，但是丢包还是比较频繁的网络。给个公式：   </p>\n<pre><code>高带宽时延积（缩写）=带宽 * RTT   \n</code></pre><p> &nbsp;&nbsp;&nbsp;&nbsp;UDT相关的可以在这里找到：<a href=\"http://udt.sourceforge.net\" target=\"_blank\" rel=\"external\">http://udt.sourceforge.net</a> 另外对于UDT原版(c++)版，这里有两个下载路径。一个是CVS的。另外一个是git的。   </p>\n<a id=\"more\"></a>\n<ul>\n<li><p>&nbsp;&nbsp;&nbsp;&nbsp;这个站点里，还有一个软件barchart UDT. 这个是jni的UDT.就是底层还是C/C++的库，上层wapper了Java.现在发布的最新的版本是2.3.0.第一个可以使用，而且大规模使用的版本是1.0.2.大家可以在网上找。这几次的升级加了很多没有用的东西。最核心的东西没有怎么变化。不过1.0.2没有javaDoc,基本上要先看一下UDT C版的源码才行。另外1.0.2现在已经没有了源码，因为开源的作者没有写清楚1.0.2是从那个version发布的（也可能是我看得粗糙）。   </p>\n</li>\n<li><p>&nbsp;&nbsp;&nbsp;&nbsp;这个站点里还有一款软件叫做UDT-JAVA.大家最好不要下，这个软件的网络行为和UDT原生的网络行为不太一致。另外这个软件在serverSocket.accept();这个地方开源的作者写的有bug。我使用一次UDT连接时，竟然可以获取到多个UDT socket.不管是怎么回事，最后还是弃之不用了。   </p>\n</li>\n</ul>\n<h2 id=\"barchart-UDT-mvn需要3-0-4以上版本\"><a href=\"#barchart-UDT-mvn需要3-0-4以上版本\" class=\"headerlink\" title=\"barchart UDT  (mvn需要3.0.4以上版本)\"></a>barchart UDT  (mvn需要3.0.4以上版本)</h2><p>这里要着重介绍这个UDT.最好使用的版本是2.3.0。不过该版本从git上download下来。编译花了我一天的功夫。第一个问题就是贵司集群上该死的mvn环境。这个环境是默认的repository是在~/.m2/repository. 这个环境会报：<code>java.io.IOException: No locks available</code>.这个问题就是需要你在$M2_home/conf/settings.xml中加入：<code>&lt;localRepository&gt;/your-path/.m2/repository&lt;/localRepository&gt;</code> 这里的路径需要是绝对路径。第二个问题，贵司没有$M2_home这个变量!这个变量切不可自己随便写，必须找到那个安装的路径,否则mvn不能被执行。当然贵司是不可能有人知道这个路径的。所以…解决方法就是使用<code>mvn -s your-conf</code>来执行mvn.   </p>\n<p>下面看起来就可以直接执行mvn install了。作者说最好进入barchart-udt-archon再执行. 然后遇到这个错误：<code>Exception in thread &quot;main&quot; java.lang.NoSuchMethodError: org.apache.maven.wagon.shared.http4.AbstractHttpClientWagon.getReadTimeout()I</code> 这个错误是mvn的，不过更加可气。这个解决方法就是在pom.xml中加入：</p>\n<pre><code>&lt;extensions&gt;\n  &lt;!-- Whysoever version 2.2 has issues with Maven 3.0.3:\n       java.lang.NoSuchMethodError: org.apache.maven.wagon.shared.http4.AbstractHttpClientWagon.getReadTimeout()I\n  --&gt;\n  &lt;extension&gt;\n    &lt;groupId&gt;org.apache.maven.wagon&lt;/groupId&gt;\n    &lt;artifactId&gt;wagon-ssh&lt;/artifactId&gt;\n    &lt;version&gt;2.1&lt;/version&gt;\n  &lt;/extension&gt;\n  &lt;extension&gt;\n    &lt;groupId&gt;org.apache.maven.wagon&lt;/groupId&gt;\n    &lt;artifactId&gt;wagon-http&lt;/artifactId&gt;\n    &lt;version&gt;2.1&lt;/version&gt;\n  &lt;/extension&gt;\n  &lt;extension&gt;\n    &lt;groupId&gt;org.apache.maven.wagon&lt;/groupId&gt;\n    &lt;artifactId&gt;wagon-file&lt;/artifactId&gt;\n    &lt;version&gt;2.1&lt;/version&gt;\n  &lt;/extension&gt;\n&lt;/extensions&gt;   \n</code></pre><p>上面这块代码必须放在 <code>&lt;project&gt;&lt;build&gt;放在这里&lt;/build&gt;&lt;/project&gt;</code>, 否则mvn会报no Tags错误。  </p>\n<p>看起来可以正常运行了。结果……更加悲剧的事情是mvn需要3.0.4版本。只好在官网上download一个高版本的maven.然后在集群上解压。执行ant命令。这里需要首先设置$M2_HOME这个变量。然后看官网的文档安装。不过这还不算完，最后编译barchart-udt后，bundle那个项目一直不能正常的编译。不过如果你只是为了替换某些不能运行的libxxx.so文件，只要编译完了core项目。就可以从core项目中找到相应的.so文件。然后下载一个2.3.0的jar包。解压后，把相应的文件替换掉。然后再打成jar包。打jar包命令：<code>jar c [jarfile] -m [MANIFEST file]  [other files]</code>    </p>\n<p>然后放在你的程序中运行即可。barchart-udt的那个Jar可以自动解压出来so文件，然后放在相应的地方。之后就可以使用jni调用了。和正常的使用java socket一样。下一篇会讲如何使用barchart-udt进行编程。</p>\n","site":{"data":{}},"excerpt":"<h2 id=\"UDT简单介绍\"><a href=\"#UDT简单介绍\" class=\"headerlink\" title=\"UDT简单介绍\"></a>UDT简单介绍</h2><p> &nbsp;&nbsp;&nbsp;&nbsp;最近在研究UDT相关的东西。这个主要用于高带宽时延积。也就是适用于网络带宽较高，但是丢包还是比较频繁的网络。给个公式：   </p>\n<pre><code>高带宽时延积（缩写）=带宽 * RTT   \n</code></pre><p> &nbsp;&nbsp;&nbsp;&nbsp;UDT相关的可以在这里找到：<a href=\"http://udt.sourceforge.net\" target=\"_blank\" rel=\"external\">http://udt.sourceforge.net</a> 另外对于UDT原版(c++)版，这里有两个下载路径。一个是CVS的。另外一个是git的。   </p>","more":"<ul>\n<li><p>&nbsp;&nbsp;&nbsp;&nbsp;这个站点里，还有一个软件barchart UDT. 这个是jni的UDT.就是底层还是C/C++的库，上层wapper了Java.现在发布的最新的版本是2.3.0.第一个可以使用，而且大规模使用的版本是1.0.2.大家可以在网上找。这几次的升级加了很多没有用的东西。最核心的东西没有怎么变化。不过1.0.2没有javaDoc,基本上要先看一下UDT C版的源码才行。另外1.0.2现在已经没有了源码，因为开源的作者没有写清楚1.0.2是从那个version发布的（也可能是我看得粗糙）。   </p>\n</li>\n<li><p>&nbsp;&nbsp;&nbsp;&nbsp;这个站点里还有一款软件叫做UDT-JAVA.大家最好不要下，这个软件的网络行为和UDT原生的网络行为不太一致。另外这个软件在serverSocket.accept();这个地方开源的作者写的有bug。我使用一次UDT连接时，竟然可以获取到多个UDT socket.不管是怎么回事，最后还是弃之不用了。   </p>\n</li>\n</ul>\n<h2 id=\"barchart-UDT-mvn需要3-0-4以上版本\"><a href=\"#barchart-UDT-mvn需要3-0-4以上版本\" class=\"headerlink\" title=\"barchart UDT  (mvn需要3.0.4以上版本)\"></a>barchart UDT  (mvn需要3.0.4以上版本)</h2><p>这里要着重介绍这个UDT.最好使用的版本是2.3.0。不过该版本从git上download下来。编译花了我一天的功夫。第一个问题就是贵司集群上该死的mvn环境。这个环境是默认的repository是在~/.m2/repository. 这个环境会报：<code>java.io.IOException: No locks available</code>.这个问题就是需要你在$M2_home/conf/settings.xml中加入：<code>&lt;localRepository&gt;/your-path/.m2/repository&lt;/localRepository&gt;</code> 这里的路径需要是绝对路径。第二个问题，贵司没有$M2_home这个变量!这个变量切不可自己随便写，必须找到那个安装的路径,否则mvn不能被执行。当然贵司是不可能有人知道这个路径的。所以…解决方法就是使用<code>mvn -s your-conf</code>来执行mvn.   </p>\n<p>下面看起来就可以直接执行mvn install了。作者说最好进入barchart-udt-archon再执行. 然后遇到这个错误：<code>Exception in thread &quot;main&quot; java.lang.NoSuchMethodError: org.apache.maven.wagon.shared.http4.AbstractHttpClientWagon.getReadTimeout()I</code> 这个错误是mvn的，不过更加可气。这个解决方法就是在pom.xml中加入：</p>\n<pre><code>&lt;extensions&gt;\n  &lt;!-- Whysoever version 2.2 has issues with Maven 3.0.3:\n       java.lang.NoSuchMethodError: org.apache.maven.wagon.shared.http4.AbstractHttpClientWagon.getReadTimeout()I\n  --&gt;\n  &lt;extension&gt;\n    &lt;groupId&gt;org.apache.maven.wagon&lt;/groupId&gt;\n    &lt;artifactId&gt;wagon-ssh&lt;/artifactId&gt;\n    &lt;version&gt;2.1&lt;/version&gt;\n  &lt;/extension&gt;\n  &lt;extension&gt;\n    &lt;groupId&gt;org.apache.maven.wagon&lt;/groupId&gt;\n    &lt;artifactId&gt;wagon-http&lt;/artifactId&gt;\n    &lt;version&gt;2.1&lt;/version&gt;\n  &lt;/extension&gt;\n  &lt;extension&gt;\n    &lt;groupId&gt;org.apache.maven.wagon&lt;/groupId&gt;\n    &lt;artifactId&gt;wagon-file&lt;/artifactId&gt;\n    &lt;version&gt;2.1&lt;/version&gt;\n  &lt;/extension&gt;\n&lt;/extensions&gt;   \n</code></pre><p>上面这块代码必须放在 <code>&lt;project&gt;&lt;build&gt;放在这里&lt;/build&gt;&lt;/project&gt;</code>, 否则mvn会报no Tags错误。  </p>\n<p>看起来可以正常运行了。结果……更加悲剧的事情是mvn需要3.0.4版本。只好在官网上download一个高版本的maven.然后在集群上解压。执行ant命令。这里需要首先设置$M2_HOME这个变量。然后看官网的文档安装。不过这还不算完，最后编译barchart-udt后，bundle那个项目一直不能正常的编译。不过如果你只是为了替换某些不能运行的libxxx.so文件，只要编译完了core项目。就可以从core项目中找到相应的.so文件。然后下载一个2.3.0的jar包。解压后，把相应的文件替换掉。然后再打成jar包。打jar包命令：<code>jar c [jarfile] -m [MANIFEST file]  [other files]</code>    </p>\n<p>然后放在你的程序中运行即可。barchart-udt的那个Jar可以自动解压出来so文件，然后放在相应的地方。之后就可以使用jni调用了。和正常的使用java socket一样。下一篇会讲如何使用barchart-udt进行编程。</p>"},{"layout":"post","title":"barchart UDT(二)","date":"2013-08-19T23:49:00.000Z","comments":1,"_content":"#前言\n\n &nbsp;&nbsp;&nbsp;&nbsp;barchart UDT 最近还是做了些实验。发现在内网中，这个表现实在不怎么样。测试了一下内网`字节=32 时间=2ms TTL=60`,外网`字节=32 时间=27ms TTL=53`.这两个环境中UDT表现不好。下面给出一些结论：\n\n#结论\n \n1. 内网基本不丢包的情况下， udt在15-30并发时upload表现较好。\n\n2. 在外网偶发丢包率的情况下， UDT在上传中，多并发（并发数不超过15）表现较为优异，会偶尔高于TCP.\n\n3. TCP 在偶发丢包/不丢包 网络状态下，性能稳定，而且不会有IO异常情况。\n\n4. UDT在偶发丢包情况下，会有连接失败/重传超时后连接断开等情况发生。需要修改代码逻辑保证完整的数据传输。\n\n5. UDT在大多数情况下，传输率不及TCP。\n\n<!--more-->\n\n#结论分析：\n\n1. UDT 出现在2004年，TCP产生于1975年。UDT为开源项目，但是测试者较少。TCP经过大量的反复试验和OS的支持，性能稳定。TCP比UDT更为成熟。UDT可能还需要更为细致的测试。\n\n2. UDT在UDP搭建可靠性传输。以datagram作为数据单元，一般小于等于1464(bytes)。，而TCP使用协议栈自动分包(1452 bytes),但是TCP在三次握手时可以得知最小的MSS.如果传输路径中小于MTU 1500，可能会导致UDT变慢。因为发送一个包，如果被分片，只要一个分片未被接受，则整个包被丢弃，为协商情况下的UDT,在丢包率增大的情况下，可能会有更多的重传。(3G,4G网络中MTU 没有相关规定，是由运营商自己设置, 动态调整MSS是有必要的。)\n\n3. UDT 在偶发丢包率的情况下，其协议表现很不稳定，逻辑不能简单等同于TCP。这可能需要在编程过程中做更复杂的处理。 \n\n#实验环境\n\n实验环境：\nOS: win7(32位), linux（64位）\n网卡：Marvell Yukon 88E8057 PCI-E Gigabit Ethernet Controller\n主机配置：Pentium(R) Dual-Core E5500 2.8GHz, 2.8GHz， 内存4G(2.97G可用)\n内网 字节=32 时间=2ms TTL=60,外网 字节=32 时间=27ms TTL=53\n传送数据量为4M，15M。另外还有echo数据(少量数据情况)。\n具体实验数据不再一一列举。不过基本上TCP可以打满带宽，而UDT不行。\n特别注意UDT发送数据时会有下面的警告：（在有丢包率的情况下）\n警告: com.barchart.udt.ExceptionUDT: UDT Error : 1001 : server does not exist : connect0:connect [id: 0x074f0e4b] UDT \ncom.barchart.udt.net.ExceptionSendUDT: UDT Error : -4 : user defined message : UDT send time out [id: 0x074f0e3b] \n\n这些警告代表着在丢包存在的情况下。UDT和TCP比，性能不稳定，存在协议上的问题。这里的解决方法需要使用多次尝试链接和多次尝试发送。TCP在相应丢包率的情况下，并没有这些例外的情况发生。\n\n\n","source":"_posts/2013-08-20-barchart-udt-er.markdown","raw":"---\nlayout: post\ntitle: \"barchart UDT(二)\"\ndate: 2013-08-20 07:49\ncomments: true\ncategories: udt,barchart,udp,tcp \n---\n#前言\n\n &nbsp;&nbsp;&nbsp;&nbsp;barchart UDT 最近还是做了些实验。发现在内网中，这个表现实在不怎么样。测试了一下内网`字节=32 时间=2ms TTL=60`,外网`字节=32 时间=27ms TTL=53`.这两个环境中UDT表现不好。下面给出一些结论：\n\n#结论\n \n1. 内网基本不丢包的情况下， udt在15-30并发时upload表现较好。\n\n2. 在外网偶发丢包率的情况下， UDT在上传中，多并发（并发数不超过15）表现较为优异，会偶尔高于TCP.\n\n3. TCP 在偶发丢包/不丢包 网络状态下，性能稳定，而且不会有IO异常情况。\n\n4. UDT在偶发丢包情况下，会有连接失败/重传超时后连接断开等情况发生。需要修改代码逻辑保证完整的数据传输。\n\n5. UDT在大多数情况下，传输率不及TCP。\n\n<!--more-->\n\n#结论分析：\n\n1. UDT 出现在2004年，TCP产生于1975年。UDT为开源项目，但是测试者较少。TCP经过大量的反复试验和OS的支持，性能稳定。TCP比UDT更为成熟。UDT可能还需要更为细致的测试。\n\n2. UDT在UDP搭建可靠性传输。以datagram作为数据单元，一般小于等于1464(bytes)。，而TCP使用协议栈自动分包(1452 bytes),但是TCP在三次握手时可以得知最小的MSS.如果传输路径中小于MTU 1500，可能会导致UDT变慢。因为发送一个包，如果被分片，只要一个分片未被接受，则整个包被丢弃，为协商情况下的UDT,在丢包率增大的情况下，可能会有更多的重传。(3G,4G网络中MTU 没有相关规定，是由运营商自己设置, 动态调整MSS是有必要的。)\n\n3. UDT 在偶发丢包率的情况下，其协议表现很不稳定，逻辑不能简单等同于TCP。这可能需要在编程过程中做更复杂的处理。 \n\n#实验环境\n\n实验环境：\nOS: win7(32位), linux（64位）\n网卡：Marvell Yukon 88E8057 PCI-E Gigabit Ethernet Controller\n主机配置：Pentium(R) Dual-Core E5500 2.8GHz, 2.8GHz， 内存4G(2.97G可用)\n内网 字节=32 时间=2ms TTL=60,外网 字节=32 时间=27ms TTL=53\n传送数据量为4M，15M。另外还有echo数据(少量数据情况)。\n具体实验数据不再一一列举。不过基本上TCP可以打满带宽，而UDT不行。\n特别注意UDT发送数据时会有下面的警告：（在有丢包率的情况下）\n警告: com.barchart.udt.ExceptionUDT: UDT Error : 1001 : server does not exist : connect0:connect [id: 0x074f0e4b] UDT \ncom.barchart.udt.net.ExceptionSendUDT: UDT Error : -4 : user defined message : UDT send time out [id: 0x074f0e3b] \n\n这些警告代表着在丢包存在的情况下。UDT和TCP比，性能不稳定，存在协议上的问题。这里的解决方法需要使用多次尝试链接和多次尝试发送。TCP在相应丢包率的情况下，并没有这些例外的情况发生。\n\n\n","slug":"2013-08-20-barchart-udt-er","published":1,"updated":"2017-06-05T02:52:04.000Z","photos":[],"link":"","_id":"cj3jjjbb20001k5mj5tewg403","content":"<p>#前言</p>\n<p> &nbsp;&nbsp;&nbsp;&nbsp;barchart UDT 最近还是做了些实验。发现在内网中，这个表现实在不怎么样。测试了一下内网<code>字节=32 时间=2ms TTL=60</code>,外网<code>字节=32 时间=27ms TTL=53</code>.这两个环境中UDT表现不好。下面给出一些结论：</p>\n<p>#结论</p>\n<ol>\n<li><p>内网基本不丢包的情况下， udt在15-30并发时upload表现较好。</p>\n</li>\n<li><p>在外网偶发丢包率的情况下， UDT在上传中，多并发（并发数不超过15）表现较为优异，会偶尔高于TCP.</p>\n</li>\n<li><p>TCP 在偶发丢包/不丢包 网络状态下，性能稳定，而且不会有IO异常情况。</p>\n</li>\n<li><p>UDT在偶发丢包情况下，会有连接失败/重传超时后连接断开等情况发生。需要修改代码逻辑保证完整的数据传输。</p>\n</li>\n<li><p>UDT在大多数情况下，传输率不及TCP。</p>\n</li>\n</ol>\n<a id=\"more\"></a>\n<p>#结论分析：</p>\n<ol>\n<li><p>UDT 出现在2004年，TCP产生于1975年。UDT为开源项目，但是测试者较少。TCP经过大量的反复试验和OS的支持，性能稳定。TCP比UDT更为成熟。UDT可能还需要更为细致的测试。</p>\n</li>\n<li><p>UDT在UDP搭建可靠性传输。以datagram作为数据单元，一般小于等于1464(bytes)。，而TCP使用协议栈自动分包(1452 bytes),但是TCP在三次握手时可以得知最小的MSS.如果传输路径中小于MTU 1500，可能会导致UDT变慢。因为发送一个包，如果被分片，只要一个分片未被接受，则整个包被丢弃，为协商情况下的UDT,在丢包率增大的情况下，可能会有更多的重传。(3G,4G网络中MTU 没有相关规定，是由运营商自己设置, 动态调整MSS是有必要的。)</p>\n</li>\n<li><p>UDT 在偶发丢包率的情况下，其协议表现很不稳定，逻辑不能简单等同于TCP。这可能需要在编程过程中做更复杂的处理。 </p>\n</li>\n</ol>\n<p>#实验环境</p>\n<p>实验环境：<br>OS: win7(32位), linux（64位）<br>网卡：Marvell Yukon 88E8057 PCI-E Gigabit Ethernet Controller<br>主机配置：Pentium(R) Dual-Core E5500 2.8GHz, 2.8GHz， 内存4G(2.97G可用)<br>内网 字节=32 时间=2ms TTL=60,外网 字节=32 时间=27ms TTL=53<br>传送数据量为4M，15M。另外还有echo数据(少量数据情况)。<br>具体实验数据不再一一列举。不过基本上TCP可以打满带宽，而UDT不行。<br>特别注意UDT发送数据时会有下面的警告：（在有丢包率的情况下）<br>警告: com.barchart.udt.ExceptionUDT: UDT Error : 1001 : server does not exist : connect0:connect [id: 0x074f0e4b] UDT<br>com.barchart.udt.net.ExceptionSendUDT: UDT Error : -4 : user defined message : UDT send time out [id: 0x074f0e3b] </p>\n<p>这些警告代表着在丢包存在的情况下。UDT和TCP比，性能不稳定，存在协议上的问题。这里的解决方法需要使用多次尝试链接和多次尝试发送。TCP在相应丢包率的情况下，并没有这些例外的情况发生。</p>\n","site":{"data":{}},"excerpt":"<p>#前言</p>\n<p> &nbsp;&nbsp;&nbsp;&nbsp;barchart UDT 最近还是做了些实验。发现在内网中，这个表现实在不怎么样。测试了一下内网<code>字节=32 时间=2ms TTL=60</code>,外网<code>字节=32 时间=27ms TTL=53</code>.这两个环境中UDT表现不好。下面给出一些结论：</p>\n<p>#结论</p>\n<ol>\n<li><p>内网基本不丢包的情况下， udt在15-30并发时upload表现较好。</p>\n</li>\n<li><p>在外网偶发丢包率的情况下， UDT在上传中，多并发（并发数不超过15）表现较为优异，会偶尔高于TCP.</p>\n</li>\n<li><p>TCP 在偶发丢包/不丢包 网络状态下，性能稳定，而且不会有IO异常情况。</p>\n</li>\n<li><p>UDT在偶发丢包情况下，会有连接失败/重传超时后连接断开等情况发生。需要修改代码逻辑保证完整的数据传输。</p>\n</li>\n<li><p>UDT在大多数情况下，传输率不及TCP。</p>\n</li>\n</ol>","more":"<p>#结论分析：</p>\n<ol>\n<li><p>UDT 出现在2004年，TCP产生于1975年。UDT为开源项目，但是测试者较少。TCP经过大量的反复试验和OS的支持，性能稳定。TCP比UDT更为成熟。UDT可能还需要更为细致的测试。</p>\n</li>\n<li><p>UDT在UDP搭建可靠性传输。以datagram作为数据单元，一般小于等于1464(bytes)。，而TCP使用协议栈自动分包(1452 bytes),但是TCP在三次握手时可以得知最小的MSS.如果传输路径中小于MTU 1500，可能会导致UDT变慢。因为发送一个包，如果被分片，只要一个分片未被接受，则整个包被丢弃，为协商情况下的UDT,在丢包率增大的情况下，可能会有更多的重传。(3G,4G网络中MTU 没有相关规定，是由运营商自己设置, 动态调整MSS是有必要的。)</p>\n</li>\n<li><p>UDT 在偶发丢包率的情况下，其协议表现很不稳定，逻辑不能简单等同于TCP。这可能需要在编程过程中做更复杂的处理。 </p>\n</li>\n</ol>\n<p>#实验环境</p>\n<p>实验环境：<br>OS: win7(32位), linux（64位）<br>网卡：Marvell Yukon 88E8057 PCI-E Gigabit Ethernet Controller<br>主机配置：Pentium(R) Dual-Core E5500 2.8GHz, 2.8GHz， 内存4G(2.97G可用)<br>内网 字节=32 时间=2ms TTL=60,外网 字节=32 时间=27ms TTL=53<br>传送数据量为4M，15M。另外还有echo数据(少量数据情况)。<br>具体实验数据不再一一列举。不过基本上TCP可以打满带宽，而UDT不行。<br>特别注意UDT发送数据时会有下面的警告：（在有丢包率的情况下）<br>警告: com.barchart.udt.ExceptionUDT: UDT Error : 1001 : server does not exist : connect0:connect [id: 0x074f0e4b] UDT<br>com.barchart.udt.net.ExceptionSendUDT: UDT Error : -4 : user defined message : UDT send time out [id: 0x074f0e3b] </p>\n<p>这些警告代表着在丢包存在的情况下。UDT和TCP比，性能不稳定，存在协议上的问题。这里的解决方法需要使用多次尝试链接和多次尝试发送。TCP在相应丢包率的情况下，并没有这些例外的情况发生。</p>"},{"layout":"post","title":"致青春","date":"2013-08-24T18:10:00.000Z","comments":1,"_content":"\n &nbsp;&nbsp;&nbsp;&nbsp;昨日和老婆大人一起看了致青春这部电影。这个电影总体感觉挺不错的。而我个人的感觉是电影里郑微和老婆大人有几分相似。要说哪几分，应该是暴力的那几分。嗯...  \n\n &nbsp;&nbsp;&nbsp;&nbsp;昔日的同学也各有成绩。每个人或许都少了些过去的狂妄和稚嫩。但总有些值得记忆的往事。这或许就是导演希望告诉我们的。但是无论如何，青春不在，如何重来？所以感情的重新开始...就只能从青春的记忆和自己的臆想里继续了。   \n \n &nbsp;&nbsp;&nbsp;&nbsp;老婆大人说：如果不是赵薇导演的，这部影片应该是没有人去看的。而我认为：如果不是老婆大人打开这个电影，我是绝对不会看的。嗯，就是这样...\n","source":"_posts/2013-08-25-zhi-qing-chun.markdown","raw":"---\nlayout: post\ntitle: \"致青春\"\ndate: 2013-08-25 02:10\ncomments: true\ncategories: movie,致青春,电影,影评 \n---\n\n &nbsp;&nbsp;&nbsp;&nbsp;昨日和老婆大人一起看了致青春这部电影。这个电影总体感觉挺不错的。而我个人的感觉是电影里郑微和老婆大人有几分相似。要说哪几分，应该是暴力的那几分。嗯...  \n\n &nbsp;&nbsp;&nbsp;&nbsp;昔日的同学也各有成绩。每个人或许都少了些过去的狂妄和稚嫩。但总有些值得记忆的往事。这或许就是导演希望告诉我们的。但是无论如何，青春不在，如何重来？所以感情的重新开始...就只能从青春的记忆和自己的臆想里继续了。   \n \n &nbsp;&nbsp;&nbsp;&nbsp;老婆大人说：如果不是赵薇导演的，这部影片应该是没有人去看的。而我认为：如果不是老婆大人打开这个电影，我是绝对不会看的。嗯，就是这样...\n","slug":"2013-08-25-zhi-qing-chun","published":1,"updated":"2017-06-05T02:52:04.000Z","photos":[],"link":"","_id":"cj3jjjbb60002k5mjx55w8thd","content":"<p> &nbsp;&nbsp;&nbsp;&nbsp;昨日和老婆大人一起看了致青春这部电影。这个电影总体感觉挺不错的。而我个人的感觉是电影里郑微和老婆大人有几分相似。要说哪几分，应该是暴力的那几分。嗯…  </p>\n<p> &nbsp;&nbsp;&nbsp;&nbsp;昔日的同学也各有成绩。每个人或许都少了些过去的狂妄和稚嫩。但总有些值得记忆的往事。这或许就是导演希望告诉我们的。但是无论如何，青春不在，如何重来？所以感情的重新开始…就只能从青春的记忆和自己的臆想里继续了。   </p>\n<p> &nbsp;&nbsp;&nbsp;&nbsp;老婆大人说：如果不是赵薇导演的，这部影片应该是没有人去看的。而我认为：如果不是老婆大人打开这个电影，我是绝对不会看的。嗯，就是这样…</p>\n","site":{"data":{}},"excerpt":"","more":"<p> &nbsp;&nbsp;&nbsp;&nbsp;昨日和老婆大人一起看了致青春这部电影。这个电影总体感觉挺不错的。而我个人的感觉是电影里郑微和老婆大人有几分相似。要说哪几分，应该是暴力的那几分。嗯…  </p>\n<p> &nbsp;&nbsp;&nbsp;&nbsp;昔日的同学也各有成绩。每个人或许都少了些过去的狂妄和稚嫩。但总有些值得记忆的往事。这或许就是导演希望告诉我们的。但是无论如何，青春不在，如何重来？所以感情的重新开始…就只能从青春的记忆和自己的臆想里继续了。   </p>\n<p> &nbsp;&nbsp;&nbsp;&nbsp;老婆大人说：如果不是赵薇导演的，这部影片应该是没有人去看的。而我认为：如果不是老婆大人打开这个电影，我是绝对不会看的。嗯，就是这样…</p>\n"},{"layout":"post","title":"微信公众平台开发中的安全问题","date":"2013-08-29T21:37:00.000Z","comments":1,"_content":"\n## 0. 我在开发中  \n &nbsp;&nbsp;&nbsp;&nbsp;近期一直在利用有道云笔记API在微信上开发一款应用。因为是服务器端与服务器端的交互。所以有很多安全问题值得考虑。  \n\n## 1. 微信的认证   \n &nbsp;&nbsp;&nbsp;&nbsp;微信的认证很简单，标准的认证是这样子的：  \n![token 授权](http://mp.weixin.qq.com/wiki/images/9/90/Callbackprofile.jpg)  \n &nbsp;&nbsp;&nbsp;&nbsp;微信这种授权模式相当的山寨，如果只是单纯的靠这种token授权，服务器很容易被攻破。这里需要填写的url必须是使用80端口，而且url中也不能有很特殊的字符。不过token中可以有特殊字符。所以开发者需要尽量将自己的token设的复杂。微信首先认证连接时会将signature,echostr,nonce,timestamp这四个URL参数以GET请求的方式发送过来。数据则以POST请求的方式发送到同样的URL上，并且URL参数变为signature,echostr,nonce。nonce是和请求中的timestamp成对的。也就是说timestamp+nonce是唯一的。所以这里可以防止重放攻击。另外server与server通信之间,timestamp的单位是秒，一般误差也就是分钟级别的。这样可以从另外一个角度防止重放攻击。所以开发者应该在GET,POST请求中都加入这些参数的校验。\n\n<!--more-->\n\n## 2. Token安全   \n &nbsp;&nbsp;&nbsp;&nbsp;上面的认证建立在Token的安全基础上。另外因为微信公众平台中URL不能有特殊字符，所以这个URL很容易被破掉。而Token这个也可有通过暴力尝试来破解。大概也没有帐号设很长的密码。所以你要做的就是将Token设的超长，另外加入些特殊字符。  \n\n## 3. TO 收信者ID\n &nbsp;&nbsp;&nbsp;&nbsp;微信发来的是一个发信者的ID和一个收信者的ID。收信者ID一直是不变的。如果Token被破解了，那么下面一个安全的措施是收信者的ID，因为收信者ID这个对于伪造者来说，这个是不可见的。但是对于能截获微信服务器和应用服务器之间的中间者来说。这个就是可以轻易获取的。   \n\n## 4. From 发信者ID    \n &nbsp;&nbsp;&nbsp;&nbsp;下面就不算是微信的安全了。应该是我做的应用本身的安全问题。首先我需要使用有道云笔记的授权。需要发给用户一个链接。用户点击该链接完成授权。第一版应用中，该链接值是不变化的，或者说某一部分例如from参数是不变化。这就意味着，如果用户不小心将该链接暴露出去。那么其他用户完全可以将此用户发来的消息存入到自己的笔记中。这个是个很严重的安全问题。而且对外也不应该在链接中暴露from 发信者ID。所以需要使用其他的参数来隐藏from ID，另外授权链接只能成功授权使用一次。  \n\n## 5. 内容的XSS风险\n &nbsp;&nbsp;&nbsp;&nbsp;这个问题，其实只要是存储内容，就一定隐含着XSS问题。所以这个微信内容需要经过XSS过滤。\n\n## 6. 跳转链接隐含的XSS风险\n &nbsp;&nbsp;&nbsp;&nbsp;授权的过程中有大量的跳转操作，特别是callback参数，需要对该参数做特殊的\\r\\n过滤。另外如果该参数会写入到页面中，那么也应该对整个页面的内容做XSS过滤。特别要防止拼接而形成的XSS问题。\n\n## 7. 隐式登录问题\n &nbsp;&nbsp;&nbsp;&nbsp;之前的有道云笔记Oauth1.0版本，一直有隐式登录授权问题。就是一旦成功授权后，就难以改用第二个帐号了。现在这这一版顺便解决了这个问题。\n\n## 8. 微信 Android bug\n &nbsp;&nbsp;&nbsp;&nbsp;顺便说说Android的微信的bug。有一个很奇葩的bug是这样的。如果服务器返回`<a href=\"chillyc.info\">帐前卒</a>`。如果你在微信界面中点击了“帐前卒”，那么就理所当然的跳转到了chillyc.info.然后如果服务器下次返回`<a href=\"blog.csdn.net/cctt_1\">帐前卒</a>`。那么点击该链接，仍然会打开chillyc.info! F\\*\\*K.   \n\n\n## 总结\n &nbsp;&nbsp;&nbsp;&nbsp;开发完在微信平台的这个功能。让我感觉到微信私有接口太多，太过诡异的技巧。视频、音频这些都是通过大客户合作的方式获取的。另外有时候微信自身的bug占用了自己太多的时间。还有一个感觉，就是有道云笔记授权，特别是1.0,真的不是很好用，存在很多未解决的问题。不过2.0也上线了。大家会更加轻松的使用。嗯嗯......自己这边开发的还能改，别人开发的...都不知道该去哪里问......另外微信部门明显不是合作态度。可能和它们合作的公司太多的缘故。好了，最后一点：安全基本是靠自己...公众平台的用户名密码也不要设置的太简单...\n\n","source":"_posts/2013-08-30-wei-xin-gong-zhong-ping-tai-kai-fa-zhong-de-an-quan-wen-ti.markdown","raw":"---\nlayout: post\ntitle: \"微信公众平台开发中的安全问题\"\ndate: 2013-08-30 05:37\ncomments: true\ncategories: security,微信,公众平台,bug \n---\n\n## 0. 我在开发中  \n &nbsp;&nbsp;&nbsp;&nbsp;近期一直在利用有道云笔记API在微信上开发一款应用。因为是服务器端与服务器端的交互。所以有很多安全问题值得考虑。  \n\n## 1. 微信的认证   \n &nbsp;&nbsp;&nbsp;&nbsp;微信的认证很简单，标准的认证是这样子的：  \n![token 授权](http://mp.weixin.qq.com/wiki/images/9/90/Callbackprofile.jpg)  \n &nbsp;&nbsp;&nbsp;&nbsp;微信这种授权模式相当的山寨，如果只是单纯的靠这种token授权，服务器很容易被攻破。这里需要填写的url必须是使用80端口，而且url中也不能有很特殊的字符。不过token中可以有特殊字符。所以开发者需要尽量将自己的token设的复杂。微信首先认证连接时会将signature,echostr,nonce,timestamp这四个URL参数以GET请求的方式发送过来。数据则以POST请求的方式发送到同样的URL上，并且URL参数变为signature,echostr,nonce。nonce是和请求中的timestamp成对的。也就是说timestamp+nonce是唯一的。所以这里可以防止重放攻击。另外server与server通信之间,timestamp的单位是秒，一般误差也就是分钟级别的。这样可以从另外一个角度防止重放攻击。所以开发者应该在GET,POST请求中都加入这些参数的校验。\n\n<!--more-->\n\n## 2. Token安全   \n &nbsp;&nbsp;&nbsp;&nbsp;上面的认证建立在Token的安全基础上。另外因为微信公众平台中URL不能有特殊字符，所以这个URL很容易被破掉。而Token这个也可有通过暴力尝试来破解。大概也没有帐号设很长的密码。所以你要做的就是将Token设的超长，另外加入些特殊字符。  \n\n## 3. TO 收信者ID\n &nbsp;&nbsp;&nbsp;&nbsp;微信发来的是一个发信者的ID和一个收信者的ID。收信者ID一直是不变的。如果Token被破解了，那么下面一个安全的措施是收信者的ID，因为收信者ID这个对于伪造者来说，这个是不可见的。但是对于能截获微信服务器和应用服务器之间的中间者来说。这个就是可以轻易获取的。   \n\n## 4. From 发信者ID    \n &nbsp;&nbsp;&nbsp;&nbsp;下面就不算是微信的安全了。应该是我做的应用本身的安全问题。首先我需要使用有道云笔记的授权。需要发给用户一个链接。用户点击该链接完成授权。第一版应用中，该链接值是不变化的，或者说某一部分例如from参数是不变化。这就意味着，如果用户不小心将该链接暴露出去。那么其他用户完全可以将此用户发来的消息存入到自己的笔记中。这个是个很严重的安全问题。而且对外也不应该在链接中暴露from 发信者ID。所以需要使用其他的参数来隐藏from ID，另外授权链接只能成功授权使用一次。  \n\n## 5. 内容的XSS风险\n &nbsp;&nbsp;&nbsp;&nbsp;这个问题，其实只要是存储内容，就一定隐含着XSS问题。所以这个微信内容需要经过XSS过滤。\n\n## 6. 跳转链接隐含的XSS风险\n &nbsp;&nbsp;&nbsp;&nbsp;授权的过程中有大量的跳转操作，特别是callback参数，需要对该参数做特殊的\\r\\n过滤。另外如果该参数会写入到页面中，那么也应该对整个页面的内容做XSS过滤。特别要防止拼接而形成的XSS问题。\n\n## 7. 隐式登录问题\n &nbsp;&nbsp;&nbsp;&nbsp;之前的有道云笔记Oauth1.0版本，一直有隐式登录授权问题。就是一旦成功授权后，就难以改用第二个帐号了。现在这这一版顺便解决了这个问题。\n\n## 8. 微信 Android bug\n &nbsp;&nbsp;&nbsp;&nbsp;顺便说说Android的微信的bug。有一个很奇葩的bug是这样的。如果服务器返回`<a href=\"chillyc.info\">帐前卒</a>`。如果你在微信界面中点击了“帐前卒”，那么就理所当然的跳转到了chillyc.info.然后如果服务器下次返回`<a href=\"blog.csdn.net/cctt_1\">帐前卒</a>`。那么点击该链接，仍然会打开chillyc.info! F\\*\\*K.   \n\n\n## 总结\n &nbsp;&nbsp;&nbsp;&nbsp;开发完在微信平台的这个功能。让我感觉到微信私有接口太多，太过诡异的技巧。视频、音频这些都是通过大客户合作的方式获取的。另外有时候微信自身的bug占用了自己太多的时间。还有一个感觉，就是有道云笔记授权，特别是1.0,真的不是很好用，存在很多未解决的问题。不过2.0也上线了。大家会更加轻松的使用。嗯嗯......自己这边开发的还能改，别人开发的...都不知道该去哪里问......另外微信部门明显不是合作态度。可能和它们合作的公司太多的缘故。好了，最后一点：安全基本是靠自己...公众平台的用户名密码也不要设置的太简单...\n\n","slug":"2013-08-30-wei-xin-gong-zhong-ping-tai-kai-fa-zhong-de-an-quan-wen-ti","published":1,"updated":"2017-06-05T02:52:04.000Z","photos":[],"link":"","_id":"cj3jjjbba0004k5mjjbj55z40","content":"<h2 id=\"0-我在开发中\"><a href=\"#0-我在开发中\" class=\"headerlink\" title=\"0. 我在开发中\"></a>0. 我在开发中</h2><p> &nbsp;&nbsp;&nbsp;&nbsp;近期一直在利用有道云笔记API在微信上开发一款应用。因为是服务器端与服务器端的交互。所以有很多安全问题值得考虑。  </p>\n<h2 id=\"1-微信的认证\"><a href=\"#1-微信的认证\" class=\"headerlink\" title=\"1. 微信的认证\"></a>1. 微信的认证</h2><p> &nbsp;&nbsp;&nbsp;&nbsp;微信的认证很简单，标准的认证是这样子的：<br><img src=\"http://mp.weixin.qq.com/wiki/images/9/90/Callbackprofile.jpg\" alt=\"token 授权\"><br> &nbsp;&nbsp;&nbsp;&nbsp;微信这种授权模式相当的山寨，如果只是单纯的靠这种token授权，服务器很容易被攻破。这里需要填写的url必须是使用80端口，而且url中也不能有很特殊的字符。不过token中可以有特殊字符。所以开发者需要尽量将自己的token设的复杂。微信首先认证连接时会将signature,echostr,nonce,timestamp这四个URL参数以GET请求的方式发送过来。数据则以POST请求的方式发送到同样的URL上，并且URL参数变为signature,echostr,nonce。nonce是和请求中的timestamp成对的。也就是说timestamp+nonce是唯一的。所以这里可以防止重放攻击。另外server与server通信之间,timestamp的单位是秒，一般误差也就是分钟级别的。这样可以从另外一个角度防止重放攻击。所以开发者应该在GET,POST请求中都加入这些参数的校验。</p>\n<a id=\"more\"></a>\n<h2 id=\"2-Token安全\"><a href=\"#2-Token安全\" class=\"headerlink\" title=\"2. Token安全\"></a>2. Token安全</h2><p> &nbsp;&nbsp;&nbsp;&nbsp;上面的认证建立在Token的安全基础上。另外因为微信公众平台中URL不能有特殊字符，所以这个URL很容易被破掉。而Token这个也可有通过暴力尝试来破解。大概也没有帐号设很长的密码。所以你要做的就是将Token设的超长，另外加入些特殊字符。  </p>\n<h2 id=\"3-TO-收信者ID\"><a href=\"#3-TO-收信者ID\" class=\"headerlink\" title=\"3. TO 收信者ID\"></a>3. TO 收信者ID</h2><p> &nbsp;&nbsp;&nbsp;&nbsp;微信发来的是一个发信者的ID和一个收信者的ID。收信者ID一直是不变的。如果Token被破解了，那么下面一个安全的措施是收信者的ID，因为收信者ID这个对于伪造者来说，这个是不可见的。但是对于能截获微信服务器和应用服务器之间的中间者来说。这个就是可以轻易获取的。   </p>\n<h2 id=\"4-From-发信者ID\"><a href=\"#4-From-发信者ID\" class=\"headerlink\" title=\"4. From 发信者ID\"></a>4. From 发信者ID</h2><p> &nbsp;&nbsp;&nbsp;&nbsp;下面就不算是微信的安全了。应该是我做的应用本身的安全问题。首先我需要使用有道云笔记的授权。需要发给用户一个链接。用户点击该链接完成授权。第一版应用中，该链接值是不变化的，或者说某一部分例如from参数是不变化。这就意味着，如果用户不小心将该链接暴露出去。那么其他用户完全可以将此用户发来的消息存入到自己的笔记中。这个是个很严重的安全问题。而且对外也不应该在链接中暴露from 发信者ID。所以需要使用其他的参数来隐藏from ID，另外授权链接只能成功授权使用一次。  </p>\n<h2 id=\"5-内容的XSS风险\"><a href=\"#5-内容的XSS风险\" class=\"headerlink\" title=\"5. 内容的XSS风险\"></a>5. 内容的XSS风险</h2><p> &nbsp;&nbsp;&nbsp;&nbsp;这个问题，其实只要是存储内容，就一定隐含着XSS问题。所以这个微信内容需要经过XSS过滤。</p>\n<h2 id=\"6-跳转链接隐含的XSS风险\"><a href=\"#6-跳转链接隐含的XSS风险\" class=\"headerlink\" title=\"6. 跳转链接隐含的XSS风险\"></a>6. 跳转链接隐含的XSS风险</h2><p> &nbsp;&nbsp;&nbsp;&nbsp;授权的过程中有大量的跳转操作，特别是callback参数，需要对该参数做特殊的\\r\\n过滤。另外如果该参数会写入到页面中，那么也应该对整个页面的内容做XSS过滤。特别要防止拼接而形成的XSS问题。</p>\n<h2 id=\"7-隐式登录问题\"><a href=\"#7-隐式登录问题\" class=\"headerlink\" title=\"7. 隐式登录问题\"></a>7. 隐式登录问题</h2><p> &nbsp;&nbsp;&nbsp;&nbsp;之前的有道云笔记Oauth1.0版本，一直有隐式登录授权问题。就是一旦成功授权后，就难以改用第二个帐号了。现在这这一版顺便解决了这个问题。</p>\n<h2 id=\"8-微信-Android-bug\"><a href=\"#8-微信-Android-bug\" class=\"headerlink\" title=\"8. 微信 Android bug\"></a>8. 微信 Android bug</h2><p> &nbsp;&nbsp;&nbsp;&nbsp;顺便说说Android的微信的bug。有一个很奇葩的bug是这样的。如果服务器返回<code>&lt;a href=&quot;chillyc.info&quot;&gt;帐前卒&lt;/a&gt;</code>。如果你在微信界面中点击了“帐前卒”，那么就理所当然的跳转到了chillyc.info.然后如果服务器下次返回<code>&lt;a href=&quot;blog.csdn.net/cctt_1&quot;&gt;帐前卒&lt;/a&gt;</code>。那么点击该链接，仍然会打开chillyc.info! F**K.   </p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p> &nbsp;&nbsp;&nbsp;&nbsp;开发完在微信平台的这个功能。让我感觉到微信私有接口太多，太过诡异的技巧。视频、音频这些都是通过大客户合作的方式获取的。另外有时候微信自身的bug占用了自己太多的时间。还有一个感觉，就是有道云笔记授权，特别是1.0,真的不是很好用，存在很多未解决的问题。不过2.0也上线了。大家会更加轻松的使用。嗯嗯……自己这边开发的还能改，别人开发的…都不知道该去哪里问……另外微信部门明显不是合作态度。可能和它们合作的公司太多的缘故。好了，最后一点：安全基本是靠自己…公众平台的用户名密码也不要设置的太简单…</p>\n","site":{"data":{}},"excerpt":"<h2 id=\"0-我在开发中\"><a href=\"#0-我在开发中\" class=\"headerlink\" title=\"0. 我在开发中\"></a>0. 我在开发中</h2><p> &nbsp;&nbsp;&nbsp;&nbsp;近期一直在利用有道云笔记API在微信上开发一款应用。因为是服务器端与服务器端的交互。所以有很多安全问题值得考虑。  </p>\n<h2 id=\"1-微信的认证\"><a href=\"#1-微信的认证\" class=\"headerlink\" title=\"1. 微信的认证\"></a>1. 微信的认证</h2><p> &nbsp;&nbsp;&nbsp;&nbsp;微信的认证很简单，标准的认证是这样子的：<br><img src=\"http://mp.weixin.qq.com/wiki/images/9/90/Callbackprofile.jpg\" alt=\"token 授权\"><br> &nbsp;&nbsp;&nbsp;&nbsp;微信这种授权模式相当的山寨，如果只是单纯的靠这种token授权，服务器很容易被攻破。这里需要填写的url必须是使用80端口，而且url中也不能有很特殊的字符。不过token中可以有特殊字符。所以开发者需要尽量将自己的token设的复杂。微信首先认证连接时会将signature,echostr,nonce,timestamp这四个URL参数以GET请求的方式发送过来。数据则以POST请求的方式发送到同样的URL上，并且URL参数变为signature,echostr,nonce。nonce是和请求中的timestamp成对的。也就是说timestamp+nonce是唯一的。所以这里可以防止重放攻击。另外server与server通信之间,timestamp的单位是秒，一般误差也就是分钟级别的。这样可以从另外一个角度防止重放攻击。所以开发者应该在GET,POST请求中都加入这些参数的校验。</p>","more":"<h2 id=\"2-Token安全\"><a href=\"#2-Token安全\" class=\"headerlink\" title=\"2. Token安全\"></a>2. Token安全</h2><p> &nbsp;&nbsp;&nbsp;&nbsp;上面的认证建立在Token的安全基础上。另外因为微信公众平台中URL不能有特殊字符，所以这个URL很容易被破掉。而Token这个也可有通过暴力尝试来破解。大概也没有帐号设很长的密码。所以你要做的就是将Token设的超长，另外加入些特殊字符。  </p>\n<h2 id=\"3-TO-收信者ID\"><a href=\"#3-TO-收信者ID\" class=\"headerlink\" title=\"3. TO 收信者ID\"></a>3. TO 收信者ID</h2><p> &nbsp;&nbsp;&nbsp;&nbsp;微信发来的是一个发信者的ID和一个收信者的ID。收信者ID一直是不变的。如果Token被破解了，那么下面一个安全的措施是收信者的ID，因为收信者ID这个对于伪造者来说，这个是不可见的。但是对于能截获微信服务器和应用服务器之间的中间者来说。这个就是可以轻易获取的。   </p>\n<h2 id=\"4-From-发信者ID\"><a href=\"#4-From-发信者ID\" class=\"headerlink\" title=\"4. From 发信者ID\"></a>4. From 发信者ID</h2><p> &nbsp;&nbsp;&nbsp;&nbsp;下面就不算是微信的安全了。应该是我做的应用本身的安全问题。首先我需要使用有道云笔记的授权。需要发给用户一个链接。用户点击该链接完成授权。第一版应用中，该链接值是不变化的，或者说某一部分例如from参数是不变化。这就意味着，如果用户不小心将该链接暴露出去。那么其他用户完全可以将此用户发来的消息存入到自己的笔记中。这个是个很严重的安全问题。而且对外也不应该在链接中暴露from 发信者ID。所以需要使用其他的参数来隐藏from ID，另外授权链接只能成功授权使用一次。  </p>\n<h2 id=\"5-内容的XSS风险\"><a href=\"#5-内容的XSS风险\" class=\"headerlink\" title=\"5. 内容的XSS风险\"></a>5. 内容的XSS风险</h2><p> &nbsp;&nbsp;&nbsp;&nbsp;这个问题，其实只要是存储内容，就一定隐含着XSS问题。所以这个微信内容需要经过XSS过滤。</p>\n<h2 id=\"6-跳转链接隐含的XSS风险\"><a href=\"#6-跳转链接隐含的XSS风险\" class=\"headerlink\" title=\"6. 跳转链接隐含的XSS风险\"></a>6. 跳转链接隐含的XSS风险</h2><p> &nbsp;&nbsp;&nbsp;&nbsp;授权的过程中有大量的跳转操作，特别是callback参数，需要对该参数做特殊的\\r\\n过滤。另外如果该参数会写入到页面中，那么也应该对整个页面的内容做XSS过滤。特别要防止拼接而形成的XSS问题。</p>\n<h2 id=\"7-隐式登录问题\"><a href=\"#7-隐式登录问题\" class=\"headerlink\" title=\"7. 隐式登录问题\"></a>7. 隐式登录问题</h2><p> &nbsp;&nbsp;&nbsp;&nbsp;之前的有道云笔记Oauth1.0版本，一直有隐式登录授权问题。就是一旦成功授权后，就难以改用第二个帐号了。现在这这一版顺便解决了这个问题。</p>\n<h2 id=\"8-微信-Android-bug\"><a href=\"#8-微信-Android-bug\" class=\"headerlink\" title=\"8. 微信 Android bug\"></a>8. 微信 Android bug</h2><p> &nbsp;&nbsp;&nbsp;&nbsp;顺便说说Android的微信的bug。有一个很奇葩的bug是这样的。如果服务器返回<code>&lt;a href=&quot;chillyc.info&quot;&gt;帐前卒&lt;/a&gt;</code>。如果你在微信界面中点击了“帐前卒”，那么就理所当然的跳转到了chillyc.info.然后如果服务器下次返回<code>&lt;a href=&quot;blog.csdn.net/cctt_1&quot;&gt;帐前卒&lt;/a&gt;</code>。那么点击该链接，仍然会打开chillyc.info! F**K.   </p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p> &nbsp;&nbsp;&nbsp;&nbsp;开发完在微信平台的这个功能。让我感觉到微信私有接口太多，太过诡异的技巧。视频、音频这些都是通过大客户合作的方式获取的。另外有时候微信自身的bug占用了自己太多的时间。还有一个感觉，就是有道云笔记授权，特别是1.0,真的不是很好用，存在很多未解决的问题。不过2.0也上线了。大家会更加轻松的使用。嗯嗯……自己这边开发的还能改，别人开发的…都不知道该去哪里问……另外微信部门明显不是合作态度。可能和它们合作的公司太多的缘故。好了，最后一点：安全基本是靠自己…公众平台的用户名密码也不要设置的太简单…</p>"},{"layout":"post","title":"电影记","date":"2011-02-21T16:00:00.000Z","wordpress_id":344,"comments":1,"_content":"<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_description\" content=\"集合各种影评，色遇，最强喜事，将爱情进行到底，平凡与浮华，怎样才算是成功。\" />\n<meta name=\"_su_keywords\" content=\"影评,电影,喜剧\" />\n<meta name=\"_su_rich_snippet_type\" content=\"none\" />\n<meta name=\"_su_title\" content=\"电影,影评,赏析,让子弹飞,最强喜事,非诚勿扰,封杀,三傻大闹宝莱坞,大笑江湖\" />\n<meta name=\"views\" content=\"341\" />\n近期还是看了蛮多电影的..从小沈阳的大笑江湖再到姜文的让子弹飞，再到阔别十年的将爱，再到刚刚看的三傻大闹宝莱坞。电影是看的很多，有很多电影却不知道到底要讲什么。简简单单的惩恶扬善永远是国产电影的主题。但是花样不是那么多，主题情节还是老套，也不知道是否应该变变样子。\n\n不过让子弹飞的情节还是蛮丰富的，各种人物的勾心斗角小心算计还是演的蛮有意思的。影片和配乐挺有霸气，但是故事中的深层含义还是不便分析，当然也可能根本没有啥深层含义。\n\n小沈阳和赵本山的大笑江湖足足让我们睡了很长时间。那叫一个困呀...本来就是喜剧片拍得跟电视剧似地，一直枯燥的对话，能不让人昏昏欲睡吗？(值得一提的是，我很喜欢大笑江湖的主题歌，朗朗上口。)喜剧如果从到到尾一直喜，观众未免要喜得疲劳。最强喜事一直喜庆中..不过亮点在于全是大明星，依菲宝的话说就是比较养眼...喜剧嘛就要拍的像武林外传、致命伴旅、三傻、喜羊羊一样，不要全是喜事，酸甜苦辣才是有喜感的剧情。\n\n再说说将爱，那拍得可是有功底了。每三秒一个广告，国产的感冒冲剂都流行到法国了...总之拍电影就拍电影，不是拍广告剧。其主要原因还是现在的国人想钱想疯了。不过现在社会衡量的某人成功的标准大概也就只有钱了。要不怎么说钱是一切商品的等价物。不过将爱中第二个场景中的XX贩卖机真的存在吗？将爱情进行到底是一部很有趣的影片，影片反映了当代离婚的现状。它真的拍得不如葛大爷的非2好看。非2虽不真实但也说的是实话。将爱却充满了小资的浮华和故作的苍凉。\n\n最好看的还是三傻，平凡中说事，事却不平凡。简易的剧情，却无所谓好人坏人，无所谓善人恶人。所谓大善，除了佛祖我还不知道有谁...所谓大恶，除了撒旦，我也不知道有谁...佛曰，无不可度之人。大抵也是这个意思。\n\n不过三傻中提到教育制度的改革，我想改革之后，也不会有很多人上学了吧。那又怎么论成败呢？远古的时候成败是打架打出来的，古代成败是考举人考出来的，近代是挣钱挣出来的。不过也挺好，至少不用再打架了。\n\n近期我的blog被伟大的东西封了。不知道为什么，可能是因为里面挂了twitter的外链，也可能是写了穿越的方法。不过因为我的blog不是很出名的缘故，所以伟大的不会使用专门封杀IP的方式，它只是采用了DNS不解析的重置服务。所以改改hosts还是可以上的。不会的人可以参考 <a href=\"http://blog.csdn.net/cctt_1/archive/2011/02/22/6200191.aspx\" target=\"_blank\">这里</a>。“一切顺利，追求卓越”代表了三傻的积极人生态度——苦尽总有甘来时。\n\n祝大家一切顺利。祝大家能在自己喜欢的工作中追求卓越。当然如果不喜欢任何的工作的...请<a href=\"http://blog.csdn.net/cctt_1\" target=\"_self\">猛击这里</a>!\n","source":"_posts/2011-02-22-dian-ying-ji.markdown","raw":"---\nlayout: post\ntitle: \"电影记\"\ndate: 2011-2-22\nwordpress_id: 344\ncomments: true\ncategories: [\"funny\", \"movie\", \"rw\", \"see-hear\", \"喜剧\", \"影评\", \"电影\"]\n---\n<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_description\" content=\"集合各种影评，色遇，最强喜事，将爱情进行到底，平凡与浮华，怎样才算是成功。\" />\n<meta name=\"_su_keywords\" content=\"影评,电影,喜剧\" />\n<meta name=\"_su_rich_snippet_type\" content=\"none\" />\n<meta name=\"_su_title\" content=\"电影,影评,赏析,让子弹飞,最强喜事,非诚勿扰,封杀,三傻大闹宝莱坞,大笑江湖\" />\n<meta name=\"views\" content=\"341\" />\n近期还是看了蛮多电影的..从小沈阳的大笑江湖再到姜文的让子弹飞，再到阔别十年的将爱，再到刚刚看的三傻大闹宝莱坞。电影是看的很多，有很多电影却不知道到底要讲什么。简简单单的惩恶扬善永远是国产电影的主题。但是花样不是那么多，主题情节还是老套，也不知道是否应该变变样子。\n\n不过让子弹飞的情节还是蛮丰富的，各种人物的勾心斗角小心算计还是演的蛮有意思的。影片和配乐挺有霸气，但是故事中的深层含义还是不便分析，当然也可能根本没有啥深层含义。\n\n小沈阳和赵本山的大笑江湖足足让我们睡了很长时间。那叫一个困呀...本来就是喜剧片拍得跟电视剧似地，一直枯燥的对话，能不让人昏昏欲睡吗？(值得一提的是，我很喜欢大笑江湖的主题歌，朗朗上口。)喜剧如果从到到尾一直喜，观众未免要喜得疲劳。最强喜事一直喜庆中..不过亮点在于全是大明星，依菲宝的话说就是比较养眼...喜剧嘛就要拍的像武林外传、致命伴旅、三傻、喜羊羊一样，不要全是喜事，酸甜苦辣才是有喜感的剧情。\n\n再说说将爱，那拍得可是有功底了。每三秒一个广告，国产的感冒冲剂都流行到法国了...总之拍电影就拍电影，不是拍广告剧。其主要原因还是现在的国人想钱想疯了。不过现在社会衡量的某人成功的标准大概也就只有钱了。要不怎么说钱是一切商品的等价物。不过将爱中第二个场景中的XX贩卖机真的存在吗？将爱情进行到底是一部很有趣的影片，影片反映了当代离婚的现状。它真的拍得不如葛大爷的非2好看。非2虽不真实但也说的是实话。将爱却充满了小资的浮华和故作的苍凉。\n\n最好看的还是三傻，平凡中说事，事却不平凡。简易的剧情，却无所谓好人坏人，无所谓善人恶人。所谓大善，除了佛祖我还不知道有谁...所谓大恶，除了撒旦，我也不知道有谁...佛曰，无不可度之人。大抵也是这个意思。\n\n不过三傻中提到教育制度的改革，我想改革之后，也不会有很多人上学了吧。那又怎么论成败呢？远古的时候成败是打架打出来的，古代成败是考举人考出来的，近代是挣钱挣出来的。不过也挺好，至少不用再打架了。\n\n近期我的blog被伟大的东西封了。不知道为什么，可能是因为里面挂了twitter的外链，也可能是写了穿越的方法。不过因为我的blog不是很出名的缘故，所以伟大的不会使用专门封杀IP的方式，它只是采用了DNS不解析的重置服务。所以改改hosts还是可以上的。不会的人可以参考 <a href=\"http://blog.csdn.net/cctt_1/archive/2011/02/22/6200191.aspx\" target=\"_blank\">这里</a>。“一切顺利，追求卓越”代表了三傻的积极人生态度——苦尽总有甘来时。\n\n祝大家一切顺利。祝大家能在自己喜欢的工作中追求卓越。当然如果不喜欢任何的工作的...请<a href=\"http://blog.csdn.net/cctt_1\" target=\"_self\">猛击这里</a>!\n","slug":"2011-02-22-dian-ying-ji","published":1,"updated":"2017-06-05T02:56:52.000Z","photos":[],"link":"","_id":"cj3jjpb7o0000zumj37nm4ga6","content":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_description\" content=\"集合各种影评，色遇，最强喜事，将爱情进行到底，平凡与浮华，怎样才算是成功。\"></p>\n<p><meta name=\"_su_keywords\" content=\"影评,电影,喜剧\"></p>\n<p><meta name=\"_su_rich_snippet_type\" content=\"none\"></p>\n<p><meta name=\"_su_title\" content=\"电影,影评,赏析,让子弹飞,最强喜事,非诚勿扰,封杀,三傻大闹宝莱坞,大笑江湖\"></p>\n<p><meta name=\"views\" content=\"341\"><br>近期还是看了蛮多电影的..从小沈阳的大笑江湖再到姜文的让子弹飞，再到阔别十年的将爱，再到刚刚看的三傻大闹宝莱坞。电影是看的很多，有很多电影却不知道到底要讲什么。简简单单的惩恶扬善永远是国产电影的主题。但是花样不是那么多，主题情节还是老套，也不知道是否应该变变样子。</p>\n<p>不过让子弹飞的情节还是蛮丰富的，各种人物的勾心斗角小心算计还是演的蛮有意思的。影片和配乐挺有霸气，但是故事中的深层含义还是不便分析，当然也可能根本没有啥深层含义。</p>\n<p>小沈阳和赵本山的大笑江湖足足让我们睡了很长时间。那叫一个困呀…本来就是喜剧片拍得跟电视剧似地，一直枯燥的对话，能不让人昏昏欲睡吗？(值得一提的是，我很喜欢大笑江湖的主题歌，朗朗上口。)喜剧如果从到到尾一直喜，观众未免要喜得疲劳。最强喜事一直喜庆中..不过亮点在于全是大明星，依菲宝的话说就是比较养眼…喜剧嘛就要拍的像武林外传、致命伴旅、三傻、喜羊羊一样，不要全是喜事，酸甜苦辣才是有喜感的剧情。</p>\n<p>再说说将爱，那拍得可是有功底了。每三秒一个广告，国产的感冒冲剂都流行到法国了…总之拍电影就拍电影，不是拍广告剧。其主要原因还是现在的国人想钱想疯了。不过现在社会衡量的某人成功的标准大概也就只有钱了。要不怎么说钱是一切商品的等价物。不过将爱中第二个场景中的XX贩卖机真的存在吗？将爱情进行到底是一部很有趣的影片，影片反映了当代离婚的现状。它真的拍得不如葛大爷的非2好看。非2虽不真实但也说的是实话。将爱却充满了小资的浮华和故作的苍凉。</p>\n<p>最好看的还是三傻，平凡中说事，事却不平凡。简易的剧情，却无所谓好人坏人，无所谓善人恶人。所谓大善，除了佛祖我还不知道有谁…所谓大恶，除了撒旦，我也不知道有谁…佛曰，无不可度之人。大抵也是这个意思。</p>\n<p>不过三傻中提到教育制度的改革，我想改革之后，也不会有很多人上学了吧。那又怎么论成败呢？远古的时候成败是打架打出来的，古代成败是考举人考出来的，近代是挣钱挣出来的。不过也挺好，至少不用再打架了。</p>\n<p>近期我的blog被伟大的东西封了。不知道为什么，可能是因为里面挂了twitter的外链，也可能是写了穿越的方法。不过因为我的blog不是很出名的缘故，所以伟大的不会使用专门封杀IP的方式，它只是采用了DNS不解析的重置服务。所以改改hosts还是可以上的。不会的人可以参考 <a href=\"http://blog.csdn.net/cctt_1/archive/2011/02/22/6200191.aspx\" target=\"_blank\">这里</a>。“一切顺利，追求卓越”代表了三傻的积极人生态度——苦尽总有甘来时。</p>\n<p>祝大家一切顺利。祝大家能在自己喜欢的工作中追求卓越。当然如果不喜欢任何的工作的…请<a href=\"http://blog.csdn.net/cctt_1\" target=\"_self\">猛击这里</a>!</p>\n","site":{"data":{}},"excerpt":"","more":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_description\" content=\"集合各种影评，色遇，最强喜事，将爱情进行到底，平凡与浮华，怎样才算是成功。\"></p>\n<p><meta name=\"_su_keywords\" content=\"影评,电影,喜剧\"></p>\n<p><meta name=\"_su_rich_snippet_type\" content=\"none\"></p>\n<p><meta name=\"_su_title\" content=\"电影,影评,赏析,让子弹飞,最强喜事,非诚勿扰,封杀,三傻大闹宝莱坞,大笑江湖\"></p>\n<p><meta name=\"views\" content=\"341\"><br>近期还是看了蛮多电影的..从小沈阳的大笑江湖再到姜文的让子弹飞，再到阔别十年的将爱，再到刚刚看的三傻大闹宝莱坞。电影是看的很多，有很多电影却不知道到底要讲什么。简简单单的惩恶扬善永远是国产电影的主题。但是花样不是那么多，主题情节还是老套，也不知道是否应该变变样子。</p>\n<p>不过让子弹飞的情节还是蛮丰富的，各种人物的勾心斗角小心算计还是演的蛮有意思的。影片和配乐挺有霸气，但是故事中的深层含义还是不便分析，当然也可能根本没有啥深层含义。</p>\n<p>小沈阳和赵本山的大笑江湖足足让我们睡了很长时间。那叫一个困呀…本来就是喜剧片拍得跟电视剧似地，一直枯燥的对话，能不让人昏昏欲睡吗？(值得一提的是，我很喜欢大笑江湖的主题歌，朗朗上口。)喜剧如果从到到尾一直喜，观众未免要喜得疲劳。最强喜事一直喜庆中..不过亮点在于全是大明星，依菲宝的话说就是比较养眼…喜剧嘛就要拍的像武林外传、致命伴旅、三傻、喜羊羊一样，不要全是喜事，酸甜苦辣才是有喜感的剧情。</p>\n<p>再说说将爱，那拍得可是有功底了。每三秒一个广告，国产的感冒冲剂都流行到法国了…总之拍电影就拍电影，不是拍广告剧。其主要原因还是现在的国人想钱想疯了。不过现在社会衡量的某人成功的标准大概也就只有钱了。要不怎么说钱是一切商品的等价物。不过将爱中第二个场景中的XX贩卖机真的存在吗？将爱情进行到底是一部很有趣的影片，影片反映了当代离婚的现状。它真的拍得不如葛大爷的非2好看。非2虽不真实但也说的是实话。将爱却充满了小资的浮华和故作的苍凉。</p>\n<p>最好看的还是三傻，平凡中说事，事却不平凡。简易的剧情，却无所谓好人坏人，无所谓善人恶人。所谓大善，除了佛祖我还不知道有谁…所谓大恶，除了撒旦，我也不知道有谁…佛曰，无不可度之人。大抵也是这个意思。</p>\n<p>不过三傻中提到教育制度的改革，我想改革之后，也不会有很多人上学了吧。那又怎么论成败呢？远古的时候成败是打架打出来的，古代成败是考举人考出来的，近代是挣钱挣出来的。不过也挺好，至少不用再打架了。</p>\n<p>近期我的blog被伟大的东西封了。不知道为什么，可能是因为里面挂了twitter的外链，也可能是写了穿越的方法。不过因为我的blog不是很出名的缘故，所以伟大的不会使用专门封杀IP的方式，它只是采用了DNS不解析的重置服务。所以改改hosts还是可以上的。不会的人可以参考 <a href=\"http://blog.csdn.net/cctt_1/archive/2011/02/22/6200191.aspx\" target=\"_blank\">这里</a>。“一切顺利，追求卓越”代表了三傻的积极人生态度——苦尽总有甘来时。</p>\n<p>祝大家一切顺利。祝大家能在自己喜欢的工作中追求卓越。当然如果不喜欢任何的工作的…请<a href=\"http://blog.csdn.net/cctt_1\" target=\"_self\">猛击这里</a>!</p>\n"},{"layout":"post","title":"笔试面试题集——大数据量处理","date":"2011-03-01T16:00:00.000Z","wordpress_id":350,"comments":1,"_content":"<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_description\" content=\"big data process solution\" />\n<meta name=\"_su_rich_snippet_type\" content=\"none\" />\n<meta name=\"_su_title\" content=\"big data process\" />\n<meta name=\"views\" content=\"294\" />\n<meta name=\"_wp_old_slug\" content=\"bigdat\" />\n<div id=\"blog_article\">\n\n转自：<a href=\"http://i.yoho.cn/473260/logview/1816730.html\">http://i.yoho.cn/473260/logview/1816730.html</a>\n\n大数据量的问题是很多面试笔试中经常出现的问题，比如baidu google 腾讯 这样的一些涉及到海量数据的公司经常会问到。\n\n下面的方法是我对海量数据的处理方法进行了一个一般性的总结，当然这些方法可能并不能完全覆盖所有的问题，但是这样的一些方法也基本可以处理绝大多数遇到的问题。下面的一些问题基本直接来源于公司的面试笔试题目，方法不一定最优，如果你有更好的处理方法，欢迎与我讨论。\n\n1.Bloom filter\n\n适用范围：可以用来实现数据字典，进行数据的判重，或者集合求交集\n\n基本原理及要点：\n对 于原理来说很简单，位数组+k个独立hash函数。将hash函数对应的值的位数组置1，查找时如果发现所有hash函数对应位都是1说明存在，很明显这 个过程并不保证查找的结果是100%正确的。同时也不支持删除一个已经插入的关键字，因为该关键字对应的位会牵动到其他的关键字。所以一个简单的改进就是  counting Bloom filter，用一个counter数组代替位数组，就可以支持删除了。\n\n还有一个比较重要的问题，如 何根据输入元素个数n，确定位数组m的大小及hash函数个数。当hash函数个数k=(ln2)*(m/n)时错误率最小。在错误率不大于E的情况 下，m至少要等于n*lg(1/E)才能表示任意n个元素的集合。但m还应该更大些，因为还要保证bit数组里至少一半为0，则m应 该&gt;=nlg(1/E)*lge 大概就是nlg(1/E)1.44倍(lg表示以2为底的对数)。\n\n举个例子我们假设错误率为0.01，则此时m应大概是n的13倍。这样k大概是8个。\n\n注意这里m与n的单位不同，m是bit为单位，而n则是以元素个数为单位(准确的说是不同元素的个数)。通常单个元素的长度都是有很多bit的。所以使用bloom filter内存上通常都是节省的。\n\n扩展：\nBloom  filter将集合中的元素映射到位数组中，用k（k为哈希函数个数）个映射位是否全1表示元素在不在这个集合中。Counting bloom  filter（CBF）将位数组中的每一位扩展为一个counter，从而支持了元素的删除操作。Spectral Bloom  Filter（SBF）将其与集合元素的出现次数关联。SBF采用counter中的最小值来近似表示元素的出现频率。\n\n问题实例：给你A,B两个文件，各存放50亿条URL，每条URL占用64字节，内存限制是4G，让你找出A,B文件共同的URL。如果是三个乃至n个文件呢？\n\n根 据这个问题我们来计算下内存的占用，4G=2^32大概是40亿*8大概是340亿，n=50亿，如果按出错率0.01算需要的大概是650亿个bit。 现在可用的是340亿，相差并不多，这样可能会使出错率上升些。另外如果这些urlip是一一对应的，就可以转换成ip，则大大简单了。\n\n2.Hashing\n\n适用范围：快速查找，删除的基本数据结构，通常需要总数据量可以放入内存\n\n基本原理及要点：\nhash函数选择，针对字符串，整数，排列，具体相应的hash方法。\n碰撞处理，一种是open hashing，也称为拉链法；另一种就是closed hashing，也称开地址法，opened addressing。\n\n扩展：\nd-left  hashing中的d是多个的意思，我们先简化这个问题，看一看2-left hashing。2-left  hashing指的是将一个哈希表分成长度相等的两半，分别叫做T1和T2，给T1和T2分别配备一个哈希函数，h1和h2。在存储一个新的key时，同 时用两个哈希函数进行计算，得出两个地址h1[key]和h2[key]。这时需要检查T1中的h1[key]位置和T2中的h2[key]位置，哪一个 位置已经存储的（有碰撞的）key比较多，然后将新key存储在负载少的位置。如果两边一样多，比如两个位置都为空或者都存储了一个key，就把新key  存储在左边的T1子表中，2-left也由此而来。在查找一个key时，必须进行两次hash，同时查找两个位置。\n\n问题实例：\n1).海量日志数据，提取出某日访问百度次数最多的那个IP。\n\nIP的数目还是有限的，最多2^32个，所以可以考虑使用hash将ip直接存入内存，然后进行统计。\n\n3.bit-map\n\n适用范围：可进行数据的快速查找，判重，删除，一般来说数据范围是int的10倍以下\n\n基本原理及要点：使用bit数组来表示某些元素是否存在，比如8位电话号码\n\n扩展：bloom filter可以看做是对bit-map的扩展\n\n问题实例：\n\n1)已知某个文件内包含一些电话号码，每个号码为8位数字，统计不同号码的个数。\n\n8位最多99 999 999，大概需要99m个bit，大概10几m字节的内存即可。\n\n2)2.5亿个整数中找出不重复的整数的个数，内存空间不足以容纳这2.5亿个整数。\n\n将bit-map扩展一下，用2bit表示一个数即可，0表示未出现，1表示出现一次，2表示出现2次及以上。或者我们不用2bit来进行表示，我们用两个bit-map即可模拟实现这个2bit-map。\n\n4.堆\n\n适用范围：海量数据前n大，并且n比较小，堆可以放入内存\n\n基 本原理及要点：最大堆求前n小，最小堆求前n大。方法，比如求前n小，我们比较当前元素与最大堆里的最大元素，如果它小于最大元素，则应该替换那个最大元 素。这样最后得到的n个元素就是最小的n个。适合大数据量，求前n小，n的大小比较小的情况，这样可以扫描一遍即可得到所有的前n元素，效率很高。\n\n扩展：双堆，一个最大堆与一个最小堆结合，可以用来维护中位数。\n\n问题实例：\n1)100w个数中找最大的前100个数。\n\n用一个100个元素大小的最小堆即可。\n\n5.双层桶划分\n\n适用范围：第k大，中位数，不重复或重复的数字\n\n基本原理及要点：因为元素范围很大，不能利用直接寻址表，所以通过多次划分，逐步确定范围，然后最后在一个可以接受的范围内进行。可以通过多次缩小，双层只是一个例子。\n\n扩展：\n\n问题实例：\n1).2.5亿个整数中找出不重复的整数的个数，内存空间不足以容纳这2.5亿个整数。\n\n有点像鸽巢原理，整数个数为2^32,也就是，我们可以将这2^32个数，划分为2^8个区域(比如用单个文件代表一个区域)，然后将数据分离到不同的区域，然后不同的区域在利用bitmap就可以直接解决了。也就是说只要有足够的磁盘空间，就可以很方便的解决。\n\n2).5亿个int找它们的中位数。\n\n这个例子比上面那个更明显。首先我们将int划分为2^16个区域，然后读取数据统计落到各个区域里的数的个数，之后我们根据统计结果就可以判断中位数落到那个区域，同时知道这个区域中的第几大数刚好是中位数。然后第二次扫描我们只统计落在这个区域中的那些数就可以了。\n\n实 际上，如果不是int是int64，我们可以经过3次这样的划分即可降低到可以接受的程度。即可以先将int64分成2^24个区域，然后确定区域的第几 大数，在将该区域分成2^20个子区域，然后确定是子区域的第几大数，然后子区域里的数的个数只有2^20，就可以直接利用direct addr  table进行统计了。\n\n6.数据库索引\n\n适用范围：大数据量的增删改查\n\n基本原理及要点：利用数据的设计实现方法，对海量数据的增删改查进行处理。\n扩展：\n问题实例：\n\n\n7.倒排索引(Inverted index)\n\n适用范围：搜索引擎，关键字查询\n\n基本原理及要点：为何叫倒排索引？一种索引方法，被用来存储在全文搜索下某个单词在一个文档或者一组文档中的存储位置的映射。\n\n以英文为例，下面是要被索引的文本：\nT0 = \"it is what it is\"\nT1 = \"what is it\"\nT2 = \"it is a banana\"\n我们就能得到下面的反向文件索引：\n\"a\":      {2}\n\"banana\": {2}\n\"is\":     {0, 1, 2}\n\"it\":     {0, 1, 2}\n\"what\":   {0, 1}\n检索的条件\"what\", \"is\" 和 \"it\" 将对应集合的交集。\n\n正 向索引开发出来用来存储每个文档的单词的列表。正向索引的查询往往满足每个文档有序频繁的全文查询和每个单词在校验文档中的验证这样的查询。在正向索引 中，文档占据了中心的位置，每个文档指向了一个它所包含的索引项的序列。也就是说文档指向了它包含的那些单词，而反向索引则是单词指向了包含它的文档，很 容易看到这个反向的关系。\n\n扩展：\n\n问题实例：文档检索系统，查询那些文件包含了某单词，比如常见的学术论文的关键字搜索。\n\n8.外排序\n\n适用范围：大数据的排序，去重\n\n基本原理及要点：外排序的归并方法，置换选择 败者树原理，最优归并树\n\n扩展：\n\n问题实例：\n1).有一个1G大小的一个文件，里面每一行是一个词，词的大小不超过16个字节，内存限制大小是1M。返回频数最高的100个词。\n\n这个数据具有很明显的特点，词的大小为16个字节，但是内存只有1m做hash有些不够，所以可以用来排序。内存可以当输入缓冲区使用。\n\n9.trie树\n\n适用范围：数据量大，重复多，但是数据种类小可以放入内存\n\n基本原理及要点：实现方式，节点孩子的表示方式\n\n扩展：压缩实现。\n\n问题实例：\n1).有10个文件，每个文件1G， 每个文件的每一行都存放的是用户的query，每个文件的query都可能重复。要你按照query的频度排序 。\n\n2).1000万字符串，其中有些是相同的(重复),需要把重复的全部去掉，保留没有重复的字符串。请问怎么设计和实现？\n\n3).寻找热门查询：查询串的重复度比较高，虽然总数是1千万，但如果除去重复后，不超过3百万个，每个不超过255字节。\n\n10.分布式处理 mapreduce\n\n适用范围：数据量大，但是数据种类小可以放入内存\n\n基本原理及要点：将数据交给不同的机器去处理，数据划分，结果归约。\n\n扩展：\n\n问题实例：\n\n1).The canonical example application of MapReduce is a process to count the appearances of\n\neach different word in a set of documents:\nvoid map(String name, String document):\n// name: document name\n// document: document contents\nfor each word w in document:\nEmitIntermediate(w, 1);\n\nvoid reduce(String word, Iterator partialCounts):\n// key: a word\n// values: a list of aggregated partial counts\nint result = 0;\nfor each v in partialCounts:\nresult += ParseInt(v);\nEmit(result);\nHere, each document is split in words, and each word is counted initially with a \"1\" value by\n\nthe Map function, using the word as the result key. The framework puts together all the pairs\n\nwith the same key and feeds them to the same call to Reduce, thus this function just needs to\n\nsum all of its input values to find the total appearances of that word.\n\n2).海量数据分布在100台电脑中，想个办法高效统计出这批数据的TOP10。\n\n3).一共有N个机器，每个机器上有N个数。每个机器最多存O(N)个数并对它们操作。如何找到N^2个数的中数(median)？\n\n\n经典问题分析\n\n上千万or亿数据（有重复），统计其中出现次数最多的前N个数据,分两种情况：可一次读入内存，不可一次读入。\n\n可用思路：trie树+堆，数据库索引，划分子集分别统计，hash，分布式计算，近似统计，外排序\n\n所 谓的是否能一次读入内存，实际上应该指去除重复后的数据量。如果去重后数据可以放入内存，我们可以为数据建立字典，比如通过  map，hashmap，trie，然后直接进行统计即可。当然在更新每条数据的出现次数的时候，我们可以利用一个堆来维护出现次数最多的前N个数据，当 然这样导致维护次数增加，不如完全统计后在求前N大效率高。\n\n如果数据无法放入内存。一方面我们可以考虑上面的字典方法能否被改进以适应这种情形，可以做的改变就是将字典存放到硬盘上，而不是内存，这可以参考数据库的存储方法。\n\n当 然还有更好的方法，就是可以采用分布式计算，基本上就是map-reduce过程，首先可以根据数据值或者把数据hash(md5)后的值，将数据按照范 围划分到不同的机子，最好可以让数据划分后可以一次读入内存，这样不同的机子负责处理各种的数值范围，实际上就是map。得到结果后，各个机子只需拿出各 自的出现次数最多的前N个数据，然后汇总，选出所有的数据中出现次数最多的前N个数据，这实际上就是reduce过程。\n\n实际上可能想直 接将数据均分到不同的机子上进行处理，这样是无法得到正确的解的。因为一个数据可能被均分到不同的机子上，而另一个则可能完全聚集到一个机子上，同时还可 能存在具有相同数目的数据。比如我们要找出现次数最多的前100个，我们将1000万的数据分布到10台机器上，找到每台出现次数最多的前  100个，归并之后这样不能保证找到真正的第100个，因为比如出现次数最多的第100个可能有1万个，但是它被分到了10台机子，这样在每台上只有1千 个，假设这些机子排名在1000个之前的那些都是单独分布在一台机子上的，比如有1001个，这样本来具有1万个的这个就会被淘汰，即使我们让每台机子选 出出现次数最多的1000个再归并，仍然会出错，因为可能存在大量个数为1001个的发生聚集。因此不能将数据随便均分到不同机子上，而是要根据hash  后的值将它们映射到不同的机子上处理，让不同的机器处理一个数值范围。\n\n而外排序的方法会消耗大量的IO，效率不会很高。而上面的分布式方法，也可以用于单机版本，也就是将总的数据根据值的范围，划分成多个不同的子文件，然后逐个处理。处理完毕之后再对这些单词的及其出现频率进行一个归并。实际上就可以利用一个外排序的归并过程。\n\n另外还可以考虑近似计算，也就是我们可以通过结合自然语言属性，只将那些真正实际中出现最多的那些词作为一个字典，使得这个规模可以放入内存。\n\n转载请注明出处：<a href=\"http://bbs.xjtu.edu.cn/\" target=\"_blank\">http://bbs.xjtu.edu.cn</a>\n作者phylips@bmy\n\n参考文献：\n<a href=\"http://blog.csdn.net/jiaomeng/archive/2007/03/08/1523940.aspx\" target=\"_blank\">http://blog.csdn.net/jiaomeng/archive/2007/03/08/1523940.aspx</a> d-Left Hashing\n<a href=\"http://blog.csdn.net/jiaomeng/archive/2007/01/27/1495500.aspx\" target=\"_blank\">http://blog.csdn.net/jiaomeng/archive/2007/01/27/1495500.aspx</a>\n<a href=\"http://en.wikipedia.org/wiki/Bloom_filter\" target=\"_blank\">http://en.wikipedia.org/wiki/Bloom_filter</a>\n<a href=\"http://hi.baidu.com/xdzhang_china/blog/item/2847777e83fb020229388a15.html\" target=\"_blank\">http://hi.baidu.com/xdzhang_china/blog/item/2847777e83fb020229388a15.html</a> 应用Bloom Filter的几个小技巧\n<a href=\"http://zh.wikipedia.org/wiki/%E5%80%92%E6%8E%92%E7%B4%A2%E5%BC%95\" target=\"_blank\">http://zh.wikipedia.org/wiki/%E5%80%92%E6%8E%92%E7%B4%A2%E5%BC%95</a>\n\n</div>\n<table cellspacing=\"0\" cellpadding=\"0\">\n<tbody></tbody>\n</table>\n","source":"_posts/2011-03-02-bigdata.markdown","raw":"---\nlayout: post\ntitle: \"笔试面试题集——大数据量处理\"\ndate: 2011-3-2\nwordpress_id: 350\ncomments: true\ncategories: [\"big\", \"chinese\", \"data\", \"math\", \"大数据\"]\n---\n<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_description\" content=\"big data process solution\" />\n<meta name=\"_su_rich_snippet_type\" content=\"none\" />\n<meta name=\"_su_title\" content=\"big data process\" />\n<meta name=\"views\" content=\"294\" />\n<meta name=\"_wp_old_slug\" content=\"bigdat\" />\n<div id=\"blog_article\">\n\n转自：<a href=\"http://i.yoho.cn/473260/logview/1816730.html\">http://i.yoho.cn/473260/logview/1816730.html</a>\n\n大数据量的问题是很多面试笔试中经常出现的问题，比如baidu google 腾讯 这样的一些涉及到海量数据的公司经常会问到。\n\n下面的方法是我对海量数据的处理方法进行了一个一般性的总结，当然这些方法可能并不能完全覆盖所有的问题，但是这样的一些方法也基本可以处理绝大多数遇到的问题。下面的一些问题基本直接来源于公司的面试笔试题目，方法不一定最优，如果你有更好的处理方法，欢迎与我讨论。\n\n1.Bloom filter\n\n适用范围：可以用来实现数据字典，进行数据的判重，或者集合求交集\n\n基本原理及要点：\n对 于原理来说很简单，位数组+k个独立hash函数。将hash函数对应的值的位数组置1，查找时如果发现所有hash函数对应位都是1说明存在，很明显这 个过程并不保证查找的结果是100%正确的。同时也不支持删除一个已经插入的关键字，因为该关键字对应的位会牵动到其他的关键字。所以一个简单的改进就是  counting Bloom filter，用一个counter数组代替位数组，就可以支持删除了。\n\n还有一个比较重要的问题，如 何根据输入元素个数n，确定位数组m的大小及hash函数个数。当hash函数个数k=(ln2)*(m/n)时错误率最小。在错误率不大于E的情况 下，m至少要等于n*lg(1/E)才能表示任意n个元素的集合。但m还应该更大些，因为还要保证bit数组里至少一半为0，则m应 该&gt;=nlg(1/E)*lge 大概就是nlg(1/E)1.44倍(lg表示以2为底的对数)。\n\n举个例子我们假设错误率为0.01，则此时m应大概是n的13倍。这样k大概是8个。\n\n注意这里m与n的单位不同，m是bit为单位，而n则是以元素个数为单位(准确的说是不同元素的个数)。通常单个元素的长度都是有很多bit的。所以使用bloom filter内存上通常都是节省的。\n\n扩展：\nBloom  filter将集合中的元素映射到位数组中，用k（k为哈希函数个数）个映射位是否全1表示元素在不在这个集合中。Counting bloom  filter（CBF）将位数组中的每一位扩展为一个counter，从而支持了元素的删除操作。Spectral Bloom  Filter（SBF）将其与集合元素的出现次数关联。SBF采用counter中的最小值来近似表示元素的出现频率。\n\n问题实例：给你A,B两个文件，各存放50亿条URL，每条URL占用64字节，内存限制是4G，让你找出A,B文件共同的URL。如果是三个乃至n个文件呢？\n\n根 据这个问题我们来计算下内存的占用，4G=2^32大概是40亿*8大概是340亿，n=50亿，如果按出错率0.01算需要的大概是650亿个bit。 现在可用的是340亿，相差并不多，这样可能会使出错率上升些。另外如果这些urlip是一一对应的，就可以转换成ip，则大大简单了。\n\n2.Hashing\n\n适用范围：快速查找，删除的基本数据结构，通常需要总数据量可以放入内存\n\n基本原理及要点：\nhash函数选择，针对字符串，整数，排列，具体相应的hash方法。\n碰撞处理，一种是open hashing，也称为拉链法；另一种就是closed hashing，也称开地址法，opened addressing。\n\n扩展：\nd-left  hashing中的d是多个的意思，我们先简化这个问题，看一看2-left hashing。2-left  hashing指的是将一个哈希表分成长度相等的两半，分别叫做T1和T2，给T1和T2分别配备一个哈希函数，h1和h2。在存储一个新的key时，同 时用两个哈希函数进行计算，得出两个地址h1[key]和h2[key]。这时需要检查T1中的h1[key]位置和T2中的h2[key]位置，哪一个 位置已经存储的（有碰撞的）key比较多，然后将新key存储在负载少的位置。如果两边一样多，比如两个位置都为空或者都存储了一个key，就把新key  存储在左边的T1子表中，2-left也由此而来。在查找一个key时，必须进行两次hash，同时查找两个位置。\n\n问题实例：\n1).海量日志数据，提取出某日访问百度次数最多的那个IP。\n\nIP的数目还是有限的，最多2^32个，所以可以考虑使用hash将ip直接存入内存，然后进行统计。\n\n3.bit-map\n\n适用范围：可进行数据的快速查找，判重，删除，一般来说数据范围是int的10倍以下\n\n基本原理及要点：使用bit数组来表示某些元素是否存在，比如8位电话号码\n\n扩展：bloom filter可以看做是对bit-map的扩展\n\n问题实例：\n\n1)已知某个文件内包含一些电话号码，每个号码为8位数字，统计不同号码的个数。\n\n8位最多99 999 999，大概需要99m个bit，大概10几m字节的内存即可。\n\n2)2.5亿个整数中找出不重复的整数的个数，内存空间不足以容纳这2.5亿个整数。\n\n将bit-map扩展一下，用2bit表示一个数即可，0表示未出现，1表示出现一次，2表示出现2次及以上。或者我们不用2bit来进行表示，我们用两个bit-map即可模拟实现这个2bit-map。\n\n4.堆\n\n适用范围：海量数据前n大，并且n比较小，堆可以放入内存\n\n基 本原理及要点：最大堆求前n小，最小堆求前n大。方法，比如求前n小，我们比较当前元素与最大堆里的最大元素，如果它小于最大元素，则应该替换那个最大元 素。这样最后得到的n个元素就是最小的n个。适合大数据量，求前n小，n的大小比较小的情况，这样可以扫描一遍即可得到所有的前n元素，效率很高。\n\n扩展：双堆，一个最大堆与一个最小堆结合，可以用来维护中位数。\n\n问题实例：\n1)100w个数中找最大的前100个数。\n\n用一个100个元素大小的最小堆即可。\n\n5.双层桶划分\n\n适用范围：第k大，中位数，不重复或重复的数字\n\n基本原理及要点：因为元素范围很大，不能利用直接寻址表，所以通过多次划分，逐步确定范围，然后最后在一个可以接受的范围内进行。可以通过多次缩小，双层只是一个例子。\n\n扩展：\n\n问题实例：\n1).2.5亿个整数中找出不重复的整数的个数，内存空间不足以容纳这2.5亿个整数。\n\n有点像鸽巢原理，整数个数为2^32,也就是，我们可以将这2^32个数，划分为2^8个区域(比如用单个文件代表一个区域)，然后将数据分离到不同的区域，然后不同的区域在利用bitmap就可以直接解决了。也就是说只要有足够的磁盘空间，就可以很方便的解决。\n\n2).5亿个int找它们的中位数。\n\n这个例子比上面那个更明显。首先我们将int划分为2^16个区域，然后读取数据统计落到各个区域里的数的个数，之后我们根据统计结果就可以判断中位数落到那个区域，同时知道这个区域中的第几大数刚好是中位数。然后第二次扫描我们只统计落在这个区域中的那些数就可以了。\n\n实 际上，如果不是int是int64，我们可以经过3次这样的划分即可降低到可以接受的程度。即可以先将int64分成2^24个区域，然后确定区域的第几 大数，在将该区域分成2^20个子区域，然后确定是子区域的第几大数，然后子区域里的数的个数只有2^20，就可以直接利用direct addr  table进行统计了。\n\n6.数据库索引\n\n适用范围：大数据量的增删改查\n\n基本原理及要点：利用数据的设计实现方法，对海量数据的增删改查进行处理。\n扩展：\n问题实例：\n\n\n7.倒排索引(Inverted index)\n\n适用范围：搜索引擎，关键字查询\n\n基本原理及要点：为何叫倒排索引？一种索引方法，被用来存储在全文搜索下某个单词在一个文档或者一组文档中的存储位置的映射。\n\n以英文为例，下面是要被索引的文本：\nT0 = \"it is what it is\"\nT1 = \"what is it\"\nT2 = \"it is a banana\"\n我们就能得到下面的反向文件索引：\n\"a\":      {2}\n\"banana\": {2}\n\"is\":     {0, 1, 2}\n\"it\":     {0, 1, 2}\n\"what\":   {0, 1}\n检索的条件\"what\", \"is\" 和 \"it\" 将对应集合的交集。\n\n正 向索引开发出来用来存储每个文档的单词的列表。正向索引的查询往往满足每个文档有序频繁的全文查询和每个单词在校验文档中的验证这样的查询。在正向索引 中，文档占据了中心的位置，每个文档指向了一个它所包含的索引项的序列。也就是说文档指向了它包含的那些单词，而反向索引则是单词指向了包含它的文档，很 容易看到这个反向的关系。\n\n扩展：\n\n问题实例：文档检索系统，查询那些文件包含了某单词，比如常见的学术论文的关键字搜索。\n\n8.外排序\n\n适用范围：大数据的排序，去重\n\n基本原理及要点：外排序的归并方法，置换选择 败者树原理，最优归并树\n\n扩展：\n\n问题实例：\n1).有一个1G大小的一个文件，里面每一行是一个词，词的大小不超过16个字节，内存限制大小是1M。返回频数最高的100个词。\n\n这个数据具有很明显的特点，词的大小为16个字节，但是内存只有1m做hash有些不够，所以可以用来排序。内存可以当输入缓冲区使用。\n\n9.trie树\n\n适用范围：数据量大，重复多，但是数据种类小可以放入内存\n\n基本原理及要点：实现方式，节点孩子的表示方式\n\n扩展：压缩实现。\n\n问题实例：\n1).有10个文件，每个文件1G， 每个文件的每一行都存放的是用户的query，每个文件的query都可能重复。要你按照query的频度排序 。\n\n2).1000万字符串，其中有些是相同的(重复),需要把重复的全部去掉，保留没有重复的字符串。请问怎么设计和实现？\n\n3).寻找热门查询：查询串的重复度比较高，虽然总数是1千万，但如果除去重复后，不超过3百万个，每个不超过255字节。\n\n10.分布式处理 mapreduce\n\n适用范围：数据量大，但是数据种类小可以放入内存\n\n基本原理及要点：将数据交给不同的机器去处理，数据划分，结果归约。\n\n扩展：\n\n问题实例：\n\n1).The canonical example application of MapReduce is a process to count the appearances of\n\neach different word in a set of documents:\nvoid map(String name, String document):\n// name: document name\n// document: document contents\nfor each word w in document:\nEmitIntermediate(w, 1);\n\nvoid reduce(String word, Iterator partialCounts):\n// key: a word\n// values: a list of aggregated partial counts\nint result = 0;\nfor each v in partialCounts:\nresult += ParseInt(v);\nEmit(result);\nHere, each document is split in words, and each word is counted initially with a \"1\" value by\n\nthe Map function, using the word as the result key. The framework puts together all the pairs\n\nwith the same key and feeds them to the same call to Reduce, thus this function just needs to\n\nsum all of its input values to find the total appearances of that word.\n\n2).海量数据分布在100台电脑中，想个办法高效统计出这批数据的TOP10。\n\n3).一共有N个机器，每个机器上有N个数。每个机器最多存O(N)个数并对它们操作。如何找到N^2个数的中数(median)？\n\n\n经典问题分析\n\n上千万or亿数据（有重复），统计其中出现次数最多的前N个数据,分两种情况：可一次读入内存，不可一次读入。\n\n可用思路：trie树+堆，数据库索引，划分子集分别统计，hash，分布式计算，近似统计，外排序\n\n所 谓的是否能一次读入内存，实际上应该指去除重复后的数据量。如果去重后数据可以放入内存，我们可以为数据建立字典，比如通过  map，hashmap，trie，然后直接进行统计即可。当然在更新每条数据的出现次数的时候，我们可以利用一个堆来维护出现次数最多的前N个数据，当 然这样导致维护次数增加，不如完全统计后在求前N大效率高。\n\n如果数据无法放入内存。一方面我们可以考虑上面的字典方法能否被改进以适应这种情形，可以做的改变就是将字典存放到硬盘上，而不是内存，这可以参考数据库的存储方法。\n\n当 然还有更好的方法，就是可以采用分布式计算，基本上就是map-reduce过程，首先可以根据数据值或者把数据hash(md5)后的值，将数据按照范 围划分到不同的机子，最好可以让数据划分后可以一次读入内存，这样不同的机子负责处理各种的数值范围，实际上就是map。得到结果后，各个机子只需拿出各 自的出现次数最多的前N个数据，然后汇总，选出所有的数据中出现次数最多的前N个数据，这实际上就是reduce过程。\n\n实际上可能想直 接将数据均分到不同的机子上进行处理，这样是无法得到正确的解的。因为一个数据可能被均分到不同的机子上，而另一个则可能完全聚集到一个机子上，同时还可 能存在具有相同数目的数据。比如我们要找出现次数最多的前100个，我们将1000万的数据分布到10台机器上，找到每台出现次数最多的前  100个，归并之后这样不能保证找到真正的第100个，因为比如出现次数最多的第100个可能有1万个，但是它被分到了10台机子，这样在每台上只有1千 个，假设这些机子排名在1000个之前的那些都是单独分布在一台机子上的，比如有1001个，这样本来具有1万个的这个就会被淘汰，即使我们让每台机子选 出出现次数最多的1000个再归并，仍然会出错，因为可能存在大量个数为1001个的发生聚集。因此不能将数据随便均分到不同机子上，而是要根据hash  后的值将它们映射到不同的机子上处理，让不同的机器处理一个数值范围。\n\n而外排序的方法会消耗大量的IO，效率不会很高。而上面的分布式方法，也可以用于单机版本，也就是将总的数据根据值的范围，划分成多个不同的子文件，然后逐个处理。处理完毕之后再对这些单词的及其出现频率进行一个归并。实际上就可以利用一个外排序的归并过程。\n\n另外还可以考虑近似计算，也就是我们可以通过结合自然语言属性，只将那些真正实际中出现最多的那些词作为一个字典，使得这个规模可以放入内存。\n\n转载请注明出处：<a href=\"http://bbs.xjtu.edu.cn/\" target=\"_blank\">http://bbs.xjtu.edu.cn</a>\n作者phylips@bmy\n\n参考文献：\n<a href=\"http://blog.csdn.net/jiaomeng/archive/2007/03/08/1523940.aspx\" target=\"_blank\">http://blog.csdn.net/jiaomeng/archive/2007/03/08/1523940.aspx</a> d-Left Hashing\n<a href=\"http://blog.csdn.net/jiaomeng/archive/2007/01/27/1495500.aspx\" target=\"_blank\">http://blog.csdn.net/jiaomeng/archive/2007/01/27/1495500.aspx</a>\n<a href=\"http://en.wikipedia.org/wiki/Bloom_filter\" target=\"_blank\">http://en.wikipedia.org/wiki/Bloom_filter</a>\n<a href=\"http://hi.baidu.com/xdzhang_china/blog/item/2847777e83fb020229388a15.html\" target=\"_blank\">http://hi.baidu.com/xdzhang_china/blog/item/2847777e83fb020229388a15.html</a> 应用Bloom Filter的几个小技巧\n<a href=\"http://zh.wikipedia.org/wiki/%E5%80%92%E6%8E%92%E7%B4%A2%E5%BC%95\" target=\"_blank\">http://zh.wikipedia.org/wiki/%E5%80%92%E6%8E%92%E7%B4%A2%E5%BC%95</a>\n\n</div>\n<table cellspacing=\"0\" cellpadding=\"0\">\n<tbody></tbody>\n</table>\n","slug":"2011-03-02-bigdata","published":1,"updated":"2017-06-05T02:56:52.000Z","photos":[],"link":"","_id":"cj3jjpb810001zumju7ycjegr","content":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_description\" content=\"big data process solution\"></p>\n<p><meta name=\"_su_rich_snippet_type\" content=\"none\"></p>\n<p><meta name=\"_su_title\" content=\"big data process\"></p>\n<p><meta name=\"views\" content=\"294\"></p>\n<p><meta name=\"_wp_old_slug\" content=\"bigdat\"></p>\n<div id=\"blog_article\">\n\n<p>转自：<a href=\"http://i.yoho.cn/473260/logview/1816730.html\" target=\"_blank\" rel=\"external\">http://i.yoho.cn/473260/logview/1816730.html</a></p>\n<p>大数据量的问题是很多面试笔试中经常出现的问题，比如baidu google 腾讯 这样的一些涉及到海量数据的公司经常会问到。</p>\n<p>下面的方法是我对海量数据的处理方法进行了一个一般性的总结，当然这些方法可能并不能完全覆盖所有的问题，但是这样的一些方法也基本可以处理绝大多数遇到的问题。下面的一些问题基本直接来源于公司的面试笔试题目，方法不一定最优，如果你有更好的处理方法，欢迎与我讨论。</p>\n<p>1.Bloom filter</p>\n<p>适用范围：可以用来实现数据字典，进行数据的判重，或者集合求交集</p>\n<p>基本原理及要点：<br>对 于原理来说很简单，位数组+k个独立hash函数。将hash函数对应的值的位数组置1，查找时如果发现所有hash函数对应位都是1说明存在，很明显这 个过程并不保证查找的结果是100%正确的。同时也不支持删除一个已经插入的关键字，因为该关键字对应的位会牵动到其他的关键字。所以一个简单的改进就是  counting Bloom filter，用一个counter数组代替位数组，就可以支持删除了。</p>\n<p>还有一个比较重要的问题，如 何根据输入元素个数n，确定位数组m的大小及hash函数个数。当hash函数个数k=(ln2)<em>(m/n)时错误率最小。在错误率不大于E的情况 下，m至少要等于n</em>lg(1/E)才能表示任意n个元素的集合。但m还应该更大些，因为还要保证bit数组里至少一半为0，则m应 该&gt;=nlg(1/E)*lge 大概就是nlg(1/E)1.44倍(lg表示以2为底的对数)。</p>\n<p>举个例子我们假设错误率为0.01，则此时m应大概是n的13倍。这样k大概是8个。</p>\n<p>注意这里m与n的单位不同，m是bit为单位，而n则是以元素个数为单位(准确的说是不同元素的个数)。通常单个元素的长度都是有很多bit的。所以使用bloom filter内存上通常都是节省的。</p>\n<p>扩展：<br>Bloom  filter将集合中的元素映射到位数组中，用k（k为哈希函数个数）个映射位是否全1表示元素在不在这个集合中。Counting bloom  filter（CBF）将位数组中的每一位扩展为一个counter，从而支持了元素的删除操作。Spectral Bloom  Filter（SBF）将其与集合元素的出现次数关联。SBF采用counter中的最小值来近似表示元素的出现频率。</p>\n<p>问题实例：给你A,B两个文件，各存放50亿条URL，每条URL占用64字节，内存限制是4G，让你找出A,B文件共同的URL。如果是三个乃至n个文件呢？</p>\n<p>根 据这个问题我们来计算下内存的占用，4G=2^32大概是40亿*8大概是340亿，n=50亿，如果按出错率0.01算需要的大概是650亿个bit。 现在可用的是340亿，相差并不多，这样可能会使出错率上升些。另外如果这些urlip是一一对应的，就可以转换成ip，则大大简单了。</p>\n<p>2.Hashing</p>\n<p>适用范围：快速查找，删除的基本数据结构，通常需要总数据量可以放入内存</p>\n<p>基本原理及要点：<br>hash函数选择，针对字符串，整数，排列，具体相应的hash方法。<br>碰撞处理，一种是open hashing，也称为拉链法；另一种就是closed hashing，也称开地址法，opened addressing。</p>\n<p>扩展：<br>d-left  hashing中的d是多个的意思，我们先简化这个问题，看一看2-left hashing。2-left  hashing指的是将一个哈希表分成长度相等的两半，分别叫做T1和T2，给T1和T2分别配备一个哈希函数，h1和h2。在存储一个新的key时，同 时用两个哈希函数进行计算，得出两个地址h1[key]和h2[key]。这时需要检查T1中的h1[key]位置和T2中的h2[key]位置，哪一个 位置已经存储的（有碰撞的）key比较多，然后将新key存储在负载少的位置。如果两边一样多，比如两个位置都为空或者都存储了一个key，就把新key  存储在左边的T1子表中，2-left也由此而来。在查找一个key时，必须进行两次hash，同时查找两个位置。</p>\n<p>问题实例：<br>1).海量日志数据，提取出某日访问百度次数最多的那个IP。</p>\n<p>IP的数目还是有限的，最多2^32个，所以可以考虑使用hash将ip直接存入内存，然后进行统计。</p>\n<p>3.bit-map</p>\n<p>适用范围：可进行数据的快速查找，判重，删除，一般来说数据范围是int的10倍以下</p>\n<p>基本原理及要点：使用bit数组来表示某些元素是否存在，比如8位电话号码</p>\n<p>扩展：bloom filter可以看做是对bit-map的扩展</p>\n<p>问题实例：</p>\n<p>1)已知某个文件内包含一些电话号码，每个号码为8位数字，统计不同号码的个数。</p>\n<p>8位最多99 999 999，大概需要99m个bit，大概10几m字节的内存即可。</p>\n<p>2)2.5亿个整数中找出不重复的整数的个数，内存空间不足以容纳这2.5亿个整数。</p>\n<p>将bit-map扩展一下，用2bit表示一个数即可，0表示未出现，1表示出现一次，2表示出现2次及以上。或者我们不用2bit来进行表示，我们用两个bit-map即可模拟实现这个2bit-map。</p>\n<p>4.堆</p>\n<p>适用范围：海量数据前n大，并且n比较小，堆可以放入内存</p>\n<p>基 本原理及要点：最大堆求前n小，最小堆求前n大。方法，比如求前n小，我们比较当前元素与最大堆里的最大元素，如果它小于最大元素，则应该替换那个最大元 素。这样最后得到的n个元素就是最小的n个。适合大数据量，求前n小，n的大小比较小的情况，这样可以扫描一遍即可得到所有的前n元素，效率很高。</p>\n<p>扩展：双堆，一个最大堆与一个最小堆结合，可以用来维护中位数。</p>\n<p>问题实例：<br>1)100w个数中找最大的前100个数。</p>\n<p>用一个100个元素大小的最小堆即可。</p>\n<p>5.双层桶划分</p>\n<p>适用范围：第k大，中位数，不重复或重复的数字</p>\n<p>基本原理及要点：因为元素范围很大，不能利用直接寻址表，所以通过多次划分，逐步确定范围，然后最后在一个可以接受的范围内进行。可以通过多次缩小，双层只是一个例子。</p>\n<p>扩展：</p>\n<p>问题实例：<br>1).2.5亿个整数中找出不重复的整数的个数，内存空间不足以容纳这2.5亿个整数。</p>\n<p>有点像鸽巢原理，整数个数为2^32,也就是，我们可以将这2^32个数，划分为2^8个区域(比如用单个文件代表一个区域)，然后将数据分离到不同的区域，然后不同的区域在利用bitmap就可以直接解决了。也就是说只要有足够的磁盘空间，就可以很方便的解决。</p>\n<p>2).5亿个int找它们的中位数。</p>\n<p>这个例子比上面那个更明显。首先我们将int划分为2^16个区域，然后读取数据统计落到各个区域里的数的个数，之后我们根据统计结果就可以判断中位数落到那个区域，同时知道这个区域中的第几大数刚好是中位数。然后第二次扫描我们只统计落在这个区域中的那些数就可以了。</p>\n<p>实 际上，如果不是int是int64，我们可以经过3次这样的划分即可降低到可以接受的程度。即可以先将int64分成2^24个区域，然后确定区域的第几 大数，在将该区域分成2^20个子区域，然后确定是子区域的第几大数，然后子区域里的数的个数只有2^20，就可以直接利用direct addr  table进行统计了。</p>\n<p>6.数据库索引</p>\n<p>适用范围：大数据量的增删改查</p>\n<p>基本原理及要点：利用数据的设计实现方法，对海量数据的增删改查进行处理。<br>扩展：<br>问题实例：</p>\n<p>7.倒排索引(Inverted index)</p>\n<p>适用范围：搜索引擎，关键字查询</p>\n<p>基本原理及要点：为何叫倒排索引？一种索引方法，被用来存储在全文搜索下某个单词在一个文档或者一组文档中的存储位置的映射。</p>\n<p>以英文为例，下面是要被索引的文本：<br>T0 = “it is what it is”<br>T1 = “what is it”<br>T2 = “it is a banana”<br>我们就能得到下面的反向文件索引：<br>“a”:      {2}<br>“banana”: {2}<br>“is”:     {0, 1, 2}<br>“it”:     {0, 1, 2}<br>“what”:   {0, 1}<br>检索的条件”what”, “is” 和 “it” 将对应集合的交集。</p>\n<p>正 向索引开发出来用来存储每个文档的单词的列表。正向索引的查询往往满足每个文档有序频繁的全文查询和每个单词在校验文档中的验证这样的查询。在正向索引 中，文档占据了中心的位置，每个文档指向了一个它所包含的索引项的序列。也就是说文档指向了它包含的那些单词，而反向索引则是单词指向了包含它的文档，很 容易看到这个反向的关系。</p>\n<p>扩展：</p>\n<p>问题实例：文档检索系统，查询那些文件包含了某单词，比如常见的学术论文的关键字搜索。</p>\n<p>8.外排序</p>\n<p>适用范围：大数据的排序，去重</p>\n<p>基本原理及要点：外排序的归并方法，置换选择 败者树原理，最优归并树</p>\n<p>扩展：</p>\n<p>问题实例：<br>1).有一个1G大小的一个文件，里面每一行是一个词，词的大小不超过16个字节，内存限制大小是1M。返回频数最高的100个词。</p>\n<p>这个数据具有很明显的特点，词的大小为16个字节，但是内存只有1m做hash有些不够，所以可以用来排序。内存可以当输入缓冲区使用。</p>\n<p>9.trie树</p>\n<p>适用范围：数据量大，重复多，但是数据种类小可以放入内存</p>\n<p>基本原理及要点：实现方式，节点孩子的表示方式</p>\n<p>扩展：压缩实现。</p>\n<p>问题实例：<br>1).有10个文件，每个文件1G， 每个文件的每一行都存放的是用户的query，每个文件的query都可能重复。要你按照query的频度排序 。</p>\n<p>2).1000万字符串，其中有些是相同的(重复),需要把重复的全部去掉，保留没有重复的字符串。请问怎么设计和实现？</p>\n<p>3).寻找热门查询：查询串的重复度比较高，虽然总数是1千万，但如果除去重复后，不超过3百万个，每个不超过255字节。</p>\n<p>10.分布式处理 mapreduce</p>\n<p>适用范围：数据量大，但是数据种类小可以放入内存</p>\n<p>基本原理及要点：将数据交给不同的机器去处理，数据划分，结果归约。</p>\n<p>扩展：</p>\n<p>问题实例：</p>\n<p>1).The canonical example application of MapReduce is a process to count the appearances of</p>\n<p>each different word in a set of documents:<br>void map(String name, String document):<br>// name: document name<br>// document: document contents<br>for each word w in document:<br>EmitIntermediate(w, 1);</p>\n<p>void reduce(String word, Iterator partialCounts):<br>// key: a word<br>// values: a list of aggregated partial counts<br>int result = 0;<br>for each v in partialCounts:<br>result += ParseInt(v);<br>Emit(result);<br>Here, each document is split in words, and each word is counted initially with a “1” value by</p>\n<p>the Map function, using the word as the result key. The framework puts together all the pairs</p>\n<p>with the same key and feeds them to the same call to Reduce, thus this function just needs to</p>\n<p>sum all of its input values to find the total appearances of that word.</p>\n<p>2).海量数据分布在100台电脑中，想个办法高效统计出这批数据的TOP10。</p>\n<p>3).一共有N个机器，每个机器上有N个数。每个机器最多存O(N)个数并对它们操作。如何找到N^2个数的中数(median)？</p>\n<p>经典问题分析</p>\n<p>上千万or亿数据（有重复），统计其中出现次数最多的前N个数据,分两种情况：可一次读入内存，不可一次读入。</p>\n<p>可用思路：trie树+堆，数据库索引，划分子集分别统计，hash，分布式计算，近似统计，外排序</p>\n<p>所 谓的是否能一次读入内存，实际上应该指去除重复后的数据量。如果去重后数据可以放入内存，我们可以为数据建立字典，比如通过  map，hashmap，trie，然后直接进行统计即可。当然在更新每条数据的出现次数的时候，我们可以利用一个堆来维护出现次数最多的前N个数据，当 然这样导致维护次数增加，不如完全统计后在求前N大效率高。</p>\n<p>如果数据无法放入内存。一方面我们可以考虑上面的字典方法能否被改进以适应这种情形，可以做的改变就是将字典存放到硬盘上，而不是内存，这可以参考数据库的存储方法。</p>\n<p>当 然还有更好的方法，就是可以采用分布式计算，基本上就是map-reduce过程，首先可以根据数据值或者把数据hash(md5)后的值，将数据按照范 围划分到不同的机子，最好可以让数据划分后可以一次读入内存，这样不同的机子负责处理各种的数值范围，实际上就是map。得到结果后，各个机子只需拿出各 自的出现次数最多的前N个数据，然后汇总，选出所有的数据中出现次数最多的前N个数据，这实际上就是reduce过程。</p>\n<p>实际上可能想直 接将数据均分到不同的机子上进行处理，这样是无法得到正确的解的。因为一个数据可能被均分到不同的机子上，而另一个则可能完全聚集到一个机子上，同时还可 能存在具有相同数目的数据。比如我们要找出现次数最多的前100个，我们将1000万的数据分布到10台机器上，找到每台出现次数最多的前  100个，归并之后这样不能保证找到真正的第100个，因为比如出现次数最多的第100个可能有1万个，但是它被分到了10台机子，这样在每台上只有1千 个，假设这些机子排名在1000个之前的那些都是单独分布在一台机子上的，比如有1001个，这样本来具有1万个的这个就会被淘汰，即使我们让每台机子选 出出现次数最多的1000个再归并，仍然会出错，因为可能存在大量个数为1001个的发生聚集。因此不能将数据随便均分到不同机子上，而是要根据hash  后的值将它们映射到不同的机子上处理，让不同的机器处理一个数值范围。</p>\n<p>而外排序的方法会消耗大量的IO，效率不会很高。而上面的分布式方法，也可以用于单机版本，也就是将总的数据根据值的范围，划分成多个不同的子文件，然后逐个处理。处理完毕之后再对这些单词的及其出现频率进行一个归并。实际上就可以利用一个外排序的归并过程。</p>\n<p>另外还可以考虑近似计算，也就是我们可以通过结合自然语言属性，只将那些真正实际中出现最多的那些词作为一个字典，使得这个规模可以放入内存。</p>\n<p>转载请注明出处：<a href=\"http://bbs.xjtu.edu.cn/\" target=\"_blank\">http://bbs.xjtu.edu.cn</a><br>作者phylips@bmy</p>\n<p>参考文献：<br><a href=\"http://blog.csdn.net/jiaomeng/archive/2007/03/08/1523940.aspx\" target=\"_blank\">http://blog.csdn.net/jiaomeng/archive/2007/03/08/1523940.aspx</a> d-Left Hashing<br><a href=\"http://blog.csdn.net/jiaomeng/archive/2007/01/27/1495500.aspx\" target=\"_blank\">http://blog.csdn.net/jiaomeng/archive/2007/01/27/1495500.aspx</a><br><a href=\"http://en.wikipedia.org/wiki/Bloom_filter\" target=\"_blank\">http://en.wikipedia.org/wiki/Bloom_filter</a><br><a href=\"http://hi.baidu.com/xdzhang_china/blog/item/2847777e83fb020229388a15.html\" target=\"_blank\">http://hi.baidu.com/xdzhang_china/blog/item/2847777e83fb020229388a15.html</a> 应用Bloom Filter的几个小技巧<br><a href=\"http://zh.wikipedia.org/wiki/%E5%80%92%E6%8E%92%E7%B4%A2%E5%BC%95\" target=\"_blank\">http://zh.wikipedia.org/wiki/%E5%80%92%E6%8E%92%E7%B4%A2%E5%BC%95</a></p>\n<p></p></div><p></p>\n<table cellspacing=\"0\" cellpadding=\"0\"><br><tbody></tbody><br></table>\n","site":{"data":{}},"excerpt":"","more":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_description\" content=\"big data process solution\"></p>\n<p><meta name=\"_su_rich_snippet_type\" content=\"none\"></p>\n<p><meta name=\"_su_title\" content=\"big data process\"></p>\n<p><meta name=\"views\" content=\"294\"></p>\n<p><meta name=\"_wp_old_slug\" content=\"bigdat\"></p>\n<div id=\"blog_article\">\n\n<p>转自：<a href=\"http://i.yoho.cn/473260/logview/1816730.html\" target=\"_blank\" rel=\"external\">http://i.yoho.cn/473260/logview/1816730.html</a></p>\n<p>大数据量的问题是很多面试笔试中经常出现的问题，比如baidu google 腾讯 这样的一些涉及到海量数据的公司经常会问到。</p>\n<p>下面的方法是我对海量数据的处理方法进行了一个一般性的总结，当然这些方法可能并不能完全覆盖所有的问题，但是这样的一些方法也基本可以处理绝大多数遇到的问题。下面的一些问题基本直接来源于公司的面试笔试题目，方法不一定最优，如果你有更好的处理方法，欢迎与我讨论。</p>\n<p>1.Bloom filter</p>\n<p>适用范围：可以用来实现数据字典，进行数据的判重，或者集合求交集</p>\n<p>基本原理及要点：<br>对 于原理来说很简单，位数组+k个独立hash函数。将hash函数对应的值的位数组置1，查找时如果发现所有hash函数对应位都是1说明存在，很明显这 个过程并不保证查找的结果是100%正确的。同时也不支持删除一个已经插入的关键字，因为该关键字对应的位会牵动到其他的关键字。所以一个简单的改进就是  counting Bloom filter，用一个counter数组代替位数组，就可以支持删除了。</p>\n<p>还有一个比较重要的问题，如 何根据输入元素个数n，确定位数组m的大小及hash函数个数。当hash函数个数k=(ln2)<em>(m/n)时错误率最小。在错误率不大于E的情况 下，m至少要等于n</em>lg(1/E)才能表示任意n个元素的集合。但m还应该更大些，因为还要保证bit数组里至少一半为0，则m应 该&gt;=nlg(1/E)*lge 大概就是nlg(1/E)1.44倍(lg表示以2为底的对数)。</p>\n<p>举个例子我们假设错误率为0.01，则此时m应大概是n的13倍。这样k大概是8个。</p>\n<p>注意这里m与n的单位不同，m是bit为单位，而n则是以元素个数为单位(准确的说是不同元素的个数)。通常单个元素的长度都是有很多bit的。所以使用bloom filter内存上通常都是节省的。</p>\n<p>扩展：<br>Bloom  filter将集合中的元素映射到位数组中，用k（k为哈希函数个数）个映射位是否全1表示元素在不在这个集合中。Counting bloom  filter（CBF）将位数组中的每一位扩展为一个counter，从而支持了元素的删除操作。Spectral Bloom  Filter（SBF）将其与集合元素的出现次数关联。SBF采用counter中的最小值来近似表示元素的出现频率。</p>\n<p>问题实例：给你A,B两个文件，各存放50亿条URL，每条URL占用64字节，内存限制是4G，让你找出A,B文件共同的URL。如果是三个乃至n个文件呢？</p>\n<p>根 据这个问题我们来计算下内存的占用，4G=2^32大概是40亿*8大概是340亿，n=50亿，如果按出错率0.01算需要的大概是650亿个bit。 现在可用的是340亿，相差并不多，这样可能会使出错率上升些。另外如果这些urlip是一一对应的，就可以转换成ip，则大大简单了。</p>\n<p>2.Hashing</p>\n<p>适用范围：快速查找，删除的基本数据结构，通常需要总数据量可以放入内存</p>\n<p>基本原理及要点：<br>hash函数选择，针对字符串，整数，排列，具体相应的hash方法。<br>碰撞处理，一种是open hashing，也称为拉链法；另一种就是closed hashing，也称开地址法，opened addressing。</p>\n<p>扩展：<br>d-left  hashing中的d是多个的意思，我们先简化这个问题，看一看2-left hashing。2-left  hashing指的是将一个哈希表分成长度相等的两半，分别叫做T1和T2，给T1和T2分别配备一个哈希函数，h1和h2。在存储一个新的key时，同 时用两个哈希函数进行计算，得出两个地址h1[key]和h2[key]。这时需要检查T1中的h1[key]位置和T2中的h2[key]位置，哪一个 位置已经存储的（有碰撞的）key比较多，然后将新key存储在负载少的位置。如果两边一样多，比如两个位置都为空或者都存储了一个key，就把新key  存储在左边的T1子表中，2-left也由此而来。在查找一个key时，必须进行两次hash，同时查找两个位置。</p>\n<p>问题实例：<br>1).海量日志数据，提取出某日访问百度次数最多的那个IP。</p>\n<p>IP的数目还是有限的，最多2^32个，所以可以考虑使用hash将ip直接存入内存，然后进行统计。</p>\n<p>3.bit-map</p>\n<p>适用范围：可进行数据的快速查找，判重，删除，一般来说数据范围是int的10倍以下</p>\n<p>基本原理及要点：使用bit数组来表示某些元素是否存在，比如8位电话号码</p>\n<p>扩展：bloom filter可以看做是对bit-map的扩展</p>\n<p>问题实例：</p>\n<p>1)已知某个文件内包含一些电话号码，每个号码为8位数字，统计不同号码的个数。</p>\n<p>8位最多99 999 999，大概需要99m个bit，大概10几m字节的内存即可。</p>\n<p>2)2.5亿个整数中找出不重复的整数的个数，内存空间不足以容纳这2.5亿个整数。</p>\n<p>将bit-map扩展一下，用2bit表示一个数即可，0表示未出现，1表示出现一次，2表示出现2次及以上。或者我们不用2bit来进行表示，我们用两个bit-map即可模拟实现这个2bit-map。</p>\n<p>4.堆</p>\n<p>适用范围：海量数据前n大，并且n比较小，堆可以放入内存</p>\n<p>基 本原理及要点：最大堆求前n小，最小堆求前n大。方法，比如求前n小，我们比较当前元素与最大堆里的最大元素，如果它小于最大元素，则应该替换那个最大元 素。这样最后得到的n个元素就是最小的n个。适合大数据量，求前n小，n的大小比较小的情况，这样可以扫描一遍即可得到所有的前n元素，效率很高。</p>\n<p>扩展：双堆，一个最大堆与一个最小堆结合，可以用来维护中位数。</p>\n<p>问题实例：<br>1)100w个数中找最大的前100个数。</p>\n<p>用一个100个元素大小的最小堆即可。</p>\n<p>5.双层桶划分</p>\n<p>适用范围：第k大，中位数，不重复或重复的数字</p>\n<p>基本原理及要点：因为元素范围很大，不能利用直接寻址表，所以通过多次划分，逐步确定范围，然后最后在一个可以接受的范围内进行。可以通过多次缩小，双层只是一个例子。</p>\n<p>扩展：</p>\n<p>问题实例：<br>1).2.5亿个整数中找出不重复的整数的个数，内存空间不足以容纳这2.5亿个整数。</p>\n<p>有点像鸽巢原理，整数个数为2^32,也就是，我们可以将这2^32个数，划分为2^8个区域(比如用单个文件代表一个区域)，然后将数据分离到不同的区域，然后不同的区域在利用bitmap就可以直接解决了。也就是说只要有足够的磁盘空间，就可以很方便的解决。</p>\n<p>2).5亿个int找它们的中位数。</p>\n<p>这个例子比上面那个更明显。首先我们将int划分为2^16个区域，然后读取数据统计落到各个区域里的数的个数，之后我们根据统计结果就可以判断中位数落到那个区域，同时知道这个区域中的第几大数刚好是中位数。然后第二次扫描我们只统计落在这个区域中的那些数就可以了。</p>\n<p>实 际上，如果不是int是int64，我们可以经过3次这样的划分即可降低到可以接受的程度。即可以先将int64分成2^24个区域，然后确定区域的第几 大数，在将该区域分成2^20个子区域，然后确定是子区域的第几大数，然后子区域里的数的个数只有2^20，就可以直接利用direct addr  table进行统计了。</p>\n<p>6.数据库索引</p>\n<p>适用范围：大数据量的增删改查</p>\n<p>基本原理及要点：利用数据的设计实现方法，对海量数据的增删改查进行处理。<br>扩展：<br>问题实例：</p>\n<p>7.倒排索引(Inverted index)</p>\n<p>适用范围：搜索引擎，关键字查询</p>\n<p>基本原理及要点：为何叫倒排索引？一种索引方法，被用来存储在全文搜索下某个单词在一个文档或者一组文档中的存储位置的映射。</p>\n<p>以英文为例，下面是要被索引的文本：<br>T0 = “it is what it is”<br>T1 = “what is it”<br>T2 = “it is a banana”<br>我们就能得到下面的反向文件索引：<br>“a”:      {2}<br>“banana”: {2}<br>“is”:     {0, 1, 2}<br>“it”:     {0, 1, 2}<br>“what”:   {0, 1}<br>检索的条件”what”, “is” 和 “it” 将对应集合的交集。</p>\n<p>正 向索引开发出来用来存储每个文档的单词的列表。正向索引的查询往往满足每个文档有序频繁的全文查询和每个单词在校验文档中的验证这样的查询。在正向索引 中，文档占据了中心的位置，每个文档指向了一个它所包含的索引项的序列。也就是说文档指向了它包含的那些单词，而反向索引则是单词指向了包含它的文档，很 容易看到这个反向的关系。</p>\n<p>扩展：</p>\n<p>问题实例：文档检索系统，查询那些文件包含了某单词，比如常见的学术论文的关键字搜索。</p>\n<p>8.外排序</p>\n<p>适用范围：大数据的排序，去重</p>\n<p>基本原理及要点：外排序的归并方法，置换选择 败者树原理，最优归并树</p>\n<p>扩展：</p>\n<p>问题实例：<br>1).有一个1G大小的一个文件，里面每一行是一个词，词的大小不超过16个字节，内存限制大小是1M。返回频数最高的100个词。</p>\n<p>这个数据具有很明显的特点，词的大小为16个字节，但是内存只有1m做hash有些不够，所以可以用来排序。内存可以当输入缓冲区使用。</p>\n<p>9.trie树</p>\n<p>适用范围：数据量大，重复多，但是数据种类小可以放入内存</p>\n<p>基本原理及要点：实现方式，节点孩子的表示方式</p>\n<p>扩展：压缩实现。</p>\n<p>问题实例：<br>1).有10个文件，每个文件1G， 每个文件的每一行都存放的是用户的query，每个文件的query都可能重复。要你按照query的频度排序 。</p>\n<p>2).1000万字符串，其中有些是相同的(重复),需要把重复的全部去掉，保留没有重复的字符串。请问怎么设计和实现？</p>\n<p>3).寻找热门查询：查询串的重复度比较高，虽然总数是1千万，但如果除去重复后，不超过3百万个，每个不超过255字节。</p>\n<p>10.分布式处理 mapreduce</p>\n<p>适用范围：数据量大，但是数据种类小可以放入内存</p>\n<p>基本原理及要点：将数据交给不同的机器去处理，数据划分，结果归约。</p>\n<p>扩展：</p>\n<p>问题实例：</p>\n<p>1).The canonical example application of MapReduce is a process to count the appearances of</p>\n<p>each different word in a set of documents:<br>void map(String name, String document):<br>// name: document name<br>// document: document contents<br>for each word w in document:<br>EmitIntermediate(w, 1);</p>\n<p>void reduce(String word, Iterator partialCounts):<br>// key: a word<br>// values: a list of aggregated partial counts<br>int result = 0;<br>for each v in partialCounts:<br>result += ParseInt(v);<br>Emit(result);<br>Here, each document is split in words, and each word is counted initially with a “1” value by</p>\n<p>the Map function, using the word as the result key. The framework puts together all the pairs</p>\n<p>with the same key and feeds them to the same call to Reduce, thus this function just needs to</p>\n<p>sum all of its input values to find the total appearances of that word.</p>\n<p>2).海量数据分布在100台电脑中，想个办法高效统计出这批数据的TOP10。</p>\n<p>3).一共有N个机器，每个机器上有N个数。每个机器最多存O(N)个数并对它们操作。如何找到N^2个数的中数(median)？</p>\n<p>经典问题分析</p>\n<p>上千万or亿数据（有重复），统计其中出现次数最多的前N个数据,分两种情况：可一次读入内存，不可一次读入。</p>\n<p>可用思路：trie树+堆，数据库索引，划分子集分别统计，hash，分布式计算，近似统计，外排序</p>\n<p>所 谓的是否能一次读入内存，实际上应该指去除重复后的数据量。如果去重后数据可以放入内存，我们可以为数据建立字典，比如通过  map，hashmap，trie，然后直接进行统计即可。当然在更新每条数据的出现次数的时候，我们可以利用一个堆来维护出现次数最多的前N个数据，当 然这样导致维护次数增加，不如完全统计后在求前N大效率高。</p>\n<p>如果数据无法放入内存。一方面我们可以考虑上面的字典方法能否被改进以适应这种情形，可以做的改变就是将字典存放到硬盘上，而不是内存，这可以参考数据库的存储方法。</p>\n<p>当 然还有更好的方法，就是可以采用分布式计算，基本上就是map-reduce过程，首先可以根据数据值或者把数据hash(md5)后的值，将数据按照范 围划分到不同的机子，最好可以让数据划分后可以一次读入内存，这样不同的机子负责处理各种的数值范围，实际上就是map。得到结果后，各个机子只需拿出各 自的出现次数最多的前N个数据，然后汇总，选出所有的数据中出现次数最多的前N个数据，这实际上就是reduce过程。</p>\n<p>实际上可能想直 接将数据均分到不同的机子上进行处理，这样是无法得到正确的解的。因为一个数据可能被均分到不同的机子上，而另一个则可能完全聚集到一个机子上，同时还可 能存在具有相同数目的数据。比如我们要找出现次数最多的前100个，我们将1000万的数据分布到10台机器上，找到每台出现次数最多的前  100个，归并之后这样不能保证找到真正的第100个，因为比如出现次数最多的第100个可能有1万个，但是它被分到了10台机子，这样在每台上只有1千 个，假设这些机子排名在1000个之前的那些都是单独分布在一台机子上的，比如有1001个，这样本来具有1万个的这个就会被淘汰，即使我们让每台机子选 出出现次数最多的1000个再归并，仍然会出错，因为可能存在大量个数为1001个的发生聚集。因此不能将数据随便均分到不同机子上，而是要根据hash  后的值将它们映射到不同的机子上处理，让不同的机器处理一个数值范围。</p>\n<p>而外排序的方法会消耗大量的IO，效率不会很高。而上面的分布式方法，也可以用于单机版本，也就是将总的数据根据值的范围，划分成多个不同的子文件，然后逐个处理。处理完毕之后再对这些单词的及其出现频率进行一个归并。实际上就可以利用一个外排序的归并过程。</p>\n<p>另外还可以考虑近似计算，也就是我们可以通过结合自然语言属性，只将那些真正实际中出现最多的那些词作为一个字典，使得这个规模可以放入内存。</p>\n<p>转载请注明出处：<a href=\"http://bbs.xjtu.edu.cn/\" target=\"_blank\">http://bbs.xjtu.edu.cn</a><br>作者phylips@bmy</p>\n<p>参考文献：<br><a href=\"http://blog.csdn.net/jiaomeng/archive/2007/03/08/1523940.aspx\" target=\"_blank\">http://blog.csdn.net/jiaomeng/archive/2007/03/08/1523940.aspx</a> d-Left Hashing<br><a href=\"http://blog.csdn.net/jiaomeng/archive/2007/01/27/1495500.aspx\" target=\"_blank\">http://blog.csdn.net/jiaomeng/archive/2007/01/27/1495500.aspx</a><br><a href=\"http://en.wikipedia.org/wiki/Bloom_filter\" target=\"_blank\">http://en.wikipedia.org/wiki/Bloom_filter</a><br><a href=\"http://hi.baidu.com/xdzhang_china/blog/item/2847777e83fb020229388a15.html\" target=\"_blank\">http://hi.baidu.com/xdzhang_china/blog/item/2847777e83fb020229388a15.html</a> 应用Bloom Filter的几个小技巧<br><a href=\"http://zh.wikipedia.org/wiki/%E5%80%92%E6%8E%92%E7%B4%A2%E5%BC%95\" target=\"_blank\">http://zh.wikipedia.org/wiki/%E5%80%92%E6%8E%92%E7%B4%A2%E5%BC%95</a></p>\n<p></p></div><p></p>\n<table cellspacing=\"0\" cellpadding=\"0\"><br><tbody></tbody><br></table>\n"},{"layout":"post","title":"google search update speed","date":"2011-03-15T16:00:00.000Z","wordpress_id":366,"comments":1,"_content":"<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_description\" content=\"google search update is fast, because my blog site send messages to it.\" />\n<meta name=\"_su_keywords\" content=\"search\" />\n<meta name=\"_su_rich_snippet_type\" content=\"none\" />\n<meta name=\"_su_title\" content=\"Google, google, search, fast, cache\" />\n<meta name=\"views\" content=\"228\" />\n<meta name=\"_wp_old_slug\" content=\"google-search-speed\" />\nGoogle search updating speed is so fast that it shows my blog new post in few seconds. Maybe when my blog updated, my site sent a message to Google. And Google just cached this information. It did not crawl my site, because the blog's thumbnail is not changed in Google.\n","source":"_posts/2011-03-16-google-search-update-speed.markdown","raw":"---\nlayout: post\ntitle: \"google search update speed\"\ndate: 2011-3-16\nwordpress_id: 366\ncomments: true\ncategories: [\"blog\", \"google\", \"search\", \"see-hear\", \"update\"]\n---\n<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_description\" content=\"google search update is fast, because my blog site send messages to it.\" />\n<meta name=\"_su_keywords\" content=\"search\" />\n<meta name=\"_su_rich_snippet_type\" content=\"none\" />\n<meta name=\"_su_title\" content=\"Google, google, search, fast, cache\" />\n<meta name=\"views\" content=\"228\" />\n<meta name=\"_wp_old_slug\" content=\"google-search-speed\" />\nGoogle search updating speed is so fast that it shows my blog new post in few seconds. Maybe when my blog updated, my site sent a message to Google. And Google just cached this information. It did not crawl my site, because the blog's thumbnail is not changed in Google.\n","slug":"2011-03-16-google-search-update-speed","published":1,"updated":"2017-06-05T02:56:52.000Z","photos":[],"link":"","_id":"cj3jjpb850002zumj1v3zm7b6","content":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_description\" content=\"google search update is fast, because my blog site send messages to it.\"></p>\n<p><meta name=\"_su_keywords\" content=\"search\"></p>\n<p><meta name=\"_su_rich_snippet_type\" content=\"none\"></p>\n<p><meta name=\"_su_title\" content=\"Google, google, search, fast, cache\"></p>\n<p><meta name=\"views\" content=\"228\"></p>\n<p><meta name=\"_wp_old_slug\" content=\"google-search-speed\"><br>Google search updating speed is so fast that it shows my blog new post in few seconds. Maybe when my blog updated, my site sent a message to Google. And Google just cached this information. It did not crawl my site, because the blog’s thumbnail is not changed in Google.</p>\n","site":{"data":{}},"excerpt":"","more":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_description\" content=\"google search update is fast, because my blog site send messages to it.\"></p>\n<p><meta name=\"_su_keywords\" content=\"search\"></p>\n<p><meta name=\"_su_rich_snippet_type\" content=\"none\"></p>\n<p><meta name=\"_su_title\" content=\"Google, google, search, fast, cache\"></p>\n<p><meta name=\"views\" content=\"228\"></p>\n<p><meta name=\"_wp_old_slug\" content=\"google-search-speed\"><br>Google search updating speed is so fast that it shows my blog new post in few seconds. Maybe when my blog updated, my site sent a message to Google. And Google just cached this information. It did not crawl my site, because the blog’s thumbnail is not changed in Google.</p>\n"},{"layout":"post","title":"copy:“My husband is a programmer; I have no idea what that means.”","date":"2011-03-09T16:00:00.000Z","wordpress_id":354,"comments":1,"_content":"<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_description\" content=\"My husband is a programmer; I have no idea what that means.\" />\n<meta name=\"_su_keywords\" content=\"programmer, career, ruby, rails, life\" />\n<meta name=\"_su_rich_snippet_type\" content=\"none\" />\n<meta name=\"_su_title\" content=\"programmer, career, ruby, rails, life\" />\n<meta name=\"views\" content=\"388\" />\ncopy from : http://www.renaebair.com/2010/08/11/my-husband-is-a-programmer-i-have-no-idea-what-that-means/\n\nI met my husband 11 years ago. I was carrying my guitar into my dorm room on freshman move-in day at the University of Southern Maine. I saw him eyeing my guitar with great interest. When he knocked on my door and introduced himself, he said, “Hey! I’m Adam. I live across the hall. I’m a computer geek!”\n\nIt was a bold move on his part. Being a computer geek ten years ago wasn’t exactly “hot” and he was either socially ignorant to this fact, or he just didn’t care. Regardless, I was in love. I wasn’t even a computer geek myself at the time, but I was smitten with his forwardness and his apparent lack of concern about his own geekery. Finding out that he also played guitar sealed the deal. Fate would have it that he lived directly across the hall from me.\n\nIn the following weeks, months and years, he was able to hold my attention as he ranted about hardware specs for his gaming machines, his god-like status in Unreal Tournament matches, his ColdFusion senior project application, and his long explanations on programming theory. I sat and watched in amazement as he built and tore down PCs. I listened to him talk through programming problems and watched him build websites. All the while I was planning some vague career with political science and english, but I was nonetheless interested in Adam’s life.\n\nIt was no accident that years later I knew that “Ruby” wasn’t just July’s birthstone and that “Ruby on Rails” wasn’t a rebellious act of sacrificing precious gems on railroad tracks in hipster neighborhoods. I spent years actually being engaged in his interests. And when he fell in love with Ruby in late 2005, I was supporting him all the way and knew exactly why Ruby was incredible. Several years later, when I decided to learn Ruby, I came out with a post on my blog about the <a href=\"http://www.renaebair.com/2008/11/24/the-ranting-rubyists/\" target=\"_blank\">Ruby community</a>. A lot of people were confused as to how a Ruby newb could already understand the Ruby community so well. Truth was, I had been following the community for quite some time before I ever decided to learn to program in Ruby. I knew all the big names, the trends, and the history before I ever opened up TextMate and saved a .rb file.\n\nDo you get that glazed, faraway look in your eye when you partner starts talking about a programming problem, or the newest testing framework? There’s no need to be bored. Ask questions, try to understand! When I meet women today, I don’t avoid talking about the work that I do, my love for pc gaming, or my fascination with D&amp;D and other such geekery. Often I’ll get a response along these lines: “Programming? My husband does something like that I think.” To which I always inquire, “Oh really? What language does he work with?” Their response is always the same: “Language? huh. I have no idea. There’s more than one? I don’t really know what he does. I don’t pay attention to that stuff.”\n\nThis always blows my mind. You’re married to someone, and you aren’t interested enough in the person to know anything about what they do with nearly 40-50% of their time, aside from their job title? Is it dangerous to draw a correlation between high divorce rates and the lack of interest that people have in their partners lives? It’s easy to fall in love with the “idea” of a person when you first meet them. But I think it would be hard to endure a lifetime of ups and downs, trials and tribulations and the everyday challenges that life throws at two people, if those partners didn’t have a truly vested interest in each other’s passions and life’s work. And if you don’t have even a basic understanding of what your spouse does with 40+hours of his/her week, then you’re not on a team.\n\nI’m not suggesting that you give up your own individuality and personal interests when you meet someone special. But open your mind enough to experience the world through your partner’s eyes. I admit there were occasions when Adam would be on his third diatribe of the evening on meta-programming, and my mind would start to wander. But I was generally engaged in his interests. And why wouldn’t I be? Falling in love involves getting to know a person. And getting to know a person usually involves talking about and understanding each other’s personal interests. Adam certainly had to endure hundreds of hours listening to Ani Difranco, Dar Williams, and Iron &amp; Wine albums, along with my absurdly psychotic analysis of all of the lyrics. He learned to play tennis at my prompting, although I have to swallow losing nearly every game to him now. He watched my ballet performances in college, and even knew how to pronounce a few of the positions. Below is a photo of Adam and I embarking on a hike up Tumbledown Mountain. It captures Adam’s willingness to step away from the computer for a day and partake in my interest in the outdoors. He was a trooper.\n\nIt should not be hard to be engaged in your partner’s interests. If it is that hard, you might want consider the possibility that you might be full of yourself. Even amongst my friends, I make a concerted effort to listen and understand their individual interests and passions. I always learn something new, and sometimes I get to discover a new passion for myself.\n\nProfessionally, I wouldn’t be where I am today, if I had daydreamed my way through Adam’s geek rants. Our relationship resulted in thousands of hours of video gaming, late-night programming tutorials, brainstorming sessions for new apps, some camping trips and lots of folk music. Even if you don’t follow a similar career path as your spouse, being interested in their work and their hobbies can open up other doors for you. It broadens your world view and helps you to suck less as a human being. It’s about being part of a team that works together. I don’t professionally program like Adam; I’m not built that way. I understand programming, but unfortunately I wasn’t given Legos to play with as a child, math skills were never encouraged in school or at home, and the engineering/problem-solving side was never nurtured. So, while I enjoy programming, it comes a lot harder to me than it does for others. But writing is a strength, and programming and technology is a huge interest of mine - so scoring a gig as <a href=\"http://intridea.com/\" target=\"_blank\">Intridea’s</a> Community Manager really rocked my world. I keep my eye into the world that I love, my finger on the pulse of it, and the work that results is always rewarding and fun.\n\nSo if you’re with someone new, find a way to be interested in the the things they like to talk about. And if you’re with someone old, rediscover the love of your life by asking about their work and listening to their response. Don’t feign interest. And please, don’t be one of those girls that doesn’t know what language her husband programs in. Be the cool wife that surprises her husband’s dorky friends when she knows Java is, and can engage in a short discussion on the evangelicalism of the Ruby community without asking, “Honey, I didn’t know you were a jeweler!”\n\n<!--more-->下面是中文译本.......\n\ncopy from :http://software.intel.com/zh-cn/blogs/2011/01/26/zt-2/?cid=sw:prccsdn1587\n\n<strong>我在11年前认识了的我丈夫。当时是南缅因州大学新生入校的日子，我带着吉他去宿舍。他饶有兴趣的盯着我的吉他。之后他敲响了我的房门，自我介绍道：“嗨，我叫Adam，我就住在走廊的对面。我是个计算机程序员！”</strong>\n他做了一很勇敢的决定。 10年前当程序员并不像今天这么“火”，这个行业并不被社会重视，他似乎也根本不在意这些。不管怎样，我们相爱了。我当时并不懂编程，但却被他那义无反顾 的精神和毫不在意被人当作怪人的态度打动。是发现了他也弹吉他使我们走到了一起。如果仅是他住在走廊我的对面，命运也不会做出这样的安排。\n\n在随后的一周周，一月月，一年年，他慢慢的吸引了我的注意力，他会对着他的游戏机的硬件清单大发雷霆，他能在虚拟世界里的游戏竞赛中为我独尊，他在ColdFusion平台上制作了他的毕业论文项目，他会用长篇大论来解释他的编程理论。我会安静的坐着，惊奇的看他把一台PC机拆成零碎。我听他讲编程上的问题，看他开发网站。与此同时，我还只是朦胧的感觉到我未来的职业应该是跟科技和英语有关，但我着实对Adam的生活发生了兴趣。\n\n几年以后，我很自然的就知道了，“Ruby”并不是指的七月的生日石，而“Ruby on Rails”也不是邻区的新潮人在火车轨道上举行的敬拜珍贵宝石的奇怪活动。几年时间里，我事实上也培养出了他的同样的兴趣。2005年末他深深的喜欢上了Ruby，我全力支持他，而且也知道Ruby的不可思议之处。几年后，当我决定了开始学习Ruby，我在博客上写了一篇关于Ruby社区的文章。很多人都很奇怪为什么一个像我这样的Ruby新手会对Ruby社区有如此的了解。答案是，我在决定学习Ruby编程之前已经关注这个社区很久了。在我曾经打开TextMate编辑器、保存第一个.rb文件之前，我就知道了这个社区里有那些大人物，Ruby的发展趋势，和历史事件。\n\n当你的伴侣开始跟你讲编程的问题时，或讲最新的测试框架时，你的眼神里是否显露出一种呆滞和恍惚？事情并不是你想象的单调乏味。问他问题，尝试着去理解！如今当我遇到女人们时，我并不回避给她们谈我的工作，谈我喜欢的电脑游戏，谈我着迷于 D&amp;D 游戏以及其它这样的荒诞事情。通常我得到的回复是这样的几句：“编程？我想我丈夫做的好像也是这方面的。”对于此，我总是问道：“哦，真的吗？他用的是什么编程语言？”她们的回答每次都一样：”语言？哼，我可不知道。不止一种吗？我并不真正知道他在干什么。我对这些东西没兴趣。“\n\n这每次都让我感慨万分。你嫁给了一个人，可是你对这个人花去将近40-50%的时间去做的事情一无所知——除了工作名称。我们是否可以把今天的高离婚率和他们对配偶的生活缺乏兴趣之间画一条危险的关联线呢？当两个人第一次相遇时，一个人很容易根据自己的”看法“而坠入爱河。但我认为如果配偶不能够对对方的爱好和生活工作有真正的了解，那么这两个人将很难经受的住生命的各种起起伏伏，艰难和考验，要知道，生活中每天都有挑战。如果你对配偶的每周40小时的工作内容没有一个基本的理解，你们就不能成为一体。\n\n我并不是在建议当你遇到钟情的对象时要放弃自己个性和个人兴趣。而是要你睁大眼睛，用你的伴侣的视野去体验这个世界。我承认，有时Adam会在某天晚上对元数据编程谩骂个没完没了，此时我也就跟他的思想走不到一起了。但通常情况下我会投入到他的兴趣当中。而且为什么不呢？我爱他，这就要求我去了解他。而了解一个人就是要你们去相互讨论和理解对方的兴趣。 Adam会花数百小时艰难的听\n\nAni Difranco， Dar Williams， 和 Iron &amp; Wine 唱片，我会在一旁神经质的给他解释所有的歌词。在我的鼓励下他学会了打网球，尽管现在不得不忍受每次被他打败的结果。在大学里他看过我的芭蕾舞表演，他甚至都知道了不少其中的姿势的叫法了。下面的照片是我和Adam在徒步翻越缅因州Tumbledown山时拍的。它见证了Adam自愿从计算机旁走开，参加到我喜欢的户外运动中的事情。他很顽强。\n\n参与到你的伴侣的兴趣中并不是一件难事。如果你觉得很难，那你也许要思考一下自己是不是太自我了。即使朋友之间，我也努力的聆听和理解他们的兴趣和爱好。我经常会听到一些新奇的东西，经常我会为自己找到了一些新爱好。\n\n就我来说，如果当Adam在奇怪的跟计算机大喊大叫时，我只是发呆，那我就不会有今天的生活。\n\n那是无数的小时的一起玩视频游戏，一起深夜编写手册，一起为新应用做头脑风暴式的讨论，一起野营旅行，一起听乡村音乐才铸就了我们之间的关系。即使你跟你的伴侣在事业上并不是相似的道路，通过对他工作和喜好的了解，你也可以使他为你打开他的心扉。这能扩大你的视野，帮助你减少生活中的不愉快。你们应成为一起工作的一体。我并不是像Adam那样做职业编程的；我也没有向那方面发展。我懂编程，但不幸的是，自小就没人给我积木做训练，在学校和家里也从来没人鼓励我学数学。工程学和解决问题的才能从来就没有培养出来。所以，当我想对编程感兴趣时，这对我的难度看起来比其他人大。但我的强项是写作，编程方面和技术方面的题材对我是个巨大的兴趣\n\n– 所以，能得到Intridea社区管理员的工作让我的世界真正的兴奋起来。我关注着我喜爱的世界，我能感受到它的脉搏，我所做的一直给我带来回报，给我快乐。\n\n所以，如果你和新朋友们在一起，想办法培养自己对他们爱说的事情的兴趣。如果你和老朋友在一起，通过询问他们的工作、倾听他们的回复来再次发掘你的生活爱好。不要假装爱好。不要做那种连她丈夫使用什么编程语言都不知的女孩子。你要做那种让你的丈夫的朋友吃惊于你还知道Java时什么的酷妻子，不做那种在讨论Ruby社区里的自由派时说出“亲爱的，我不知道你原来还是个珠宝商哪！”的妻子。\n","source":"_posts/2011-03-10-husband-programmer.markdown","raw":"---\nlayout: post\ntitle: \"copy:“My husband is a programmer; I have no idea what that means.”\"\ndate: 2011-3-10\nwordpress_id: 354\ncomments: true\ncategories: [\"life\", \"programmer\", \"ruby\", \"see-hear\"]\n---\n<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_description\" content=\"My husband is a programmer; I have no idea what that means.\" />\n<meta name=\"_su_keywords\" content=\"programmer, career, ruby, rails, life\" />\n<meta name=\"_su_rich_snippet_type\" content=\"none\" />\n<meta name=\"_su_title\" content=\"programmer, career, ruby, rails, life\" />\n<meta name=\"views\" content=\"388\" />\ncopy from : http://www.renaebair.com/2010/08/11/my-husband-is-a-programmer-i-have-no-idea-what-that-means/\n\nI met my husband 11 years ago. I was carrying my guitar into my dorm room on freshman move-in day at the University of Southern Maine. I saw him eyeing my guitar with great interest. When he knocked on my door and introduced himself, he said, “Hey! I’m Adam. I live across the hall. I’m a computer geek!”\n\nIt was a bold move on his part. Being a computer geek ten years ago wasn’t exactly “hot” and he was either socially ignorant to this fact, or he just didn’t care. Regardless, I was in love. I wasn’t even a computer geek myself at the time, but I was smitten with his forwardness and his apparent lack of concern about his own geekery. Finding out that he also played guitar sealed the deal. Fate would have it that he lived directly across the hall from me.\n\nIn the following weeks, months and years, he was able to hold my attention as he ranted about hardware specs for his gaming machines, his god-like status in Unreal Tournament matches, his ColdFusion senior project application, and his long explanations on programming theory. I sat and watched in amazement as he built and tore down PCs. I listened to him talk through programming problems and watched him build websites. All the while I was planning some vague career with political science and english, but I was nonetheless interested in Adam’s life.\n\nIt was no accident that years later I knew that “Ruby” wasn’t just July’s birthstone and that “Ruby on Rails” wasn’t a rebellious act of sacrificing precious gems on railroad tracks in hipster neighborhoods. I spent years actually being engaged in his interests. And when he fell in love with Ruby in late 2005, I was supporting him all the way and knew exactly why Ruby was incredible. Several years later, when I decided to learn Ruby, I came out with a post on my blog about the <a href=\"http://www.renaebair.com/2008/11/24/the-ranting-rubyists/\" target=\"_blank\">Ruby community</a>. A lot of people were confused as to how a Ruby newb could already understand the Ruby community so well. Truth was, I had been following the community for quite some time before I ever decided to learn to program in Ruby. I knew all the big names, the trends, and the history before I ever opened up TextMate and saved a .rb file.\n\nDo you get that glazed, faraway look in your eye when you partner starts talking about a programming problem, or the newest testing framework? There’s no need to be bored. Ask questions, try to understand! When I meet women today, I don’t avoid talking about the work that I do, my love for pc gaming, or my fascination with D&amp;D and other such geekery. Often I’ll get a response along these lines: “Programming? My husband does something like that I think.” To which I always inquire, “Oh really? What language does he work with?” Their response is always the same: “Language? huh. I have no idea. There’s more than one? I don’t really know what he does. I don’t pay attention to that stuff.”\n\nThis always blows my mind. You’re married to someone, and you aren’t interested enough in the person to know anything about what they do with nearly 40-50% of their time, aside from their job title? Is it dangerous to draw a correlation between high divorce rates and the lack of interest that people have in their partners lives? It’s easy to fall in love with the “idea” of a person when you first meet them. But I think it would be hard to endure a lifetime of ups and downs, trials and tribulations and the everyday challenges that life throws at two people, if those partners didn’t have a truly vested interest in each other’s passions and life’s work. And if you don’t have even a basic understanding of what your spouse does with 40+hours of his/her week, then you’re not on a team.\n\nI’m not suggesting that you give up your own individuality and personal interests when you meet someone special. But open your mind enough to experience the world through your partner’s eyes. I admit there were occasions when Adam would be on his third diatribe of the evening on meta-programming, and my mind would start to wander. But I was generally engaged in his interests. And why wouldn’t I be? Falling in love involves getting to know a person. And getting to know a person usually involves talking about and understanding each other’s personal interests. Adam certainly had to endure hundreds of hours listening to Ani Difranco, Dar Williams, and Iron &amp; Wine albums, along with my absurdly psychotic analysis of all of the lyrics. He learned to play tennis at my prompting, although I have to swallow losing nearly every game to him now. He watched my ballet performances in college, and even knew how to pronounce a few of the positions. Below is a photo of Adam and I embarking on a hike up Tumbledown Mountain. It captures Adam’s willingness to step away from the computer for a day and partake in my interest in the outdoors. He was a trooper.\n\nIt should not be hard to be engaged in your partner’s interests. If it is that hard, you might want consider the possibility that you might be full of yourself. Even amongst my friends, I make a concerted effort to listen and understand their individual interests and passions. I always learn something new, and sometimes I get to discover a new passion for myself.\n\nProfessionally, I wouldn’t be where I am today, if I had daydreamed my way through Adam’s geek rants. Our relationship resulted in thousands of hours of video gaming, late-night programming tutorials, brainstorming sessions for new apps, some camping trips and lots of folk music. Even if you don’t follow a similar career path as your spouse, being interested in their work and their hobbies can open up other doors for you. It broadens your world view and helps you to suck less as a human being. It’s about being part of a team that works together. I don’t professionally program like Adam; I’m not built that way. I understand programming, but unfortunately I wasn’t given Legos to play with as a child, math skills were never encouraged in school or at home, and the engineering/problem-solving side was never nurtured. So, while I enjoy programming, it comes a lot harder to me than it does for others. But writing is a strength, and programming and technology is a huge interest of mine - so scoring a gig as <a href=\"http://intridea.com/\" target=\"_blank\">Intridea’s</a> Community Manager really rocked my world. I keep my eye into the world that I love, my finger on the pulse of it, and the work that results is always rewarding and fun.\n\nSo if you’re with someone new, find a way to be interested in the the things they like to talk about. And if you’re with someone old, rediscover the love of your life by asking about their work and listening to their response. Don’t feign interest. And please, don’t be one of those girls that doesn’t know what language her husband programs in. Be the cool wife that surprises her husband’s dorky friends when she knows Java is, and can engage in a short discussion on the evangelicalism of the Ruby community without asking, “Honey, I didn’t know you were a jeweler!”\n\n<!--more-->下面是中文译本.......\n\ncopy from :http://software.intel.com/zh-cn/blogs/2011/01/26/zt-2/?cid=sw:prccsdn1587\n\n<strong>我在11年前认识了的我丈夫。当时是南缅因州大学新生入校的日子，我带着吉他去宿舍。他饶有兴趣的盯着我的吉他。之后他敲响了我的房门，自我介绍道：“嗨，我叫Adam，我就住在走廊的对面。我是个计算机程序员！”</strong>\n他做了一很勇敢的决定。 10年前当程序员并不像今天这么“火”，这个行业并不被社会重视，他似乎也根本不在意这些。不管怎样，我们相爱了。我当时并不懂编程，但却被他那义无反顾 的精神和毫不在意被人当作怪人的态度打动。是发现了他也弹吉他使我们走到了一起。如果仅是他住在走廊我的对面，命运也不会做出这样的安排。\n\n在随后的一周周，一月月，一年年，他慢慢的吸引了我的注意力，他会对着他的游戏机的硬件清单大发雷霆，他能在虚拟世界里的游戏竞赛中为我独尊，他在ColdFusion平台上制作了他的毕业论文项目，他会用长篇大论来解释他的编程理论。我会安静的坐着，惊奇的看他把一台PC机拆成零碎。我听他讲编程上的问题，看他开发网站。与此同时，我还只是朦胧的感觉到我未来的职业应该是跟科技和英语有关，但我着实对Adam的生活发生了兴趣。\n\n几年以后，我很自然的就知道了，“Ruby”并不是指的七月的生日石，而“Ruby on Rails”也不是邻区的新潮人在火车轨道上举行的敬拜珍贵宝石的奇怪活动。几年时间里，我事实上也培养出了他的同样的兴趣。2005年末他深深的喜欢上了Ruby，我全力支持他，而且也知道Ruby的不可思议之处。几年后，当我决定了开始学习Ruby，我在博客上写了一篇关于Ruby社区的文章。很多人都很奇怪为什么一个像我这样的Ruby新手会对Ruby社区有如此的了解。答案是，我在决定学习Ruby编程之前已经关注这个社区很久了。在我曾经打开TextMate编辑器、保存第一个.rb文件之前，我就知道了这个社区里有那些大人物，Ruby的发展趋势，和历史事件。\n\n当你的伴侣开始跟你讲编程的问题时，或讲最新的测试框架时，你的眼神里是否显露出一种呆滞和恍惚？事情并不是你想象的单调乏味。问他问题，尝试着去理解！如今当我遇到女人们时，我并不回避给她们谈我的工作，谈我喜欢的电脑游戏，谈我着迷于 D&amp;D 游戏以及其它这样的荒诞事情。通常我得到的回复是这样的几句：“编程？我想我丈夫做的好像也是这方面的。”对于此，我总是问道：“哦，真的吗？他用的是什么编程语言？”她们的回答每次都一样：”语言？哼，我可不知道。不止一种吗？我并不真正知道他在干什么。我对这些东西没兴趣。“\n\n这每次都让我感慨万分。你嫁给了一个人，可是你对这个人花去将近40-50%的时间去做的事情一无所知——除了工作名称。我们是否可以把今天的高离婚率和他们对配偶的生活缺乏兴趣之间画一条危险的关联线呢？当两个人第一次相遇时，一个人很容易根据自己的”看法“而坠入爱河。但我认为如果配偶不能够对对方的爱好和生活工作有真正的了解，那么这两个人将很难经受的住生命的各种起起伏伏，艰难和考验，要知道，生活中每天都有挑战。如果你对配偶的每周40小时的工作内容没有一个基本的理解，你们就不能成为一体。\n\n我并不是在建议当你遇到钟情的对象时要放弃自己个性和个人兴趣。而是要你睁大眼睛，用你的伴侣的视野去体验这个世界。我承认，有时Adam会在某天晚上对元数据编程谩骂个没完没了，此时我也就跟他的思想走不到一起了。但通常情况下我会投入到他的兴趣当中。而且为什么不呢？我爱他，这就要求我去了解他。而了解一个人就是要你们去相互讨论和理解对方的兴趣。 Adam会花数百小时艰难的听\n\nAni Difranco， Dar Williams， 和 Iron &amp; Wine 唱片，我会在一旁神经质的给他解释所有的歌词。在我的鼓励下他学会了打网球，尽管现在不得不忍受每次被他打败的结果。在大学里他看过我的芭蕾舞表演，他甚至都知道了不少其中的姿势的叫法了。下面的照片是我和Adam在徒步翻越缅因州Tumbledown山时拍的。它见证了Adam自愿从计算机旁走开，参加到我喜欢的户外运动中的事情。他很顽强。\n\n参与到你的伴侣的兴趣中并不是一件难事。如果你觉得很难，那你也许要思考一下自己是不是太自我了。即使朋友之间，我也努力的聆听和理解他们的兴趣和爱好。我经常会听到一些新奇的东西，经常我会为自己找到了一些新爱好。\n\n就我来说，如果当Adam在奇怪的跟计算机大喊大叫时，我只是发呆，那我就不会有今天的生活。\n\n那是无数的小时的一起玩视频游戏，一起深夜编写手册，一起为新应用做头脑风暴式的讨论，一起野营旅行，一起听乡村音乐才铸就了我们之间的关系。即使你跟你的伴侣在事业上并不是相似的道路，通过对他工作和喜好的了解，你也可以使他为你打开他的心扉。这能扩大你的视野，帮助你减少生活中的不愉快。你们应成为一起工作的一体。我并不是像Adam那样做职业编程的；我也没有向那方面发展。我懂编程，但不幸的是，自小就没人给我积木做训练，在学校和家里也从来没人鼓励我学数学。工程学和解决问题的才能从来就没有培养出来。所以，当我想对编程感兴趣时，这对我的难度看起来比其他人大。但我的强项是写作，编程方面和技术方面的题材对我是个巨大的兴趣\n\n– 所以，能得到Intridea社区管理员的工作让我的世界真正的兴奋起来。我关注着我喜爱的世界，我能感受到它的脉搏，我所做的一直给我带来回报，给我快乐。\n\n所以，如果你和新朋友们在一起，想办法培养自己对他们爱说的事情的兴趣。如果你和老朋友在一起，通过询问他们的工作、倾听他们的回复来再次发掘你的生活爱好。不要假装爱好。不要做那种连她丈夫使用什么编程语言都不知的女孩子。你要做那种让你的丈夫的朋友吃惊于你还知道Java时什么的酷妻子，不做那种在讨论Ruby社区里的自由派时说出“亲爱的，我不知道你原来还是个珠宝商哪！”的妻子。\n","slug":"2011-03-10-husband-programmer","published":1,"updated":"2017-06-05T02:56:52.000Z","photos":[],"link":"","_id":"cj3jjpb8a0003zumjxcr4xp4g","content":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_description\" content=\"My husband is a programmer; I have no idea what that means.\"></p>\n<p><meta name=\"_su_keywords\" content=\"programmer, career, ruby, rails, life\"></p>\n<p><meta name=\"_su_rich_snippet_type\" content=\"none\"></p>\n<p><meta name=\"_su_title\" content=\"programmer, career, ruby, rails, life\"></p>\n<p><meta name=\"views\" content=\"388\"><br>copy from : <a href=\"http://www.renaebair.com/2010/08/11/my-husband-is-a-programmer-i-have-no-idea-what-that-means/\" target=\"_blank\" rel=\"external\">http://www.renaebair.com/2010/08/11/my-husband-is-a-programmer-i-have-no-idea-what-that-means/</a></p>\n<p>I met my husband 11 years ago. I was carrying my guitar into my dorm room on freshman move-in day at the University of Southern Maine. I saw him eyeing my guitar with great interest. When he knocked on my door and introduced himself, he said, “Hey! I’m Adam. I live across the hall. I’m a computer geek!”</p>\n<p>It was a bold move on his part. Being a computer geek ten years ago wasn’t exactly “hot” and he was either socially ignorant to this fact, or he just didn’t care. Regardless, I was in love. I wasn’t even a computer geek myself at the time, but I was smitten with his forwardness and his apparent lack of concern about his own geekery. Finding out that he also played guitar sealed the deal. Fate would have it that he lived directly across the hall from me.</p>\n<p>In the following weeks, months and years, he was able to hold my attention as he ranted about hardware specs for his gaming machines, his god-like status in Unreal Tournament matches, his ColdFusion senior project application, and his long explanations on programming theory. I sat and watched in amazement as he built and tore down PCs. I listened to him talk through programming problems and watched him build websites. All the while I was planning some vague career with political science and english, but I was nonetheless interested in Adam’s life.</p>\n<p>It was no accident that years later I knew that “Ruby” wasn’t just July’s birthstone and that “Ruby on Rails” wasn’t a rebellious act of sacrificing precious gems on railroad tracks in hipster neighborhoods. I spent years actually being engaged in his interests. And when he fell in love with Ruby in late 2005, I was supporting him all the way and knew exactly why Ruby was incredible. Several years later, when I decided to learn Ruby, I came out with a post on my blog about the <a href=\"http://www.renaebair.com/2008/11/24/the-ranting-rubyists/\" target=\"_blank\">Ruby community</a>. A lot of people were confused as to how a Ruby newb could already understand the Ruby community so well. Truth was, I had been following the community for quite some time before I ever decided to learn to program in Ruby. I knew all the big names, the trends, and the history before I ever opened up TextMate and saved a .rb file.</p>\n<p>Do you get that glazed, faraway look in your eye when you partner starts talking about a programming problem, or the newest testing framework? There’s no need to be bored. Ask questions, try to understand! When I meet women today, I don’t avoid talking about the work that I do, my love for pc gaming, or my fascination with D&amp;D and other such geekery. Often I’ll get a response along these lines: “Programming? My husband does something like that I think.” To which I always inquire, “Oh really? What language does he work with?” Their response is always the same: “Language? huh. I have no idea. There’s more than one? I don’t really know what he does. I don’t pay attention to that stuff.”</p>\n<p>This always blows my mind. You’re married to someone, and you aren’t interested enough in the person to know anything about what they do with nearly 40-50% of their time, aside from their job title? Is it dangerous to draw a correlation between high divorce rates and the lack of interest that people have in their partners lives? It’s easy to fall in love with the “idea” of a person when you first meet them. But I think it would be hard to endure a lifetime of ups and downs, trials and tribulations and the everyday challenges that life throws at two people, if those partners didn’t have a truly vested interest in each other’s passions and life’s work. And if you don’t have even a basic understanding of what your spouse does with 40+hours of his/her week, then you’re not on a team.</p>\n<p>I’m not suggesting that you give up your own individuality and personal interests when you meet someone special. But open your mind enough to experience the world through your partner’s eyes. I admit there were occasions when Adam would be on his third diatribe of the evening on meta-programming, and my mind would start to wander. But I was generally engaged in his interests. And why wouldn’t I be? Falling in love involves getting to know a person. And getting to know a person usually involves talking about and understanding each other’s personal interests. Adam certainly had to endure hundreds of hours listening to Ani Difranco, Dar Williams, and Iron &amp; Wine albums, along with my absurdly psychotic analysis of all of the lyrics. He learned to play tennis at my prompting, although I have to swallow losing nearly every game to him now. He watched my ballet performances in college, and even knew how to pronounce a few of the positions. Below is a photo of Adam and I embarking on a hike up Tumbledown Mountain. It captures Adam’s willingness to step away from the computer for a day and partake in my interest in the outdoors. He was a trooper.</p>\n<p>It should not be hard to be engaged in your partner’s interests. If it is that hard, you might want consider the possibility that you might be full of yourself. Even amongst my friends, I make a concerted effort to listen and understand their individual interests and passions. I always learn something new, and sometimes I get to discover a new passion for myself.</p>\n<p>Professionally, I wouldn’t be where I am today, if I had daydreamed my way through Adam’s geek rants. Our relationship resulted in thousands of hours of video gaming, late-night programming tutorials, brainstorming sessions for new apps, some camping trips and lots of folk music. Even if you don’t follow a similar career path as your spouse, being interested in their work and their hobbies can open up other doors for you. It broadens your world view and helps you to suck less as a human being. It’s about being part of a team that works together. I don’t professionally program like Adam; I’m not built that way. I understand programming, but unfortunately I wasn’t given Legos to play with as a child, math skills were never encouraged in school or at home, and the engineering/problem-solving side was never nurtured. So, while I enjoy programming, it comes a lot harder to me than it does for others. But writing is a strength, and programming and technology is a huge interest of mine - so scoring a gig as <a href=\"http://intridea.com/\" target=\"_blank\">Intridea’s</a> Community Manager really rocked my world. I keep my eye into the world that I love, my finger on the pulse of it, and the work that results is always rewarding and fun.</p>\n<p>So if you’re with someone new, find a way to be interested in the the things they like to talk about. And if you’re with someone old, rediscover the love of your life by asking about their work and listening to their response. Don’t feign interest. And please, don’t be one of those girls that doesn’t know what language her husband programs in. Be the cool wife that surprises her husband’s dorky friends when she knows Java is, and can engage in a short discussion on the evangelicalism of the Ruby community without asking, “Honey, I didn’t know you were a jeweler!”</p>\n<p><a id=\"more\"></a>下面是中文译本…….</p>\n<p>copy from :<a href=\"http://software.intel.com/zh-cn/blogs/2011/01/26/zt-2/?cid=sw:prccsdn1587\" target=\"_blank\" rel=\"external\">http://software.intel.com/zh-cn/blogs/2011/01/26/zt-2/?cid=sw:prccsdn1587</a></p>\n<p><strong>我在11年前认识了的我丈夫。当时是南缅因州大学新生入校的日子，我带着吉他去宿舍。他饶有兴趣的盯着我的吉他。之后他敲响了我的房门，自我介绍道：“嗨，我叫Adam，我就住在走廊的对面。我是个计算机程序员！”</strong><br>他做了一很勇敢的决定。 10年前当程序员并不像今天这么“火”，这个行业并不被社会重视，他似乎也根本不在意这些。不管怎样，我们相爱了。我当时并不懂编程，但却被他那义无反顾 的精神和毫不在意被人当作怪人的态度打动。是发现了他也弹吉他使我们走到了一起。如果仅是他住在走廊我的对面，命运也不会做出这样的安排。</p>\n<p>在随后的一周周，一月月，一年年，他慢慢的吸引了我的注意力，他会对着他的游戏机的硬件清单大发雷霆，他能在虚拟世界里的游戏竞赛中为我独尊，他在ColdFusion平台上制作了他的毕业论文项目，他会用长篇大论来解释他的编程理论。我会安静的坐着，惊奇的看他把一台PC机拆成零碎。我听他讲编程上的问题，看他开发网站。与此同时，我还只是朦胧的感觉到我未来的职业应该是跟科技和英语有关，但我着实对Adam的生活发生了兴趣。</p>\n<p>几年以后，我很自然的就知道了，“Ruby”并不是指的七月的生日石，而“Ruby on Rails”也不是邻区的新潮人在火车轨道上举行的敬拜珍贵宝石的奇怪活动。几年时间里，我事实上也培养出了他的同样的兴趣。2005年末他深深的喜欢上了Ruby，我全力支持他，而且也知道Ruby的不可思议之处。几年后，当我决定了开始学习Ruby，我在博客上写了一篇关于Ruby社区的文章。很多人都很奇怪为什么一个像我这样的Ruby新手会对Ruby社区有如此的了解。答案是，我在决定学习Ruby编程之前已经关注这个社区很久了。在我曾经打开TextMate编辑器、保存第一个.rb文件之前，我就知道了这个社区里有那些大人物，Ruby的发展趋势，和历史事件。</p>\n<p>当你的伴侣开始跟你讲编程的问题时，或讲最新的测试框架时，你的眼神里是否显露出一种呆滞和恍惚？事情并不是你想象的单调乏味。问他问题，尝试着去理解！如今当我遇到女人们时，我并不回避给她们谈我的工作，谈我喜欢的电脑游戏，谈我着迷于 D&amp;D 游戏以及其它这样的荒诞事情。通常我得到的回复是这样的几句：“编程？我想我丈夫做的好像也是这方面的。”对于此，我总是问道：“哦，真的吗？他用的是什么编程语言？”她们的回答每次都一样：”语言？哼，我可不知道。不止一种吗？我并不真正知道他在干什么。我对这些东西没兴趣。“</p>\n<p>这每次都让我感慨万分。你嫁给了一个人，可是你对这个人花去将近40-50%的时间去做的事情一无所知——除了工作名称。我们是否可以把今天的高离婚率和他们对配偶的生活缺乏兴趣之间画一条危险的关联线呢？当两个人第一次相遇时，一个人很容易根据自己的”看法“而坠入爱河。但我认为如果配偶不能够对对方的爱好和生活工作有真正的了解，那么这两个人将很难经受的住生命的各种起起伏伏，艰难和考验，要知道，生活中每天都有挑战。如果你对配偶的每周40小时的工作内容没有一个基本的理解，你们就不能成为一体。</p>\n<p>我并不是在建议当你遇到钟情的对象时要放弃自己个性和个人兴趣。而是要你睁大眼睛，用你的伴侣的视野去体验这个世界。我承认，有时Adam会在某天晚上对元数据编程谩骂个没完没了，此时我也就跟他的思想走不到一起了。但通常情况下我会投入到他的兴趣当中。而且为什么不呢？我爱他，这就要求我去了解他。而了解一个人就是要你们去相互讨论和理解对方的兴趣。 Adam会花数百小时艰难的听</p>\n<p>Ani Difranco， Dar Williams， 和 Iron &amp; Wine 唱片，我会在一旁神经质的给他解释所有的歌词。在我的鼓励下他学会了打网球，尽管现在不得不忍受每次被他打败的结果。在大学里他看过我的芭蕾舞表演，他甚至都知道了不少其中的姿势的叫法了。下面的照片是我和Adam在徒步翻越缅因州Tumbledown山时拍的。它见证了Adam自愿从计算机旁走开，参加到我喜欢的户外运动中的事情。他很顽强。</p>\n<p>参与到你的伴侣的兴趣中并不是一件难事。如果你觉得很难，那你也许要思考一下自己是不是太自我了。即使朋友之间，我也努力的聆听和理解他们的兴趣和爱好。我经常会听到一些新奇的东西，经常我会为自己找到了一些新爱好。</p>\n<p>就我来说，如果当Adam在奇怪的跟计算机大喊大叫时，我只是发呆，那我就不会有今天的生活。</p>\n<p>那是无数的小时的一起玩视频游戏，一起深夜编写手册，一起为新应用做头脑风暴式的讨论，一起野营旅行，一起听乡村音乐才铸就了我们之间的关系。即使你跟你的伴侣在事业上并不是相似的道路，通过对他工作和喜好的了解，你也可以使他为你打开他的心扉。这能扩大你的视野，帮助你减少生活中的不愉快。你们应成为一起工作的一体。我并不是像Adam那样做职业编程的；我也没有向那方面发展。我懂编程，但不幸的是，自小就没人给我积木做训练，在学校和家里也从来没人鼓励我学数学。工程学和解决问题的才能从来就没有培养出来。所以，当我想对编程感兴趣时，这对我的难度看起来比其他人大。但我的强项是写作，编程方面和技术方面的题材对我是个巨大的兴趣</p>\n<p>– 所以，能得到Intridea社区管理员的工作让我的世界真正的兴奋起来。我关注着我喜爱的世界，我能感受到它的脉搏，我所做的一直给我带来回报，给我快乐。</p>\n<p>所以，如果你和新朋友们在一起，想办法培养自己对他们爱说的事情的兴趣。如果你和老朋友在一起，通过询问他们的工作、倾听他们的回复来再次发掘你的生活爱好。不要假装爱好。不要做那种连她丈夫使用什么编程语言都不知的女孩子。你要做那种让你的丈夫的朋友吃惊于你还知道Java时什么的酷妻子，不做那种在讨论Ruby社区里的自由派时说出“亲爱的，我不知道你原来还是个珠宝商哪！”的妻子。</p>\n","site":{"data":{}},"excerpt":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_description\" content=\"My husband is a programmer; I have no idea what that means.\"></p>\n<p><meta name=\"_su_keywords\" content=\"programmer, career, ruby, rails, life\"></p>\n<p><meta name=\"_su_rich_snippet_type\" content=\"none\"></p>\n<p><meta name=\"_su_title\" content=\"programmer, career, ruby, rails, life\"></p>\n<p><meta name=\"views\" content=\"388\"><br>copy from : <a href=\"http://www.renaebair.com/2010/08/11/my-husband-is-a-programmer-i-have-no-idea-what-that-means/\" target=\"_blank\" rel=\"external\">http://www.renaebair.com/2010/08/11/my-husband-is-a-programmer-i-have-no-idea-what-that-means/</a></p>\n<p>I met my husband 11 years ago. I was carrying my guitar into my dorm room on freshman move-in day at the University of Southern Maine. I saw him eyeing my guitar with great interest. When he knocked on my door and introduced himself, he said, “Hey! I’m Adam. I live across the hall. I’m a computer geek!”</p>\n<p>It was a bold move on his part. Being a computer geek ten years ago wasn’t exactly “hot” and he was either socially ignorant to this fact, or he just didn’t care. Regardless, I was in love. I wasn’t even a computer geek myself at the time, but I was smitten with his forwardness and his apparent lack of concern about his own geekery. Finding out that he also played guitar sealed the deal. Fate would have it that he lived directly across the hall from me.</p>\n<p>In the following weeks, months and years, he was able to hold my attention as he ranted about hardware specs for his gaming machines, his god-like status in Unreal Tournament matches, his ColdFusion senior project application, and his long explanations on programming theory. I sat and watched in amazement as he built and tore down PCs. I listened to him talk through programming problems and watched him build websites. All the while I was planning some vague career with political science and english, but I was nonetheless interested in Adam’s life.</p>\n<p>It was no accident that years later I knew that “Ruby” wasn’t just July’s birthstone and that “Ruby on Rails” wasn’t a rebellious act of sacrificing precious gems on railroad tracks in hipster neighborhoods. I spent years actually being engaged in his interests. And when he fell in love with Ruby in late 2005, I was supporting him all the way and knew exactly why Ruby was incredible. Several years later, when I decided to learn Ruby, I came out with a post on my blog about the <a href=\"http://www.renaebair.com/2008/11/24/the-ranting-rubyists/\" target=\"_blank\">Ruby community</a>. A lot of people were confused as to how a Ruby newb could already understand the Ruby community so well. Truth was, I had been following the community for quite some time before I ever decided to learn to program in Ruby. I knew all the big names, the trends, and the history before I ever opened up TextMate and saved a .rb file.</p>\n<p>Do you get that glazed, faraway look in your eye when you partner starts talking about a programming problem, or the newest testing framework? There’s no need to be bored. Ask questions, try to understand! When I meet women today, I don’t avoid talking about the work that I do, my love for pc gaming, or my fascination with D&amp;D and other such geekery. Often I’ll get a response along these lines: “Programming? My husband does something like that I think.” To which I always inquire, “Oh really? What language does he work with?” Their response is always the same: “Language? huh. I have no idea. There’s more than one? I don’t really know what he does. I don’t pay attention to that stuff.”</p>\n<p>This always blows my mind. You’re married to someone, and you aren’t interested enough in the person to know anything about what they do with nearly 40-50% of their time, aside from their job title? Is it dangerous to draw a correlation between high divorce rates and the lack of interest that people have in their partners lives? It’s easy to fall in love with the “idea” of a person when you first meet them. But I think it would be hard to endure a lifetime of ups and downs, trials and tribulations and the everyday challenges that life throws at two people, if those partners didn’t have a truly vested interest in each other’s passions and life’s work. And if you don’t have even a basic understanding of what your spouse does with 40+hours of his/her week, then you’re not on a team.</p>\n<p>I’m not suggesting that you give up your own individuality and personal interests when you meet someone special. But open your mind enough to experience the world through your partner’s eyes. I admit there were occasions when Adam would be on his third diatribe of the evening on meta-programming, and my mind would start to wander. But I was generally engaged in his interests. And why wouldn’t I be? Falling in love involves getting to know a person. And getting to know a person usually involves talking about and understanding each other’s personal interests. Adam certainly had to endure hundreds of hours listening to Ani Difranco, Dar Williams, and Iron &amp; Wine albums, along with my absurdly psychotic analysis of all of the lyrics. He learned to play tennis at my prompting, although I have to swallow losing nearly every game to him now. He watched my ballet performances in college, and even knew how to pronounce a few of the positions. Below is a photo of Adam and I embarking on a hike up Tumbledown Mountain. It captures Adam’s willingness to step away from the computer for a day and partake in my interest in the outdoors. He was a trooper.</p>\n<p>It should not be hard to be engaged in your partner’s interests. If it is that hard, you might want consider the possibility that you might be full of yourself. Even amongst my friends, I make a concerted effort to listen and understand their individual interests and passions. I always learn something new, and sometimes I get to discover a new passion for myself.</p>\n<p>Professionally, I wouldn’t be where I am today, if I had daydreamed my way through Adam’s geek rants. Our relationship resulted in thousands of hours of video gaming, late-night programming tutorials, brainstorming sessions for new apps, some camping trips and lots of folk music. Even if you don’t follow a similar career path as your spouse, being interested in their work and their hobbies can open up other doors for you. It broadens your world view and helps you to suck less as a human being. It’s about being part of a team that works together. I don’t professionally program like Adam; I’m not built that way. I understand programming, but unfortunately I wasn’t given Legos to play with as a child, math skills were never encouraged in school or at home, and the engineering/problem-solving side was never nurtured. So, while I enjoy programming, it comes a lot harder to me than it does for others. But writing is a strength, and programming and technology is a huge interest of mine - so scoring a gig as <a href=\"http://intridea.com/\" target=\"_blank\">Intridea’s</a> Community Manager really rocked my world. I keep my eye into the world that I love, my finger on the pulse of it, and the work that results is always rewarding and fun.</p>\n<p>So if you’re with someone new, find a way to be interested in the the things they like to talk about. And if you’re with someone old, rediscover the love of your life by asking about their work and listening to their response. Don’t feign interest. And please, don’t be one of those girls that doesn’t know what language her husband programs in. Be the cool wife that surprises her husband’s dorky friends when she knows Java is, and can engage in a short discussion on the evangelicalism of the Ruby community without asking, “Honey, I didn’t know you were a jeweler!”</p>\n<p>","more":"下面是中文译本…….</p>\n<p>copy from :<a href=\"http://software.intel.com/zh-cn/blogs/2011/01/26/zt-2/?cid=sw:prccsdn1587\" target=\"_blank\" rel=\"external\">http://software.intel.com/zh-cn/blogs/2011/01/26/zt-2/?cid=sw:prccsdn1587</a></p>\n<p><strong>我在11年前认识了的我丈夫。当时是南缅因州大学新生入校的日子，我带着吉他去宿舍。他饶有兴趣的盯着我的吉他。之后他敲响了我的房门，自我介绍道：“嗨，我叫Adam，我就住在走廊的对面。我是个计算机程序员！”</strong><br>他做了一很勇敢的决定。 10年前当程序员并不像今天这么“火”，这个行业并不被社会重视，他似乎也根本不在意这些。不管怎样，我们相爱了。我当时并不懂编程，但却被他那义无反顾 的精神和毫不在意被人当作怪人的态度打动。是发现了他也弹吉他使我们走到了一起。如果仅是他住在走廊我的对面，命运也不会做出这样的安排。</p>\n<p>在随后的一周周，一月月，一年年，他慢慢的吸引了我的注意力，他会对着他的游戏机的硬件清单大发雷霆，他能在虚拟世界里的游戏竞赛中为我独尊，他在ColdFusion平台上制作了他的毕业论文项目，他会用长篇大论来解释他的编程理论。我会安静的坐着，惊奇的看他把一台PC机拆成零碎。我听他讲编程上的问题，看他开发网站。与此同时，我还只是朦胧的感觉到我未来的职业应该是跟科技和英语有关，但我着实对Adam的生活发生了兴趣。</p>\n<p>几年以后，我很自然的就知道了，“Ruby”并不是指的七月的生日石，而“Ruby on Rails”也不是邻区的新潮人在火车轨道上举行的敬拜珍贵宝石的奇怪活动。几年时间里，我事实上也培养出了他的同样的兴趣。2005年末他深深的喜欢上了Ruby，我全力支持他，而且也知道Ruby的不可思议之处。几年后，当我决定了开始学习Ruby，我在博客上写了一篇关于Ruby社区的文章。很多人都很奇怪为什么一个像我这样的Ruby新手会对Ruby社区有如此的了解。答案是，我在决定学习Ruby编程之前已经关注这个社区很久了。在我曾经打开TextMate编辑器、保存第一个.rb文件之前，我就知道了这个社区里有那些大人物，Ruby的发展趋势，和历史事件。</p>\n<p>当你的伴侣开始跟你讲编程的问题时，或讲最新的测试框架时，你的眼神里是否显露出一种呆滞和恍惚？事情并不是你想象的单调乏味。问他问题，尝试着去理解！如今当我遇到女人们时，我并不回避给她们谈我的工作，谈我喜欢的电脑游戏，谈我着迷于 D&amp;D 游戏以及其它这样的荒诞事情。通常我得到的回复是这样的几句：“编程？我想我丈夫做的好像也是这方面的。”对于此，我总是问道：“哦，真的吗？他用的是什么编程语言？”她们的回答每次都一样：”语言？哼，我可不知道。不止一种吗？我并不真正知道他在干什么。我对这些东西没兴趣。“</p>\n<p>这每次都让我感慨万分。你嫁给了一个人，可是你对这个人花去将近40-50%的时间去做的事情一无所知——除了工作名称。我们是否可以把今天的高离婚率和他们对配偶的生活缺乏兴趣之间画一条危险的关联线呢？当两个人第一次相遇时，一个人很容易根据自己的”看法“而坠入爱河。但我认为如果配偶不能够对对方的爱好和生活工作有真正的了解，那么这两个人将很难经受的住生命的各种起起伏伏，艰难和考验，要知道，生活中每天都有挑战。如果你对配偶的每周40小时的工作内容没有一个基本的理解，你们就不能成为一体。</p>\n<p>我并不是在建议当你遇到钟情的对象时要放弃自己个性和个人兴趣。而是要你睁大眼睛，用你的伴侣的视野去体验这个世界。我承认，有时Adam会在某天晚上对元数据编程谩骂个没完没了，此时我也就跟他的思想走不到一起了。但通常情况下我会投入到他的兴趣当中。而且为什么不呢？我爱他，这就要求我去了解他。而了解一个人就是要你们去相互讨论和理解对方的兴趣。 Adam会花数百小时艰难的听</p>\n<p>Ani Difranco， Dar Williams， 和 Iron &amp; Wine 唱片，我会在一旁神经质的给他解释所有的歌词。在我的鼓励下他学会了打网球，尽管现在不得不忍受每次被他打败的结果。在大学里他看过我的芭蕾舞表演，他甚至都知道了不少其中的姿势的叫法了。下面的照片是我和Adam在徒步翻越缅因州Tumbledown山时拍的。它见证了Adam自愿从计算机旁走开，参加到我喜欢的户外运动中的事情。他很顽强。</p>\n<p>参与到你的伴侣的兴趣中并不是一件难事。如果你觉得很难，那你也许要思考一下自己是不是太自我了。即使朋友之间，我也努力的聆听和理解他们的兴趣和爱好。我经常会听到一些新奇的东西，经常我会为自己找到了一些新爱好。</p>\n<p>就我来说，如果当Adam在奇怪的跟计算机大喊大叫时，我只是发呆，那我就不会有今天的生活。</p>\n<p>那是无数的小时的一起玩视频游戏，一起深夜编写手册，一起为新应用做头脑风暴式的讨论，一起野营旅行，一起听乡村音乐才铸就了我们之间的关系。即使你跟你的伴侣在事业上并不是相似的道路，通过对他工作和喜好的了解，你也可以使他为你打开他的心扉。这能扩大你的视野，帮助你减少生活中的不愉快。你们应成为一起工作的一体。我并不是像Adam那样做职业编程的；我也没有向那方面发展。我懂编程，但不幸的是，自小就没人给我积木做训练，在学校和家里也从来没人鼓励我学数学。工程学和解决问题的才能从来就没有培养出来。所以，当我想对编程感兴趣时，这对我的难度看起来比其他人大。但我的强项是写作，编程方面和技术方面的题材对我是个巨大的兴趣</p>\n<p>– 所以，能得到Intridea社区管理员的工作让我的世界真正的兴奋起来。我关注着我喜爱的世界，我能感受到它的脉搏，我所做的一直给我带来回报，给我快乐。</p>\n<p>所以，如果你和新朋友们在一起，想办法培养自己对他们爱说的事情的兴趣。如果你和老朋友在一起，通过询问他们的工作、倾听他们的回复来再次发掘你的生活爱好。不要假装爱好。不要做那种连她丈夫使用什么编程语言都不知的女孩子。你要做那种让你的丈夫的朋友吃惊于你还知道Java时什么的酷妻子，不做那种在讨论Ruby社区里的自由派时说出“亲爱的，我不知道你原来还是个珠宝商哪！”的妻子。</p>"},{"layout":"post","title":"江边城外 烤鱼店 优惠 折扣","date":"2011-03-15T16:00:00.000Z","wordpress_id":361,"comments":1,"_content":"<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_description\" content=\"江边城外巫山烤鱼折扣信息\" />\n<meta name=\"_su_rich_snippet_type\" content=\"none\" />\n<meta name=\"_su_title\" content=\"烤鱼,优惠,折扣,巫山烤鱼,江边城外\" />\n<meta name=\"views\" content=\"329\" />\n江边城外 烤鱼店 优惠 折扣信息：\n\n通过饭统网订餐，95折优惠<a href=\"http://beijing.fantong.com/cate/700070861/\">http://beijing.fantong.com/cate/700070861/</a>，订餐电话4006-177-177\n\n这个是烤鱼上地店的电话号码010-82781832，但是直接打这个号码是不优惠的。\n\n这个是大众网的优惠图片。有效期至2011-12-31.打印即可。非节假日的午餐16:00之前是95折...\n\n<a href=\"http://chillyc.info/wp-content/uploads/roast-fish-discount.jpg\"><img class=\"aligncenter size-full wp-image-362\" title=\"roast fish discount\" src=\"http://chillyc.info/wp-content/uploads/roast-fish-discount.jpg\" alt=\"\" width=\"600\" height=\"600\" /></a>\n\n或者编辑如下的短信：\n\n北京优惠券#120798:凭此短信[江边城外巫山烤全鱼]午市9折或抵用15元（法定节假日除外，以16点前结账时间为准，每次限用一条短信，折扣部分不开发票），1-17至12-31有效。详询商家\n","source":"_posts/2011-03-16-jiang-bian-cheng-wai-kao-yu-dian-you-hui-zhe-kou.markdown","raw":"---\nlayout: post\ntitle: \"江边城外 烤鱼店 优惠 折扣\"\ndate: 2011-3-16\nwordpress_id: 361\ncomments: true\ncategories: [\"chinese\", \"discount\", \"see-hear\"]\n---\n<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_description\" content=\"江边城外巫山烤鱼折扣信息\" />\n<meta name=\"_su_rich_snippet_type\" content=\"none\" />\n<meta name=\"_su_title\" content=\"烤鱼,优惠,折扣,巫山烤鱼,江边城外\" />\n<meta name=\"views\" content=\"329\" />\n江边城外 烤鱼店 优惠 折扣信息：\n\n通过饭统网订餐，95折优惠<a href=\"http://beijing.fantong.com/cate/700070861/\">http://beijing.fantong.com/cate/700070861/</a>，订餐电话4006-177-177\n\n这个是烤鱼上地店的电话号码010-82781832，但是直接打这个号码是不优惠的。\n\n这个是大众网的优惠图片。有效期至2011-12-31.打印即可。非节假日的午餐16:00之前是95折...\n\n<a href=\"http://chillyc.info/wp-content/uploads/roast-fish-discount.jpg\"><img class=\"aligncenter size-full wp-image-362\" title=\"roast fish discount\" src=\"http://chillyc.info/wp-content/uploads/roast-fish-discount.jpg\" alt=\"\" width=\"600\" height=\"600\" /></a>\n\n或者编辑如下的短信：\n\n北京优惠券#120798:凭此短信[江边城外巫山烤全鱼]午市9折或抵用15元（法定节假日除外，以16点前结账时间为准，每次限用一条短信，折扣部分不开发票），1-17至12-31有效。详询商家\n","slug":"2011-03-16-jiang-bian-cheng-wai-kao-yu-dian-you-hui-zhe-kou","published":1,"updated":"2017-06-05T02:56:52.000Z","photos":[],"link":"","_id":"cj3jjpb8n0004zumj8s1u5sja","content":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_description\" content=\"江边城外巫山烤鱼折扣信息\"></p>\n<p><meta name=\"_su_rich_snippet_type\" content=\"none\"></p>\n<p><meta name=\"_su_title\" content=\"烤鱼,优惠,折扣,巫山烤鱼,江边城外\"></p>\n<p><meta name=\"views\" content=\"329\"><br>江边城外 烤鱼店 优惠 折扣信息：</p>\n<p>通过饭统网订餐，95折优惠<a href=\"http://beijing.fantong.com/cate/700070861/\" target=\"_blank\" rel=\"external\">http://beijing.fantong.com/cate/700070861/</a>，订餐电话4006-177-177</p>\n<p>这个是烤鱼上地店的电话号码010-82781832，但是直接打这个号码是不优惠的。</p>\n<p>这个是大众网的优惠图片。有效期至2011-12-31.打印即可。非节假日的午餐16:00之前是95折…</p>\n<p><a href=\"http://chillyc.info/wp-content/uploads/roast-fish-discount.jpg\"><img class=\"aligncenter size-full wp-image-362\" title=\"roast fish discount\" src=\"http://chillyc.info/wp-content/uploads/roast-fish-discount.jpg\" alt=\"\" width=\"600\" height=\"600\"></a></p>\n<p>或者编辑如下的短信：</p>\n<p>北京优惠券#120798:凭此短信[江边城外巫山烤全鱼]午市9折或抵用15元（法定节假日除外，以16点前结账时间为准，每次限用一条短信，折扣部分不开发票），1-17至12-31有效。详询商家</p>\n","site":{"data":{}},"excerpt":"","more":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_description\" content=\"江边城外巫山烤鱼折扣信息\"></p>\n<p><meta name=\"_su_rich_snippet_type\" content=\"none\"></p>\n<p><meta name=\"_su_title\" content=\"烤鱼,优惠,折扣,巫山烤鱼,江边城外\"></p>\n<p><meta name=\"views\" content=\"329\"><br>江边城外 烤鱼店 优惠 折扣信息：</p>\n<p>通过饭统网订餐，95折优惠<a href=\"http://beijing.fantong.com/cate/700070861/\" target=\"_blank\" rel=\"external\">http://beijing.fantong.com/cate/700070861/</a>，订餐电话4006-177-177</p>\n<p>这个是烤鱼上地店的电话号码010-82781832，但是直接打这个号码是不优惠的。</p>\n<p>这个是大众网的优惠图片。有效期至2011-12-31.打印即可。非节假日的午餐16:00之前是95折…</p>\n<p><a href=\"http://chillyc.info/wp-content/uploads/roast-fish-discount.jpg\"><img class=\"aligncenter size-full wp-image-362\" title=\"roast fish discount\" src=\"http://chillyc.info/wp-content/uploads/roast-fish-discount.jpg\" alt=\"\" width=\"600\" height=\"600\"></a></p>\n<p>或者编辑如下的短信：</p>\n<p>北京优惠券#120798:凭此短信[江边城外巫山烤全鱼]午市9折或抵用15元（法定节假日除外，以16点前结账时间为准，每次限用一条短信，折扣部分不开发票），1-17至12-31有效。详询商家</p>\n"},{"layout":"post","title":"python unittest","date":"2011-03-15T16:00:00.000Z","wordpress_id":359,"comments":1,"_content":"<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_rich_snippet_type\" content=\"none\" />\n<meta name=\"_su_title\" content=\"python, unittest, unit,test\" />\n<meta name=\"views\" content=\"338\" />\nfirst you should import unittest, and write a class inherit unittest.TestCase. Then write some function named test_XXX, which uses \"test_\" as its prefix. Then in main, call the class's main() function.\n\nthis is an example:\n\n\n{% codeblock %}import unittest\n\nclass TestFunctions(unittest.TestCase):    \n    def test_range(self):\n       for i in range(10):\n          self.assertEqual(i,i)\n\nif __name__ == \"__main__\":\n    TestFunctions.main(){% endcodeblock %}\n\n<div id=\"_mcePaste\">In this example, TestFunctions.main() will call all functions like test_XXX between setUp() and tearDown(). The sequence is setUp()---&gt;test_XXX()---&gt;tearDown()---&gt;setUp()---&gt;test_XXX()---&gt;tearDown().....</div>\n","source":"_posts/2011-03-16-python-unittest.markdown","raw":"---\nlayout: post\ntitle: \"python unittest\"\ndate: 2011-3-16\nwordpress_id: 359\ncomments: true\ncategories: [\"code\", \"python\", \"python\", \"test\", \"unit\"]\n---\n<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_rich_snippet_type\" content=\"none\" />\n<meta name=\"_su_title\" content=\"python, unittest, unit,test\" />\n<meta name=\"views\" content=\"338\" />\nfirst you should import unittest, and write a class inherit unittest.TestCase. Then write some function named test_XXX, which uses \"test_\" as its prefix. Then in main, call the class's main() function.\n\nthis is an example:\n\n\n{% codeblock %}import unittest\n\nclass TestFunctions(unittest.TestCase):    \n    def test_range(self):\n       for i in range(10):\n          self.assertEqual(i,i)\n\nif __name__ == \"__main__\":\n    TestFunctions.main(){% endcodeblock %}\n\n<div id=\"_mcePaste\">In this example, TestFunctions.main() will call all functions like test_XXX between setUp() and tearDown(). The sequence is setUp()---&gt;test_XXX()---&gt;tearDown()---&gt;setUp()---&gt;test_XXX()---&gt;tearDown().....</div>\n","slug":"2011-03-16-python-unittest","published":1,"updated":"2017-06-05T02:56:52.000Z","photos":[],"link":"","_id":"cj3jjpb8r0006zumjfavhpw4g","content":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_rich_snippet_type\" content=\"none\"></p>\n<p><meta name=\"_su_title\" content=\"python, unittest, unit,test\"></p>\n<p><meta name=\"views\" content=\"338\"><br>first you should import unittest, and write a class inherit unittest.TestCase. Then write some function named test<em>XXX, which uses “test</em>“ as its prefix. Then in main, call the class’s main() function.</p>\n<p>this is an example:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">import unittest</div><div class=\"line\"></div><div class=\"line\">class TestFunctions(unittest.TestCase):    </div><div class=\"line\">    def test_range(self):</div><div class=\"line\">       for i in range(10):</div><div class=\"line\">          self.assertEqual(i,i)</div><div class=\"line\"></div><div class=\"line\">if __name__ == &quot;__main__&quot;:</div><div class=\"line\">    TestFunctions.main()</div></pre></td></tr></table></figure>\n<div id=\"_mcePaste\">In this example, TestFunctions.main() will call all functions like test_XXX between setUp() and tearDown(). The sequence is setUp()—&gt;test_XXX()—&gt;tearDown()—&gt;setUp()—&gt;test_XXX()—&gt;tearDown()…..</div>\n","site":{"data":{}},"excerpt":"","more":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_rich_snippet_type\" content=\"none\"></p>\n<p><meta name=\"_su_title\" content=\"python, unittest, unit,test\"></p>\n<p><meta name=\"views\" content=\"338\"><br>first you should import unittest, and write a class inherit unittest.TestCase. Then write some function named test<em>XXX, which uses “test</em>“ as its prefix. Then in main, call the class’s main() function.</p>\n<p>this is an example:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">import unittest</div><div class=\"line\"></div><div class=\"line\">class TestFunctions(unittest.TestCase):    </div><div class=\"line\">    def test_range(self):</div><div class=\"line\">       for i in range(10):</div><div class=\"line\">          self.assertEqual(i,i)</div><div class=\"line\"></div><div class=\"line\">if __name__ == &quot;__main__&quot;:</div><div class=\"line\">    TestFunctions.main()</div></pre></td></tr></table></figure>\n<div id=\"_mcePaste\">In this example, TestFunctions.main() will call all functions like test_XXX between setUp() and tearDown(). The sequence is setUp()—&gt;test_XXX()—&gt;tearDown()—&gt;setUp()—&gt;test_XXX()—&gt;tearDown()…..</div>\n"},{"layout":"post","title":"use message queue and message status table to solute distribute transcation","date":"2011-03-16T16:00:00.000Z","wordpress_id":368,"comments":1,"_content":"<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_rich_snippet_type\" content=\"none\" />\n<meta name=\"_su_title\" content=\"message,queue\" />\n<meta name=\"views\" content=\"362\" />\n<meta name=\"_wp_old_slug\" content=\"用消息队列和消息应用状态表来消除分布式事务\" />\ncopy from :<a href=\"http://rdc.taobao.com/blog/cs/?p=671\">http://rdc.taobao.com/blog/cs/?p=671</a>\n\n<strong>用消息队列和消息应用状态表来消除分布式事务</strong>\n\n由于数据量的巨大，大部分Web应用都需要部署很多个数据库实例。这样，有些用户操作就可能需要去修改多个数据库实例中的数据。传统的解决方法是使用分布式事务保证数据的全局一致性，经典的方法是使用两阶段提交协议。\n\n长期以来，分布式事务提供的优雅的全局ACID保证麻醉了应用开发者的心灵，很多人都不敢越雷池一步，想像没有分布式事务的世界会是怎样。如今就如MySQL和PostgreSQL这类面向低端用户的开源数据库都支持分布式事务了，开发者更是沉醉其中，不去考虑分布式事务是否给系统带来了伤害。\n\n事实上，有所得必有所失，分布式事务提供的ACID保证是以损害系统的可用性、性能与可伸缩性为代价的。只有在参与分布式事务的各个数据库实例都能够正常工作的前提下，分布式事务才能够顺利完成，只要有一个工作不正常，整个事务就不能完成。这样，系统的可用性就相当于参加分布式事务的各实例的可用性之积，实例越多，可用性下降越明显。从性能和可伸缩性角度看，首先是事务的总持续时间通常是各实例操作时间之和，因为一个事务中的各个操作通常是顺序执行的，这样事务的响应时间就会增加很多；其次是一般Web应用的事务都不大，单机操作时间也就几毫秒甚至不到1毫秒，一但涉及到分布式事务，提交时节点间的网络通信往返过程也为毫秒级别，对事务响应时间的影响也不可忽视。由于事务持续时间延长，事务对相关资源的锁定时间也相应增加，从而可能严重增加了并发冲突，影响到系统吞吐率和可伸缩性。\n\n正是由于分布式事务有以上问题，eBay在设计上就不采用分布式事务，而是通过其它途径来解决数据一致性问题。其中使用的最重要的技术就是消息队列和消息应用状态表。\n\n举个例子。假设系统中有以下两个表\nuser(id, name, amt_sold, amt_bought)\ntransaction(xid, seller_id, buyer_id, amount)\n其中user表记录用户交易汇总信息，transaction表记录每个交易的详细信息。\n\n这样，在进行一笔交易时，若使用事务，就需要对数据库进行以下操作：\nbegin;\nINSERT INTO transaction VALUES(xid, $seller_id, $buyer_id, $amount);\nUPDATE user SET amt_sold = amt_sold + $amount WHERE id = $seller_id;\nUPDATE user SET amt_bought = amt_bought + $amount WHERE id = $buyer_id;\ncommit;\n即在transaction表中记录交易信息，然后更新卖家和买家的状态。\n\n假设transaction表和user表存储在不同的节点上，那么上述事务就是一个分布式事务。要消除这一分布式事务，将它拆分成两个子事务，一个更新transaction表，一个更新user表是不行的，因为有可能transaction表更新成功后，更新user失败，系统将不能恢复到一致状态。\n\n解决方案是使用消息队列。如下所示，先启动一个事务，更新transaction表后，并不直接去更新user表，而是将要对user表进行的更新插入到消息队列中。另外有一个异步任务轮询队列内容进行处理。\nbegin;\nINSERT INTO transaction VALUES(xid, $seller_id, $buyer_id, $amount);\nput_to_queue “update user(“seller”, $seller_id, amount);\nput_to_queue “update user(“buyer”, $buyer_id, amount);\ncommit;\nfor each message in queue\nbegin;\ndequeue message;\nif message.type = “seller” then\nUPDATE user SET amt_sold = amt_sold + message.amount WHERE id = message.user_id;\nelse\nUPDATE user SET amt_bought = amt_bought + message.amount WHERE id = message.user_id;\nend\ncommit;\nend\n\n上述解决方案看似完美，实际上还没有解决分布式问题。为了使第一个事务不涉及分布式操作，消息队列必须与transaction表使用同一套存储资源，但为了使第二个事务是本地的，消息队列存储又必须与user表在一起。这两者是不可能同时满足的。\n\n如果消息具有操作幂等性，也就是一个消息被应用多次与应用一次产生的效果是一样的话，上述问题是很好解决的，只要将消息队列放到transaction表一起，然后在第二个事务中，先应用消息，再从消息队列中删除。由于消息队列存储与user表不在一起，应用消息后，可能还没来得及将应用过的消息从队列中删除时系统就出故障了。这时系统恢复后会重新应用一次这一消息，由于幂等性，应用多次也能产生正确的结果。\n\n但实际情况下，消息很难具有幂等性，比如上述的UPDATE操作，执行一次和执行多次的结束显然是不一样的。解决这一问题的方法是使用另一个表记录已经被成功应用的消息，并且这个表使用与user表相同的存储。假设增加以下表 message_applied(msg_id)记录被成功应用的消息，则产生最终的解决方案如下：\nbegin;\nINSERT INTO transaction VALUES(xid, $seller_id, $buyer_id, $amount);\nput_to_queue “update user(“seller”, $seller_id, amount);\nput_to_queue “update user(“buyer”, $buyer_id, amount);\ncommit;\nfor each message in queue\nbegin;\nSELECT count(*) as cnt FROM message_applied WHERE msg_id = message.id;\nif cnt = 0 then\nif message.type = “seller” then\nUPDATE user SET amt_sold = amt_sold + message.amount WHERE id = message.user_id;\nelse\nUPDATE user SET amt_bought = amt_bought + message.amount WHERE id = message.user_id;\nend\nINSERT INTO message_applied VALUES(message.id);\nend\ncommit;\nif 上述事务成功\ndequeue message\nDELETE FROM message_applied WHERE msg_id = message.id;\nend\nend\n\n我们来仔细分析一下：\n1、消息队列与transaction使用同一实例，因此第一个事务不涉及分布式操作；\n2、message_applied与user表在同一个实例中，也能保证一致性；\n3、第二个事务结束后，dequeue message之前系统可能出故障，出故障后系统会重新从消息队列中取出这一消息，但通过message_applied表可以检查出来这一消息已经被应用过，跳过这一消息实现正确的行为；\n4、最后将已经成功应用，且已经从消息队列中删除的消息从message_applied表中删除，可以将message_applied表保证在很小的状态（不清除也是可以的，不影响系统正确性）。由于消息队列与message_applied在不同实例上，dequeue message之后，将对应message_applied记录删除之前可能出故障。一但这时出现故障，message_applied表中会留下一些垃圾内容，但不影响系统正确性，另外这些垃圾内容也是可以正确清理的。\n\n虽然由于没有分布式事务的强一致性保证，使用上述方案在系统发生故障时，系统将短时间内处于不一致状态。但基于消息队列和消息应用状态表，最终可以将系统恢复到一致。使用消息队列方案，解除了两个数据库实例之间的紧密耦合，其性能和可伸缩性是分布式事务不可比拟的。\n\n当然，使用分布式事务有助于简化应用开发，使用消息队列明显需要更多的工作量，两者各有优缺点。个人观点是，对于时间紧迫或者对性能要求不高的系统，应采用分布式事务加快开发效率，对于时间需求不是很紧，对性能要求很高的系统，应考虑使用消息队列方案。对于原使用分布式事务，且系统已趋于稳定，性能要求高的系统，则可以使用消息队列方案进行重构来优化性能。\n\n注: 本文主要取材于eBay的工程师Dan Pritchet写的这篇文章。\n","source":"_posts/2011-03-17-message-queue.markdown","raw":"---\nlayout: post\ntitle: \"use message queue and message status table to solute distribute transcation\"\ndate: 2011-3-17\nwordpress_id: 368\ncomments: true\ncategories: [\"queue\", \"see-hear\"]\n---\n<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_rich_snippet_type\" content=\"none\" />\n<meta name=\"_su_title\" content=\"message,queue\" />\n<meta name=\"views\" content=\"362\" />\n<meta name=\"_wp_old_slug\" content=\"用消息队列和消息应用状态表来消除分布式事务\" />\ncopy from :<a href=\"http://rdc.taobao.com/blog/cs/?p=671\">http://rdc.taobao.com/blog/cs/?p=671</a>\n\n<strong>用消息队列和消息应用状态表来消除分布式事务</strong>\n\n由于数据量的巨大，大部分Web应用都需要部署很多个数据库实例。这样，有些用户操作就可能需要去修改多个数据库实例中的数据。传统的解决方法是使用分布式事务保证数据的全局一致性，经典的方法是使用两阶段提交协议。\n\n长期以来，分布式事务提供的优雅的全局ACID保证麻醉了应用开发者的心灵，很多人都不敢越雷池一步，想像没有分布式事务的世界会是怎样。如今就如MySQL和PostgreSQL这类面向低端用户的开源数据库都支持分布式事务了，开发者更是沉醉其中，不去考虑分布式事务是否给系统带来了伤害。\n\n事实上，有所得必有所失，分布式事务提供的ACID保证是以损害系统的可用性、性能与可伸缩性为代价的。只有在参与分布式事务的各个数据库实例都能够正常工作的前提下，分布式事务才能够顺利完成，只要有一个工作不正常，整个事务就不能完成。这样，系统的可用性就相当于参加分布式事务的各实例的可用性之积，实例越多，可用性下降越明显。从性能和可伸缩性角度看，首先是事务的总持续时间通常是各实例操作时间之和，因为一个事务中的各个操作通常是顺序执行的，这样事务的响应时间就会增加很多；其次是一般Web应用的事务都不大，单机操作时间也就几毫秒甚至不到1毫秒，一但涉及到分布式事务，提交时节点间的网络通信往返过程也为毫秒级别，对事务响应时间的影响也不可忽视。由于事务持续时间延长，事务对相关资源的锁定时间也相应增加，从而可能严重增加了并发冲突，影响到系统吞吐率和可伸缩性。\n\n正是由于分布式事务有以上问题，eBay在设计上就不采用分布式事务，而是通过其它途径来解决数据一致性问题。其中使用的最重要的技术就是消息队列和消息应用状态表。\n\n举个例子。假设系统中有以下两个表\nuser(id, name, amt_sold, amt_bought)\ntransaction(xid, seller_id, buyer_id, amount)\n其中user表记录用户交易汇总信息，transaction表记录每个交易的详细信息。\n\n这样，在进行一笔交易时，若使用事务，就需要对数据库进行以下操作：\nbegin;\nINSERT INTO transaction VALUES(xid, $seller_id, $buyer_id, $amount);\nUPDATE user SET amt_sold = amt_sold + $amount WHERE id = $seller_id;\nUPDATE user SET amt_bought = amt_bought + $amount WHERE id = $buyer_id;\ncommit;\n即在transaction表中记录交易信息，然后更新卖家和买家的状态。\n\n假设transaction表和user表存储在不同的节点上，那么上述事务就是一个分布式事务。要消除这一分布式事务，将它拆分成两个子事务，一个更新transaction表，一个更新user表是不行的，因为有可能transaction表更新成功后，更新user失败，系统将不能恢复到一致状态。\n\n解决方案是使用消息队列。如下所示，先启动一个事务，更新transaction表后，并不直接去更新user表，而是将要对user表进行的更新插入到消息队列中。另外有一个异步任务轮询队列内容进行处理。\nbegin;\nINSERT INTO transaction VALUES(xid, $seller_id, $buyer_id, $amount);\nput_to_queue “update user(“seller”, $seller_id, amount);\nput_to_queue “update user(“buyer”, $buyer_id, amount);\ncommit;\nfor each message in queue\nbegin;\ndequeue message;\nif message.type = “seller” then\nUPDATE user SET amt_sold = amt_sold + message.amount WHERE id = message.user_id;\nelse\nUPDATE user SET amt_bought = amt_bought + message.amount WHERE id = message.user_id;\nend\ncommit;\nend\n\n上述解决方案看似完美，实际上还没有解决分布式问题。为了使第一个事务不涉及分布式操作，消息队列必须与transaction表使用同一套存储资源，但为了使第二个事务是本地的，消息队列存储又必须与user表在一起。这两者是不可能同时满足的。\n\n如果消息具有操作幂等性，也就是一个消息被应用多次与应用一次产生的效果是一样的话，上述问题是很好解决的，只要将消息队列放到transaction表一起，然后在第二个事务中，先应用消息，再从消息队列中删除。由于消息队列存储与user表不在一起，应用消息后，可能还没来得及将应用过的消息从队列中删除时系统就出故障了。这时系统恢复后会重新应用一次这一消息，由于幂等性，应用多次也能产生正确的结果。\n\n但实际情况下，消息很难具有幂等性，比如上述的UPDATE操作，执行一次和执行多次的结束显然是不一样的。解决这一问题的方法是使用另一个表记录已经被成功应用的消息，并且这个表使用与user表相同的存储。假设增加以下表 message_applied(msg_id)记录被成功应用的消息，则产生最终的解决方案如下：\nbegin;\nINSERT INTO transaction VALUES(xid, $seller_id, $buyer_id, $amount);\nput_to_queue “update user(“seller”, $seller_id, amount);\nput_to_queue “update user(“buyer”, $buyer_id, amount);\ncommit;\nfor each message in queue\nbegin;\nSELECT count(*) as cnt FROM message_applied WHERE msg_id = message.id;\nif cnt = 0 then\nif message.type = “seller” then\nUPDATE user SET amt_sold = amt_sold + message.amount WHERE id = message.user_id;\nelse\nUPDATE user SET amt_bought = amt_bought + message.amount WHERE id = message.user_id;\nend\nINSERT INTO message_applied VALUES(message.id);\nend\ncommit;\nif 上述事务成功\ndequeue message\nDELETE FROM message_applied WHERE msg_id = message.id;\nend\nend\n\n我们来仔细分析一下：\n1、消息队列与transaction使用同一实例，因此第一个事务不涉及分布式操作；\n2、message_applied与user表在同一个实例中，也能保证一致性；\n3、第二个事务结束后，dequeue message之前系统可能出故障，出故障后系统会重新从消息队列中取出这一消息，但通过message_applied表可以检查出来这一消息已经被应用过，跳过这一消息实现正确的行为；\n4、最后将已经成功应用，且已经从消息队列中删除的消息从message_applied表中删除，可以将message_applied表保证在很小的状态（不清除也是可以的，不影响系统正确性）。由于消息队列与message_applied在不同实例上，dequeue message之后，将对应message_applied记录删除之前可能出故障。一但这时出现故障，message_applied表中会留下一些垃圾内容，但不影响系统正确性，另外这些垃圾内容也是可以正确清理的。\n\n虽然由于没有分布式事务的强一致性保证，使用上述方案在系统发生故障时，系统将短时间内处于不一致状态。但基于消息队列和消息应用状态表，最终可以将系统恢复到一致。使用消息队列方案，解除了两个数据库实例之间的紧密耦合，其性能和可伸缩性是分布式事务不可比拟的。\n\n当然，使用分布式事务有助于简化应用开发，使用消息队列明显需要更多的工作量，两者各有优缺点。个人观点是，对于时间紧迫或者对性能要求不高的系统，应采用分布式事务加快开发效率，对于时间需求不是很紧，对性能要求很高的系统，应考虑使用消息队列方案。对于原使用分布式事务，且系统已趋于稳定，性能要求高的系统，则可以使用消息队列方案进行重构来优化性能。\n\n注: 本文主要取材于eBay的工程师Dan Pritchet写的这篇文章。\n","slug":"2011-03-17-message-queue","published":1,"updated":"2017-06-05T02:56:52.000Z","photos":[],"link":"","_id":"cj3jjpb8w0008zumjux6sscz0","content":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_rich_snippet_type\" content=\"none\"></p>\n<p><meta name=\"_su_title\" content=\"message,queue\"></p>\n<p><meta name=\"views\" content=\"362\"></p>\n<p><meta name=\"_wp_old_slug\" content=\"用消息队列和消息应用状态表来消除分布式事务\"><br>copy from :<a href=\"http://rdc.taobao.com/blog/cs/?p=671\" target=\"_blank\" rel=\"external\">http://rdc.taobao.com/blog/cs/?p=671</a></p>\n<p><strong>用消息队列和消息应用状态表来消除分布式事务</strong></p>\n<p>由于数据量的巨大，大部分Web应用都需要部署很多个数据库实例。这样，有些用户操作就可能需要去修改多个数据库实例中的数据。传统的解决方法是使用分布式事务保证数据的全局一致性，经典的方法是使用两阶段提交协议。</p>\n<p>长期以来，分布式事务提供的优雅的全局ACID保证麻醉了应用开发者的心灵，很多人都不敢越雷池一步，想像没有分布式事务的世界会是怎样。如今就如MySQL和PostgreSQL这类面向低端用户的开源数据库都支持分布式事务了，开发者更是沉醉其中，不去考虑分布式事务是否给系统带来了伤害。</p>\n<p>事实上，有所得必有所失，分布式事务提供的ACID保证是以损害系统的可用性、性能与可伸缩性为代价的。只有在参与分布式事务的各个数据库实例都能够正常工作的前提下，分布式事务才能够顺利完成，只要有一个工作不正常，整个事务就不能完成。这样，系统的可用性就相当于参加分布式事务的各实例的可用性之积，实例越多，可用性下降越明显。从性能和可伸缩性角度看，首先是事务的总持续时间通常是各实例操作时间之和，因为一个事务中的各个操作通常是顺序执行的，这样事务的响应时间就会增加很多；其次是一般Web应用的事务都不大，单机操作时间也就几毫秒甚至不到1毫秒，一但涉及到分布式事务，提交时节点间的网络通信往返过程也为毫秒级别，对事务响应时间的影响也不可忽视。由于事务持续时间延长，事务对相关资源的锁定时间也相应增加，从而可能严重增加了并发冲突，影响到系统吞吐率和可伸缩性。</p>\n<p>正是由于分布式事务有以上问题，eBay在设计上就不采用分布式事务，而是通过其它途径来解决数据一致性问题。其中使用的最重要的技术就是消息队列和消息应用状态表。</p>\n<p>举个例子。假设系统中有以下两个表<br>user(id, name, amt_sold, amt_bought)<br>transaction(xid, seller_id, buyer_id, amount)<br>其中user表记录用户交易汇总信息，transaction表记录每个交易的详细信息。</p>\n<p>这样，在进行一笔交易时，若使用事务，就需要对数据库进行以下操作：<br>begin;<br>INSERT INTO transaction VALUES(xid, $seller_id, $buyer_id, $amount);<br>UPDATE user SET amt_sold = amt_sold + $amount WHERE id = $seller_id;<br>UPDATE user SET amt_bought = amt_bought + $amount WHERE id = $buyer_id;<br>commit;<br>即在transaction表中记录交易信息，然后更新卖家和买家的状态。</p>\n<p>假设transaction表和user表存储在不同的节点上，那么上述事务就是一个分布式事务。要消除这一分布式事务，将它拆分成两个子事务，一个更新transaction表，一个更新user表是不行的，因为有可能transaction表更新成功后，更新user失败，系统将不能恢复到一致状态。</p>\n<p>解决方案是使用消息队列。如下所示，先启动一个事务，更新transaction表后，并不直接去更新user表，而是将要对user表进行的更新插入到消息队列中。另外有一个异步任务轮询队列内容进行处理。<br>begin;<br>INSERT INTO transaction VALUES(xid, $seller_id, $buyer_id, $amount);<br>put_to_queue “update user(“seller”, $seller_id, amount);<br>put_to_queue “update user(“buyer”, $buyer_id, amount);<br>commit;<br>for each message in queue<br>begin;<br>dequeue message;<br>if message.type = “seller” then<br>UPDATE user SET amt_sold = amt_sold + message.amount WHERE id = message.user_id;<br>else<br>UPDATE user SET amt_bought = amt_bought + message.amount WHERE id = message.user_id;<br>end<br>commit;<br>end</p>\n<p>上述解决方案看似完美，实际上还没有解决分布式问题。为了使第一个事务不涉及分布式操作，消息队列必须与transaction表使用同一套存储资源，但为了使第二个事务是本地的，消息队列存储又必须与user表在一起。这两者是不可能同时满足的。</p>\n<p>如果消息具有操作幂等性，也就是一个消息被应用多次与应用一次产生的效果是一样的话，上述问题是很好解决的，只要将消息队列放到transaction表一起，然后在第二个事务中，先应用消息，再从消息队列中删除。由于消息队列存储与user表不在一起，应用消息后，可能还没来得及将应用过的消息从队列中删除时系统就出故障了。这时系统恢复后会重新应用一次这一消息，由于幂等性，应用多次也能产生正确的结果。</p>\n<p>但实际情况下，消息很难具有幂等性，比如上述的UPDATE操作，执行一次和执行多次的结束显然是不一样的。解决这一问题的方法是使用另一个表记录已经被成功应用的消息，并且这个表使用与user表相同的存储。假设增加以下表 message_applied(msg_id)记录被成功应用的消息，则产生最终的解决方案如下：<br>begin;<br>INSERT INTO transaction VALUES(xid, $seller_id, $buyer_id, $amount);<br>put_to_queue “update user(“seller”, $seller_id, amount);<br>put_to_queue “update user(“buyer”, $buyer_id, amount);<br>commit;<br>for each message in queue<br>begin;<br>SELECT count(*) as cnt FROM message_applied WHERE msg_id = message.id;<br>if cnt = 0 then<br>if message.type = “seller” then<br>UPDATE user SET amt_sold = amt_sold + message.amount WHERE id = message.user_id;<br>else<br>UPDATE user SET amt_bought = amt_bought + message.amount WHERE id = message.user_id;<br>end<br>INSERT INTO message_applied VALUES(message.id);<br>end<br>commit;<br>if 上述事务成功<br>dequeue message<br>DELETE FROM message_applied WHERE msg_id = message.id;<br>end<br>end</p>\n<p>我们来仔细分析一下：<br>1、消息队列与transaction使用同一实例，因此第一个事务不涉及分布式操作；<br>2、message_applied与user表在同一个实例中，也能保证一致性；<br>3、第二个事务结束后，dequeue message之前系统可能出故障，出故障后系统会重新从消息队列中取出这一消息，但通过message_applied表可以检查出来这一消息已经被应用过，跳过这一消息实现正确的行为；<br>4、最后将已经成功应用，且已经从消息队列中删除的消息从message_applied表中删除，可以将message_applied表保证在很小的状态（不清除也是可以的，不影响系统正确性）。由于消息队列与message_applied在不同实例上，dequeue message之后，将对应message_applied记录删除之前可能出故障。一但这时出现故障，message_applied表中会留下一些垃圾内容，但不影响系统正确性，另外这些垃圾内容也是可以正确清理的。</p>\n<p>虽然由于没有分布式事务的强一致性保证，使用上述方案在系统发生故障时，系统将短时间内处于不一致状态。但基于消息队列和消息应用状态表，最终可以将系统恢复到一致。使用消息队列方案，解除了两个数据库实例之间的紧密耦合，其性能和可伸缩性是分布式事务不可比拟的。</p>\n<p>当然，使用分布式事务有助于简化应用开发，使用消息队列明显需要更多的工作量，两者各有优缺点。个人观点是，对于时间紧迫或者对性能要求不高的系统，应采用分布式事务加快开发效率，对于时间需求不是很紧，对性能要求很高的系统，应考虑使用消息队列方案。对于原使用分布式事务，且系统已趋于稳定，性能要求高的系统，则可以使用消息队列方案进行重构来优化性能。</p>\n<p>注: 本文主要取材于eBay的工程师Dan Pritchet写的这篇文章。</p>\n","site":{"data":{}},"excerpt":"","more":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_rich_snippet_type\" content=\"none\"></p>\n<p><meta name=\"_su_title\" content=\"message,queue\"></p>\n<p><meta name=\"views\" content=\"362\"></p>\n<p><meta name=\"_wp_old_slug\" content=\"用消息队列和消息应用状态表来消除分布式事务\"><br>copy from :<a href=\"http://rdc.taobao.com/blog/cs/?p=671\" target=\"_blank\" rel=\"external\">http://rdc.taobao.com/blog/cs/?p=671</a></p>\n<p><strong>用消息队列和消息应用状态表来消除分布式事务</strong></p>\n<p>由于数据量的巨大，大部分Web应用都需要部署很多个数据库实例。这样，有些用户操作就可能需要去修改多个数据库实例中的数据。传统的解决方法是使用分布式事务保证数据的全局一致性，经典的方法是使用两阶段提交协议。</p>\n<p>长期以来，分布式事务提供的优雅的全局ACID保证麻醉了应用开发者的心灵，很多人都不敢越雷池一步，想像没有分布式事务的世界会是怎样。如今就如MySQL和PostgreSQL这类面向低端用户的开源数据库都支持分布式事务了，开发者更是沉醉其中，不去考虑分布式事务是否给系统带来了伤害。</p>\n<p>事实上，有所得必有所失，分布式事务提供的ACID保证是以损害系统的可用性、性能与可伸缩性为代价的。只有在参与分布式事务的各个数据库实例都能够正常工作的前提下，分布式事务才能够顺利完成，只要有一个工作不正常，整个事务就不能完成。这样，系统的可用性就相当于参加分布式事务的各实例的可用性之积，实例越多，可用性下降越明显。从性能和可伸缩性角度看，首先是事务的总持续时间通常是各实例操作时间之和，因为一个事务中的各个操作通常是顺序执行的，这样事务的响应时间就会增加很多；其次是一般Web应用的事务都不大，单机操作时间也就几毫秒甚至不到1毫秒，一但涉及到分布式事务，提交时节点间的网络通信往返过程也为毫秒级别，对事务响应时间的影响也不可忽视。由于事务持续时间延长，事务对相关资源的锁定时间也相应增加，从而可能严重增加了并发冲突，影响到系统吞吐率和可伸缩性。</p>\n<p>正是由于分布式事务有以上问题，eBay在设计上就不采用分布式事务，而是通过其它途径来解决数据一致性问题。其中使用的最重要的技术就是消息队列和消息应用状态表。</p>\n<p>举个例子。假设系统中有以下两个表<br>user(id, name, amt_sold, amt_bought)<br>transaction(xid, seller_id, buyer_id, amount)<br>其中user表记录用户交易汇总信息，transaction表记录每个交易的详细信息。</p>\n<p>这样，在进行一笔交易时，若使用事务，就需要对数据库进行以下操作：<br>begin;<br>INSERT INTO transaction VALUES(xid, $seller_id, $buyer_id, $amount);<br>UPDATE user SET amt_sold = amt_sold + $amount WHERE id = $seller_id;<br>UPDATE user SET amt_bought = amt_bought + $amount WHERE id = $buyer_id;<br>commit;<br>即在transaction表中记录交易信息，然后更新卖家和买家的状态。</p>\n<p>假设transaction表和user表存储在不同的节点上，那么上述事务就是一个分布式事务。要消除这一分布式事务，将它拆分成两个子事务，一个更新transaction表，一个更新user表是不行的，因为有可能transaction表更新成功后，更新user失败，系统将不能恢复到一致状态。</p>\n<p>解决方案是使用消息队列。如下所示，先启动一个事务，更新transaction表后，并不直接去更新user表，而是将要对user表进行的更新插入到消息队列中。另外有一个异步任务轮询队列内容进行处理。<br>begin;<br>INSERT INTO transaction VALUES(xid, $seller_id, $buyer_id, $amount);<br>put_to_queue “update user(“seller”, $seller_id, amount);<br>put_to_queue “update user(“buyer”, $buyer_id, amount);<br>commit;<br>for each message in queue<br>begin;<br>dequeue message;<br>if message.type = “seller” then<br>UPDATE user SET amt_sold = amt_sold + message.amount WHERE id = message.user_id;<br>else<br>UPDATE user SET amt_bought = amt_bought + message.amount WHERE id = message.user_id;<br>end<br>commit;<br>end</p>\n<p>上述解决方案看似完美，实际上还没有解决分布式问题。为了使第一个事务不涉及分布式操作，消息队列必须与transaction表使用同一套存储资源，但为了使第二个事务是本地的，消息队列存储又必须与user表在一起。这两者是不可能同时满足的。</p>\n<p>如果消息具有操作幂等性，也就是一个消息被应用多次与应用一次产生的效果是一样的话，上述问题是很好解决的，只要将消息队列放到transaction表一起，然后在第二个事务中，先应用消息，再从消息队列中删除。由于消息队列存储与user表不在一起，应用消息后，可能还没来得及将应用过的消息从队列中删除时系统就出故障了。这时系统恢复后会重新应用一次这一消息，由于幂等性，应用多次也能产生正确的结果。</p>\n<p>但实际情况下，消息很难具有幂等性，比如上述的UPDATE操作，执行一次和执行多次的结束显然是不一样的。解决这一问题的方法是使用另一个表记录已经被成功应用的消息，并且这个表使用与user表相同的存储。假设增加以下表 message_applied(msg_id)记录被成功应用的消息，则产生最终的解决方案如下：<br>begin;<br>INSERT INTO transaction VALUES(xid, $seller_id, $buyer_id, $amount);<br>put_to_queue “update user(“seller”, $seller_id, amount);<br>put_to_queue “update user(“buyer”, $buyer_id, amount);<br>commit;<br>for each message in queue<br>begin;<br>SELECT count(*) as cnt FROM message_applied WHERE msg_id = message.id;<br>if cnt = 0 then<br>if message.type = “seller” then<br>UPDATE user SET amt_sold = amt_sold + message.amount WHERE id = message.user_id;<br>else<br>UPDATE user SET amt_bought = amt_bought + message.amount WHERE id = message.user_id;<br>end<br>INSERT INTO message_applied VALUES(message.id);<br>end<br>commit;<br>if 上述事务成功<br>dequeue message<br>DELETE FROM message_applied WHERE msg_id = message.id;<br>end<br>end</p>\n<p>我们来仔细分析一下：<br>1、消息队列与transaction使用同一实例，因此第一个事务不涉及分布式操作；<br>2、message_applied与user表在同一个实例中，也能保证一致性；<br>3、第二个事务结束后，dequeue message之前系统可能出故障，出故障后系统会重新从消息队列中取出这一消息，但通过message_applied表可以检查出来这一消息已经被应用过，跳过这一消息实现正确的行为；<br>4、最后将已经成功应用，且已经从消息队列中删除的消息从message_applied表中删除，可以将message_applied表保证在很小的状态（不清除也是可以的，不影响系统正确性）。由于消息队列与message_applied在不同实例上，dequeue message之后，将对应message_applied记录删除之前可能出故障。一但这时出现故障，message_applied表中会留下一些垃圾内容，但不影响系统正确性，另外这些垃圾内容也是可以正确清理的。</p>\n<p>虽然由于没有分布式事务的强一致性保证，使用上述方案在系统发生故障时，系统将短时间内处于不一致状态。但基于消息队列和消息应用状态表，最终可以将系统恢复到一致。使用消息队列方案，解除了两个数据库实例之间的紧密耦合，其性能和可伸缩性是分布式事务不可比拟的。</p>\n<p>当然，使用分布式事务有助于简化应用开发，使用消息队列明显需要更多的工作量，两者各有优缺点。个人观点是，对于时间紧迫或者对性能要求不高的系统，应采用分布式事务加快开发效率，对于时间需求不是很紧，对性能要求很高的系统，应考虑使用消息队列方案。对于原使用分布式事务，且系统已趋于稳定，性能要求高的系统，则可以使用消息队列方案进行重构来优化性能。</p>\n<p>注: 本文主要取材于eBay的工程师Dan Pritchet写的这篇文章。</p>\n"},{"layout":"post","title":"Fun clock","date":"2011-03-31T16:00:00.000Z","wordpress_id":374,"comments":1,"_content":"<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_rich_snippet_type\" content=\"none\" />\n<meta name=\"views\" content=\"416\" />\n<p>I found this funny clock in Fool's Day. You will like it. <br />\n[swfobj src=\"http://chabudai.sakura.ne.jp/blogparts/honehoneclock/honehone_clock_tr.swf\"] </p>\n","source":"_posts/2011-04-01-fun-clock.markdown","raw":"---\nlayout: post\ntitle: \"Fun clock\"\ndate: 2011-4-1\nwordpress_id: 374\ncomments: true\ncategories: [\"clock\", \"funny\", \"funny\", \"see-hear\"]\n---\n<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_rich_snippet_type\" content=\"none\" />\n<meta name=\"views\" content=\"416\" />\n<p>I found this funny clock in Fool's Day. You will like it. <br />\n[swfobj src=\"http://chabudai.sakura.ne.jp/blogparts/honehoneclock/honehone_clock_tr.swf\"] </p>\n","slug":"2011-04-01-fun-clock","published":1,"updated":"2017-06-05T02:56:52.000Z","photos":[],"link":"","_id":"cj3jjpb91000azumj6lui0ajx","content":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_rich_snippet_type\" content=\"none\"></p>\n<p><meta name=\"views\" content=\"416\"></p>\n<p>I found this funny clock in Fool’s Day. You will like it. <br><br>[swfobj src=”<a href=\"http://chabudai.sakura.ne.jp/blogparts/honehoneclock/honehone_clock_tr.swf\" target=\"_blank\" rel=\"external\">http://chabudai.sakura.ne.jp/blogparts/honehoneclock/honehone_clock_tr.swf</a>“] </p>\n","site":{"data":{}},"excerpt":"","more":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_rich_snippet_type\" content=\"none\"></p>\n<p><meta name=\"views\" content=\"416\"></p>\n<p>I found this funny clock in Fool’s Day. You will like it. <br><br>[swfobj src=”<a href=\"http://chabudai.sakura.ne.jp/blogparts/honehoneclock/honehone_clock_tr.swf\" target=\"_blank\" rel=\"external\">http://chabudai.sakura.ne.jp/blogparts/honehoneclock/honehone_clock_tr.swf</a>“] </p>\n"},{"layout":"post","title":"计算机考试题","date":"2011-04-01T16:00:00.000Z","wordpress_id":379,"comments":1,"_content":"<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_rich_snippet_type\" content=\"none\" />\n<meta name=\"views\" content=\"248\" />\ncopy from .........???\n计算机专业面试笔试题目\n一，选择题（皆为单选）：\n1，以下谁是二进制思想的最早提出者？\na，伏羲；b，姬昌；c，莱布尼茨；d，柏拉图。\n2，以下哪个概念和公孙龙的《指物论》中的“指”字含义相近？\na，变量；b，数组；c，对象；d，指针。\n3，蔺相如，司马相如；魏无忌，长孙无忌。下列哪一组对应关系与此类似？\na，PHP，Python；b，JSP，servlet；c，java，javascript；d，C，C++。\n4，秦始皇吞并六国采用了以下哪种算法思想？\na，递归；b，分治；c，迭代；d，模拟。\n5，雅典王子忒修斯勇闯克里特岛斩杀米诺牛的时候采用了以下哪种算法？\na，动态规划；b，穷举；c，记忆化搜索；d，Dijkstra算法。\n6，印度电影《宝莱坞机器人之恋》中的机器人七弟采用的智能算法最有可能是以下哪一种\n？\na，神经网络；b，遗传算法；c，模拟退火；d，穷举算法。\n7，《公孙龙子》记载：“齐王之谓尹文曰：‘寡人甚好士，以齐国无士，何也？’尹文曰\n：‘愿闻大王之所谓士者。’齐王无以应。”这说明了齐王：\na，昏庸无道；b，是个结巴；c，不会下定义；d，不会定义自己的需求。\n8，惠施曾提出过“卵有毛”的命题，以下哪一项是导致这个错误命题的原因：\na，混淆了命名空间；b，引入了错误的包；c，衍生类未重载；d，调用了危险的指针。\n9，下面哪种面向对象的方法可以让你变得富有？\na，继承；b，封装；c，多态；d，抽象。\n10，明朝时期张居正改革的一条鞭法的主要思想是：\na，面向过程；b，万物皆数；c，统一接口；d，泛型编程。\n二，匹配题（分析A中的句子所体现的算法，和B中的算法一一匹配）：\nA：\n1，江南可采莲，莲叶何田田，鱼戏莲叶间。鱼戏莲叶东，鱼戏莲叶西，鱼戏莲叶南，鱼戏\n莲叶北。——汉乐府《江南》\n2，众里寻他千百度，蓦然回首，那人却在灯火阑珊处。——辛弃疾《青玉案》\n3，从前有座山，山里有座庙，庙里有个老和尚，再给小和尚讲故事，故事内容是：从前有\n座山，山里有座庙，庙里有个老和尚，再给小和尚讲故事，故事内容是：从前有座山，山\n里有座庙，庙里有个老和尚，再给小和尚讲故事，故事内容是……\n4，只劝楼台追后主，不愁弓矢下残唐。——孔尚任《桃花扇》\n5，飞鸟之影，未尝动也。——《庄子》\nB：\n1，贪心；\n2，回溯；\n3，穷举；\n4，分治；\n5，递归；\n三，阅读理解（阅读下文，回答后面的问题）：\n美国的贝尔实验室设计了最初的C语言\n刻在UNIX操作系统距今已有三四十年\n你在屏幕前凝视数据的缱绻\n我却在旁轻轻敲打键盘把你的梦想展现\n循环 递归 贪心 动规 是谁的从前\n喜欢在匈牙利算法中你我牵手的画面\n经过MSRA门前我以大牛之名许愿\n思念像斐波那契数列般漫延\n当软工沦落在设计的文档间\n算法依旧是永垂不朽的诗篇\n我给你的爱写在程序间\n深藏在最长不下降子序列里面\n几万组数据流过后发现\n我的心依然不变\n我给你的爱写在程序间\n深藏在最长不下降子序列里面\n用无尽的代码刻下了永远\n那已保存千年的誓言\n一切又重演\n我算了很多遍\n时间复杂度还是趋于无限\n我只想要这样永远链接在你的身边\n1，题目中的MSRA是什么的缩写？\n2，试赏析“思念像斐波那契数列般漫延”一句。\n3，请结合时代背景，谈谈你对“当软工沦落在设计的文档间，算法依旧是永垂不朽的诗篇\n”一句的理解。\n4，“几万组数据流过后发现，我的心依然不变”一句体现了算法的什么特性？\n5，就“喜欢在匈牙利算法中你我牵手的画面”一句，谈谈你对匈牙利算法的理解。\n","source":"_posts/2011-04-02-ji-suan-ji-kao-shi-ti.markdown","raw":"---\nlayout: post\ntitle: \"计算机考试题\"\ndate: 2011-4-2\nwordpress_id: 379\ncomments: true\ncategories: [\"funny\", \"see-hear\", \"考试\", \"计算机\"]\n---\n<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_rich_snippet_type\" content=\"none\" />\n<meta name=\"views\" content=\"248\" />\ncopy from .........???\n计算机专业面试笔试题目\n一，选择题（皆为单选）：\n1，以下谁是二进制思想的最早提出者？\na，伏羲；b，姬昌；c，莱布尼茨；d，柏拉图。\n2，以下哪个概念和公孙龙的《指物论》中的“指”字含义相近？\na，变量；b，数组；c，对象；d，指针。\n3，蔺相如，司马相如；魏无忌，长孙无忌。下列哪一组对应关系与此类似？\na，PHP，Python；b，JSP，servlet；c，java，javascript；d，C，C++。\n4，秦始皇吞并六国采用了以下哪种算法思想？\na，递归；b，分治；c，迭代；d，模拟。\n5，雅典王子忒修斯勇闯克里特岛斩杀米诺牛的时候采用了以下哪种算法？\na，动态规划；b，穷举；c，记忆化搜索；d，Dijkstra算法。\n6，印度电影《宝莱坞机器人之恋》中的机器人七弟采用的智能算法最有可能是以下哪一种\n？\na，神经网络；b，遗传算法；c，模拟退火；d，穷举算法。\n7，《公孙龙子》记载：“齐王之谓尹文曰：‘寡人甚好士，以齐国无士，何也？’尹文曰\n：‘愿闻大王之所谓士者。’齐王无以应。”这说明了齐王：\na，昏庸无道；b，是个结巴；c，不会下定义；d，不会定义自己的需求。\n8，惠施曾提出过“卵有毛”的命题，以下哪一项是导致这个错误命题的原因：\na，混淆了命名空间；b，引入了错误的包；c，衍生类未重载；d，调用了危险的指针。\n9，下面哪种面向对象的方法可以让你变得富有？\na，继承；b，封装；c，多态；d，抽象。\n10，明朝时期张居正改革的一条鞭法的主要思想是：\na，面向过程；b，万物皆数；c，统一接口；d，泛型编程。\n二，匹配题（分析A中的句子所体现的算法，和B中的算法一一匹配）：\nA：\n1，江南可采莲，莲叶何田田，鱼戏莲叶间。鱼戏莲叶东，鱼戏莲叶西，鱼戏莲叶南，鱼戏\n莲叶北。——汉乐府《江南》\n2，众里寻他千百度，蓦然回首，那人却在灯火阑珊处。——辛弃疾《青玉案》\n3，从前有座山，山里有座庙，庙里有个老和尚，再给小和尚讲故事，故事内容是：从前有\n座山，山里有座庙，庙里有个老和尚，再给小和尚讲故事，故事内容是：从前有座山，山\n里有座庙，庙里有个老和尚，再给小和尚讲故事，故事内容是……\n4，只劝楼台追后主，不愁弓矢下残唐。——孔尚任《桃花扇》\n5，飞鸟之影，未尝动也。——《庄子》\nB：\n1，贪心；\n2，回溯；\n3，穷举；\n4，分治；\n5，递归；\n三，阅读理解（阅读下文，回答后面的问题）：\n美国的贝尔实验室设计了最初的C语言\n刻在UNIX操作系统距今已有三四十年\n你在屏幕前凝视数据的缱绻\n我却在旁轻轻敲打键盘把你的梦想展现\n循环 递归 贪心 动规 是谁的从前\n喜欢在匈牙利算法中你我牵手的画面\n经过MSRA门前我以大牛之名许愿\n思念像斐波那契数列般漫延\n当软工沦落在设计的文档间\n算法依旧是永垂不朽的诗篇\n我给你的爱写在程序间\n深藏在最长不下降子序列里面\n几万组数据流过后发现\n我的心依然不变\n我给你的爱写在程序间\n深藏在最长不下降子序列里面\n用无尽的代码刻下了永远\n那已保存千年的誓言\n一切又重演\n我算了很多遍\n时间复杂度还是趋于无限\n我只想要这样永远链接在你的身边\n1，题目中的MSRA是什么的缩写？\n2，试赏析“思念像斐波那契数列般漫延”一句。\n3，请结合时代背景，谈谈你对“当软工沦落在设计的文档间，算法依旧是永垂不朽的诗篇\n”一句的理解。\n4，“几万组数据流过后发现，我的心依然不变”一句体现了算法的什么特性？\n5，就“喜欢在匈牙利算法中你我牵手的画面”一句，谈谈你对匈牙利算法的理解。\n","slug":"2011-04-02-ji-suan-ji-kao-shi-ti","published":1,"updated":"2017-06-05T02:56:52.000Z","photos":[],"link":"","_id":"cj3jjpb93000czumjoa8ec9fc","content":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_rich_snippet_type\" content=\"none\"></p>\n<p><meta name=\"views\" content=\"248\"><br>copy from ………???<br>计算机专业面试笔试题目<br>一，选择题（皆为单选）：<br>1，以下谁是二进制思想的最早提出者？<br>a，伏羲；b，姬昌；c，莱布尼茨；d，柏拉图。<br>2，以下哪个概念和公孙龙的《指物论》中的“指”字含义相近？<br>a，变量；b，数组；c，对象；d，指针。<br>3，蔺相如，司马相如；魏无忌，长孙无忌。下列哪一组对应关系与此类似？<br>a，PHP，Python；b，JSP，servlet；c，java，javascript；d，C，C++。<br>4，秦始皇吞并六国采用了以下哪种算法思想？<br>a，递归；b，分治；c，迭代；d，模拟。<br>5，雅典王子忒修斯勇闯克里特岛斩杀米诺牛的时候采用了以下哪种算法？<br>a，动态规划；b，穷举；c，记忆化搜索；d，Dijkstra算法。<br>6，印度电影《宝莱坞机器人之恋》中的机器人七弟采用的智能算法最有可能是以下哪一种<br>？<br>a，神经网络；b，遗传算法；c，模拟退火；d，穷举算法。<br>7，《公孙龙子》记载：“齐王之谓尹文曰：‘寡人甚好士，以齐国无士，何也？’尹文曰<br>：‘愿闻大王之所谓士者。’齐王无以应。”这说明了齐王：<br>a，昏庸无道；b，是个结巴；c，不会下定义；d，不会定义自己的需求。<br>8，惠施曾提出过“卵有毛”的命题，以下哪一项是导致这个错误命题的原因：<br>a，混淆了命名空间；b，引入了错误的包；c，衍生类未重载；d，调用了危险的指针。<br>9，下面哪种面向对象的方法可以让你变得富有？<br>a，继承；b，封装；c，多态；d，抽象。<br>10，明朝时期张居正改革的一条鞭法的主要思想是：<br>a，面向过程；b，万物皆数；c，统一接口；d，泛型编程。<br>二，匹配题（分析A中的句子所体现的算法，和B中的算法一一匹配）：<br>A：<br>1，江南可采莲，莲叶何田田，鱼戏莲叶间。鱼戏莲叶东，鱼戏莲叶西，鱼戏莲叶南，鱼戏<br>莲叶北。——汉乐府《江南》<br>2，众里寻他千百度，蓦然回首，那人却在灯火阑珊处。——辛弃疾《青玉案》<br>3，从前有座山，山里有座庙，庙里有个老和尚，再给小和尚讲故事，故事内容是：从前有<br>座山，山里有座庙，庙里有个老和尚，再给小和尚讲故事，故事内容是：从前有座山，山<br>里有座庙，庙里有个老和尚，再给小和尚讲故事，故事内容是……<br>4，只劝楼台追后主，不愁弓矢下残唐。——孔尚任《桃花扇》<br>5，飞鸟之影，未尝动也。——《庄子》<br>B：<br>1，贪心；<br>2，回溯；<br>3，穷举；<br>4，分治；<br>5，递归；<br>三，阅读理解（阅读下文，回答后面的问题）：<br>美国的贝尔实验室设计了最初的C语言<br>刻在UNIX操作系统距今已有三四十年<br>你在屏幕前凝视数据的缱绻<br>我却在旁轻轻敲打键盘把你的梦想展现<br>循环 递归 贪心 动规 是谁的从前<br>喜欢在匈牙利算法中你我牵手的画面<br>经过MSRA门前我以大牛之名许愿<br>思念像斐波那契数列般漫延<br>当软工沦落在设计的文档间<br>算法依旧是永垂不朽的诗篇<br>我给你的爱写在程序间<br>深藏在最长不下降子序列里面<br>几万组数据流过后发现<br>我的心依然不变<br>我给你的爱写在程序间<br>深藏在最长不下降子序列里面<br>用无尽的代码刻下了永远<br>那已保存千年的誓言<br>一切又重演<br>我算了很多遍<br>时间复杂度还是趋于无限<br>我只想要这样永远链接在你的身边<br>1，题目中的MSRA是什么的缩写？<br>2，试赏析“思念像斐波那契数列般漫延”一句。<br>3，请结合时代背景，谈谈你对“当软工沦落在设计的文档间，算法依旧是永垂不朽的诗篇<br>”一句的理解。<br>4，“几万组数据流过后发现，我的心依然不变”一句体现了算法的什么特性？<br>5，就“喜欢在匈牙利算法中你我牵手的画面”一句，谈谈你对匈牙利算法的理解。</p>\n","site":{"data":{}},"excerpt":"","more":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_rich_snippet_type\" content=\"none\"></p>\n<p><meta name=\"views\" content=\"248\"><br>copy from ………???<br>计算机专业面试笔试题目<br>一，选择题（皆为单选）：<br>1，以下谁是二进制思想的最早提出者？<br>a，伏羲；b，姬昌；c，莱布尼茨；d，柏拉图。<br>2，以下哪个概念和公孙龙的《指物论》中的“指”字含义相近？<br>a，变量；b，数组；c，对象；d，指针。<br>3，蔺相如，司马相如；魏无忌，长孙无忌。下列哪一组对应关系与此类似？<br>a，PHP，Python；b，JSP，servlet；c，java，javascript；d，C，C++。<br>4，秦始皇吞并六国采用了以下哪种算法思想？<br>a，递归；b，分治；c，迭代；d，模拟。<br>5，雅典王子忒修斯勇闯克里特岛斩杀米诺牛的时候采用了以下哪种算法？<br>a，动态规划；b，穷举；c，记忆化搜索；d，Dijkstra算法。<br>6，印度电影《宝莱坞机器人之恋》中的机器人七弟采用的智能算法最有可能是以下哪一种<br>？<br>a，神经网络；b，遗传算法；c，模拟退火；d，穷举算法。<br>7，《公孙龙子》记载：“齐王之谓尹文曰：‘寡人甚好士，以齐国无士，何也？’尹文曰<br>：‘愿闻大王之所谓士者。’齐王无以应。”这说明了齐王：<br>a，昏庸无道；b，是个结巴；c，不会下定义；d，不会定义自己的需求。<br>8，惠施曾提出过“卵有毛”的命题，以下哪一项是导致这个错误命题的原因：<br>a，混淆了命名空间；b，引入了错误的包；c，衍生类未重载；d，调用了危险的指针。<br>9，下面哪种面向对象的方法可以让你变得富有？<br>a，继承；b，封装；c，多态；d，抽象。<br>10，明朝时期张居正改革的一条鞭法的主要思想是：<br>a，面向过程；b，万物皆数；c，统一接口；d，泛型编程。<br>二，匹配题（分析A中的句子所体现的算法，和B中的算法一一匹配）：<br>A：<br>1，江南可采莲，莲叶何田田，鱼戏莲叶间。鱼戏莲叶东，鱼戏莲叶西，鱼戏莲叶南，鱼戏<br>莲叶北。——汉乐府《江南》<br>2，众里寻他千百度，蓦然回首，那人却在灯火阑珊处。——辛弃疾《青玉案》<br>3，从前有座山，山里有座庙，庙里有个老和尚，再给小和尚讲故事，故事内容是：从前有<br>座山，山里有座庙，庙里有个老和尚，再给小和尚讲故事，故事内容是：从前有座山，山<br>里有座庙，庙里有个老和尚，再给小和尚讲故事，故事内容是……<br>4，只劝楼台追后主，不愁弓矢下残唐。——孔尚任《桃花扇》<br>5，飞鸟之影，未尝动也。——《庄子》<br>B：<br>1，贪心；<br>2，回溯；<br>3，穷举；<br>4，分治；<br>5，递归；<br>三，阅读理解（阅读下文，回答后面的问题）：<br>美国的贝尔实验室设计了最初的C语言<br>刻在UNIX操作系统距今已有三四十年<br>你在屏幕前凝视数据的缱绻<br>我却在旁轻轻敲打键盘把你的梦想展现<br>循环 递归 贪心 动规 是谁的从前<br>喜欢在匈牙利算法中你我牵手的画面<br>经过MSRA门前我以大牛之名许愿<br>思念像斐波那契数列般漫延<br>当软工沦落在设计的文档间<br>算法依旧是永垂不朽的诗篇<br>我给你的爱写在程序间<br>深藏在最长不下降子序列里面<br>几万组数据流过后发现<br>我的心依然不变<br>我给你的爱写在程序间<br>深藏在最长不下降子序列里面<br>用无尽的代码刻下了永远<br>那已保存千年的誓言<br>一切又重演<br>我算了很多遍<br>时间复杂度还是趋于无限<br>我只想要这样永远链接在你的身边<br>1，题目中的MSRA是什么的缩写？<br>2，试赏析“思念像斐波那契数列般漫延”一句。<br>3，请结合时代背景，谈谈你对“当软工沦落在设计的文档间，算法依旧是永垂不朽的诗篇<br>”一句的理解。<br>4，“几万组数据流过后发现，我的心依然不变”一句体现了算法的什么特性？<br>5，就“喜欢在匈牙利算法中你我牵手的画面”一句，谈谈你对匈牙利算法的理解。</p>\n"},{"layout":"post","title":"python ValueError: need more than XX values to unpack","date":"2011-04-07T16:00:00.000Z","wordpress_id":383,"comments":1,"_content":"<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_rich_snippet_type\" content=\"none\" />\n<meta name=\"_su_title\" content=\"python valueError\" />\n<meta name=\"views\" content=\"368\" />\n<meta name=\"_wp_old_slug\" content=\"python-valueerror\" />\n<p>this error seems you did not return the same number of results</p>\n<p>for example:</p>\n<p>\ndef fun():\n   return 1\na,b = fun()\n</p>\nthis will throw Exception : ValueError: need more than 2 values to unpack\nchange code:\n<p>\ndef fun():\n   return 1,2\na,b = fun()\n</p>\nthen ok!\n","source":"_posts/2011-04-08-python-valueerror-xx-values-unpack.markdown","raw":"---\nlayout: post\ntitle: \"python ValueError: need more than XX values to unpack\"\ndate: 2011-4-8\nwordpress_id: 383\ncomments: true\ncategories: [\"python\", \"python\", \"valueerror\"]\n---\n<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_rich_snippet_type\" content=\"none\" />\n<meta name=\"_su_title\" content=\"python valueError\" />\n<meta name=\"views\" content=\"368\" />\n<meta name=\"_wp_old_slug\" content=\"python-valueerror\" />\n<p>this error seems you did not return the same number of results</p>\n<p>for example:</p>\n<p>\ndef fun():\n   return 1\na,b = fun()\n</p>\nthis will throw Exception : ValueError: need more than 2 values to unpack\nchange code:\n<p>\ndef fun():\n   return 1,2\na,b = fun()\n</p>\nthen ok!\n","slug":"2011-04-08-python-valueerror-xx-values-unpack","published":1,"updated":"2017-06-05T02:56:52.000Z","photos":[],"link":"","_id":"cj3jjpb98000ezumjxw4sfqif","content":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_rich_snippet_type\" content=\"none\"></p>\n<p><meta name=\"_su_title\" content=\"python valueError\"></p>\n<p><meta name=\"views\" content=\"368\"></p>\n<p><meta name=\"_wp_old_slug\" content=\"python-valueerror\"></p>\n<p></p><p>this error seems you did not return the same number of results</p><p></p>\n<p></p><p>for example:</p><p></p>\n<p></p><p><br>def fun():<br>   return 1<br>a,b = fun()<br></p><br>this will throw Exception : ValueError: need more than 2 values to unpack<br>change code:<p></p>\n<p></p><p><br>def fun():<br>   return 1,2<br>a,b = fun()<br></p><br>then ok!<p></p>\n","site":{"data":{}},"excerpt":"","more":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_rich_snippet_type\" content=\"none\"></p>\n<p><meta name=\"_su_title\" content=\"python valueError\"></p>\n<p><meta name=\"views\" content=\"368\"></p>\n<p><meta name=\"_wp_old_slug\" content=\"python-valueerror\"></p>\n<p></p><p>this error seems you did not return the same number of results</p><p></p>\n<p></p><p>for example:</p><p></p>\n<p></p><p><br>def fun():<br>   return 1<br>a,b = fun()<br></p><br>this will throw Exception : ValueError: need more than 2 values to unpack<br>change code:<p></p>\n<p></p><p><br>def fun():<br>   return 1,2<br>a,b = fun()<br></p><br>then ok!<p></p>\n"},{"layout":"post","title":"python net socket connect fail","date":"2011-04-08T16:00:00.000Z","wordpress_id":389,"comments":1,"_content":"<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_rich_snippet_type\" content=\"none\" />\n<meta name=\"_su_description\" content=\"use python socket to connect server, but error occurs\" />\n<meta name=\"_su_keywords\" content=\"python, socket, connect, error\" />\n<meta name=\"_su_title\" content=\"python, socket, connect, error\" />\n<meta name=\"views\" content=\"374\" />\nsocket connect fail will be many reasons.\nFirst you should check the firewall, does it block your socket port which you want to connect, python.exe or pythonw.exe\nSecond, your server listens host and ip are the same your client socket.\nfor example.\nYour server socket listens host='localhost', port=7777, and your client want to connect host='192.168.12.XXX', port=7777. They are not same. 'localhost' is '127.0.0.1', and your client want to connect host='192.168.12.XXX'. Even there is only one net-adapter and one network configure. So change host which your server socket listened to '192.168.12.XXX'. \nThis error will occur in :\n\nclient = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\nclient.connect(('192.168.12.XXX',7777)) # here you can not connect server\n\n\n","source":"_posts/2011-04-09-python-net-socket-connect-fail.markdown","raw":"---\nlayout: post\ntitle: \"python net socket connect fail\"\ndate: 2011-4-9\nwordpress_id: 389\ncomments: true\ncategories: [\"connect\", \"error\", \"python\", \"python\", \"see-hear\", \"socket\"]\n---\n<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_rich_snippet_type\" content=\"none\" />\n<meta name=\"_su_description\" content=\"use python socket to connect server, but error occurs\" />\n<meta name=\"_su_keywords\" content=\"python, socket, connect, error\" />\n<meta name=\"_su_title\" content=\"python, socket, connect, error\" />\n<meta name=\"views\" content=\"374\" />\nsocket connect fail will be many reasons.\nFirst you should check the firewall, does it block your socket port which you want to connect, python.exe or pythonw.exe\nSecond, your server listens host and ip are the same your client socket.\nfor example.\nYour server socket listens host='localhost', port=7777, and your client want to connect host='192.168.12.XXX', port=7777. They are not same. 'localhost' is '127.0.0.1', and your client want to connect host='192.168.12.XXX'. Even there is only one net-adapter and one network configure. So change host which your server socket listened to '192.168.12.XXX'. \nThis error will occur in :\n\nclient = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\nclient.connect(('192.168.12.XXX',7777)) # here you can not connect server\n\n\n","slug":"2011-04-09-python-net-socket-connect-fail","published":1,"updated":"2017-06-05T02:56:52.000Z","photos":[],"link":"","_id":"cj3jjpb9b000gzumjoi7v8sjj","content":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_rich_snippet_type\" content=\"none\"></p>\n<p><meta name=\"_su_description\" content=\"use python socket to connect server, but error occurs\"></p>\n<p><meta name=\"_su_keywords\" content=\"python, socket, connect, error\"></p>\n<p><meta name=\"_su_title\" content=\"python, socket, connect, error\"></p>\n<p><meta name=\"views\" content=\"374\"><br>socket connect fail will be many reasons.<br>First you should check the firewall, does it block your socket port which you want to connect, python.exe or pythonw.exe<br>Second, your server listens host and ip are the same your client socket.<br>for example.<br>Your server socket listens host=’localhost’, port=7777, and your client want to connect host=’192.168.12.XXX’, port=7777. They are not same. ‘localhost’ is ‘127.0.0.1’, and your client want to connect host=’192.168.12.XXX’. Even there is only one net-adapter and one network configure. So change host which your server socket listened to ‘192.168.12.XXX’.<br>This error will occur in :</p>\n<p>client = socket.socket(socket.AF_INET, socket.SOCK_STREAM)<br>client.connect((‘192.168.12.XXX’,7777)) # here you can not connect server</p>\n","site":{"data":{}},"excerpt":"","more":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_rich_snippet_type\" content=\"none\"></p>\n<p><meta name=\"_su_description\" content=\"use python socket to connect server, but error occurs\"></p>\n<p><meta name=\"_su_keywords\" content=\"python, socket, connect, error\"></p>\n<p><meta name=\"_su_title\" content=\"python, socket, connect, error\"></p>\n<p><meta name=\"views\" content=\"374\"><br>socket connect fail will be many reasons.<br>First you should check the firewall, does it block your socket port which you want to connect, python.exe or pythonw.exe<br>Second, your server listens host and ip are the same your client socket.<br>for example.<br>Your server socket listens host=’localhost’, port=7777, and your client want to connect host=’192.168.12.XXX’, port=7777. They are not same. ‘localhost’ is ‘127.0.0.1’, and your client want to connect host=’192.168.12.XXX’. Even there is only one net-adapter and one network configure. So change host which your server socket listened to ‘192.168.12.XXX’.<br>This error will occur in :</p>\n<p>client = socket.socket(socket.AF_INET, socket.SOCK_STREAM)<br>client.connect((‘192.168.12.XXX’,7777)) # here you can not connect server</p>\n"},{"layout":"post","title":"python socket send and recv atomticly ","date":"2011-05-03T16:00:00.000Z","wordpress_id":394,"comments":1,"_content":"<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_rich_snippet_type\" content=\"none\" />\n<meta name=\"Mood\" content=\"soso\" />\n<meta name=\"Weather\" content=\"cloudy\" />\n<meta name=\"Doing\" content=\"paper, write c/c++ code and play games\" />\n<meta name=\"_su_description\" content=\"this is describe how to create server and client in python. And how to fix bug in simplest server and client.\" />\n<meta name=\"_su_keywords\" content=\"python,socket,server,client,send,recv\" />\n<meta name=\"_su_title\" content=\"python,socket,server,client,send,recv\" />\n<meta name=\"views\" content=\"1808\" />\nfirst we write simplest client and server.\nclient:\n\n## in client.py\nimport socket\nclass Client:\n    def __init__(self, host , port, bufsize = 1024, timeout = 10):\n        self.client = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n        self.host = host\n        self.port  = port\n        self.bufsize = bufsize\n        self.timeout = timeout\n        \n    def connect(self):\n        self.client.connect((self.host,self.port))\n    def close(self):\n        self.client.close()\n    def send(self, string):\n        self.client.send(bytes(string,\"utf8\"))\n    def recv(self):\n        return str(self.client.recv(self.bufsize),encoding=\"utf8\")\n\nserver:\n\n## in server.py\nimport socket\nclass Server:\n    def __init__(self,port,listen = 5,timeout = 10, buf = 4096, queueSize = 10):\n        self.host = 'localhost'\n        self.port = port\n        self.sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n        self.listen = listen\n        self.timeout = timeout\n    def send(self, conn, string):\n        conn.send(bytes(string,encoding=\"utf8\"))       \n    def recv(self, conn):\n        return str(conn.recv(self.bufsize),encoding=\"utf8\")\n    def run(self):\n        print(\"server start, port:\",self.port,\"listen num:\",self.listen)\n        self.sock.bind((self.host, self.port))\n        self.sock.listen(self.listen)\n        while True:\n            connection, address = self.sock.accept()\n            message = self.recv(connection)\n            print('message',message)\n            self.send(connection,'OK')\n            connection.close()\n\nnext I will write some code to run client and server. Here is :\n\n## in client_start.py\nfrom client import Client\nif __name__ == \"__main__\":\n    c = Client('localhost',7777)\n    c.connect()\n    c.send('hello')\n    message = c.recv()\n    print('message',message)\n\n## in server_start.py\nfrom server import Server\nif __name__ == \"__main__\":\n    s = Server(7777, listen = 1000)\n    s.run()\n\nRun server_start.py firstly and then run client_start.py. You will find both client and server print messages. Then client is shut down, but server is still running. Yup. Server should not shut down in order to supply services. And shut client down to close socket connection and save resources of server. These code runs perfectly. But we still should make some improvement. Server can server many clients. When it servers one client connection, it should server other connections and not be held by the former connection. Now multi-thread is considered.\n\n## in \"run\" function of Server in server.py\n## change run function and add a new function called \"serviceWaiting\"\n    def serviceWaiting(self, connection, address):\n        print(\"connection:\",id(connection),\"address:\",str(address),\" connect...\")\n        message = self.recv(connection)\n        print('message',message)\n        self.send(connection,'OK')\n        connection.close()\n\n    def run(self):\n        print(\"server start, port:\",self.port,\"listen num:\",self.listen)\n        self.sock.bind((self.host, self.port))\n        self.sock.listen(self.listen)\n        while True:\n            connection, address = self.sock.accept()\n            serverThread = Thread(target = self.serviceWaiting, args=(connection, address))\n            serverThread.start()\n\nOk, done! Now server can server multi-clients in the same time. But only sending and receiving string is not enough for our applications.  Sending and receiving objects should be considered.\nHere we add two functions in client.py and server.py.\n\n## we should change a function in our former code:\n    def recv(self, n= -1):\n        if n == -1:\n            return str(self.client.recv(self.bufsize),encoding=\"utf8\")\n        else:\n            return str(self.client.recv(n),encoding=\"utf8\")\n## then we should add two function for sending and receive objects\n    def recvObj(self):\n        OK = 'Y'\n        obj = None\n        try:\n            buffer = []\n            totalsize = self.recv()\n#            print('client:totalsize',totalsize,'len:',len(totalsize))\n            totalsize = int(totalsize)\n            self.send(OK)\n#            print('client:send length ok')\n            while totalsize !=0:\n#                print('client: receiving')\n                tBuff = self.client.recv(self.bufsize)\n                totalsize -= len(tBuff)\n#                print('client:tBuff len:',len(tBuff))\n                buffer.extend(tBuff) \n            buffer = bytes(buffer)\n#            print('client:buff len',len(buffer))\n            obj = pickle.loads(buffer)\n#            print('client:server receiving done')\n#            print('client:obj',obj)\n            self.send(OK)\n#            print('client:send ok')\n        except socket.timeout:\n            print (\"client:time out\")\n            raise socket.timeout\n        except EOFError:\n            print('client:buff',buffer)\n            raise EOFError\n        return obj\n    \n    def sendObj(self,  obj):\n        OK = 'Y'\n        try:\n            totalbytes = pickle.dumps(obj)\n            totalsize = len(totalbytes)\n#            print('client:will send totalsize')\n            self.send(str(totalsize))\n#            print('client:send totalsize done')\n            if self.recv()== OK:\n#                print('client:send totalsize success and recv ok')\n                self.client.sendall(totalbytes)\n#                print('client:send object done')\n                string = self.recv(1) \n#                print('client: recv string',string)\n                if string == OK:\n                    print('client:send object success, and recv ok')\n                else:\n                    print('client:send object error')\n            else:\n                print('client:send object error')\n        except:\n            print('client:send object Exception')\n\nHere I will explain these code. \n\t<li>In sendObj(), first transform object to bytes and send the length of object. Then wait to receive \"OK\" message(string 'Y'). If get OK message, then use sendall() function to send all bytes out. Then wait to receive another OK message. Here we use recv(1) to only get one char in receiving queue. We should not use recv to get more information which may not be used by sendObj() function. </li>\n\t<li>In recvObj(), first receive the length of object. Then send OK message back. Receive bytes by fixed buffer each time. And receiv many times until we received all bytes of object. Then transform bytes to objects and send OK message back.</li>\nOk. Now we should consider if the we can not connect server at first time. How do we solve this problem? The simplest idea is try many times until we connected server successfully.We should change connection() function.\n\n## in connection function of Client in client.py\n    def connect(self, count = -1):\n        flag = True\n        success = False\n        while flag:\n            try:\n                print('connect...',self.host, self.port)\n                \n                self.client.connect((self.host,self.port))\n                self.client.settimeout(self.timeout)\n                success = True\n                break\n            except:\n                count -= 1\n                if count == 0:\n                    flag = False\n                else:\n                    time.sleep(3)\n        return success\n\nOK. Here we solved many problems, such as multi-clients, sending and receiving objects, and connection failed.\n\n","source":"_posts/2011-05-04-python-socket-send-recv-atomticly.markdown","raw":"---\nlayout: post\ntitle: \"python socket send and recv atomticly \"\ndate: 2011-5-4\nwordpress_id: 394\ncomments: true\ncategories: [\"client\", \"code\", \"python\", \"python\", \"recv\", \"send\", \"server\", \"socket\"]\n---\n<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_rich_snippet_type\" content=\"none\" />\n<meta name=\"Mood\" content=\"soso\" />\n<meta name=\"Weather\" content=\"cloudy\" />\n<meta name=\"Doing\" content=\"paper, write c/c++ code and play games\" />\n<meta name=\"_su_description\" content=\"this is describe how to create server and client in python. And how to fix bug in simplest server and client.\" />\n<meta name=\"_su_keywords\" content=\"python,socket,server,client,send,recv\" />\n<meta name=\"_su_title\" content=\"python,socket,server,client,send,recv\" />\n<meta name=\"views\" content=\"1808\" />\nfirst we write simplest client and server.\nclient:\n\n## in client.py\nimport socket\nclass Client:\n    def __init__(self, host , port, bufsize = 1024, timeout = 10):\n        self.client = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n        self.host = host\n        self.port  = port\n        self.bufsize = bufsize\n        self.timeout = timeout\n        \n    def connect(self):\n        self.client.connect((self.host,self.port))\n    def close(self):\n        self.client.close()\n    def send(self, string):\n        self.client.send(bytes(string,\"utf8\"))\n    def recv(self):\n        return str(self.client.recv(self.bufsize),encoding=\"utf8\")\n\nserver:\n\n## in server.py\nimport socket\nclass Server:\n    def __init__(self,port,listen = 5,timeout = 10, buf = 4096, queueSize = 10):\n        self.host = 'localhost'\n        self.port = port\n        self.sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n        self.listen = listen\n        self.timeout = timeout\n    def send(self, conn, string):\n        conn.send(bytes(string,encoding=\"utf8\"))       \n    def recv(self, conn):\n        return str(conn.recv(self.bufsize),encoding=\"utf8\")\n    def run(self):\n        print(\"server start, port:\",self.port,\"listen num:\",self.listen)\n        self.sock.bind((self.host, self.port))\n        self.sock.listen(self.listen)\n        while True:\n            connection, address = self.sock.accept()\n            message = self.recv(connection)\n            print('message',message)\n            self.send(connection,'OK')\n            connection.close()\n\nnext I will write some code to run client and server. Here is :\n\n## in client_start.py\nfrom client import Client\nif __name__ == \"__main__\":\n    c = Client('localhost',7777)\n    c.connect()\n    c.send('hello')\n    message = c.recv()\n    print('message',message)\n\n## in server_start.py\nfrom server import Server\nif __name__ == \"__main__\":\n    s = Server(7777, listen = 1000)\n    s.run()\n\nRun server_start.py firstly and then run client_start.py. You will find both client and server print messages. Then client is shut down, but server is still running. Yup. Server should not shut down in order to supply services. And shut client down to close socket connection and save resources of server. These code runs perfectly. But we still should make some improvement. Server can server many clients. When it servers one client connection, it should server other connections and not be held by the former connection. Now multi-thread is considered.\n\n## in \"run\" function of Server in server.py\n## change run function and add a new function called \"serviceWaiting\"\n    def serviceWaiting(self, connection, address):\n        print(\"connection:\",id(connection),\"address:\",str(address),\" connect...\")\n        message = self.recv(connection)\n        print('message',message)\n        self.send(connection,'OK')\n        connection.close()\n\n    def run(self):\n        print(\"server start, port:\",self.port,\"listen num:\",self.listen)\n        self.sock.bind((self.host, self.port))\n        self.sock.listen(self.listen)\n        while True:\n            connection, address = self.sock.accept()\n            serverThread = Thread(target = self.serviceWaiting, args=(connection, address))\n            serverThread.start()\n\nOk, done! Now server can server multi-clients in the same time. But only sending and receiving string is not enough for our applications.  Sending and receiving objects should be considered.\nHere we add two functions in client.py and server.py.\n\n## we should change a function in our former code:\n    def recv(self, n= -1):\n        if n == -1:\n            return str(self.client.recv(self.bufsize),encoding=\"utf8\")\n        else:\n            return str(self.client.recv(n),encoding=\"utf8\")\n## then we should add two function for sending and receive objects\n    def recvObj(self):\n        OK = 'Y'\n        obj = None\n        try:\n            buffer = []\n            totalsize = self.recv()\n#            print('client:totalsize',totalsize,'len:',len(totalsize))\n            totalsize = int(totalsize)\n            self.send(OK)\n#            print('client:send length ok')\n            while totalsize !=0:\n#                print('client: receiving')\n                tBuff = self.client.recv(self.bufsize)\n                totalsize -= len(tBuff)\n#                print('client:tBuff len:',len(tBuff))\n                buffer.extend(tBuff) \n            buffer = bytes(buffer)\n#            print('client:buff len',len(buffer))\n            obj = pickle.loads(buffer)\n#            print('client:server receiving done')\n#            print('client:obj',obj)\n            self.send(OK)\n#            print('client:send ok')\n        except socket.timeout:\n            print (\"client:time out\")\n            raise socket.timeout\n        except EOFError:\n            print('client:buff',buffer)\n            raise EOFError\n        return obj\n    \n    def sendObj(self,  obj):\n        OK = 'Y'\n        try:\n            totalbytes = pickle.dumps(obj)\n            totalsize = len(totalbytes)\n#            print('client:will send totalsize')\n            self.send(str(totalsize))\n#            print('client:send totalsize done')\n            if self.recv()== OK:\n#                print('client:send totalsize success and recv ok')\n                self.client.sendall(totalbytes)\n#                print('client:send object done')\n                string = self.recv(1) \n#                print('client: recv string',string)\n                if string == OK:\n                    print('client:send object success, and recv ok')\n                else:\n                    print('client:send object error')\n            else:\n                print('client:send object error')\n        except:\n            print('client:send object Exception')\n\nHere I will explain these code. \n\t<li>In sendObj(), first transform object to bytes and send the length of object. Then wait to receive \"OK\" message(string 'Y'). If get OK message, then use sendall() function to send all bytes out. Then wait to receive another OK message. Here we use recv(1) to only get one char in receiving queue. We should not use recv to get more information which may not be used by sendObj() function. </li>\n\t<li>In recvObj(), first receive the length of object. Then send OK message back. Receive bytes by fixed buffer each time. And receiv many times until we received all bytes of object. Then transform bytes to objects and send OK message back.</li>\nOk. Now we should consider if the we can not connect server at first time. How do we solve this problem? The simplest idea is try many times until we connected server successfully.We should change connection() function.\n\n## in connection function of Client in client.py\n    def connect(self, count = -1):\n        flag = True\n        success = False\n        while flag:\n            try:\n                print('connect...',self.host, self.port)\n                \n                self.client.connect((self.host,self.port))\n                self.client.settimeout(self.timeout)\n                success = True\n                break\n            except:\n                count -= 1\n                if count == 0:\n                    flag = False\n                else:\n                    time.sleep(3)\n        return success\n\nOK. Here we solved many problems, such as multi-clients, sending and receiving objects, and connection failed.\n\n","slug":"2011-05-04-python-socket-send-recv-atomticly","published":1,"updated":"2017-06-05T02:56:52.000Z","photos":[],"link":"","_id":"cj3jjpb9e000izumjvngvdlu7","content":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_rich_snippet_type\" content=\"none\"></p>\n<p><meta name=\"Mood\" content=\"soso\"></p>\n<p><meta name=\"Weather\" content=\"cloudy\"></p>\n<p><meta name=\"Doing\" content=\"paper, write c/c++ code and play games\"></p>\n<p><meta name=\"_su_description\" content=\"this is describe how to create server and client in python. And how to fix bug in simplest server and client.\"></p>\n<p><meta name=\"_su_keywords\" content=\"python,socket,server,client,send,recv\"></p>\n<p><meta name=\"_su_title\" content=\"python,socket,server,client,send,recv\"></p>\n<p><meta name=\"views\" content=\"1808\"><br>first we write simplest client and server.<br>client:</p>\n<h2 id=\"in-client-py\"><a href=\"#in-client-py\" class=\"headerlink\" title=\"in client.py\"></a>in client.py</h2><p>import socket<br>class Client:<br>    def <strong>init</strong>(self, host , port, bufsize = 1024, timeout = 10):<br>        self.client = socket.socket(socket.AF_INET, socket.SOCK_STREAM)<br>        self.host = host<br>        self.port  = port<br>        self.bufsize = bufsize<br>        self.timeout = timeout</p>\n<pre><code>def connect(self):\n    self.client.connect((self.host,self.port))\ndef close(self):\n    self.client.close()\ndef send(self, string):\n    self.client.send(bytes(string,&quot;utf8&quot;))\ndef recv(self):\n    return str(self.client.recv(self.bufsize),encoding=&quot;utf8&quot;)\n</code></pre><p>server:</p>\n<h2 id=\"in-server-py\"><a href=\"#in-server-py\" class=\"headerlink\" title=\"in server.py\"></a>in server.py</h2><p>import socket<br>class Server:<br>    def <strong>init</strong>(self,port,listen = 5,timeout = 10, buf = 4096, queueSize = 10):<br>        self.host = ‘localhost’<br>        self.port = port<br>        self.sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)<br>        self.listen = listen<br>        self.timeout = timeout<br>    def send(self, conn, string):<br>        conn.send(bytes(string,encoding=”utf8”))<br>    def recv(self, conn):<br>        return str(conn.recv(self.bufsize),encoding=”utf8”)<br>    def run(self):<br>        print(“server start, port:”,self.port,”listen num:”,self.listen)<br>        self.sock.bind((self.host, self.port))<br>        self.sock.listen(self.listen)<br>        while True:<br>            connection, address = self.sock.accept()<br>            message = self.recv(connection)<br>            print(‘message’,message)<br>            self.send(connection,’OK’)<br>            connection.close()</p>\n<p>next I will write some code to run client and server. Here is :</p>\n<h2 id=\"in-client-start-py\"><a href=\"#in-client-start-py\" class=\"headerlink\" title=\"in client_start.py\"></a>in client_start.py</h2><p>from client import Client<br>if <strong>name</strong> == “<strong>main</strong>“:<br>    c = Client(‘localhost’,7777)<br>    c.connect()<br>    c.send(‘hello’)<br>    message = c.recv()<br>    print(‘message’,message)</p>\n<h2 id=\"in-server-start-py\"><a href=\"#in-server-start-py\" class=\"headerlink\" title=\"in server_start.py\"></a>in server_start.py</h2><p>from server import Server<br>if <strong>name</strong> == “<strong>main</strong>“:<br>    s = Server(7777, listen = 1000)<br>    s.run()</p>\n<p>Run server_start.py firstly and then run client_start.py. You will find both client and server print messages. Then client is shut down, but server is still running. Yup. Server should not shut down in order to supply services. And shut client down to close socket connection and save resources of server. These code runs perfectly. But we still should make some improvement. Server can server many clients. When it servers one client connection, it should server other connections and not be held by the former connection. Now multi-thread is considered.</p>\n<h2 id=\"in-“run”-function-of-Server-in-server-py\"><a href=\"#in-“run”-function-of-Server-in-server-py\" class=\"headerlink\" title=\"in “run” function of Server in server.py\"></a>in “run” function of Server in server.py</h2><h2 id=\"change-run-function-and-add-a-new-function-called-“serviceWaiting”\"><a href=\"#change-run-function-and-add-a-new-function-called-“serviceWaiting”\" class=\"headerlink\" title=\"change run function and add a new function called “serviceWaiting”\"></a>change run function and add a new function called “serviceWaiting”</h2><pre><code>def serviceWaiting(self, connection, address):\n    print(&quot;connection:&quot;,id(connection),&quot;address:&quot;,str(address),&quot; connect...&quot;)\n    message = self.recv(connection)\n    print(&apos;message&apos;,message)\n    self.send(connection,&apos;OK&apos;)\n    connection.close()\n\ndef run(self):\n    print(&quot;server start, port:&quot;,self.port,&quot;listen num:&quot;,self.listen)\n    self.sock.bind((self.host, self.port))\n    self.sock.listen(self.listen)\n    while True:\n        connection, address = self.sock.accept()\n        serverThread = Thread(target = self.serviceWaiting, args=(connection, address))\n        serverThread.start()\n</code></pre><p>Ok, done! Now server can server multi-clients in the same time. But only sending and receiving string is not enough for our applications.  Sending and receiving objects should be considered.<br>Here we add two functions in client.py and server.py.</p>\n<h2 id=\"we-should-change-a-function-in-our-former-code\"><a href=\"#we-should-change-a-function-in-our-former-code\" class=\"headerlink\" title=\"we should change a function in our former code:\"></a>we should change a function in our former code:</h2><pre><code>def recv(self, n= -1):\n    if n == -1:\n        return str(self.client.recv(self.bufsize),encoding=&quot;utf8&quot;)\n    else:\n        return str(self.client.recv(n),encoding=&quot;utf8&quot;)\n</code></pre><h2 id=\"then-we-should-add-two-function-for-sending-and-receive-objects\"><a href=\"#then-we-should-add-two-function-for-sending-and-receive-objects\" class=\"headerlink\" title=\"then we should add two function for sending and receive objects\"></a>then we should add two function for sending and receive objects</h2><pre><code>def recvObj(self):\n    OK = &apos;Y&apos;\n    obj = None\n    try:\n        buffer = []\n        totalsize = self.recv()\n</code></pre><h1 id=\"print-‘client-totalsize’-totalsize-’len-’-len-totalsize\"><a href=\"#print-‘client-totalsize’-totalsize-’len-’-len-totalsize\" class=\"headerlink\" title=\"print(‘client:totalsize’,totalsize,’len:’,len(totalsize))\"></a>print(‘client:totalsize’,totalsize,’len:’,len(totalsize))</h1><pre><code>totalsize = int(totalsize)\nself.send(OK)\n</code></pre><h1 id=\"print-‘client-send-length-ok’\"><a href=\"#print-‘client-send-length-ok’\" class=\"headerlink\" title=\"print(‘client:send length ok’)\"></a>print(‘client:send length ok’)</h1><pre><code>while totalsize !=0:\n</code></pre><h1 id=\"print-‘client-receiving’\"><a href=\"#print-‘client-receiving’\" class=\"headerlink\" title=\"print(‘client: receiving’)\"></a>print(‘client: receiving’)</h1><pre><code>tBuff = self.client.recv(self.bufsize)\ntotalsize -= len(tBuff)\n</code></pre><h1 id=\"print-‘client-tBuff-len-’-len-tBuff\"><a href=\"#print-‘client-tBuff-len-’-len-tBuff\" class=\"headerlink\" title=\"print(‘client:tBuff len:’,len(tBuff))\"></a>print(‘client:tBuff len:’,len(tBuff))</h1><pre><code>    buffer.extend(tBuff) \nbuffer = bytes(buffer)\n</code></pre><h1 id=\"print-‘client-buff-len’-len-buffer\"><a href=\"#print-‘client-buff-len’-len-buffer\" class=\"headerlink\" title=\"print(‘client:buff len’,len(buffer))\"></a>print(‘client:buff len’,len(buffer))</h1><pre><code>obj = pickle.loads(buffer)\n</code></pre><h1 id=\"print-‘client-server-receiving-done’\"><a href=\"#print-‘client-server-receiving-done’\" class=\"headerlink\" title=\"print(‘client:server receiving done’)\"></a>print(‘client:server receiving done’)</h1><h1 id=\"print-‘client-obj’-obj\"><a href=\"#print-‘client-obj’-obj\" class=\"headerlink\" title=\"print(‘client:obj’,obj)\"></a>print(‘client:obj’,obj)</h1><pre><code>self.send(OK)\n</code></pre><h1 id=\"print-‘client-send-ok’\"><a href=\"#print-‘client-send-ok’\" class=\"headerlink\" title=\"print(‘client:send ok’)\"></a>print(‘client:send ok’)</h1><pre><code>    except socket.timeout:\n        print (&quot;client:time out&quot;)\n        raise socket.timeout\n    except EOFError:\n        print(&apos;client:buff&apos;,buffer)\n        raise EOFError\n    return obj\n\ndef sendObj(self,  obj):\n    OK = &apos;Y&apos;\n    try:\n        totalbytes = pickle.dumps(obj)\n        totalsize = len(totalbytes)\n</code></pre><h1 id=\"print-‘client-will-send-totalsize’\"><a href=\"#print-‘client-will-send-totalsize’\" class=\"headerlink\" title=\"print(‘client:will send totalsize’)\"></a>print(‘client:will send totalsize’)</h1><pre><code>self.send(str(totalsize))\n</code></pre><h1 id=\"print-‘client-send-totalsize-done’\"><a href=\"#print-‘client-send-totalsize-done’\" class=\"headerlink\" title=\"print(‘client:send totalsize done’)\"></a>print(‘client:send totalsize done’)</h1><pre><code>if self.recv()== OK:\n</code></pre><h1 id=\"print-‘client-send-totalsize-success-and-recv-ok’\"><a href=\"#print-‘client-send-totalsize-success-and-recv-ok’\" class=\"headerlink\" title=\"print(‘client:send totalsize success and recv ok’)\"></a>print(‘client:send totalsize success and recv ok’)</h1><pre><code>self.client.sendall(totalbytes)\n</code></pre><h1 id=\"print-‘client-send-object-done’\"><a href=\"#print-‘client-send-object-done’\" class=\"headerlink\" title=\"print(‘client:send object done’)\"></a>print(‘client:send object done’)</h1><pre><code>string = self.recv(1) \n</code></pre><h1 id=\"print-‘client-recv-string’-string\"><a href=\"#print-‘client-recv-string’-string\" class=\"headerlink\" title=\"print(‘client: recv string’,string)\"></a>print(‘client: recv string’,string)</h1><pre><code>        if string == OK:\n            print(&apos;client:send object success, and recv ok&apos;)\n        else:\n            print(&apos;client:send object error&apos;)\n    else:\n        print(&apos;client:send object error&apos;)\nexcept:\n    print(&apos;client:send object Exception&apos;)\n</code></pre><p>Here I will explain these code.<br>    <li>In sendObj(), first transform object to bytes and send the length of object. Then wait to receive “OK” message(string ‘Y’). If get OK message, then use sendall() function to send all bytes out. Then wait to receive another OK message. Here we use recv(1) to only get one char in receiving queue. We should not use recv to get more information which may not be used by sendObj() function. </li><br>    <li>In recvObj(), first receive the length of object. Then send OK message back. Receive bytes by fixed buffer each time. And receiv many times until we received all bytes of object. Then transform bytes to objects and send OK message back.</li><br>Ok. Now we should consider if the we can not connect server at first time. How do we solve this problem? The simplest idea is try many times until we connected server successfully.We should change connection() function.</p>\n<h2 id=\"in-connection-function-of-Client-in-client-py\"><a href=\"#in-connection-function-of-Client-in-client-py\" class=\"headerlink\" title=\"in connection function of Client in client.py\"></a>in connection function of Client in client.py</h2><pre><code>def connect(self, count = -1):\n    flag = True\n    success = False\n    while flag:\n        try:\n            print(&apos;connect...&apos;,self.host, self.port)\n\n            self.client.connect((self.host,self.port))\n            self.client.settimeout(self.timeout)\n            success = True\n            break\n        except:\n            count -= 1\n            if count == 0:\n                flag = False\n            else:\n                time.sleep(3)\n    return success\n</code></pre><p>OK. Here we solved many problems, such as multi-clients, sending and receiving objects, and connection failed.</p>\n","site":{"data":{}},"excerpt":"","more":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_rich_snippet_type\" content=\"none\"></p>\n<p><meta name=\"Mood\" content=\"soso\"></p>\n<p><meta name=\"Weather\" content=\"cloudy\"></p>\n<p><meta name=\"Doing\" content=\"paper, write c/c++ code and play games\"></p>\n<p><meta name=\"_su_description\" content=\"this is describe how to create server and client in python. And how to fix bug in simplest server and client.\"></p>\n<p><meta name=\"_su_keywords\" content=\"python,socket,server,client,send,recv\"></p>\n<p><meta name=\"_su_title\" content=\"python,socket,server,client,send,recv\"></p>\n<p><meta name=\"views\" content=\"1808\"><br>first we write simplest client and server.<br>client:</p>\n<h2 id=\"in-client-py\"><a href=\"#in-client-py\" class=\"headerlink\" title=\"in client.py\"></a>in client.py</h2><p>import socket<br>class Client:<br>    def <strong>init</strong>(self, host , port, bufsize = 1024, timeout = 10):<br>        self.client = socket.socket(socket.AF_INET, socket.SOCK_STREAM)<br>        self.host = host<br>        self.port  = port<br>        self.bufsize = bufsize<br>        self.timeout = timeout</p>\n<pre><code>def connect(self):\n    self.client.connect((self.host,self.port))\ndef close(self):\n    self.client.close()\ndef send(self, string):\n    self.client.send(bytes(string,&quot;utf8&quot;))\ndef recv(self):\n    return str(self.client.recv(self.bufsize),encoding=&quot;utf8&quot;)\n</code></pre><p>server:</p>\n<h2 id=\"in-server-py\"><a href=\"#in-server-py\" class=\"headerlink\" title=\"in server.py\"></a>in server.py</h2><p>import socket<br>class Server:<br>    def <strong>init</strong>(self,port,listen = 5,timeout = 10, buf = 4096, queueSize = 10):<br>        self.host = ‘localhost’<br>        self.port = port<br>        self.sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)<br>        self.listen = listen<br>        self.timeout = timeout<br>    def send(self, conn, string):<br>        conn.send(bytes(string,encoding=”utf8”))<br>    def recv(self, conn):<br>        return str(conn.recv(self.bufsize),encoding=”utf8”)<br>    def run(self):<br>        print(“server start, port:”,self.port,”listen num:”,self.listen)<br>        self.sock.bind((self.host, self.port))<br>        self.sock.listen(self.listen)<br>        while True:<br>            connection, address = self.sock.accept()<br>            message = self.recv(connection)<br>            print(‘message’,message)<br>            self.send(connection,’OK’)<br>            connection.close()</p>\n<p>next I will write some code to run client and server. Here is :</p>\n<h2 id=\"in-client-start-py\"><a href=\"#in-client-start-py\" class=\"headerlink\" title=\"in client_start.py\"></a>in client_start.py</h2><p>from client import Client<br>if <strong>name</strong> == “<strong>main</strong>“:<br>    c = Client(‘localhost’,7777)<br>    c.connect()<br>    c.send(‘hello’)<br>    message = c.recv()<br>    print(‘message’,message)</p>\n<h2 id=\"in-server-start-py\"><a href=\"#in-server-start-py\" class=\"headerlink\" title=\"in server_start.py\"></a>in server_start.py</h2><p>from server import Server<br>if <strong>name</strong> == “<strong>main</strong>“:<br>    s = Server(7777, listen = 1000)<br>    s.run()</p>\n<p>Run server_start.py firstly and then run client_start.py. You will find both client and server print messages. Then client is shut down, but server is still running. Yup. Server should not shut down in order to supply services. And shut client down to close socket connection and save resources of server. These code runs perfectly. But we still should make some improvement. Server can server many clients. When it servers one client connection, it should server other connections and not be held by the former connection. Now multi-thread is considered.</p>\n<h2 id=\"in-“run”-function-of-Server-in-server-py\"><a href=\"#in-“run”-function-of-Server-in-server-py\" class=\"headerlink\" title=\"in “run” function of Server in server.py\"></a>in “run” function of Server in server.py</h2><h2 id=\"change-run-function-and-add-a-new-function-called-“serviceWaiting”\"><a href=\"#change-run-function-and-add-a-new-function-called-“serviceWaiting”\" class=\"headerlink\" title=\"change run function and add a new function called “serviceWaiting”\"></a>change run function and add a new function called “serviceWaiting”</h2><pre><code>def serviceWaiting(self, connection, address):\n    print(&quot;connection:&quot;,id(connection),&quot;address:&quot;,str(address),&quot; connect...&quot;)\n    message = self.recv(connection)\n    print(&apos;message&apos;,message)\n    self.send(connection,&apos;OK&apos;)\n    connection.close()\n\ndef run(self):\n    print(&quot;server start, port:&quot;,self.port,&quot;listen num:&quot;,self.listen)\n    self.sock.bind((self.host, self.port))\n    self.sock.listen(self.listen)\n    while True:\n        connection, address = self.sock.accept()\n        serverThread = Thread(target = self.serviceWaiting, args=(connection, address))\n        serverThread.start()\n</code></pre><p>Ok, done! Now server can server multi-clients in the same time. But only sending and receiving string is not enough for our applications.  Sending and receiving objects should be considered.<br>Here we add two functions in client.py and server.py.</p>\n<h2 id=\"we-should-change-a-function-in-our-former-code\"><a href=\"#we-should-change-a-function-in-our-former-code\" class=\"headerlink\" title=\"we should change a function in our former code:\"></a>we should change a function in our former code:</h2><pre><code>def recv(self, n= -1):\n    if n == -1:\n        return str(self.client.recv(self.bufsize),encoding=&quot;utf8&quot;)\n    else:\n        return str(self.client.recv(n),encoding=&quot;utf8&quot;)\n</code></pre><h2 id=\"then-we-should-add-two-function-for-sending-and-receive-objects\"><a href=\"#then-we-should-add-two-function-for-sending-and-receive-objects\" class=\"headerlink\" title=\"then we should add two function for sending and receive objects\"></a>then we should add two function for sending and receive objects</h2><pre><code>def recvObj(self):\n    OK = &apos;Y&apos;\n    obj = None\n    try:\n        buffer = []\n        totalsize = self.recv()\n</code></pre><h1 id=\"print-‘client-totalsize’-totalsize-’len-’-len-totalsize\"><a href=\"#print-‘client-totalsize’-totalsize-’len-’-len-totalsize\" class=\"headerlink\" title=\"print(‘client:totalsize’,totalsize,’len:’,len(totalsize))\"></a>print(‘client:totalsize’,totalsize,’len:’,len(totalsize))</h1><pre><code>totalsize = int(totalsize)\nself.send(OK)\n</code></pre><h1 id=\"print-‘client-send-length-ok’\"><a href=\"#print-‘client-send-length-ok’\" class=\"headerlink\" title=\"print(‘client:send length ok’)\"></a>print(‘client:send length ok’)</h1><pre><code>while totalsize !=0:\n</code></pre><h1 id=\"print-‘client-receiving’\"><a href=\"#print-‘client-receiving’\" class=\"headerlink\" title=\"print(‘client: receiving’)\"></a>print(‘client: receiving’)</h1><pre><code>tBuff = self.client.recv(self.bufsize)\ntotalsize -= len(tBuff)\n</code></pre><h1 id=\"print-‘client-tBuff-len-’-len-tBuff\"><a href=\"#print-‘client-tBuff-len-’-len-tBuff\" class=\"headerlink\" title=\"print(‘client:tBuff len:’,len(tBuff))\"></a>print(‘client:tBuff len:’,len(tBuff))</h1><pre><code>    buffer.extend(tBuff) \nbuffer = bytes(buffer)\n</code></pre><h1 id=\"print-‘client-buff-len’-len-buffer\"><a href=\"#print-‘client-buff-len’-len-buffer\" class=\"headerlink\" title=\"print(‘client:buff len’,len(buffer))\"></a>print(‘client:buff len’,len(buffer))</h1><pre><code>obj = pickle.loads(buffer)\n</code></pre><h1 id=\"print-‘client-server-receiving-done’\"><a href=\"#print-‘client-server-receiving-done’\" class=\"headerlink\" title=\"print(‘client:server receiving done’)\"></a>print(‘client:server receiving done’)</h1><h1 id=\"print-‘client-obj’-obj\"><a href=\"#print-‘client-obj’-obj\" class=\"headerlink\" title=\"print(‘client:obj’,obj)\"></a>print(‘client:obj’,obj)</h1><pre><code>self.send(OK)\n</code></pre><h1 id=\"print-‘client-send-ok’\"><a href=\"#print-‘client-send-ok’\" class=\"headerlink\" title=\"print(‘client:send ok’)\"></a>print(‘client:send ok’)</h1><pre><code>    except socket.timeout:\n        print (&quot;client:time out&quot;)\n        raise socket.timeout\n    except EOFError:\n        print(&apos;client:buff&apos;,buffer)\n        raise EOFError\n    return obj\n\ndef sendObj(self,  obj):\n    OK = &apos;Y&apos;\n    try:\n        totalbytes = pickle.dumps(obj)\n        totalsize = len(totalbytes)\n</code></pre><h1 id=\"print-‘client-will-send-totalsize’\"><a href=\"#print-‘client-will-send-totalsize’\" class=\"headerlink\" title=\"print(‘client:will send totalsize’)\"></a>print(‘client:will send totalsize’)</h1><pre><code>self.send(str(totalsize))\n</code></pre><h1 id=\"print-‘client-send-totalsize-done’\"><a href=\"#print-‘client-send-totalsize-done’\" class=\"headerlink\" title=\"print(‘client:send totalsize done’)\"></a>print(‘client:send totalsize done’)</h1><pre><code>if self.recv()== OK:\n</code></pre><h1 id=\"print-‘client-send-totalsize-success-and-recv-ok’\"><a href=\"#print-‘client-send-totalsize-success-and-recv-ok’\" class=\"headerlink\" title=\"print(‘client:send totalsize success and recv ok’)\"></a>print(‘client:send totalsize success and recv ok’)</h1><pre><code>self.client.sendall(totalbytes)\n</code></pre><h1 id=\"print-‘client-send-object-done’\"><a href=\"#print-‘client-send-object-done’\" class=\"headerlink\" title=\"print(‘client:send object done’)\"></a>print(‘client:send object done’)</h1><pre><code>string = self.recv(1) \n</code></pre><h1 id=\"print-‘client-recv-string’-string\"><a href=\"#print-‘client-recv-string’-string\" class=\"headerlink\" title=\"print(‘client: recv string’,string)\"></a>print(‘client: recv string’,string)</h1><pre><code>        if string == OK:\n            print(&apos;client:send object success, and recv ok&apos;)\n        else:\n            print(&apos;client:send object error&apos;)\n    else:\n        print(&apos;client:send object error&apos;)\nexcept:\n    print(&apos;client:send object Exception&apos;)\n</code></pre><p>Here I will explain these code.<br>    <li>In sendObj(), first transform object to bytes and send the length of object. Then wait to receive “OK” message(string ‘Y’). If get OK message, then use sendall() function to send all bytes out. Then wait to receive another OK message. Here we use recv(1) to only get one char in receiving queue. We should not use recv to get more information which may not be used by sendObj() function. </li><br>    <li>In recvObj(), first receive the length of object. Then send OK message back. Receive bytes by fixed buffer each time. And receiv many times until we received all bytes of object. Then transform bytes to objects and send OK message back.</li><br>Ok. Now we should consider if the we can not connect server at first time. How do we solve this problem? The simplest idea is try many times until we connected server successfully.We should change connection() function.</p>\n<h2 id=\"in-connection-function-of-Client-in-client-py\"><a href=\"#in-connection-function-of-Client-in-client-py\" class=\"headerlink\" title=\"in connection function of Client in client.py\"></a>in connection function of Client in client.py</h2><pre><code>def connect(self, count = -1):\n    flag = True\n    success = False\n    while flag:\n        try:\n            print(&apos;connect...&apos;,self.host, self.port)\n\n            self.client.connect((self.host,self.port))\n            self.client.settimeout(self.timeout)\n            success = True\n            break\n        except:\n            count -= 1\n            if count == 0:\n                flag = False\n            else:\n                time.sleep(3)\n    return success\n</code></pre><p>OK. Here we solved many problems, such as multi-clients, sending and receiving objects, and connection failed.</p>\n"},{"layout":"post","title":"RPG maker XP 制作的游戏无法运行","date":"2011-05-09T16:00:00.000Z","wordpress_id":399,"comments":1,"_content":"<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_description\" content=\"解决RPG maker xp制作的游戏无法运行的问题\" />\n<meta name=\"_su_rich_snippet_type\" content=\"none\" />\n<meta name=\"_su_title\" content=\"RPG,maker,xp,dll,无法运行\" />\n<meta name=\"views\" content=\"686\" />\n这个东东制作RPG还是不错的。不过我用不了那么多功能。此外层数太少了，还要学习Ruby。其实Ruby和python差不多。那帮家伙为啥不用python呢？\n算了。学点语言也没有坏处。然后我就做起了RPG.\n昨天终于做好了。至少可以在我的电脑上运行了。\n结果放在宝的电脑上就杯具了。\n提示应该是缺少RGSS102J.dll的错误，其实RGSS103J.dll的错误是一样的。就是安装过RPG maker的电脑上安装了RGSS102J.dll，而没有装过的缺少呗。其实根本不用到网上下载那些dll。只需要在系统盘的windows文件夹寻找就可以找到。之后把这个dll拷贝到游戏目录中即可。\n但即使这样还是会有提示说：RGSS-RTP Standard 找不到咯～所以嘛，在RPG Maker XP中的游戏->选择RTP中不要选Standard。\n解决方案：\n\t<li>首先就在RPG maker XP的安装目录\\RGSS\\Standard中将Audio和Graphics两个目录拷贝出来。然后将你制作的游戏目录中的Audio和Graphics覆盖到这两个目录。然后再将这两个目录覆盖到自己的游戏目录。<strong>注意这里谁先覆盖谁。</strong></li>\n\n\t<li>第二步将游戏->选择RTP中全部改为Standard.如果你第一步做对了，那么现在你的游戏画面还是存在的，否则你就会发现全部都是空白。</li>\n\n\t<li>然后将RGSS102J.dll或者RGSS103J.dll放入到你的游戏制作目录。然后将这个dll文件的属性改为隐藏。不隐藏的话，RPG maker XP是不给打到安装包里的。</li>\n\n现在制作打包，就可以在没有安装过RPG maker XP的系统中运行了。当然需要是windows的系统。\n","source":"_posts/2011-05-10-rpg-maker-xp.markdown","raw":"---\nlayout: post\ntitle: \"RPG maker XP 制作的游戏无法运行\"\ndate: 2011-5-10\nwordpress_id: 399\ncomments: true\ncategories: [\"dll\", \"game\", \"rmxp\", \"rpg\", \"rtp\"]\n---\n<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_description\" content=\"解决RPG maker xp制作的游戏无法运行的问题\" />\n<meta name=\"_su_rich_snippet_type\" content=\"none\" />\n<meta name=\"_su_title\" content=\"RPG,maker,xp,dll,无法运行\" />\n<meta name=\"views\" content=\"686\" />\n这个东东制作RPG还是不错的。不过我用不了那么多功能。此外层数太少了，还要学习Ruby。其实Ruby和python差不多。那帮家伙为啥不用python呢？\n算了。学点语言也没有坏处。然后我就做起了RPG.\n昨天终于做好了。至少可以在我的电脑上运行了。\n结果放在宝的电脑上就杯具了。\n提示应该是缺少RGSS102J.dll的错误，其实RGSS103J.dll的错误是一样的。就是安装过RPG maker的电脑上安装了RGSS102J.dll，而没有装过的缺少呗。其实根本不用到网上下载那些dll。只需要在系统盘的windows文件夹寻找就可以找到。之后把这个dll拷贝到游戏目录中即可。\n但即使这样还是会有提示说：RGSS-RTP Standard 找不到咯～所以嘛，在RPG Maker XP中的游戏->选择RTP中不要选Standard。\n解决方案：\n\t<li>首先就在RPG maker XP的安装目录\\RGSS\\Standard中将Audio和Graphics两个目录拷贝出来。然后将你制作的游戏目录中的Audio和Graphics覆盖到这两个目录。然后再将这两个目录覆盖到自己的游戏目录。<strong>注意这里谁先覆盖谁。</strong></li>\n\n\t<li>第二步将游戏->选择RTP中全部改为Standard.如果你第一步做对了，那么现在你的游戏画面还是存在的，否则你就会发现全部都是空白。</li>\n\n\t<li>然后将RGSS102J.dll或者RGSS103J.dll放入到你的游戏制作目录。然后将这个dll文件的属性改为隐藏。不隐藏的话，RPG maker XP是不给打到安装包里的。</li>\n\n现在制作打包，就可以在没有安装过RPG maker XP的系统中运行了。当然需要是windows的系统。\n","slug":"2011-05-10-rpg-maker-xp","published":1,"updated":"2017-06-05T02:56:52.000Z","photos":[],"link":"","_id":"cj3jjpb9i000kzumj4hglabyj","content":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_description\" content=\"解决RPG maker xp制作的游戏无法运行的问题\"></p>\n<p><meta name=\"_su_rich_snippet_type\" content=\"none\"></p>\n<p><meta name=\"_su_title\" content=\"RPG,maker,xp,dll,无法运行\"></p>\n<p><meta name=\"views\" content=\"686\"><br>这个东东制作RPG还是不错的。不过我用不了那么多功能。此外层数太少了，还要学习Ruby。其实Ruby和python差不多。那帮家伙为啥不用python呢？<br>算了。学点语言也没有坏处。然后我就做起了RPG.<br>昨天终于做好了。至少可以在我的电脑上运行了。<br>结果放在宝的电脑上就杯具了。<br>提示应该是缺少RGSS102J.dll的错误，其实RGSS103J.dll的错误是一样的。就是安装过RPG maker的电脑上安装了RGSS102J.dll，而没有装过的缺少呗。其实根本不用到网上下载那些dll。只需要在系统盘的windows文件夹寻找就可以找到。之后把这个dll拷贝到游戏目录中即可。<br>但即使这样还是会有提示说：RGSS-RTP Standard 找不到咯～所以嘛，在RPG Maker XP中的游戏-&gt;选择RTP中不要选Standard。<br>解决方案：<br>    <li>首先就在RPG maker XP的安装目录\\RGSS\\Standard中将Audio和Graphics两个目录拷贝出来。然后将你制作的游戏目录中的Audio和Graphics覆盖到这两个目录。然后再将这两个目录覆盖到自己的游戏目录。<strong>注意这里谁先覆盖谁。</strong></li></p>\n<pre><code>&lt;li&gt;第二步将游戏-&gt;选择RTP中全部改为Standard.如果你第一步做对了，那么现在你的游戏画面还是存在的，否则你就会发现全部都是空白。&lt;/li&gt;\n\n&lt;li&gt;然后将RGSS102J.dll或者RGSS103J.dll放入到你的游戏制作目录。然后将这个dll文件的属性改为隐藏。不隐藏的话，RPG maker XP是不给打到安装包里的。&lt;/li&gt;\n</code></pre><p>现在制作打包，就可以在没有安装过RPG maker XP的系统中运行了。当然需要是windows的系统。</p>\n","site":{"data":{}},"excerpt":"","more":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_description\" content=\"解决RPG maker xp制作的游戏无法运行的问题\"></p>\n<p><meta name=\"_su_rich_snippet_type\" content=\"none\"></p>\n<p><meta name=\"_su_title\" content=\"RPG,maker,xp,dll,无法运行\"></p>\n<p><meta name=\"views\" content=\"686\"><br>这个东东制作RPG还是不错的。不过我用不了那么多功能。此外层数太少了，还要学习Ruby。其实Ruby和python差不多。那帮家伙为啥不用python呢？<br>算了。学点语言也没有坏处。然后我就做起了RPG.<br>昨天终于做好了。至少可以在我的电脑上运行了。<br>结果放在宝的电脑上就杯具了。<br>提示应该是缺少RGSS102J.dll的错误，其实RGSS103J.dll的错误是一样的。就是安装过RPG maker的电脑上安装了RGSS102J.dll，而没有装过的缺少呗。其实根本不用到网上下载那些dll。只需要在系统盘的windows文件夹寻找就可以找到。之后把这个dll拷贝到游戏目录中即可。<br>但即使这样还是会有提示说：RGSS-RTP Standard 找不到咯～所以嘛，在RPG Maker XP中的游戏-&gt;选择RTP中不要选Standard。<br>解决方案：<br>    <li>首先就在RPG maker XP的安装目录\\RGSS\\Standard中将Audio和Graphics两个目录拷贝出来。然后将你制作的游戏目录中的Audio和Graphics覆盖到这两个目录。然后再将这两个目录覆盖到自己的游戏目录。<strong>注意这里谁先覆盖谁。</strong></li></p>\n<pre><code>&lt;li&gt;第二步将游戏-&gt;选择RTP中全部改为Standard.如果你第一步做对了，那么现在你的游戏画面还是存在的，否则你就会发现全部都是空白。&lt;/li&gt;\n\n&lt;li&gt;然后将RGSS102J.dll或者RGSS103J.dll放入到你的游戏制作目录。然后将这个dll文件的属性改为隐藏。不隐藏的话，RPG maker XP是不给打到安装包里的。&lt;/li&gt;\n</code></pre><p>现在制作打包，就可以在没有安装过RPG maker XP的系统中运行了。当然需要是windows的系统。</p>\n"},{"layout":"post","title":"Google adsense申请成功","date":"2011-05-11T16:00:00.000Z","wordpress_id":405,"comments":1,"_content":"<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_rich_snippet_type\" content=\"none\" />\n<meta name=\"views\" content=\"194\" />\n今天终于申请成功了google adsense.以前申请不成功是：\n\t<li>是二级域名</li>\n\n\t<li>内容太少</li>\n\n\t<li>没有加上adsense.txt.</li>\n今天终于申请成功了。不过今天为了调整这个东东的格式（见右侧）。也是花费了很长功夫。而且貌似chrome是不支持看到自己的广告的。不让我看到，你说我咋调整？于是只得换成firefox.看了看效果还是可以的。而且推荐的广告还是很符合内容的。不过我自己就能点了。另外google adsense的要求蛮多的。开始放入网页中的时候我下载了word press的插件awesome google adsense.结果后来还是自己手工改php好看些。再也不相信那无聊的plugin了..能自己写还是自己动手吧。害我现在的网页加载速度越来越慢。有空改改...没空..咳咳...就这样吧。\n","source":"_posts/2011-05-12-googleadsenseshen-qing-cheng-gong.markdown","raw":"---\nlayout: post\ntitle: \"Google adsense申请成功\"\ndate: 2011-5-12\nwordpress_id: 405\ncomments: true\ncategories: [\"see-hear\"]\n---\n<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_rich_snippet_type\" content=\"none\" />\n<meta name=\"views\" content=\"194\" />\n今天终于申请成功了google adsense.以前申请不成功是：\n\t<li>是二级域名</li>\n\n\t<li>内容太少</li>\n\n\t<li>没有加上adsense.txt.</li>\n今天终于申请成功了。不过今天为了调整这个东东的格式（见右侧）。也是花费了很长功夫。而且貌似chrome是不支持看到自己的广告的。不让我看到，你说我咋调整？于是只得换成firefox.看了看效果还是可以的。而且推荐的广告还是很符合内容的。不过我自己就能点了。另外google adsense的要求蛮多的。开始放入网页中的时候我下载了word press的插件awesome google adsense.结果后来还是自己手工改php好看些。再也不相信那无聊的plugin了..能自己写还是自己动手吧。害我现在的网页加载速度越来越慢。有空改改...没空..咳咳...就这样吧。\n","slug":"2011-05-12-googleadsenseshen-qing-cheng-gong","published":1,"updated":"2017-06-05T02:56:52.000Z","photos":[],"link":"","_id":"cj3jjpb9k000mzumj7aq8363c","content":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_rich_snippet_type\" content=\"none\"></p>\n<p><meta name=\"views\" content=\"194\"><br>今天终于申请成功了google adsense.以前申请不成功是：<br>    <li>是二级域名</li></p>\n<pre><code>&lt;li&gt;内容太少&lt;/li&gt;\n\n&lt;li&gt;没有加上adsense.txt.&lt;/li&gt;\n</code></pre><p>今天终于申请成功了。不过今天为了调整这个东东的格式（见右侧）。也是花费了很长功夫。而且貌似chrome是不支持看到自己的广告的。不让我看到，你说我咋调整？于是只得换成firefox.看了看效果还是可以的。而且推荐的广告还是很符合内容的。不过我自己就能点了。另外google adsense的要求蛮多的。开始放入网页中的时候我下载了word press的插件awesome google adsense.结果后来还是自己手工改php好看些。再也不相信那无聊的plugin了..能自己写还是自己动手吧。害我现在的网页加载速度越来越慢。有空改改…没空..咳咳…就这样吧。</p>\n","site":{"data":{}},"excerpt":"","more":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_rich_snippet_type\" content=\"none\"></p>\n<p><meta name=\"views\" content=\"194\"><br>今天终于申请成功了google adsense.以前申请不成功是：<br>    <li>是二级域名</li></p>\n<pre><code>&lt;li&gt;内容太少&lt;/li&gt;\n\n&lt;li&gt;没有加上adsense.txt.&lt;/li&gt;\n</code></pre><p>今天终于申请成功了。不过今天为了调整这个东东的格式（见右侧）。也是花费了很长功夫。而且貌似chrome是不支持看到自己的广告的。不让我看到，你说我咋调整？于是只得换成firefox.看了看效果还是可以的。而且推荐的广告还是很符合内容的。不过我自己就能点了。另外google adsense的要求蛮多的。开始放入网页中的时候我下载了word press的插件awesome google adsense.结果后来还是自己手工改php好看些。再也不相信那无聊的plugin了..能自己写还是自己动手吧。害我现在的网页加载速度越来越慢。有空改改…没空..咳咳…就这样吧。</p>\n"},{"layout":"post","title":"eucalyptus ssh can not login solution","date":"2011-05-12T16:00:00.000Z","wordpress_id":413,"comments":1,"_content":"<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_rich_snippet_type\" content=\"none\" />\n<meta name=\"views\" content=\"274\" />\nI used\n<blockquote>euca-describle-keypairs</blockquote>\nto see the password first. If there is no password \"aa\",\nthen use the following command.\n<blockquote>euca-add-keypair aa > my.private</blockquote>\nelse delete password \"aa\" first or use another password.\n<blockquote>euca-delete-keypair aa</blockquote>\nyou should change my.private file access privilege, like:\n<blockquote>chmod 0600 my.private</blockquote>\nthen use euca-run-instance to run:\n<blockquote>euca-run-instance -k aa -n 1 $emi</blockquote>\nthen I have seen ip of instance.\nuse ssh to login:\n<blockquote>ssh -i my.private root@ip</blockquote>\ndone!\n\nIf you do not change my.private file access privilege, then it will report:\n<blockquote>privilege 0644 is too open.</blockquote>\nIf you chmod after the report, ssh will not let you login. So change it before you want access your instance.\n","source":"_posts/2011-05-13-eucalyptus-ssh-login.markdown","raw":"---\nlayout: post\ntitle: \"eucalyptus ssh can not login solution\"\ndate: 2011-5-13\nwordpress_id: 413\ncomments: true\ncategories: [\"eucalyptus\", \"login\", \"open-source\", \"project\", \"solution\", \"ssh\"]\n---\n<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_rich_snippet_type\" content=\"none\" />\n<meta name=\"views\" content=\"274\" />\nI used\n<blockquote>euca-describle-keypairs</blockquote>\nto see the password first. If there is no password \"aa\",\nthen use the following command.\n<blockquote>euca-add-keypair aa > my.private</blockquote>\nelse delete password \"aa\" first or use another password.\n<blockquote>euca-delete-keypair aa</blockquote>\nyou should change my.private file access privilege, like:\n<blockquote>chmod 0600 my.private</blockquote>\nthen use euca-run-instance to run:\n<blockquote>euca-run-instance -k aa -n 1 $emi</blockquote>\nthen I have seen ip of instance.\nuse ssh to login:\n<blockquote>ssh -i my.private root@ip</blockquote>\ndone!\n\nIf you do not change my.private file access privilege, then it will report:\n<blockquote>privilege 0644 is too open.</blockquote>\nIf you chmod after the report, ssh will not let you login. So change it before you want access your instance.\n","slug":"2011-05-13-eucalyptus-ssh-login","published":1,"updated":"2017-06-05T02:56:52.000Z","photos":[],"link":"","_id":"cj3jjpb9q000ozumjtn98ho47","content":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_rich_snippet_type\" content=\"none\"></p>\n<p><meta name=\"views\" content=\"274\"><br>I used</p>\n<p><blockquote>euca-describle-keypairs</blockquote><br>to see the password first. If there is no password “aa”,<br>then use the following command.</p>\n<p><blockquote>euca-add-keypair aa &gt; my.private</blockquote><br>else delete password “aa” first or use another password.</p>\n<p><blockquote>euca-delete-keypair aa</blockquote><br>you should change my.private file access privilege, like:</p>\n<p><blockquote>chmod 0600 my.private</blockquote><br>then use euca-run-instance to run:</p>\n<p><blockquote>euca-run-instance -k aa -n 1 $emi</blockquote><br>then I have seen ip of instance.<br>use ssh to login:</p>\n<p><blockquote>ssh -i my.private root@ip</blockquote><br>done!</p>\n<p>If you do not change my.private file access privilege, then it will report:</p>\n<p><blockquote>privilege 0644 is too open.</blockquote><br>If you chmod after the report, ssh will not let you login. So change it before you want access your instance.</p>\n","site":{"data":{}},"excerpt":"","more":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_rich_snippet_type\" content=\"none\"></p>\n<p><meta name=\"views\" content=\"274\"><br>I used</p>\n<p><blockquote>euca-describle-keypairs</blockquote><br>to see the password first. If there is no password “aa”,<br>then use the following command.</p>\n<p><blockquote>euca-add-keypair aa &gt; my.private</blockquote><br>else delete password “aa” first or use another password.</p>\n<p><blockquote>euca-delete-keypair aa</blockquote><br>you should change my.private file access privilege, like:</p>\n<p><blockquote>chmod 0600 my.private</blockquote><br>then use euca-run-instance to run:</p>\n<p><blockquote>euca-run-instance -k aa -n 1 $emi</blockquote><br>then I have seen ip of instance.<br>use ssh to login:</p>\n<p><blockquote>ssh -i my.private root@ip</blockquote><br>done!</p>\n<p>If you do not change my.private file access privilege, then it will report:</p>\n<p><blockquote>privilege 0644 is too open.</blockquote><br>If you chmod after the report, ssh will not let you login. So change it before you want access your instance.</p>\n"},{"layout":"post","title":"windows apache 配置虚拟主机","date":"2011-05-12T16:00:00.000Z","wordpress_id":411,"comments":1,"_content":"<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_description\" content=\"在windows中配置apache虚拟主机。采用单ip多端口映射。\" />\n<meta name=\"_su_keywords\" content=\"windows,apache,配置,虚拟,主机,多端口,单ip\" />\n<meta name=\"_su_rich_snippet_type\" content=\"none\" />\n<meta name=\"_su_title\" content=\"windows,apache,配置,虚拟,主机,多端口\" />\n<meta name=\"views\" content=\"363\" />\n如果我的只有一个ip要在同一个机器上有两个或者多个网站，那就需要端口映射了。\n例如ip为192.168.1.122 端口号为80，需要有一个网站a.com\nip为192.168.1.122 端口号为8080，需要有一个网站b.com\n在windows/system32/driver/etc中修改hosts 添加\n192.168.1.122 a.com\n192.168.1.122 b.com\n在apache的conf文件夹中，修改httpd.conf找到Listen关键词\n然后照样子修改\nListen 80\nListen 8080\n然后去conf\\extra文件夹下，修改httpd-vhosts.conf文件。添加：\n<Directory \"c:/yoursitdir\">\n   AllowOverride FileInfo\n   Order allow,deny\n   Allow from all\n</Directory>\n\n<VirtualHost *:8080>\n    ServerAdmin webmaster@a.com\n   \tDocumentRoot \"c:/yoursitedir\"\n    ServerName a.com\n    ServerAlias www.a.com\n    CustomLog \"logs/a.com-access.log\" common\n    ErrorLog \"logs/a.com-error.log\"\n</VirtualHost>\n\n<Directory \"c:/yoursitdir2\">\n   AllowOverride FileInfo\n   Order allow,deny\n   Allow from all\n</Directory>\n\n<VirtualHost *:80>\n    ServerAdmin webmaster@b.com\n    DocumentRoot \"c:/yoursitedir2\"\n    ServerName b.com\n    ServerAlias www.b.com\n    CustomLog \"logs/b.com-access.log\" common\n    ErrorLog \"logs/b.com-error.log\"\n</VirtualHost>\n注意在DocumentRoot \"c:/yoursitedir2\"和<Directory \"c:/yoursitdir2\">中路径的最后不能有\"/\".\n然后重启apache即可。\n\n","source":"_posts/2011-05-13-windowsapachepei-zhi-xu-ni-zhu-ji.markdown","raw":"---\nlayout: post\ntitle: \"windows apache 配置虚拟主机\"\ndate: 2011-5-13\nwordpress_id: 411\ncomments: true\ncategories: [\"apache\", \"my-own\", \"project\", \"windows\", \"虚拟主机\"]\n---\n<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_description\" content=\"在windows中配置apache虚拟主机。采用单ip多端口映射。\" />\n<meta name=\"_su_keywords\" content=\"windows,apache,配置,虚拟,主机,多端口,单ip\" />\n<meta name=\"_su_rich_snippet_type\" content=\"none\" />\n<meta name=\"_su_title\" content=\"windows,apache,配置,虚拟,主机,多端口\" />\n<meta name=\"views\" content=\"363\" />\n如果我的只有一个ip要在同一个机器上有两个或者多个网站，那就需要端口映射了。\n例如ip为192.168.1.122 端口号为80，需要有一个网站a.com\nip为192.168.1.122 端口号为8080，需要有一个网站b.com\n在windows/system32/driver/etc中修改hosts 添加\n192.168.1.122 a.com\n192.168.1.122 b.com\n在apache的conf文件夹中，修改httpd.conf找到Listen关键词\n然后照样子修改\nListen 80\nListen 8080\n然后去conf\\extra文件夹下，修改httpd-vhosts.conf文件。添加：\n<Directory \"c:/yoursitdir\">\n   AllowOverride FileInfo\n   Order allow,deny\n   Allow from all\n</Directory>\n\n<VirtualHost *:8080>\n    ServerAdmin webmaster@a.com\n   \tDocumentRoot \"c:/yoursitedir\"\n    ServerName a.com\n    ServerAlias www.a.com\n    CustomLog \"logs/a.com-access.log\" common\n    ErrorLog \"logs/a.com-error.log\"\n</VirtualHost>\n\n<Directory \"c:/yoursitdir2\">\n   AllowOverride FileInfo\n   Order allow,deny\n   Allow from all\n</Directory>\n\n<VirtualHost *:80>\n    ServerAdmin webmaster@b.com\n    DocumentRoot \"c:/yoursitedir2\"\n    ServerName b.com\n    ServerAlias www.b.com\n    CustomLog \"logs/b.com-access.log\" common\n    ErrorLog \"logs/b.com-error.log\"\n</VirtualHost>\n注意在DocumentRoot \"c:/yoursitedir2\"和<Directory \"c:/yoursitdir2\">中路径的最后不能有\"/\".\n然后重启apache即可。\n\n","slug":"2011-05-13-windowsapachepei-zhi-xu-ni-zhu-ji","published":1,"updated":"2017-06-05T02:56:52.000Z","photos":[],"link":"","_id":"cj3jjpb9t000qzumjas69i2wr","content":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_description\" content=\"在windows中配置apache虚拟主机。采用单ip多端口映射。\"></p>\n<p><meta name=\"_su_keywords\" content=\"windows,apache,配置,虚拟,主机,多端口,单ip\"></p>\n<p><meta name=\"_su_rich_snippet_type\" content=\"none\"></p>\n<p><meta name=\"_su_title\" content=\"windows,apache,配置,虚拟,主机,多端口\"></p>\n<p><meta name=\"views\" content=\"363\"><br>如果我的只有一个ip要在同一个机器上有两个或者多个网站，那就需要端口映射了。<br>例如ip为192.168.1.122 端口号为80，需要有一个网站a.com<br>ip为192.168.1.122 端口号为8080，需要有一个网站b.com<br>在windows/system32/driver/etc中修改hosts 添加<br>192.168.1.122 a.com<br>192.168.1.122 b.com<br>在apache的conf文件夹中，修改httpd.conf找到Listen关键词<br>然后照样子修改<br>Listen 80<br>Listen 8080<br>然后去conf\\extra文件夹下，修改httpd-vhosts.conf文件。添加：</p>\n<directory \"c:=\"\" yoursitdir\"=\"\"><br>   AllowOverride FileInfo<br>   Order allow,deny<br>   Allow from all<br></directory>\n\n<virtualhost *:8080=\"\"><br>    ServerAdmin webmaster@a.com<br>       DocumentRoot “c:/yoursitedir”<br>    ServerName a.com<br>    ServerAlias www.a.com<br>    CustomLog “logs/a.com-access.log” common<br>    ErrorLog “logs/a.com-error.log”<br></virtualhost>\n\n<directory \"c:=\"\" yoursitdir2\"=\"\"><br>   AllowOverride FileInfo<br>   Order allow,deny<br>   Allow from all<br></directory>\n\n<p><virtualhost *:80=\"\"><br>    ServerAdmin webmaster@b.com<br>    DocumentRoot “c:/yoursitedir2”<br>    ServerName b.com<br>    ServerAlias www.b.com<br>    CustomLog “logs/b.com-access.log” common<br>    ErrorLog “logs/b.com-error.log”<br></virtualhost><br>注意在DocumentRoot “c:/yoursitedir2”和<directory \"c:=\"\" yoursitdir2\"=\"\">中路径的最后不能有”/“.<br>然后重启apache即可。</directory></p>\n","site":{"data":{}},"excerpt":"","more":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_description\" content=\"在windows中配置apache虚拟主机。采用单ip多端口映射。\"></p>\n<p><meta name=\"_su_keywords\" content=\"windows,apache,配置,虚拟,主机,多端口,单ip\"></p>\n<p><meta name=\"_su_rich_snippet_type\" content=\"none\"></p>\n<p><meta name=\"_su_title\" content=\"windows,apache,配置,虚拟,主机,多端口\"></p>\n<p><meta name=\"views\" content=\"363\"><br>如果我的只有一个ip要在同一个机器上有两个或者多个网站，那就需要端口映射了。<br>例如ip为192.168.1.122 端口号为80，需要有一个网站a.com<br>ip为192.168.1.122 端口号为8080，需要有一个网站b.com<br>在windows/system32/driver/etc中修改hosts 添加<br>192.168.1.122 a.com<br>192.168.1.122 b.com<br>在apache的conf文件夹中，修改httpd.conf找到Listen关键词<br>然后照样子修改<br>Listen 80<br>Listen 8080<br>然后去conf\\extra文件夹下，修改httpd-vhosts.conf文件。添加：</p>\n<directory \"c:=\"\" yoursitdir\"=\"\"><br>   AllowOverride FileInfo<br>   Order allow,deny<br>   Allow from all<br></directory>\n\n<virtualhost *:8080=\"\"><br>    ServerAdmin webmaster@a.com<br>       DocumentRoot “c:/yoursitedir”<br>    ServerName a.com<br>    ServerAlias www.a.com<br>    CustomLog “logs/a.com-access.log” common<br>    ErrorLog “logs/a.com-error.log”<br></virtualhost>\n\n<directory \"c:=\"\" yoursitdir2\"=\"\"><br>   AllowOverride FileInfo<br>   Order allow,deny<br>   Allow from all<br></directory>\n\n<p><virtualhost *:80=\"\"><br>    ServerAdmin webmaster@b.com<br>    DocumentRoot “c:/yoursitedir2”<br>    ServerName b.com<br>    ServerAlias www.b.com<br>    CustomLog “logs/b.com-access.log” common<br>    ErrorLog “logs/b.com-error.log”<br></virtualhost><br>注意在DocumentRoot “c:/yoursitedir2”和<directory \"c:=\"\" yoursitdir2\"=\"\">中路径的最后不能有”/“.<br>然后重启apache即可。</directory></p>\n"},{"layout":"post","title":"Wordpress Error: PHP is not running solution","date":"2011-05-12T16:00:00.000Z","wordpress_id":417,"comments":1,"_content":"<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_description\" content=\"solution of an error occured in wordpress.\nError: \nError: PHP is not running\" />\n<meta name=\"_su_keywords\" content=\"Error,php,not,wordpress,solution\" />\n<meta name=\"_su_rich_snippet_type\" content=\"none\" />\n<meta name=\"_su_title\" content=\"Error,php,not,wordpress,solution\" />\n<meta name=\"views\" content=\"898\" />\n<meta name=\"_wp_old_slug\" content=\"error-php-running\" />\nwhy?\nyou don't have php? your php does not start? your apache server is shutdown?\n(uninstall all apache, mysql and php if you will install xampp. Be careful.)\nyou can download xampp software to solve your problem. But if you are sure that your php is running. put a php file \"hello.php\" into xampp/htdocs, and type:\n<blockquote>http://localhost/hello.php</blockquote>\nhello.php is like:\n\n\n\n<blockquote>\necho \"hello\";\n</blockquote>\n\n\n\nif the web page presents \"hello\", it shows your php is running.\nif you want to configure other dir to put your web, you should see my another blog, <a href=\"http://chillyc.info/project/windows-apache-%E9%85%8D%E7%BD%AE%E8%99%9A%E6%8B%9F%E4%B8%BB%E6%9C%BA\">Here</a>.\nOk, if your php is running. Then config database and wordpress.\n<a href=\"http://codex.wordpress.org/Installing_WordPress\">Here is instruction.</a>\nThen you should open brower and type:\n\n\n<blockquote>http://ip:port/wp-admin/install.php</blockquote>\n\nif you open install.php in your local computer with brower, it will report \n<blockquote>Error: PHP is not running</blockquote>\nin your brower, the url address does not prefix with \"http://\"\n","source":"_posts/2011-05-13-wordpress-error-php-running-solution.markdown","raw":"---\nlayout: post\ntitle: \"Wordpress Error: PHP is not running solution\"\ndate: 2011-5-13\nwordpress_id: 417\ncomments: true\ncategories: [\"error\", \"open-source\", \"php\", \"project\", \"solution\", \"wordpress\"]\n---\n<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_description\" content=\"solution of an error occured in wordpress.\nError: \nError: PHP is not running\" />\n<meta name=\"_su_keywords\" content=\"Error,php,not,wordpress,solution\" />\n<meta name=\"_su_rich_snippet_type\" content=\"none\" />\n<meta name=\"_su_title\" content=\"Error,php,not,wordpress,solution\" />\n<meta name=\"views\" content=\"898\" />\n<meta name=\"_wp_old_slug\" content=\"error-php-running\" />\nwhy?\nyou don't have php? your php does not start? your apache server is shutdown?\n(uninstall all apache, mysql and php if you will install xampp. Be careful.)\nyou can download xampp software to solve your problem. But if you are sure that your php is running. put a php file \"hello.php\" into xampp/htdocs, and type:\n<blockquote>http://localhost/hello.php</blockquote>\nhello.php is like:\n\n\n\n<blockquote>\necho \"hello\";\n</blockquote>\n\n\n\nif the web page presents \"hello\", it shows your php is running.\nif you want to configure other dir to put your web, you should see my another blog, <a href=\"http://chillyc.info/project/windows-apache-%E9%85%8D%E7%BD%AE%E8%99%9A%E6%8B%9F%E4%B8%BB%E6%9C%BA\">Here</a>.\nOk, if your php is running. Then config database and wordpress.\n<a href=\"http://codex.wordpress.org/Installing_WordPress\">Here is instruction.</a>\nThen you should open brower and type:\n\n\n<blockquote>http://ip:port/wp-admin/install.php</blockquote>\n\nif you open install.php in your local computer with brower, it will report \n<blockquote>Error: PHP is not running</blockquote>\nin your brower, the url address does not prefix with \"http://\"\n","slug":"2011-05-13-wordpress-error-php-running-solution","published":1,"updated":"2017-06-05T02:56:52.000Z","photos":[],"link":"","_id":"cj3jjpb9y000szumjet0ufvnt","content":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_description\" content=\"solution of an error occured in wordpress.\nError: \nError: PHP is not running\"></p>\n<p><meta name=\"_su_keywords\" content=\"Error,php,not,wordpress,solution\"></p>\n<p><meta name=\"_su_rich_snippet_type\" content=\"none\"></p>\n<p><meta name=\"_su_title\" content=\"Error,php,not,wordpress,solution\"></p>\n<p><meta name=\"views\" content=\"898\"></p>\n<p><meta name=\"_wp_old_slug\" content=\"error-php-running\"><br>why?<br>you don’t have php? your php does not start? your apache server is shutdown?<br>(uninstall all apache, mysql and php if you will install xampp. Be careful.)<br>you can download xampp software to solve your problem. But if you are sure that your php is running. put a php file “hello.php” into xampp/htdocs, and type:</p>\n<blockquote><a href=\"http://localhost/hello.php\" target=\"_blank\" rel=\"external\">http://localhost/hello.php</a></blockquote><br>hello.php is like:<br><br><br><br><blockquote><br>echo “hello”;<br></blockquote>\n\n\n\n<p>if the web page presents “hello”, it shows your php is running.<br>if you want to configure other dir to put your web, you should see my another blog, <a href=\"http://chillyc.info/project/windows-apache-%E9%85%8D%E7%BD%AE%E8%99%9A%E6%8B%9F%E4%B8%BB%E6%9C%BA\">Here</a>.<br>Ok, if your php is running. Then config database and wordpress.<br><a href=\"http://codex.wordpress.org/Installing_WordPress\" target=\"_blank\" rel=\"external\">Here is instruction.</a><br>Then you should open brower and type:</p>\n<blockquote><a href=\"http://ip:port/wp-admin/install.php\" target=\"_blank\" rel=\"external\">http://ip:port/wp-admin/install.php</a></blockquote>\n\n<p>if you open install.php in your local computer with brower, it will report </p>\n<p><blockquote>Error: PHP is not running</blockquote><br>in your brower, the url address does not prefix with “http://“</p>\n","site":{"data":{}},"excerpt":"","more":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_description\" content=\"solution of an error occured in wordpress.\nError: \nError: PHP is not running\"></p>\n<p><meta name=\"_su_keywords\" content=\"Error,php,not,wordpress,solution\"></p>\n<p><meta name=\"_su_rich_snippet_type\" content=\"none\"></p>\n<p><meta name=\"_su_title\" content=\"Error,php,not,wordpress,solution\"></p>\n<p><meta name=\"views\" content=\"898\"></p>\n<p><meta name=\"_wp_old_slug\" content=\"error-php-running\"><br>why?<br>you don’t have php? your php does not start? your apache server is shutdown?<br>(uninstall all apache, mysql and php if you will install xampp. Be careful.)<br>you can download xampp software to solve your problem. But if you are sure that your php is running. put a php file “hello.php” into xampp/htdocs, and type:</p>\n<blockquote><a href=\"http://localhost/hello.php\" target=\"_blank\" rel=\"external\">http://localhost/hello.php</a></blockquote><br>hello.php is like:<br><br><br><br><blockquote><br>echo “hello”;<br></blockquote>\n\n\n\n<p>if the web page presents “hello”, it shows your php is running.<br>if you want to configure other dir to put your web, you should see my another blog, <a href=\"http://chillyc.info/project/windows-apache-%E9%85%8D%E7%BD%AE%E8%99%9A%E6%8B%9F%E4%B8%BB%E6%9C%BA\">Here</a>.<br>Ok, if your php is running. Then config database and wordpress.<br><a href=\"http://codex.wordpress.org/Installing_WordPress\" target=\"_blank\" rel=\"external\">Here is instruction.</a><br>Then you should open brower and type:</p>\n<blockquote><a href=\"http://ip:port/wp-admin/install.php\" target=\"_blank\" rel=\"external\">http://ip:port/wp-admin/install.php</a></blockquote>\n\n<p>if you open install.php in your local computer with brower, it will report </p>\n<p><blockquote>Error: PHP is not running</blockquote><br>in your brower, the url address does not prefix with “http://“</p>\n"},{"layout":"post","title":"blessing","date":"2011-05-18T16:00:00.000Z","wordpress_id":426,"comments":1,"_content":"<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_description\" content=\"blessing in sqlite\" />\n<meta name=\"_su_keywords\" content=\"blessing\" />\n<meta name=\"_su_rich_snippet_type\" content=\"none\" />\n<meta name=\"_su_title\" content=\"blessing\" />\n<meta name=\"views\" content=\"225\" />\ntoday, I have see a blessing in SQLite：\n\n\n<blockquote>May you do good and not evil.\n May you find forgiveness for yourself and forgive others.\n May you share freely, never taking more than you give.</blockquote>\n\nGood!\n","source":"_posts/2011-05-19-blessing.markdown","raw":"---\nlayout: post\ntitle: \"blessing\"\ndate: 2011-5-19\nwordpress_id: 426\ncomments: true\ncategories: [\"blessing\", \"see-hear\", \"sqlite\"]\n---\n<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_description\" content=\"blessing in sqlite\" />\n<meta name=\"_su_keywords\" content=\"blessing\" />\n<meta name=\"_su_rich_snippet_type\" content=\"none\" />\n<meta name=\"_su_title\" content=\"blessing\" />\n<meta name=\"views\" content=\"225\" />\ntoday, I have see a blessing in SQLite：\n\n\n<blockquote>May you do good and not evil.\n May you find forgiveness for yourself and forgive others.\n May you share freely, never taking more than you give.</blockquote>\n\nGood!\n","slug":"2011-05-19-blessing","published":1,"updated":"2017-06-05T02:56:52.000Z","photos":[],"link":"","_id":"cj3jjpba2000uzumjeznkwkfi","content":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_description\" content=\"blessing in sqlite\"></p>\n<p><meta name=\"_su_keywords\" content=\"blessing\"></p>\n<p><meta name=\"_su_rich_snippet_type\" content=\"none\"></p>\n<p><meta name=\"_su_title\" content=\"blessing\"></p>\n<p><meta name=\"views\" content=\"225\"><br>today, I have see a blessing in SQLite：</p>\n<blockquote>May you do good and not evil.<br> May you find forgiveness for yourself and forgive others.<br> May you share freely, never taking more than you give.</blockquote>\n\n<p>Good!</p>\n","site":{"data":{}},"excerpt":"","more":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_description\" content=\"blessing in sqlite\"></p>\n<p><meta name=\"_su_keywords\" content=\"blessing\"></p>\n<p><meta name=\"_su_rich_snippet_type\" content=\"none\"></p>\n<p><meta name=\"_su_title\" content=\"blessing\"></p>\n<p><meta name=\"views\" content=\"225\"><br>today, I have see a blessing in SQLite：</p>\n<blockquote>May you do good and not evil.<br> May you find forgiveness for yourself and forgive others.<br> May you share freely, never taking more than you give.</blockquote>\n\n<p>Good!</p>\n"},{"layout":"post","title":"加勒比海盗4","date":"2011-05-21T16:00:00.000Z","wordpress_id":428,"comments":1,"_content":"<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_description\" content=\"加勒比海盗4影评和赏析\" />\n<meta name=\"_su_keywords\" content=\"加勒比海盗4,影评,赏析\" />\n<meta name=\"_su_rich_snippet_type\" content=\"none\" />\n<meta name=\"_su_title\" content=\"加勒比海盗 4\" />\n<meta name=\"views\" content=\"168\" />\n   昨天和宝一起去影院看了加勒比海盗4.3D的效果，其实我觉得..只有字幕的效果出来了。前面的场面比较无聊..只有海上航行时才有点意思。所以这才是海盗片，如果陆地上也有这种效果的话，那就是山贼片了。主角也不是杰克船长，而是王麻子了。\n   最简单的主题还是恶人game over.不过加勒比的定义是只有最恶的人才会game over.杰克其实根本就不是海盗，充其量只能说是旅者。我觉得这个系列的片子应该叫“国家地理”什么的...不过这部片子还是充满了诙谐、紧张和友情等等事情。不过个人觉得还是比3差些...\n   两个半小时的电影最后也只是记住了最后一句话：活在当下！\n","source":"_posts/2011-05-22-jia-le-bi-hai-dao-4.markdown","raw":"---\nlayout: post\ntitle: \"加勒比海盗4\"\ndate: 2011-5-22\nwordpress_id: 428\ncomments: true\ncategories: [\"movie\", \"see-hear\"]\n---\n<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_description\" content=\"加勒比海盗4影评和赏析\" />\n<meta name=\"_su_keywords\" content=\"加勒比海盗4,影评,赏析\" />\n<meta name=\"_su_rich_snippet_type\" content=\"none\" />\n<meta name=\"_su_title\" content=\"加勒比海盗 4\" />\n<meta name=\"views\" content=\"168\" />\n   昨天和宝一起去影院看了加勒比海盗4.3D的效果，其实我觉得..只有字幕的效果出来了。前面的场面比较无聊..只有海上航行时才有点意思。所以这才是海盗片，如果陆地上也有这种效果的话，那就是山贼片了。主角也不是杰克船长，而是王麻子了。\n   最简单的主题还是恶人game over.不过加勒比的定义是只有最恶的人才会game over.杰克其实根本就不是海盗，充其量只能说是旅者。我觉得这个系列的片子应该叫“国家地理”什么的...不过这部片子还是充满了诙谐、紧张和友情等等事情。不过个人觉得还是比3差些...\n   两个半小时的电影最后也只是记住了最后一句话：活在当下！\n","slug":"2011-05-22-jia-le-bi-hai-dao-4","published":1,"updated":"2017-06-05T02:56:52.000Z","photos":[],"link":"","_id":"cj3jjpba7000wzumjm6g4wsgq","content":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_description\" content=\"加勒比海盗4影评和赏析\"></p>\n<p><meta name=\"_su_keywords\" content=\"加勒比海盗4,影评,赏析\"></p>\n<p><meta name=\"_su_rich_snippet_type\" content=\"none\"></p>\n<p><meta name=\"_su_title\" content=\"加勒比海盗 4\"></p>\n<p><meta name=\"views\" content=\"168\"><br>   昨天和宝一起去影院看了加勒比海盗4.3D的效果，其实我觉得..只有字幕的效果出来了。前面的场面比较无聊..只有海上航行时才有点意思。所以这才是海盗片，如果陆地上也有这种效果的话，那就是山贼片了。主角也不是杰克船长，而是王麻子了。<br>   最简单的主题还是恶人game over.不过加勒比的定义是只有最恶的人才会game over.杰克其实根本就不是海盗，充其量只能说是旅者。我觉得这个系列的片子应该叫“国家地理”什么的…不过这部片子还是充满了诙谐、紧张和友情等等事情。不过个人觉得还是比3差些…<br>   两个半小时的电影最后也只是记住了最后一句话：活在当下！</p>\n","site":{"data":{}},"excerpt":"","more":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_description\" content=\"加勒比海盗4影评和赏析\"></p>\n<p><meta name=\"_su_keywords\" content=\"加勒比海盗4,影评,赏析\"></p>\n<p><meta name=\"_su_rich_snippet_type\" content=\"none\"></p>\n<p><meta name=\"_su_title\" content=\"加勒比海盗 4\"></p>\n<p><meta name=\"views\" content=\"168\"><br>   昨天和宝一起去影院看了加勒比海盗4.3D的效果，其实我觉得..只有字幕的效果出来了。前面的场面比较无聊..只有海上航行时才有点意思。所以这才是海盗片，如果陆地上也有这种效果的话，那就是山贼片了。主角也不是杰克船长，而是王麻子了。<br>   最简单的主题还是恶人game over.不过加勒比的定义是只有最恶的人才会game over.杰克其实根本就不是海盗，充其量只能说是旅者。我觉得这个系列的片子应该叫“国家地理”什么的…不过这部片子还是充满了诙谐、紧张和友情等等事情。不过个人觉得还是比3差些…<br>   两个半小时的电影最后也只是记住了最后一句话：活在当下！</p>\n"},{"layout":"post","title":"昨日出行","date":"2011-05-21T16:00:00.000Z","wordpress_id":431,"comments":1,"_content":"<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_description\" content=\"呷哺呷哺吃饭经验。\" />\n<meta name=\"_su_rich_snippet_type\" content=\"none\" />\n<meta name=\"_su_title\" content=\"呷哺呷哺\" />\n<meta name=\"views\" content=\"202\" />\n昨天出行顺便看了下加勒比海盗的电影，也顺便吃了下呷哺呷哺。和宝一起点了一大堆东西..最后全部扫光。经验总结：羊肉等带有膻味的东西还是要到最后放进去。面条还是要宝来亲自下才行。昨天宝的hello kitty终于派上用场了，于是免费喝了一杯饮料。以后...全部点面好了...有好吃又节约...\n","source":"_posts/2011-05-22-zuo-ri-chu-xing.markdown","raw":"---\nlayout: post\ntitle: \"昨日出行\"\ndate: 2011-5-22\nwordpress_id: 431\ncomments: true\ncategories: [\"eat\", \"see-hear\"]\n---\n<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_description\" content=\"呷哺呷哺吃饭经验。\" />\n<meta name=\"_su_rich_snippet_type\" content=\"none\" />\n<meta name=\"_su_title\" content=\"呷哺呷哺\" />\n<meta name=\"views\" content=\"202\" />\n昨天出行顺便看了下加勒比海盗的电影，也顺便吃了下呷哺呷哺。和宝一起点了一大堆东西..最后全部扫光。经验总结：羊肉等带有膻味的东西还是要到最后放进去。面条还是要宝来亲自下才行。昨天宝的hello kitty终于派上用场了，于是免费喝了一杯饮料。以后...全部点面好了...有好吃又节约...\n","slug":"2011-05-22-zuo-ri-chu-xing","published":1,"updated":"2017-06-05T02:56:52.000Z","photos":[],"link":"","_id":"cj3jjpbab000yzumjcuwwyueh","content":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_description\" content=\"呷哺呷哺吃饭经验。\"></p>\n<p><meta name=\"_su_rich_snippet_type\" content=\"none\"></p>\n<p><meta name=\"_su_title\" content=\"呷哺呷哺\"></p>\n<p><meta name=\"views\" content=\"202\"><br>昨天出行顺便看了下加勒比海盗的电影，也顺便吃了下呷哺呷哺。和宝一起点了一大堆东西..最后全部扫光。经验总结：羊肉等带有膻味的东西还是要到最后放进去。面条还是要宝来亲自下才行。昨天宝的hello kitty终于派上用场了，于是免费喝了一杯饮料。以后…全部点面好了…有好吃又节约…</p>\n","site":{"data":{}},"excerpt":"","more":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_description\" content=\"呷哺呷哺吃饭经验。\"></p>\n<p><meta name=\"_su_rich_snippet_type\" content=\"none\"></p>\n<p><meta name=\"_su_title\" content=\"呷哺呷哺\"></p>\n<p><meta name=\"views\" content=\"202\"><br>昨天出行顺便看了下加勒比海盗的电影，也顺便吃了下呷哺呷哺。和宝一起点了一大堆东西..最后全部扫光。经验总结：羊肉等带有膻味的东西还是要到最后放进去。面条还是要宝来亲自下才行。昨天宝的hello kitty终于派上用场了，于是免费喝了一杯饮料。以后…全部点面好了…有好吃又节约…</p>\n"},{"layout":"post","title":"Page Rank checker","date":"2011-06-01T16:00:00.000Z","wordpress_id":436,"comments":1,"_content":"<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_rich_snippet_type\" content=\"none\" />\n<meta name=\"views\" content=\"181\" />\n<meta name=\"_su_description\" content=\"check page rank\" />\n<meta name=\"_su_title\" content=\"pageRank\" />\n<div style=\"text-align:center;\">\n<table cellspacing=\"1\" style=\"margin:10px auto 40px;width:400px;border:1px solid #DDD;text-align:center;\">\n<tbody>\n<tr>\n<td style=\"background:#D1FFA4;vertical-align:middle;\">\n<p style=\"font-size:11px;font-family:Verdana;margin:0px;padding:2px;color:#666;\"><strong>Check Page Rank of your Web site pages instantly:</strong></p>\n</td>\n</tr>\n<form action=\"http://www.prchecker.info/check_page_rank.php\" method=\"post\" style=\"margin:0px;padding:0px;\"></form>\n<tr>\n<td style=\"border:1px solid #CCC;padding:10px;background:#DDD;\">\n<input type=\"hidden\" name=\"action\" value=\"docheck\">\n<input type=\"text\" value=\"http://\" name=\"urlo\" maxlength=\"150\" style=\"width:250px;padding:1px 2px 2px 3px;margin-right:10px;font-size:13px;font-family:Arial;\">\n<input type=\"submit\" name=\"submit\" value=\" Check PR \" style=\"width:80px;font-size:11px;font-family:Arial;padding:1px;\"></td>\n</tr>\n<tr>\n<td>\n<p style=\"margin:0px;padding:3px 0px 1px 0px;color:#AAA;font-size:9px;font-family:Verdana;\">This page rank checking tool is powered by <a href=\"http://www.prchecker.info/\" target=\"_blank\">Page Rank Checker</a> service</p>\n</td>\n</tr>\n</tbody>\n</table>\n</div>\nI have found this useful tool to check PageRank.\nThe rank of my blog is :\n<a href=\"http://www.prchecker.info/\" title=\"PageRank Checking Icon\" target=\"_blank\">\n<img src=\"http://pr.prchecker.info/getpr.php?codex=aHR0cDovL2NoaWxseWMuaW5mbw==&amp;tag=1\" alt=\"PageRank Checking Icon\" style=\"border:0;\"></a>\n","source":"_posts/2011-06-02-page-rank-checker.markdown","raw":"---\nlayout: post\ntitle: \"Page Rank checker\"\ndate: 2011-6-2\nwordpress_id: 436\ncomments: true\ncategories: [\"check\", \"pagerank\", \"see-hear\"]\n---\n<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_rich_snippet_type\" content=\"none\" />\n<meta name=\"views\" content=\"181\" />\n<meta name=\"_su_description\" content=\"check page rank\" />\n<meta name=\"_su_title\" content=\"pageRank\" />\n<div style=\"text-align:center;\">\n<table cellspacing=\"1\" style=\"margin:10px auto 40px;width:400px;border:1px solid #DDD;text-align:center;\">\n<tbody>\n<tr>\n<td style=\"background:#D1FFA4;vertical-align:middle;\">\n<p style=\"font-size:11px;font-family:Verdana;margin:0px;padding:2px;color:#666;\"><strong>Check Page Rank of your Web site pages instantly:</strong></p>\n</td>\n</tr>\n<form action=\"http://www.prchecker.info/check_page_rank.php\" method=\"post\" style=\"margin:0px;padding:0px;\"></form>\n<tr>\n<td style=\"border:1px solid #CCC;padding:10px;background:#DDD;\">\n<input type=\"hidden\" name=\"action\" value=\"docheck\">\n<input type=\"text\" value=\"http://\" name=\"urlo\" maxlength=\"150\" style=\"width:250px;padding:1px 2px 2px 3px;margin-right:10px;font-size:13px;font-family:Arial;\">\n<input type=\"submit\" name=\"submit\" value=\" Check PR \" style=\"width:80px;font-size:11px;font-family:Arial;padding:1px;\"></td>\n</tr>\n<tr>\n<td>\n<p style=\"margin:0px;padding:3px 0px 1px 0px;color:#AAA;font-size:9px;font-family:Verdana;\">This page rank checking tool is powered by <a href=\"http://www.prchecker.info/\" target=\"_blank\">Page Rank Checker</a> service</p>\n</td>\n</tr>\n</tbody>\n</table>\n</div>\nI have found this useful tool to check PageRank.\nThe rank of my blog is :\n<a href=\"http://www.prchecker.info/\" title=\"PageRank Checking Icon\" target=\"_blank\">\n<img src=\"http://pr.prchecker.info/getpr.php?codex=aHR0cDovL2NoaWxseWMuaW5mbw==&amp;tag=1\" alt=\"PageRank Checking Icon\" style=\"border:0;\"></a>\n","slug":"2011-06-02-page-rank-checker","published":1,"updated":"2017-06-05T02:56:52.000Z","photos":[],"link":"","_id":"cj3jjpbai0010zumj832jatxf","content":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_rich_snippet_type\" content=\"none\"></p>\n<p><meta name=\"views\" content=\"181\"></p>\n<p><meta name=\"_su_description\" content=\"check page rank\"></p>\n<p><meta name=\"_su_title\" content=\"pageRank\"></p>\n<p><div style=\"text-align:center;\"></div></p>\n<p><table cellspacing=\"1\" style=\"margin:10px auto 40px;width:400px;border:1px solid #DDD;text-align:center;\"></table></p>\n<p><tbody></tbody></p>\n<p><tr></tr></p>\n<p><td style=\"background:#D1FFA4;vertical-align:middle;\"></td></p>\n<p></p><p style=\"font-size:11px;font-family:Verdana;margin:0px;padding:2px;color:#666;\"><strong>Check Page Rank of your Web site pages instantly:</strong></p><br><br><p></p>\n<p><form action=\"http://www.prchecker.info/check_page_rank.php\" method=\"post\" style=\"margin:0px;padding:0px;\"></form></p>\n<p><tr></tr></p>\n<p><td style=\"border:1px solid #CCC;padding:10px;background:#DDD;\"></td></p>\n<p><input type=\"hidden\" name=\"action\" value=\"docheck\"></p>\n<p><input type=\"text\" value=\"http://\" name=\"urlo\" maxlength=\"150\" style=\"width:250px;padding:1px 2px 2px 3px;margin-right:10px;font-size:13px;font-family:Arial;\"></p>\n<p><input type=\"submit\" name=\"submit\" value=\" Check PR \" style=\"width:80px;font-size:11px;font-family:Arial;padding:1px;\"><br></p>\n<p><tr></tr></p>\n<p><td></td></p>\n<p></p><p style=\"margin:0px;padding:3px 0px 1px 0px;color:#AAA;font-size:9px;font-family:Verdana;\">This page rank checking tool is powered by <a href=\"http://www.prchecker.info/\" target=\"_blank\">Page Rank Checker</a> service</p><br><br><br><br><br><br>I have found this useful tool to check PageRank.<br>The rank of my blog is :<br><a href=\"http://www.prchecker.info/\" title=\"PageRank Checking Icon\" target=\"_blank\"><br><img src=\"http://pr.prchecker.info/getpr.php?codex=aHR0cDovL2NoaWxseWMuaW5mbw==&amp;tag=1\" alt=\"PageRank Checking Icon\" style=\"border:0;\"></a><p></p>\n","site":{"data":{}},"excerpt":"","more":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_rich_snippet_type\" content=\"none\"></p>\n<p><meta name=\"views\" content=\"181\"></p>\n<p><meta name=\"_su_description\" content=\"check page rank\"></p>\n<p><meta name=\"_su_title\" content=\"pageRank\"></p>\n<p><div style=\"text-align:center;\"></div></p>\n<p><table cellspacing=\"1\" style=\"margin:10px auto 40px;width:400px;border:1px solid #DDD;text-align:center;\"></table></p>\n<p><tbody></tbody></p>\n<p><tr></tr></p>\n<p><td style=\"background:#D1FFA4;vertical-align:middle;\"></td></p>\n<p></p><p style=\"font-size:11px;font-family:Verdana;margin:0px;padding:2px;color:#666;\"><strong>Check Page Rank of your Web site pages instantly:</strong></p><br><br><p></p>\n<p><form action=\"http://www.prchecker.info/check_page_rank.php\" method=\"post\" style=\"margin:0px;padding:0px;\"></form></p>\n<p><tr></tr></p>\n<p><td style=\"border:1px solid #CCC;padding:10px;background:#DDD;\"></td></p>\n<p><input type=\"hidden\" name=\"action\" value=\"docheck\"></p>\n<p><input type=\"text\" value=\"http://\" name=\"urlo\" maxlength=\"150\" style=\"width:250px;padding:1px 2px 2px 3px;margin-right:10px;font-size:13px;font-family:Arial;\"></p>\n<p><input type=\"submit\" name=\"submit\" value=\" Check PR \" style=\"width:80px;font-size:11px;font-family:Arial;padding:1px;\"><br></p>\n<p><tr></tr></p>\n<p><td></td></p>\n<p></p><p style=\"margin:0px;padding:3px 0px 1px 0px;color:#AAA;font-size:9px;font-family:Verdana;\">This page rank checking tool is powered by <a href=\"http://www.prchecker.info/\" target=\"_blank\">Page Rank Checker</a> service</p><br><br><br><br><br><br>I have found this useful tool to check PageRank.<br>The rank of my blog is :<br><a href=\"http://www.prchecker.info/\" title=\"PageRank Checking Icon\" target=\"_blank\"><br><img src=\"http://pr.prchecker.info/getpr.php?codex=aHR0cDovL2NoaWxseWMuaW5mbw==&amp;tag=1\" alt=\"PageRank Checking Icon\" style=\"border:0;\"></a><p></p>\n"},{"layout":"post","title":"再找找工作","date":"2011-06-26T16:00:00.000Z","wordpress_id":446,"comments":1,"_content":"<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_description\" content=\"工作,女,歧视,高薪\" />\n<meta name=\"_su_keywords\" content=\"工作,女,歧视,高薪\" />\n<meta name=\"_su_rich_snippet_type\" content=\"none\" />\n<meta name=\"_su_title\" content=\"工作,女,歧视,高薪\" />\n<meta name=\"views\" content=\"184\" />\n国内的软件业和互联网业还是很歧视女性的。一般招聘者说招点能做事的，这里暗含着就是招点男的。mm们在面试中往往表现相对柔弱，基本上面官都会判为不懂与心虚。只有强势的mm才有可能找到比较好的工作。或者本身能力不错，或者闭月羞花。否则就会打入无限等待队列。\n现在在国企，事业单位中找个北京户口的高薪工作..还是比较难的。除非是亲兵，否则带户口的就只有杂役一般的薪水。某事业单位工资少的可怜，结果还要派去荒芜人烟的地方，更诡异的是指明要年轻女性。偶猛然觉得这不是应聘，这是征婚。\n本人的北京人脉少的可怜，帮自家的mm找工作都难。真是人到用时方恨少...无奈只好继续宅了。\n","source":"_posts/2011-06-27-zai-zhao-zhao-gong-zuo.markdown","raw":"---\nlayout: post\ntitle: \"再找找工作\"\ndate: 2011-6-27\nwordpress_id: 446\ncomments: true\ncategories: [\"chinese\", \"see-hear\", \"女\", \"工作\", \"歧视\", \"高薪\"]\n---\n<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_description\" content=\"工作,女,歧视,高薪\" />\n<meta name=\"_su_keywords\" content=\"工作,女,歧视,高薪\" />\n<meta name=\"_su_rich_snippet_type\" content=\"none\" />\n<meta name=\"_su_title\" content=\"工作,女,歧视,高薪\" />\n<meta name=\"views\" content=\"184\" />\n国内的软件业和互联网业还是很歧视女性的。一般招聘者说招点能做事的，这里暗含着就是招点男的。mm们在面试中往往表现相对柔弱，基本上面官都会判为不懂与心虚。只有强势的mm才有可能找到比较好的工作。或者本身能力不错，或者闭月羞花。否则就会打入无限等待队列。\n现在在国企，事业单位中找个北京户口的高薪工作..还是比较难的。除非是亲兵，否则带户口的就只有杂役一般的薪水。某事业单位工资少的可怜，结果还要派去荒芜人烟的地方，更诡异的是指明要年轻女性。偶猛然觉得这不是应聘，这是征婚。\n本人的北京人脉少的可怜，帮自家的mm找工作都难。真是人到用时方恨少...无奈只好继续宅了。\n","slug":"2011-06-27-zai-zhao-zhao-gong-zuo","published":1,"updated":"2017-06-05T02:56:52.000Z","photos":[],"link":"","_id":"cj3jjpbak0012zumjwcu47ftd","content":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_description\" content=\"工作,女,歧视,高薪\"></p>\n<p><meta name=\"_su_keywords\" content=\"工作,女,歧视,高薪\"></p>\n<p><meta name=\"_su_rich_snippet_type\" content=\"none\"></p>\n<p><meta name=\"_su_title\" content=\"工作,女,歧视,高薪\"></p>\n<p><meta name=\"views\" content=\"184\"><br>国内的软件业和互联网业还是很歧视女性的。一般招聘者说招点能做事的，这里暗含着就是招点男的。mm们在面试中往往表现相对柔弱，基本上面官都会判为不懂与心虚。只有强势的mm才有可能找到比较好的工作。或者本身能力不错，或者闭月羞花。否则就会打入无限等待队列。<br>现在在国企，事业单位中找个北京户口的高薪工作..还是比较难的。除非是亲兵，否则带户口的就只有杂役一般的薪水。某事业单位工资少的可怜，结果还要派去荒芜人烟的地方，更诡异的是指明要年轻女性。偶猛然觉得这不是应聘，这是征婚。<br>本人的北京人脉少的可怜，帮自家的mm找工作都难。真是人到用时方恨少…无奈只好继续宅了。</p>\n","site":{"data":{}},"excerpt":"","more":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_description\" content=\"工作,女,歧视,高薪\"></p>\n<p><meta name=\"_su_keywords\" content=\"工作,女,歧视,高薪\"></p>\n<p><meta name=\"_su_rich_snippet_type\" content=\"none\"></p>\n<p><meta name=\"_su_title\" content=\"工作,女,歧视,高薪\"></p>\n<p><meta name=\"views\" content=\"184\"><br>国内的软件业和互联网业还是很歧视女性的。一般招聘者说招点能做事的，这里暗含着就是招点男的。mm们在面试中往往表现相对柔弱，基本上面官都会判为不懂与心虚。只有强势的mm才有可能找到比较好的工作。或者本身能力不错，或者闭月羞花。否则就会打入无限等待队列。<br>现在在国企，事业单位中找个北京户口的高薪工作..还是比较难的。除非是亲兵，否则带户口的就只有杂役一般的薪水。某事业单位工资少的可怜，结果还要派去荒芜人烟的地方，更诡异的是指明要年轻女性。偶猛然觉得这不是应聘，这是征婚。<br>本人的北京人脉少的可怜，帮自家的mm找工作都难。真是人到用时方恨少…无奈只好继续宅了。</p>\n"},{"layout":"post","title":"找房记","date":"2011-06-26T16:00:00.000Z","wordpress_id":443,"comments":1,"_content":"<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_description\" content=\"中介,找房,房源,黑,价格\" />\n<meta name=\"_su_keywords\" content=\"中介,找房,房源,黑,价格\" />\n<meta name=\"_su_rich_snippet_type\" content=\"none\" />\n<meta name=\"_su_title\" content=\"中介,找房,房源\" />\n<meta name=\"views\" content=\"147\" />\n租房子确实很放心。主要是一群黑中介，将房子隔了再隔。一居变两居，两居变四居。然后每一居中人还不只一个。本人没有啥洁癖，但是和很多人处一起，共用一些设备还是很不爽。另外房子给人的感觉也是非常不爽。每一间都像凶杀现场。\n中介一般在网上贴出便宜的租房，然后打电话过去说已经租没了。然后推荐一个比原来价格贵200-400的房子。这是中介的惯用手段。非常不爽的是中介都不是靠谱的人...介绍的房子自己都没有去看过。唉...还是找一个靠谱的中介。\n","source":"_posts/2011-06-27-zhao-fang-ji.markdown","raw":"---\nlayout: post\ntitle: \"找房记\"\ndate: 2011-6-27\nwordpress_id: 443\ncomments: true\ncategories: [\"see-hear\", \"中介\", \"租房\"]\n---\n<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_description\" content=\"中介,找房,房源,黑,价格\" />\n<meta name=\"_su_keywords\" content=\"中介,找房,房源,黑,价格\" />\n<meta name=\"_su_rich_snippet_type\" content=\"none\" />\n<meta name=\"_su_title\" content=\"中介,找房,房源\" />\n<meta name=\"views\" content=\"147\" />\n租房子确实很放心。主要是一群黑中介，将房子隔了再隔。一居变两居，两居变四居。然后每一居中人还不只一个。本人没有啥洁癖，但是和很多人处一起，共用一些设备还是很不爽。另外房子给人的感觉也是非常不爽。每一间都像凶杀现场。\n中介一般在网上贴出便宜的租房，然后打电话过去说已经租没了。然后推荐一个比原来价格贵200-400的房子。这是中介的惯用手段。非常不爽的是中介都不是靠谱的人...介绍的房子自己都没有去看过。唉...还是找一个靠谱的中介。\n","slug":"2011-06-27-zhao-fang-ji","published":1,"updated":"2017-06-05T02:56:52.000Z","photos":[],"link":"","_id":"cj3jjpban0014zumj9hj3eb7z","content":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_description\" content=\"中介,找房,房源,黑,价格\"></p>\n<p><meta name=\"_su_keywords\" content=\"中介,找房,房源,黑,价格\"></p>\n<p><meta name=\"_su_rich_snippet_type\" content=\"none\"></p>\n<p><meta name=\"_su_title\" content=\"中介,找房,房源\"></p>\n<p><meta name=\"views\" content=\"147\"><br>租房子确实很放心。主要是一群黑中介，将房子隔了再隔。一居变两居，两居变四居。然后每一居中人还不只一个。本人没有啥洁癖，但是和很多人处一起，共用一些设备还是很不爽。另外房子给人的感觉也是非常不爽。每一间都像凶杀现场。<br>中介一般在网上贴出便宜的租房，然后打电话过去说已经租没了。然后推荐一个比原来价格贵200-400的房子。这是中介的惯用手段。非常不爽的是中介都不是靠谱的人…介绍的房子自己都没有去看过。唉…还是找一个靠谱的中介。</p>\n","site":{"data":{}},"excerpt":"","more":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_description\" content=\"中介,找房,房源,黑,价格\"></p>\n<p><meta name=\"_su_keywords\" content=\"中介,找房,房源,黑,价格\"></p>\n<p><meta name=\"_su_rich_snippet_type\" content=\"none\"></p>\n<p><meta name=\"_su_title\" content=\"中介,找房,房源\"></p>\n<p><meta name=\"views\" content=\"147\"><br>租房子确实很放心。主要是一群黑中介，将房子隔了再隔。一居变两居，两居变四居。然后每一居中人还不只一个。本人没有啥洁癖，但是和很多人处一起，共用一些设备还是很不爽。另外房子给人的感觉也是非常不爽。每一间都像凶杀现场。<br>中介一般在网上贴出便宜的租房，然后打电话过去说已经租没了。然后推荐一个比原来价格贵200-400的房子。这是中介的惯用手段。非常不爽的是中介都不是靠谱的人…介绍的房子自己都没有去看过。唉…还是找一个靠谱的中介。</p>\n"},{"layout":"post","title":"杨梅记","date":"2011-06-28T16:00:00.000Z","wordpress_id":450,"comments":1,"_content":"<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_rich_snippet_type\" content=\"none\" />\n<meta name=\"views\" content=\"158\" />\n<meta name=\"_wp_old_slug\" content=\"杨梅\" />\n在宝家乡吃了好多的杨梅，不过杨梅易坏，一般放置一个晚上就彻底不能吃了。所以需要放入冰箱。宝家乡的杨梅颗粒较小，而京城的杨梅颗粒很大。大的杨梅其实不如小的杨梅好吃。另外杨梅里可能有蛆虫，用水泡一下，就可以挑出来。不过那些虫子貌似也无害，可以增加蛋白质。在宝家的第二天就去亲自摘了下杨梅。自己摘的杨梅更好吃些，当然也不管什么干净与否，反正吃了没病。\n刚才又改了一下自己的文章，发现语病还是很多的。难怪当初找房打中介电话时，中介问：\"你是中国人吗？\".听得我一愣一愣的..现在看来..我越来越像外国人了...当然只是像，不是的..\n","source":"_posts/2011-06-29-yang-mei-ji.markdown","raw":"---\nlayout: post\ntitle: \"杨梅记\"\ndate: 2011-6-29\nwordpress_id: 450\ncomments: true\ncategories: [\"chinese\", \"see-hear\"]\n---\n<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_rich_snippet_type\" content=\"none\" />\n<meta name=\"views\" content=\"158\" />\n<meta name=\"_wp_old_slug\" content=\"杨梅\" />\n在宝家乡吃了好多的杨梅，不过杨梅易坏，一般放置一个晚上就彻底不能吃了。所以需要放入冰箱。宝家乡的杨梅颗粒较小，而京城的杨梅颗粒很大。大的杨梅其实不如小的杨梅好吃。另外杨梅里可能有蛆虫，用水泡一下，就可以挑出来。不过那些虫子貌似也无害，可以增加蛋白质。在宝家的第二天就去亲自摘了下杨梅。自己摘的杨梅更好吃些，当然也不管什么干净与否，反正吃了没病。\n刚才又改了一下自己的文章，发现语病还是很多的。难怪当初找房打中介电话时，中介问：\"你是中国人吗？\".听得我一愣一愣的..现在看来..我越来越像外国人了...当然只是像，不是的..\n","slug":"2011-06-29-yang-mei-ji","published":1,"updated":"2017-06-05T02:56:52.000Z","photos":[],"link":"","_id":"cj3jjpbaq0016zumjffm9pcm0","content":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_rich_snippet_type\" content=\"none\"></p>\n<p><meta name=\"views\" content=\"158\"></p>\n<p><meta name=\"_wp_old_slug\" content=\"杨梅\"><br>在宝家乡吃了好多的杨梅，不过杨梅易坏，一般放置一个晚上就彻底不能吃了。所以需要放入冰箱。宝家乡的杨梅颗粒较小，而京城的杨梅颗粒很大。大的杨梅其实不如小的杨梅好吃。另外杨梅里可能有蛆虫，用水泡一下，就可以挑出来。不过那些虫子貌似也无害，可以增加蛋白质。在宝家的第二天就去亲自摘了下杨梅。自己摘的杨梅更好吃些，当然也不管什么干净与否，反正吃了没病。<br>刚才又改了一下自己的文章，发现语病还是很多的。难怪当初找房打中介电话时，中介问：”你是中国人吗？”.听得我一愣一愣的..现在看来..我越来越像外国人了…当然只是像，不是的..</p>\n","site":{"data":{}},"excerpt":"","more":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_rich_snippet_type\" content=\"none\"></p>\n<p><meta name=\"views\" content=\"158\"></p>\n<p><meta name=\"_wp_old_slug\" content=\"杨梅\"><br>在宝家乡吃了好多的杨梅，不过杨梅易坏，一般放置一个晚上就彻底不能吃了。所以需要放入冰箱。宝家乡的杨梅颗粒较小，而京城的杨梅颗粒很大。大的杨梅其实不如小的杨梅好吃。另外杨梅里可能有蛆虫，用水泡一下，就可以挑出来。不过那些虫子貌似也无害，可以增加蛋白质。在宝家的第二天就去亲自摘了下杨梅。自己摘的杨梅更好吃些，当然也不管什么干净与否，反正吃了没病。<br>刚才又改了一下自己的文章，发现语病还是很多的。难怪当初找房打中介电话时，中介问：”你是中国人吗？”.听得我一愣一愣的..现在看来..我越来越像外国人了…当然只是像，不是的..</p>\n"},{"layout":"post","title":"俏皮话转载","date":"2011-06-29T16:00:00.000Z","wordpress_id":455,"comments":1,"_content":"<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_rich_snippet_type\" content=\"none\" />\n<meta name=\"views\" content=\"142\" />\n<meta name=\"_wp_old_slug\" content=\"俏皮话转账\" />\n笑话，就笑笑吧～\ncopy from <a href=\"http://site.douban.com/widget/forum/30328/discussion/40139600/\">http://site.douban.com/widget/forum/30328/discussion/40139600/</a>\n     ●“特别能吃苦”这5个字，我想了想，我只做到了前四个。 \n\n　　●总有这样的一种人，我们称之为“井”——就是横竖都二的意思。　　 \n\n　　●我经常跳槽，国内不少城市我都待过，每当朋友问我在何处就职时，我都会说在“中国移动”。 \n\n　　●时间和婚姻都会让一个男人成熟，只是时间是小火慢熬，婚姻是大火快炒。 \n\n　　●所谓完美的婚姻就是：男人完了，女人美了。 \n\n　　●还没来得及表白，愚人节就过去了。 \n\n　　●门门功课亮红灯，照亮我的前程。 \n\n　　●看电视的时候，突然出现广告并不算可恶。真正可恶的是，漫长的广告过后，等来的却是片尾曲…… \n\n　　●因为你的“对不起”，我决定和你“没关系”。 \n\n　　●最快变成哲学家的是老公，最快变成经济学家的是老婆，最快变成战略学家的是丈母娘。 \n\n　　●婚前把疤痕看成酒窝，婚后把酒窝看成疤痕。 　　 \n\n　　●就算再冷，别人裹成粽子，咱们也要把自己打扮成甜筒！ \n\n　　●有的人，做面膜的时候，比真人好看多了。 \n\n　　●人最值钱的就是知道自己几斤几两，没个分量你往大秤上站站试试？那个秤砣动都不动。 \n\n\n　　●等我有了钱，就买两辆宝马在前面开路，我在后面骑自行车上班。 \n　　●我发誓再上网就砍手，结果发现自己是千手观音。 \n\n　　●谁耽误我一阵子，我让他后悔一辈子。 \n\n　　●当你身上的装饰物的价值超过了你内在的价值，你就时尚了。 \n\n　　●小时候写作文，学会了撒谎；大学时写论文，学会了抄袭；工作后写报告，学会了装腔；恋爱时写情书，学会了矫情；老年时写自传，学会了包装。 \n\n　　●不要对我太好，让我分不清你是爱情还是友情。 \n\n　　●QQ的在线率越高，证明这个人越寂寞。 \n\n　　●距离产生的不是美，是小三。 \n\n　　●有时就像是一场俄罗斯方块的游戏，不停地有不规则的事件突如其来地掉下来，你必须在很短的时间内判断该把它们放在哪里。最糟糕的是，有时还没想好放哪里，新的麻烦又接踵而至了。 \n\n　　●我现在拿得起放不下的只有筷子。 \n\n　　●不要说你不认识我，刚好我也不认识你，真是缘分啊！ \n\n　　●过去叫开会现在叫论坛，过去叫单位现在叫机构，过去叫集体现在叫团队，过去叫目录现在叫菜单，过去叫计划现在叫策划，过去叫痛快现在叫爽歪歪，过去叫关系密切现在叫零距离接触。 \n\n　　●20岁的男人是期货、30岁的男人是抢手货、40岁的男人是现货、50岁的男人是跳楼货。 \n\n　　●旅游的十大“看头”：到北京看“城头”；到西安看“坟头”；到上海看“人头”；到苏州看“桥头”；到天津看“码头”；到桂林看“山头”；到南京看“石头”；到河南看“光头”；到海南看“浪头”；到杭州看“丫头” 。 \n\n●曾以为我想要的是职业，结果发现我只是想要工资。 \n　　●不成熟男人的标志是可以为了理想壮烈地牺牲，成熟男人的标志是可以为了理想卑贱地活着。 \n\n　　●日久才见人心不古，路遥方知马力不足。 \n\n　　●不要恶狠狠地回顾过去，也不要怕兮兮地向往未来，而是要小心翼翼地过好现在。 \n\n　　●如果你看中他的钱，在适当的时候要到这钱才是你的。打铁要趁热，要钱要趁爱！ \n\n　　●如果坦白是一种伤害，我选择谎言。如果谎言也是伤害，我选择沉默。 \n\n　　●在一起的时候需要两个人做决定，分手的时候只需要一个人…… \n\n　　●看懂一件事，长大了；看清一件事，开窍了；看破一件事，理性了；看透一件事，成熟了；看穿一件事，到头了；看淡一件事，放下了。 \n\n　　●再过一百年，我也会长成参天大葱。 \n\n　　●你说你以后可能会和不喜欢的人结婚，没关系，我愿意做那个你不喜欢的人。 \n\n　　●猛一看你不怎么样，仔细一看，还不如猛地一看。 \n\n　　●为啥我爸是李铁，真是恨铁不成钢。 \n\n　　●人生最痛苦的事是肚子里没货，人生最最痛苦的事是肚子里就那么点儿货。 \n\n　　●当你想两肋插刀的时候，却只有一把刀。 \n\n　　●生活是花8个小时去买菜，然后做一顿饭；而生存是花8分钟买包方便面吃掉。\n\n　　●学习这事儿给我带来的基本上全是耻辱。\n\n　　●一听英语课基本就是强撑，就是那种魂魄已经散去，但是眼睛还得睁着，有一次英语课分在第一排，离老师最近。一开始是听力考试，老师就在那看着我，我就装着很认真的写，一边听一边填ABCD，我觉得表演的已经很好了，用余光看见老师还在关注我，就装着思考，装着装着卷子都快写完了。突然听到一句：试音结束，现在听力考试正式开始。 \n\n     ●一高中同学的，这货是人才啊~！有次语文考试，有道题是这样说的…山对海说：“你是如此的宽广~如此的澎湃~如此的博大…（诸如此类夸海的）”然后下面的填空就是海对山说：（ ）。大家都及尽所能发挥自己的想象，来形容山是多么的伟大。结果，卷子发下来一看，这货在空格里这着：“谢谢。”难道还要海对山说不客气么.. \n\n     ●唐僧一觉醒来，发现悟空暴死在地，旁边八戒和沙僧痛哭不已，唐僧问道：“悟空怎么死了？”八戒边哭边说道：“师傅，你昨晚夜里睡觉说梦话，念了一晚上紧箍咒！”\n\n     ●表白是门技术活：南理工两风云学长同时向一学姐表白，学姐淡定道：“你们周游世界后再回来跟我说。”一学长立马收拾包裹准备出发，另一学长绕学姐转了一圈，说出历史性的一句：“you are my world.”瞬间秒杀……\n\n     ●英语老师给我们讲她监考的事。。。。当时她在讲台上坐着，看到下面一名男生鬼鬼祟祟，一只手在上面写，一只手在下面动，嘴里还念念有词。。。老师肯定以为他在作弊，走过去一看，这哥们手里赫然拿着一串佛珠。。。老师当场就凌乱了。。。\n\n     ●晚饭后老爸烟瘾来犯，趁老妈洗碗时门口偷吸，也许是抽的太忘情了，最后一口还没吐完就进门，正好被老妈看到… \n      老妈：你干吗呢！ \n      老爸：我没吸烟！！！ \n      老妈：那你吐的是什么！ \n      老爸：浮云……\n\n     ●上高中时候学校里一直有个牛逼的传说：一哥们去网吧玩扫雷刷了一夜；更牛逼的是，另一个哥们看他扫雷扫了一夜……\n\n     ●考驾照上路时不管遇到什么情况都要像考官报告，朋友去考试时遇到前面一条狗，那家伙有点紧张，然后，脱口而出，报告狗，前面有一条教官....... \n      然后... \n      估计就没有然后了...\n\n     ●世界上有10种人，会二进制的和不会二进制的　\n","source":"_posts/2011-06-30-qiao-pi-hua-zhuan-zai.markdown","raw":"---\nlayout: post\ntitle: \"俏皮话转载\"\ndate: 2011-6-30\nwordpress_id: 455\ncomments: true\ncategories: [\"funny\", \"funny\", \"see-hear\", \"笑\"]\n---\n<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_rich_snippet_type\" content=\"none\" />\n<meta name=\"views\" content=\"142\" />\n<meta name=\"_wp_old_slug\" content=\"俏皮话转账\" />\n笑话，就笑笑吧～\ncopy from <a href=\"http://site.douban.com/widget/forum/30328/discussion/40139600/\">http://site.douban.com/widget/forum/30328/discussion/40139600/</a>\n     ●“特别能吃苦”这5个字，我想了想，我只做到了前四个。 \n\n　　●总有这样的一种人，我们称之为“井”——就是横竖都二的意思。　　 \n\n　　●我经常跳槽，国内不少城市我都待过，每当朋友问我在何处就职时，我都会说在“中国移动”。 \n\n　　●时间和婚姻都会让一个男人成熟，只是时间是小火慢熬，婚姻是大火快炒。 \n\n　　●所谓完美的婚姻就是：男人完了，女人美了。 \n\n　　●还没来得及表白，愚人节就过去了。 \n\n　　●门门功课亮红灯，照亮我的前程。 \n\n　　●看电视的时候，突然出现广告并不算可恶。真正可恶的是，漫长的广告过后，等来的却是片尾曲…… \n\n　　●因为你的“对不起”，我决定和你“没关系”。 \n\n　　●最快变成哲学家的是老公，最快变成经济学家的是老婆，最快变成战略学家的是丈母娘。 \n\n　　●婚前把疤痕看成酒窝，婚后把酒窝看成疤痕。 　　 \n\n　　●就算再冷，别人裹成粽子，咱们也要把自己打扮成甜筒！ \n\n　　●有的人，做面膜的时候，比真人好看多了。 \n\n　　●人最值钱的就是知道自己几斤几两，没个分量你往大秤上站站试试？那个秤砣动都不动。 \n\n\n　　●等我有了钱，就买两辆宝马在前面开路，我在后面骑自行车上班。 \n　　●我发誓再上网就砍手，结果发现自己是千手观音。 \n\n　　●谁耽误我一阵子，我让他后悔一辈子。 \n\n　　●当你身上的装饰物的价值超过了你内在的价值，你就时尚了。 \n\n　　●小时候写作文，学会了撒谎；大学时写论文，学会了抄袭；工作后写报告，学会了装腔；恋爱时写情书，学会了矫情；老年时写自传，学会了包装。 \n\n　　●不要对我太好，让我分不清你是爱情还是友情。 \n\n　　●QQ的在线率越高，证明这个人越寂寞。 \n\n　　●距离产生的不是美，是小三。 \n\n　　●有时就像是一场俄罗斯方块的游戏，不停地有不规则的事件突如其来地掉下来，你必须在很短的时间内判断该把它们放在哪里。最糟糕的是，有时还没想好放哪里，新的麻烦又接踵而至了。 \n\n　　●我现在拿得起放不下的只有筷子。 \n\n　　●不要说你不认识我，刚好我也不认识你，真是缘分啊！ \n\n　　●过去叫开会现在叫论坛，过去叫单位现在叫机构，过去叫集体现在叫团队，过去叫目录现在叫菜单，过去叫计划现在叫策划，过去叫痛快现在叫爽歪歪，过去叫关系密切现在叫零距离接触。 \n\n　　●20岁的男人是期货、30岁的男人是抢手货、40岁的男人是现货、50岁的男人是跳楼货。 \n\n　　●旅游的十大“看头”：到北京看“城头”；到西安看“坟头”；到上海看“人头”；到苏州看“桥头”；到天津看“码头”；到桂林看“山头”；到南京看“石头”；到河南看“光头”；到海南看“浪头”；到杭州看“丫头” 。 \n\n●曾以为我想要的是职业，结果发现我只是想要工资。 \n　　●不成熟男人的标志是可以为了理想壮烈地牺牲，成熟男人的标志是可以为了理想卑贱地活着。 \n\n　　●日久才见人心不古，路遥方知马力不足。 \n\n　　●不要恶狠狠地回顾过去，也不要怕兮兮地向往未来，而是要小心翼翼地过好现在。 \n\n　　●如果你看中他的钱，在适当的时候要到这钱才是你的。打铁要趁热，要钱要趁爱！ \n\n　　●如果坦白是一种伤害，我选择谎言。如果谎言也是伤害，我选择沉默。 \n\n　　●在一起的时候需要两个人做决定，分手的时候只需要一个人…… \n\n　　●看懂一件事，长大了；看清一件事，开窍了；看破一件事，理性了；看透一件事，成熟了；看穿一件事，到头了；看淡一件事，放下了。 \n\n　　●再过一百年，我也会长成参天大葱。 \n\n　　●你说你以后可能会和不喜欢的人结婚，没关系，我愿意做那个你不喜欢的人。 \n\n　　●猛一看你不怎么样，仔细一看，还不如猛地一看。 \n\n　　●为啥我爸是李铁，真是恨铁不成钢。 \n\n　　●人生最痛苦的事是肚子里没货，人生最最痛苦的事是肚子里就那么点儿货。 \n\n　　●当你想两肋插刀的时候，却只有一把刀。 \n\n　　●生活是花8个小时去买菜，然后做一顿饭；而生存是花8分钟买包方便面吃掉。\n\n　　●学习这事儿给我带来的基本上全是耻辱。\n\n　　●一听英语课基本就是强撑，就是那种魂魄已经散去，但是眼睛还得睁着，有一次英语课分在第一排，离老师最近。一开始是听力考试，老师就在那看着我，我就装着很认真的写，一边听一边填ABCD，我觉得表演的已经很好了，用余光看见老师还在关注我，就装着思考，装着装着卷子都快写完了。突然听到一句：试音结束，现在听力考试正式开始。 \n\n     ●一高中同学的，这货是人才啊~！有次语文考试，有道题是这样说的…山对海说：“你是如此的宽广~如此的澎湃~如此的博大…（诸如此类夸海的）”然后下面的填空就是海对山说：（ ）。大家都及尽所能发挥自己的想象，来形容山是多么的伟大。结果，卷子发下来一看，这货在空格里这着：“谢谢。”难道还要海对山说不客气么.. \n\n     ●唐僧一觉醒来，发现悟空暴死在地，旁边八戒和沙僧痛哭不已，唐僧问道：“悟空怎么死了？”八戒边哭边说道：“师傅，你昨晚夜里睡觉说梦话，念了一晚上紧箍咒！”\n\n     ●表白是门技术活：南理工两风云学长同时向一学姐表白，学姐淡定道：“你们周游世界后再回来跟我说。”一学长立马收拾包裹准备出发，另一学长绕学姐转了一圈，说出历史性的一句：“you are my world.”瞬间秒杀……\n\n     ●英语老师给我们讲她监考的事。。。。当时她在讲台上坐着，看到下面一名男生鬼鬼祟祟，一只手在上面写，一只手在下面动，嘴里还念念有词。。。老师肯定以为他在作弊，走过去一看，这哥们手里赫然拿着一串佛珠。。。老师当场就凌乱了。。。\n\n     ●晚饭后老爸烟瘾来犯，趁老妈洗碗时门口偷吸，也许是抽的太忘情了，最后一口还没吐完就进门，正好被老妈看到… \n      老妈：你干吗呢！ \n      老爸：我没吸烟！！！ \n      老妈：那你吐的是什么！ \n      老爸：浮云……\n\n     ●上高中时候学校里一直有个牛逼的传说：一哥们去网吧玩扫雷刷了一夜；更牛逼的是，另一个哥们看他扫雷扫了一夜……\n\n     ●考驾照上路时不管遇到什么情况都要像考官报告，朋友去考试时遇到前面一条狗，那家伙有点紧张，然后，脱口而出，报告狗，前面有一条教官....... \n      然后... \n      估计就没有然后了...\n\n     ●世界上有10种人，会二进制的和不会二进制的　\n","slug":"2011-06-30-qiao-pi-hua-zhuan-zai","published":1,"updated":"2017-06-05T02:56:52.000Z","photos":[],"link":"","_id":"cj3jjpbat0018zumj4sv0xwvu","content":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_rich_snippet_type\" content=\"none\"></p>\n<p><meta name=\"views\" content=\"142\"></p>\n<p><meta name=\"_wp_old_slug\" content=\"俏皮话转账\"><br>笑话，就笑笑吧～<br>copy from <a href=\"http://site.douban.com/widget/forum/30328/discussion/40139600/\" target=\"_blank\" rel=\"external\">http://site.douban.com/widget/forum/30328/discussion/40139600/</a><br>     ●“特别能吃苦”这5个字，我想了想，我只做到了前四个。 </p>\n<p>　　●总有这样的一种人，我们称之为“井”——就是横竖都二的意思。　　 </p>\n<p>　　●我经常跳槽，国内不少城市我都待过，每当朋友问我在何处就职时，我都会说在“中国移动”。 </p>\n<p>　　●时间和婚姻都会让一个男人成熟，只是时间是小火慢熬，婚姻是大火快炒。 </p>\n<p>　　●所谓完美的婚姻就是：男人完了，女人美了。 </p>\n<p>　　●还没来得及表白，愚人节就过去了。 </p>\n<p>　　●门门功课亮红灯，照亮我的前程。 </p>\n<p>　　●看电视的时候，突然出现广告并不算可恶。真正可恶的是，漫长的广告过后，等来的却是片尾曲…… </p>\n<p>　　●因为你的“对不起”，我决定和你“没关系”。 </p>\n<p>　　●最快变成哲学家的是老公，最快变成经济学家的是老婆，最快变成战略学家的是丈母娘。 </p>\n<p>　　●婚前把疤痕看成酒窝，婚后把酒窝看成疤痕。 　　 </p>\n<p>　　●就算再冷，别人裹成粽子，咱们也要把自己打扮成甜筒！ </p>\n<p>　　●有的人，做面膜的时候，比真人好看多了。 </p>\n<p>　　●人最值钱的就是知道自己几斤几两，没个分量你往大秤上站站试试？那个秤砣动都不动。 </p>\n<p>　　●等我有了钱，就买两辆宝马在前面开路，我在后面骑自行车上班。<br>　　●我发誓再上网就砍手，结果发现自己是千手观音。 </p>\n<p>　　●谁耽误我一阵子，我让他后悔一辈子。 </p>\n<p>　　●当你身上的装饰物的价值超过了你内在的价值，你就时尚了。 </p>\n<p>　　●小时候写作文，学会了撒谎；大学时写论文，学会了抄袭；工作后写报告，学会了装腔；恋爱时写情书，学会了矫情；老年时写自传，学会了包装。 </p>\n<p>　　●不要对我太好，让我分不清你是爱情还是友情。 </p>\n<p>　　●QQ的在线率越高，证明这个人越寂寞。 </p>\n<p>　　●距离产生的不是美，是小三。 </p>\n<p>　　●有时就像是一场俄罗斯方块的游戏，不停地有不规则的事件突如其来地掉下来，你必须在很短的时间内判断该把它们放在哪里。最糟糕的是，有时还没想好放哪里，新的麻烦又接踵而至了。 </p>\n<p>　　●我现在拿得起放不下的只有筷子。 </p>\n<p>　　●不要说你不认识我，刚好我也不认识你，真是缘分啊！ </p>\n<p>　　●过去叫开会现在叫论坛，过去叫单位现在叫机构，过去叫集体现在叫团队，过去叫目录现在叫菜单，过去叫计划现在叫策划，过去叫痛快现在叫爽歪歪，过去叫关系密切现在叫零距离接触。 </p>\n<p>　　●20岁的男人是期货、30岁的男人是抢手货、40岁的男人是现货、50岁的男人是跳楼货。 </p>\n<p>　　●旅游的十大“看头”：到北京看“城头”；到西安看“坟头”；到上海看“人头”；到苏州看“桥头”；到天津看“码头”；到桂林看“山头”；到南京看“石头”；到河南看“光头”；到海南看“浪头”；到杭州看“丫头” 。 </p>\n<p>●曾以为我想要的是职业，结果发现我只是想要工资。<br>　　●不成熟男人的标志是可以为了理想壮烈地牺牲，成熟男人的标志是可以为了理想卑贱地活着。 </p>\n<p>　　●日久才见人心不古，路遥方知马力不足。 </p>\n<p>　　●不要恶狠狠地回顾过去，也不要怕兮兮地向往未来，而是要小心翼翼地过好现在。 </p>\n<p>　　●如果你看中他的钱，在适当的时候要到这钱才是你的。打铁要趁热，要钱要趁爱！ </p>\n<p>　　●如果坦白是一种伤害，我选择谎言。如果谎言也是伤害，我选择沉默。 </p>\n<p>　　●在一起的时候需要两个人做决定，分手的时候只需要一个人…… </p>\n<p>　　●看懂一件事，长大了；看清一件事，开窍了；看破一件事，理性了；看透一件事，成熟了；看穿一件事，到头了；看淡一件事，放下了。 </p>\n<p>　　●再过一百年，我也会长成参天大葱。 </p>\n<p>　　●你说你以后可能会和不喜欢的人结婚，没关系，我愿意做那个你不喜欢的人。 </p>\n<p>　　●猛一看你不怎么样，仔细一看，还不如猛地一看。 </p>\n<p>　　●为啥我爸是李铁，真是恨铁不成钢。 </p>\n<p>　　●人生最痛苦的事是肚子里没货，人生最最痛苦的事是肚子里就那么点儿货。 </p>\n<p>　　●当你想两肋插刀的时候，却只有一把刀。 </p>\n<p>　　●生活是花8个小时去买菜，然后做一顿饭；而生存是花8分钟买包方便面吃掉。</p>\n<p>　　●学习这事儿给我带来的基本上全是耻辱。</p>\n<p>　　●一听英语课基本就是强撑，就是那种魂魄已经散去，但是眼睛还得睁着，有一次英语课分在第一排，离老师最近。一开始是听力考试，老师就在那看着我，我就装着很认真的写，一边听一边填ABCD，我觉得表演的已经很好了，用余光看见老师还在关注我，就装着思考，装着装着卷子都快写完了。突然听到一句：试音结束，现在听力考试正式开始。 </p>\n<pre><code>●一高中同学的，这货是人才啊~！有次语文考试，有道题是这样说的…山对海说：“你是如此的宽广~如此的澎湃~如此的博大…（诸如此类夸海的）”然后下面的填空就是海对山说：（ ）。大家都及尽所能发挥自己的想象，来形容山是多么的伟大。结果，卷子发下来一看，这货在空格里这着：“谢谢。”难道还要海对山说不客气么.. \n\n●唐僧一觉醒来，发现悟空暴死在地，旁边八戒和沙僧痛哭不已，唐僧问道：“悟空怎么死了？”八戒边哭边说道：“师傅，你昨晚夜里睡觉说梦话，念了一晚上紧箍咒！”\n\n●表白是门技术活：南理工两风云学长同时向一学姐表白，学姐淡定道：“你们周游世界后再回来跟我说。”一学长立马收拾包裹准备出发，另一学长绕学姐转了一圈，说出历史性的一句：“you are my world.”瞬间秒杀……\n\n●英语老师给我们讲她监考的事。。。。当时她在讲台上坐着，看到下面一名男生鬼鬼祟祟，一只手在上面写，一只手在下面动，嘴里还念念有词。。。老师肯定以为他在作弊，走过去一看，这哥们手里赫然拿着一串佛珠。。。老师当场就凌乱了。。。\n\n●晚饭后老爸烟瘾来犯，趁老妈洗碗时门口偷吸，也许是抽的太忘情了，最后一口还没吐完就进门，正好被老妈看到… \n 老妈：你干吗呢！ \n 老爸：我没吸烟！！！ \n 老妈：那你吐的是什么！ \n 老爸：浮云……\n\n●上高中时候学校里一直有个牛逼的传说：一哥们去网吧玩扫雷刷了一夜；更牛逼的是，另一个哥们看他扫雷扫了一夜……\n\n●考驾照上路时不管遇到什么情况都要像考官报告，朋友去考试时遇到前面一条狗，那家伙有点紧张，然后，脱口而出，报告狗，前面有一条教官....... \n 然后... \n 估计就没有然后了...\n\n●世界上有10种人，会二进制的和不会二进制的　\n</code></pre>","site":{"data":{}},"excerpt":"","more":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_rich_snippet_type\" content=\"none\"></p>\n<p><meta name=\"views\" content=\"142\"></p>\n<p><meta name=\"_wp_old_slug\" content=\"俏皮话转账\"><br>笑话，就笑笑吧～<br>copy from <a href=\"http://site.douban.com/widget/forum/30328/discussion/40139600/\" target=\"_blank\" rel=\"external\">http://site.douban.com/widget/forum/30328/discussion/40139600/</a><br>     ●“特别能吃苦”这5个字，我想了想，我只做到了前四个。 </p>\n<p>　　●总有这样的一种人，我们称之为“井”——就是横竖都二的意思。　　 </p>\n<p>　　●我经常跳槽，国内不少城市我都待过，每当朋友问我在何处就职时，我都会说在“中国移动”。 </p>\n<p>　　●时间和婚姻都会让一个男人成熟，只是时间是小火慢熬，婚姻是大火快炒。 </p>\n<p>　　●所谓完美的婚姻就是：男人完了，女人美了。 </p>\n<p>　　●还没来得及表白，愚人节就过去了。 </p>\n<p>　　●门门功课亮红灯，照亮我的前程。 </p>\n<p>　　●看电视的时候，突然出现广告并不算可恶。真正可恶的是，漫长的广告过后，等来的却是片尾曲…… </p>\n<p>　　●因为你的“对不起”，我决定和你“没关系”。 </p>\n<p>　　●最快变成哲学家的是老公，最快变成经济学家的是老婆，最快变成战略学家的是丈母娘。 </p>\n<p>　　●婚前把疤痕看成酒窝，婚后把酒窝看成疤痕。 　　 </p>\n<p>　　●就算再冷，别人裹成粽子，咱们也要把自己打扮成甜筒！ </p>\n<p>　　●有的人，做面膜的时候，比真人好看多了。 </p>\n<p>　　●人最值钱的就是知道自己几斤几两，没个分量你往大秤上站站试试？那个秤砣动都不动。 </p>\n<p>　　●等我有了钱，就买两辆宝马在前面开路，我在后面骑自行车上班。<br>　　●我发誓再上网就砍手，结果发现自己是千手观音。 </p>\n<p>　　●谁耽误我一阵子，我让他后悔一辈子。 </p>\n<p>　　●当你身上的装饰物的价值超过了你内在的价值，你就时尚了。 </p>\n<p>　　●小时候写作文，学会了撒谎；大学时写论文，学会了抄袭；工作后写报告，学会了装腔；恋爱时写情书，学会了矫情；老年时写自传，学会了包装。 </p>\n<p>　　●不要对我太好，让我分不清你是爱情还是友情。 </p>\n<p>　　●QQ的在线率越高，证明这个人越寂寞。 </p>\n<p>　　●距离产生的不是美，是小三。 </p>\n<p>　　●有时就像是一场俄罗斯方块的游戏，不停地有不规则的事件突如其来地掉下来，你必须在很短的时间内判断该把它们放在哪里。最糟糕的是，有时还没想好放哪里，新的麻烦又接踵而至了。 </p>\n<p>　　●我现在拿得起放不下的只有筷子。 </p>\n<p>　　●不要说你不认识我，刚好我也不认识你，真是缘分啊！ </p>\n<p>　　●过去叫开会现在叫论坛，过去叫单位现在叫机构，过去叫集体现在叫团队，过去叫目录现在叫菜单，过去叫计划现在叫策划，过去叫痛快现在叫爽歪歪，过去叫关系密切现在叫零距离接触。 </p>\n<p>　　●20岁的男人是期货、30岁的男人是抢手货、40岁的男人是现货、50岁的男人是跳楼货。 </p>\n<p>　　●旅游的十大“看头”：到北京看“城头”；到西安看“坟头”；到上海看“人头”；到苏州看“桥头”；到天津看“码头”；到桂林看“山头”；到南京看“石头”；到河南看“光头”；到海南看“浪头”；到杭州看“丫头” 。 </p>\n<p>●曾以为我想要的是职业，结果发现我只是想要工资。<br>　　●不成熟男人的标志是可以为了理想壮烈地牺牲，成熟男人的标志是可以为了理想卑贱地活着。 </p>\n<p>　　●日久才见人心不古，路遥方知马力不足。 </p>\n<p>　　●不要恶狠狠地回顾过去，也不要怕兮兮地向往未来，而是要小心翼翼地过好现在。 </p>\n<p>　　●如果你看中他的钱，在适当的时候要到这钱才是你的。打铁要趁热，要钱要趁爱！ </p>\n<p>　　●如果坦白是一种伤害，我选择谎言。如果谎言也是伤害，我选择沉默。 </p>\n<p>　　●在一起的时候需要两个人做决定，分手的时候只需要一个人…… </p>\n<p>　　●看懂一件事，长大了；看清一件事，开窍了；看破一件事，理性了；看透一件事，成熟了；看穿一件事，到头了；看淡一件事，放下了。 </p>\n<p>　　●再过一百年，我也会长成参天大葱。 </p>\n<p>　　●你说你以后可能会和不喜欢的人结婚，没关系，我愿意做那个你不喜欢的人。 </p>\n<p>　　●猛一看你不怎么样，仔细一看，还不如猛地一看。 </p>\n<p>　　●为啥我爸是李铁，真是恨铁不成钢。 </p>\n<p>　　●人生最痛苦的事是肚子里没货，人生最最痛苦的事是肚子里就那么点儿货。 </p>\n<p>　　●当你想两肋插刀的时候，却只有一把刀。 </p>\n<p>　　●生活是花8个小时去买菜，然后做一顿饭；而生存是花8分钟买包方便面吃掉。</p>\n<p>　　●学习这事儿给我带来的基本上全是耻辱。</p>\n<p>　　●一听英语课基本就是强撑，就是那种魂魄已经散去，但是眼睛还得睁着，有一次英语课分在第一排，离老师最近。一开始是听力考试，老师就在那看着我，我就装着很认真的写，一边听一边填ABCD，我觉得表演的已经很好了，用余光看见老师还在关注我，就装着思考，装着装着卷子都快写完了。突然听到一句：试音结束，现在听力考试正式开始。 </p>\n<pre><code>●一高中同学的，这货是人才啊~！有次语文考试，有道题是这样说的…山对海说：“你是如此的宽广~如此的澎湃~如此的博大…（诸如此类夸海的）”然后下面的填空就是海对山说：（ ）。大家都及尽所能发挥自己的想象，来形容山是多么的伟大。结果，卷子发下来一看，这货在空格里这着：“谢谢。”难道还要海对山说不客气么.. \n\n●唐僧一觉醒来，发现悟空暴死在地，旁边八戒和沙僧痛哭不已，唐僧问道：“悟空怎么死了？”八戒边哭边说道：“师傅，你昨晚夜里睡觉说梦话，念了一晚上紧箍咒！”\n\n●表白是门技术活：南理工两风云学长同时向一学姐表白，学姐淡定道：“你们周游世界后再回来跟我说。”一学长立马收拾包裹准备出发，另一学长绕学姐转了一圈，说出历史性的一句：“you are my world.”瞬间秒杀……\n\n●英语老师给我们讲她监考的事。。。。当时她在讲台上坐着，看到下面一名男生鬼鬼祟祟，一只手在上面写，一只手在下面动，嘴里还念念有词。。。老师肯定以为他在作弊，走过去一看，这哥们手里赫然拿着一串佛珠。。。老师当场就凌乱了。。。\n\n●晚饭后老爸烟瘾来犯，趁老妈洗碗时门口偷吸，也许是抽的太忘情了，最后一口还没吐完就进门，正好被老妈看到… \n 老妈：你干吗呢！ \n 老爸：我没吸烟！！！ \n 老妈：那你吐的是什么！ \n 老爸：浮云……\n\n●上高中时候学校里一直有个牛逼的传说：一哥们去网吧玩扫雷刷了一夜；更牛逼的是，另一个哥们看他扫雷扫了一夜……\n\n●考驾照上路时不管遇到什么情况都要像考官报告，朋友去考试时遇到前面一条狗，那家伙有点紧张，然后，脱口而出，报告狗，前面有一条教官....... \n 然后... \n 估计就没有然后了...\n\n●世界上有10种人，会二进制的和不会二进制的　\n</code></pre>"},{"layout":"post","title":"帕纳大师的魔幻冒险","date":"2011-07-02T16:00:00.000Z","wordpress_id":460,"comments":1,"_content":"<meta name=\"views\" content=\"182\" />\n<meta name=\"_su_rich_snippet_type\" content=\"none\" />\n<meta name=\"_edit_last\" content=\"1\" />\n刚才在csdn.net上发了一份同样的，结果被说有“高度敏感词”...我实在无语了.\n这只能说它分词做的烂，并且它的程序员也很烂。csdn也不自由了。\n\n唉...还是发到自己的blog吧.又让我想到了清朝的X字狱...下面是原文。\n\n最近看了许多影片，总是手懒，懒的去写。这部类似于查理与巧克力工厂的片子。充满奇幻的色彩。并且主题相当含蓄不清。\n看个人看法是影片讲述：\n人生其实就是不断的选择，无所畏惧，勇往直前才能得到快乐。Tony在片中是非常重要的角色。起初他也能控制自己的欲望，劝人克制、无欲、坚强、无畏生死，所以他在第一次进入奇幻秀时能说出：They are beyond fear, because they are forever young. Nothing is permanent, not even death.他们无所畏惧，因为他们永远年轻。一切并非永恒，死亡也不例外。也正是这些话诠释了永恒。死亡的不过是肉体，而记忆存在于人与人的心中。之后，他开始贪恋财富，但也相信财富完全可以通过自己的努力得来。只要自己够努力就总有出人头地的一天。所以也就有抓云的日子这个奇幻。最终他希望看到的功名成就终于来临，但是他内心却是伪善的。他并不喜欢小孩。他喜欢的是小孩给他带来的名与利。\n恶魔之所以可以诱惑到人，是因为人人都有自己畏惧的时候。第一个奇幻中，人畏惧艰险并且违背了誓言(发誓不再喝酒却进入了酒吧)。第二个奇幻中，人畏惧年轻稍纵即逝(Tony进入的第一个奇幻)，所以才想到了汽车旅馆motel，one nite stand(影片中汽车旅馆的牌子...)等等。第三个奇幻中，XX成员畏惧警察，所以才会去找妈妈。第四个奇幻，Tony畏惧的是真相大白，而瓦伦蒂娜Valentina也就是博士的女儿，畏惧逃避真相和现实，最终希望下地狱接受惩罚而不是希望真正的改变自己，用自己的余生来做些什么(所以恶魔才会说:You are no idea. You are just a kid)。\n之所以有恶魔和博士，也不过是希望善有善终，恶为恶果。诱惑时常有，选择也很多。而自己幸福快乐的源泉依旧是无欲、无畏和为别人带来快乐以及感受到身边人的幸福快乐。\n\n<a href=\"http://chillyc.info/wp-content/uploads/帕那索斯博士的奇幻秀-谍报封面.jpg\"><img src=\"http://chillyc.info/wp-content/uploads/帕那索斯博士的奇幻秀-谍报封面.jpg\" alt=\"\" title=\"帕那索斯博士的奇幻秀 - 谍报封面\" width=\"550\" height=\"709\" class=\"aligncenter size-full wp-image-462\" /></a>\n\n导演: 特瑞·吉列姆\n编剧: 特瑞·吉列姆 / Charles McKeown\n主演: 希斯·莱杰 / 克里斯托弗·普卢默 / 莉莉·科尔 / 安德鲁·加菲尔德 / 约翰尼·德普 / 裘德·洛 / 柯林·法瑞尔 / 威勒·特耶 / 汤姆·威兹\n类型: 冒险 / 奇幻 / 悬疑\n制片国家/地区: 英国 / 加拿大 / 法国\n语言: 英语 / 俄语 / 法语\n上映日期: 2009-10-16\n片长: 123 分钟\n又名: 柏纳大师奇幻SHOW / 帕纳大师的魔幻冒险 / 帕纳塞斯的移动剧院 / 奇幻剧院\nIMDb链接: tt1054606\n","source":"_posts/2011-07-03-pa-na-da-shi-de-mo-huan-mao-xian.markdown","raw":"---\nlayout: post\ntitle: \"帕纳大师的魔幻冒险\"\ndate: 2011-7-3\nwordpress_id: 460\ncomments: true\ncategories: [\"movie\", \"movie\", \"see-hear\"]\n---\n<meta name=\"views\" content=\"182\" />\n<meta name=\"_su_rich_snippet_type\" content=\"none\" />\n<meta name=\"_edit_last\" content=\"1\" />\n刚才在csdn.net上发了一份同样的，结果被说有“高度敏感词”...我实在无语了.\n这只能说它分词做的烂，并且它的程序员也很烂。csdn也不自由了。\n\n唉...还是发到自己的blog吧.又让我想到了清朝的X字狱...下面是原文。\n\n最近看了许多影片，总是手懒，懒的去写。这部类似于查理与巧克力工厂的片子。充满奇幻的色彩。并且主题相当含蓄不清。\n看个人看法是影片讲述：\n人生其实就是不断的选择，无所畏惧，勇往直前才能得到快乐。Tony在片中是非常重要的角色。起初他也能控制自己的欲望，劝人克制、无欲、坚强、无畏生死，所以他在第一次进入奇幻秀时能说出：They are beyond fear, because they are forever young. Nothing is permanent, not even death.他们无所畏惧，因为他们永远年轻。一切并非永恒，死亡也不例外。也正是这些话诠释了永恒。死亡的不过是肉体，而记忆存在于人与人的心中。之后，他开始贪恋财富，但也相信财富完全可以通过自己的努力得来。只要自己够努力就总有出人头地的一天。所以也就有抓云的日子这个奇幻。最终他希望看到的功名成就终于来临，但是他内心却是伪善的。他并不喜欢小孩。他喜欢的是小孩给他带来的名与利。\n恶魔之所以可以诱惑到人，是因为人人都有自己畏惧的时候。第一个奇幻中，人畏惧艰险并且违背了誓言(发誓不再喝酒却进入了酒吧)。第二个奇幻中，人畏惧年轻稍纵即逝(Tony进入的第一个奇幻)，所以才想到了汽车旅馆motel，one nite stand(影片中汽车旅馆的牌子...)等等。第三个奇幻中，XX成员畏惧警察，所以才会去找妈妈。第四个奇幻，Tony畏惧的是真相大白，而瓦伦蒂娜Valentina也就是博士的女儿，畏惧逃避真相和现实，最终希望下地狱接受惩罚而不是希望真正的改变自己，用自己的余生来做些什么(所以恶魔才会说:You are no idea. You are just a kid)。\n之所以有恶魔和博士，也不过是希望善有善终，恶为恶果。诱惑时常有，选择也很多。而自己幸福快乐的源泉依旧是无欲、无畏和为别人带来快乐以及感受到身边人的幸福快乐。\n\n<a href=\"http://chillyc.info/wp-content/uploads/帕那索斯博士的奇幻秀-谍报封面.jpg\"><img src=\"http://chillyc.info/wp-content/uploads/帕那索斯博士的奇幻秀-谍报封面.jpg\" alt=\"\" title=\"帕那索斯博士的奇幻秀 - 谍报封面\" width=\"550\" height=\"709\" class=\"aligncenter size-full wp-image-462\" /></a>\n\n导演: 特瑞·吉列姆\n编剧: 特瑞·吉列姆 / Charles McKeown\n主演: 希斯·莱杰 / 克里斯托弗·普卢默 / 莉莉·科尔 / 安德鲁·加菲尔德 / 约翰尼·德普 / 裘德·洛 / 柯林·法瑞尔 / 威勒·特耶 / 汤姆·威兹\n类型: 冒险 / 奇幻 / 悬疑\n制片国家/地区: 英国 / 加拿大 / 法国\n语言: 英语 / 俄语 / 法语\n上映日期: 2009-10-16\n片长: 123 分钟\n又名: 柏纳大师奇幻SHOW / 帕纳大师的魔幻冒险 / 帕纳塞斯的移动剧院 / 奇幻剧院\nIMDb链接: tt1054606\n","slug":"2011-07-03-pa-na-da-shi-de-mo-huan-mao-xian","published":1,"updated":"2017-06-05T02:56:52.000Z","photos":[],"link":"","_id":"cj3jjpbb0001azumjq430mwcj","content":"<p><meta name=\"views\" content=\"182\"></p>\n<p><meta name=\"_su_rich_snippet_type\" content=\"none\"></p>\n<p><meta name=\"_edit_last\" content=\"1\"><br>刚才在csdn.net上发了一份同样的，结果被说有“高度敏感词”…我实在无语了.<br>这只能说它分词做的烂，并且它的程序员也很烂。csdn也不自由了。</p>\n<p>唉…还是发到自己的blog吧.又让我想到了清朝的X字狱…下面是原文。</p>\n<p>最近看了许多影片，总是手懒，懒的去写。这部类似于查理与巧克力工厂的片子。充满奇幻的色彩。并且主题相当含蓄不清。<br>看个人看法是影片讲述：<br>人生其实就是不断的选择，无所畏惧，勇往直前才能得到快乐。Tony在片中是非常重要的角色。起初他也能控制自己的欲望，劝人克制、无欲、坚强、无畏生死，所以他在第一次进入奇幻秀时能说出：They are beyond fear, because they are forever young. Nothing is permanent, not even death.他们无所畏惧，因为他们永远年轻。一切并非永恒，死亡也不例外。也正是这些话诠释了永恒。死亡的不过是肉体，而记忆存在于人与人的心中。之后，他开始贪恋财富，但也相信财富完全可以通过自己的努力得来。只要自己够努力就总有出人头地的一天。所以也就有抓云的日子这个奇幻。最终他希望看到的功名成就终于来临，但是他内心却是伪善的。他并不喜欢小孩。他喜欢的是小孩给他带来的名与利。<br>恶魔之所以可以诱惑到人，是因为人人都有自己畏惧的时候。第一个奇幻中，人畏惧艰险并且违背了誓言(发誓不再喝酒却进入了酒吧)。第二个奇幻中，人畏惧年轻稍纵即逝(Tony进入的第一个奇幻)，所以才想到了汽车旅馆motel，one nite stand(影片中汽车旅馆的牌子…)等等。第三个奇幻中，XX成员畏惧警察，所以才会去找妈妈。第四个奇幻，Tony畏惧的是真相大白，而瓦伦蒂娜Valentina也就是博士的女儿，畏惧逃避真相和现实，最终希望下地狱接受惩罚而不是希望真正的改变自己，用自己的余生来做些什么(所以恶魔才会说:You are no idea. You are just a kid)。<br>之所以有恶魔和博士，也不过是希望善有善终，恶为恶果。诱惑时常有，选择也很多。而自己幸福快乐的源泉依旧是无欲、无畏和为别人带来快乐以及感受到身边人的幸福快乐。</p>\n<p><a href=\"http://chillyc.info/wp-content/uploads/帕那索斯博士的奇幻秀-谍报封面.jpg\"><img src=\"http://chillyc.info/wp-content/uploads/帕那索斯博士的奇幻秀-谍报封面.jpg\" alt=\"\" title=\"帕那索斯博士的奇幻秀 - 谍报封面\" width=\"550\" height=\"709\" class=\"aligncenter size-full wp-image-462\"></a></p>\n<p>导演: 特瑞·吉列姆<br>编剧: 特瑞·吉列姆 / Charles McKeown<br>主演: 希斯·莱杰 / 克里斯托弗·普卢默 / 莉莉·科尔 / 安德鲁·加菲尔德 / 约翰尼·德普 / 裘德·洛 / 柯林·法瑞尔 / 威勒·特耶 / 汤姆·威兹<br>类型: 冒险 / 奇幻 / 悬疑<br>制片国家/地区: 英国 / 加拿大 / 法国<br>语言: 英语 / 俄语 / 法语<br>上映日期: 2009-10-16<br>片长: 123 分钟<br>又名: 柏纳大师奇幻SHOW / 帕纳大师的魔幻冒险 / 帕纳塞斯的移动剧院 / 奇幻剧院<br>IMDb链接: tt1054606</p>\n","site":{"data":{}},"excerpt":"","more":"<p><meta name=\"views\" content=\"182\"></p>\n<p><meta name=\"_su_rich_snippet_type\" content=\"none\"></p>\n<p><meta name=\"_edit_last\" content=\"1\"><br>刚才在csdn.net上发了一份同样的，结果被说有“高度敏感词”…我实在无语了.<br>这只能说它分词做的烂，并且它的程序员也很烂。csdn也不自由了。</p>\n<p>唉…还是发到自己的blog吧.又让我想到了清朝的X字狱…下面是原文。</p>\n<p>最近看了许多影片，总是手懒，懒的去写。这部类似于查理与巧克力工厂的片子。充满奇幻的色彩。并且主题相当含蓄不清。<br>看个人看法是影片讲述：<br>人生其实就是不断的选择，无所畏惧，勇往直前才能得到快乐。Tony在片中是非常重要的角色。起初他也能控制自己的欲望，劝人克制、无欲、坚强、无畏生死，所以他在第一次进入奇幻秀时能说出：They are beyond fear, because they are forever young. Nothing is permanent, not even death.他们无所畏惧，因为他们永远年轻。一切并非永恒，死亡也不例外。也正是这些话诠释了永恒。死亡的不过是肉体，而记忆存在于人与人的心中。之后，他开始贪恋财富，但也相信财富完全可以通过自己的努力得来。只要自己够努力就总有出人头地的一天。所以也就有抓云的日子这个奇幻。最终他希望看到的功名成就终于来临，但是他内心却是伪善的。他并不喜欢小孩。他喜欢的是小孩给他带来的名与利。<br>恶魔之所以可以诱惑到人，是因为人人都有自己畏惧的时候。第一个奇幻中，人畏惧艰险并且违背了誓言(发誓不再喝酒却进入了酒吧)。第二个奇幻中，人畏惧年轻稍纵即逝(Tony进入的第一个奇幻)，所以才想到了汽车旅馆motel，one nite stand(影片中汽车旅馆的牌子…)等等。第三个奇幻中，XX成员畏惧警察，所以才会去找妈妈。第四个奇幻，Tony畏惧的是真相大白，而瓦伦蒂娜Valentina也就是博士的女儿，畏惧逃避真相和现实，最终希望下地狱接受惩罚而不是希望真正的改变自己，用自己的余生来做些什么(所以恶魔才会说:You are no idea. You are just a kid)。<br>之所以有恶魔和博士，也不过是希望善有善终，恶为恶果。诱惑时常有，选择也很多。而自己幸福快乐的源泉依旧是无欲、无畏和为别人带来快乐以及感受到身边人的幸福快乐。</p>\n<p><a href=\"http://chillyc.info/wp-content/uploads/帕那索斯博士的奇幻秀-谍报封面.jpg\"><img src=\"http://chillyc.info/wp-content/uploads/帕那索斯博士的奇幻秀-谍报封面.jpg\" alt=\"\" title=\"帕那索斯博士的奇幻秀 - 谍报封面\" width=\"550\" height=\"709\" class=\"aligncenter size-full wp-image-462\"></a></p>\n<p>导演: 特瑞·吉列姆<br>编剧: 特瑞·吉列姆 / Charles McKeown<br>主演: 希斯·莱杰 / 克里斯托弗·普卢默 / 莉莉·科尔 / 安德鲁·加菲尔德 / 约翰尼·德普 / 裘德·洛 / 柯林·法瑞尔 / 威勒·特耶 / 汤姆·威兹<br>类型: 冒险 / 奇幻 / 悬疑<br>制片国家/地区: 英国 / 加拿大 / 法国<br>语言: 英语 / 俄语 / 法语<br>上映日期: 2009-10-16<br>片长: 123 分钟<br>又名: 柏纳大师奇幻SHOW / 帕纳大师的魔幻冒险 / 帕纳塞斯的移动剧院 / 奇幻剧院<br>IMDb链接: tt1054606</p>\n"},{"layout":"post","title":"Movie spirit","date":"2011-07-08T16:00:00.000Z","wordpress_id":464,"comments":1,"_content":"<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_description\" content=\"movie,spirit,desire\" />\n<meta name=\"_su_keywords\" content=\"movie,spirit,desire\" />\n<meta name=\"_su_rich_snippet_type\" content=\"none\" />\n<meta name=\"_su_title\" content=\"movie,spirit,desire\" />\n<meta name=\"views\" content=\"197\" />\n<meta name=\"_wp_old_slug\" content=\"movie-sprite\" />\nRecently, I have watched many movies. And find all of movies have the same spirit: To be a human, not to be alive. This spirit is always in hero movie. Keep away from your desire, you will become stronger. Sacrifice and survival are always discussed in movies. The aspect of education is obvious, and is not funny.\n","source":"_posts/2011-07-09-movie-spirit.markdown","raw":"---\nlayout: post\ntitle: \"Movie spirit\"\ndate: 2011-7-9\nwordpress_id: 464\ncomments: true\ncategories: [\"desire\", \"movie\", \"movie\", \"see-hear\", \"spirit\"]\n---\n<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_description\" content=\"movie,spirit,desire\" />\n<meta name=\"_su_keywords\" content=\"movie,spirit,desire\" />\n<meta name=\"_su_rich_snippet_type\" content=\"none\" />\n<meta name=\"_su_title\" content=\"movie,spirit,desire\" />\n<meta name=\"views\" content=\"197\" />\n<meta name=\"_wp_old_slug\" content=\"movie-sprite\" />\nRecently, I have watched many movies. And find all of movies have the same spirit: To be a human, not to be alive. This spirit is always in hero movie. Keep away from your desire, you will become stronger. Sacrifice and survival are always discussed in movies. The aspect of education is obvious, and is not funny.\n","slug":"2011-07-09-movie-spirit","published":1,"updated":"2017-06-05T02:56:52.000Z","photos":[],"link":"","_id":"cj3jjpbb3001czumjy0hk4bwc","content":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_description\" content=\"movie,spirit,desire\"></p>\n<p><meta name=\"_su_keywords\" content=\"movie,spirit,desire\"></p>\n<p><meta name=\"_su_rich_snippet_type\" content=\"none\"></p>\n<p><meta name=\"_su_title\" content=\"movie,spirit,desire\"></p>\n<p><meta name=\"views\" content=\"197\"></p>\n<p><meta name=\"_wp_old_slug\" content=\"movie-sprite\"><br>Recently, I have watched many movies. And find all of movies have the same spirit: To be a human, not to be alive. This spirit is always in hero movie. Keep away from your desire, you will become stronger. Sacrifice and survival are always discussed in movies. The aspect of education is obvious, and is not funny.</p>\n","site":{"data":{}},"excerpt":"","more":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_description\" content=\"movie,spirit,desire\"></p>\n<p><meta name=\"_su_keywords\" content=\"movie,spirit,desire\"></p>\n<p><meta name=\"_su_rich_snippet_type\" content=\"none\"></p>\n<p><meta name=\"_su_title\" content=\"movie,spirit,desire\"></p>\n<p><meta name=\"views\" content=\"197\"></p>\n<p><meta name=\"_wp_old_slug\" content=\"movie-sprite\"><br>Recently, I have watched many movies. And find all of movies have the same spirit: To be a human, not to be alive. This spirit is always in hero movie. Keep away from your desire, you will become stronger. Sacrifice and survival are always discussed in movies. The aspect of education is obvious, and is not funny.</p>\n"},{"layout":"post","title":"ivy,ant,eclipse配置启动","date":"2011-07-17T16:00:00.000Z","wordpress_id":466,"comments":1,"_content":"<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_description\" content=\"ivy,ant,eclipse\" />\n<meta name=\"_su_rich_snippet_type\" content=\"none\" />\n<meta name=\"_su_title\" content=\"ivy,ant,eclipse\" />\n<meta name=\"views\" content=\"485\" />\n下面的XX是贵公司..zzz\n首先先把公司的ivy+ant 都下了\n\n然后去fountain.corp.XX.com去试试自己的用户名，密码\n\n然后eclipse 3.6.2, jdk 1.6_14\n\n将工程导入到自己的eclipse中。\n\n进入eclipse 3.6.2 然后Project-&gt;Propertise-&gt;Builder-&gt;New一个新的antBuilder然后编辑那个ant,将main中BuildFile设置为build.xml\n\n在Project-&gt;Resource中将Text file encoding改为UTF-8\n\n然后将Base Directory设置为你的工程文件，在classpath中选中Ant Home（并点击Ant Home...）,并将其改为新的ivy+ant的目录。\n\n在build.xml中添加\n\n\n{% codeblock %}&lt;target name=\"check-exist\"&gt;\n   &lt;echo message=\"user home = ${user.home}\" /&gt;\n   &lt;echo message=\"user name = ${ivy.auth.username}\" /&gt;\n&lt;/target&gt;{% endcodeblock %}\n\n\neclipse中windows-&gt;show views-&gt;Ant，选中check-existence然后 Run As-&gt;Ant Build\n\n用ant执行上面的代码将产生User Home,判断${user.home}/ivy.properties文件是否存在，并且是否能读到ivy.auth.username和Password\n\n创建一个ivy.properties（这里要看扩展名是否是properties，一定不能是txt）放入到User Home中。并且这个文本也必须是UTF-8的。\n\n最好是用eclipse新建一个，然后写好后，直接将这个文件放入到User Home中\n\nivy.auth.username=[your username]\nivy.auth.password=[your password]\n\n[your username]是放入到fountain.corp.XX.com中用户名\n\n写完后在ant中执行check-existence，看是否能读到username和password\n如果ok，选中resolve 然后 Run As-&gt;Ant Build\n\n之后调整一下项目的格式，或者让别人将eclipse中的.classpath发给你，之后F5刷新即可。\n","source":"_posts/2011-07-18-ivyanteclipsepei-zhi-qi-dong.markdown","raw":"---\nlayout: post\ntitle: \"ivy,ant,eclipse配置启动\"\ndate: 2011-7-18\nwordpress_id: 466\ncomments: true\ncategories: [\"ant\", \"code\", \"eclipse\", \"ivy\"]\n---\n<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_description\" content=\"ivy,ant,eclipse\" />\n<meta name=\"_su_rich_snippet_type\" content=\"none\" />\n<meta name=\"_su_title\" content=\"ivy,ant,eclipse\" />\n<meta name=\"views\" content=\"485\" />\n下面的XX是贵公司..zzz\n首先先把公司的ivy+ant 都下了\n\n然后去fountain.corp.XX.com去试试自己的用户名，密码\n\n然后eclipse 3.6.2, jdk 1.6_14\n\n将工程导入到自己的eclipse中。\n\n进入eclipse 3.6.2 然后Project-&gt;Propertise-&gt;Builder-&gt;New一个新的antBuilder然后编辑那个ant,将main中BuildFile设置为build.xml\n\n在Project-&gt;Resource中将Text file encoding改为UTF-8\n\n然后将Base Directory设置为你的工程文件，在classpath中选中Ant Home（并点击Ant Home...）,并将其改为新的ivy+ant的目录。\n\n在build.xml中添加\n\n\n{% codeblock %}&lt;target name=\"check-exist\"&gt;\n   &lt;echo message=\"user home = ${user.home}\" /&gt;\n   &lt;echo message=\"user name = ${ivy.auth.username}\" /&gt;\n&lt;/target&gt;{% endcodeblock %}\n\n\neclipse中windows-&gt;show views-&gt;Ant，选中check-existence然后 Run As-&gt;Ant Build\n\n用ant执行上面的代码将产生User Home,判断${user.home}/ivy.properties文件是否存在，并且是否能读到ivy.auth.username和Password\n\n创建一个ivy.properties（这里要看扩展名是否是properties，一定不能是txt）放入到User Home中。并且这个文本也必须是UTF-8的。\n\n最好是用eclipse新建一个，然后写好后，直接将这个文件放入到User Home中\n\nivy.auth.username=[your username]\nivy.auth.password=[your password]\n\n[your username]是放入到fountain.corp.XX.com中用户名\n\n写完后在ant中执行check-existence，看是否能读到username和password\n如果ok，选中resolve 然后 Run As-&gt;Ant Build\n\n之后调整一下项目的格式，或者让别人将eclipse中的.classpath发给你，之后F5刷新即可。\n","slug":"2011-07-18-ivyanteclipsepei-zhi-qi-dong","published":1,"updated":"2017-06-05T02:56:52.000Z","photos":[],"link":"","_id":"cj3jjpbb8001ezumjm440kats","content":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_description\" content=\"ivy,ant,eclipse\"></p>\n<p><meta name=\"_su_rich_snippet_type\" content=\"none\"></p>\n<p><meta name=\"_su_title\" content=\"ivy,ant,eclipse\"></p>\n<p><meta name=\"views\" content=\"485\"><br>下面的XX是贵公司..zzz<br>首先先把公司的ivy+ant 都下了</p>\n<p>然后去fountain.corp.XX.com去试试自己的用户名，密码</p>\n<p>然后eclipse 3.6.2, jdk 1.6_14</p>\n<p>将工程导入到自己的eclipse中。</p>\n<p>进入eclipse 3.6.2 然后Project-&gt;Propertise-&gt;Builder-&gt;New一个新的antBuilder然后编辑那个ant,将main中BuildFile设置为build.xml</p>\n<p>在Project-&gt;Resource中将Text file encoding改为UTF-8</p>\n<p>然后将Base Directory设置为你的工程文件，在classpath中选中Ant Home（并点击Ant Home…）,并将其改为新的ivy+ant的目录。</p>\n<p>在build.xml中添加</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">&amp;lt;target name=&quot;check-exist&quot;&amp;gt;</div><div class=\"line\">   &amp;lt;echo message=&quot;user home = $&#123;user.home&#125;&quot; /&amp;gt;</div><div class=\"line\">   &amp;lt;echo message=&quot;user name = $&#123;ivy.auth.username&#125;&quot; /&amp;gt;</div><div class=\"line\">&amp;lt;/target&amp;gt;</div></pre></td></tr></table></figure>\n<p>eclipse中windows-&gt;show views-&gt;Ant，选中check-existence然后 Run As-&gt;Ant Build</p>\n<p>用ant执行上面的代码将产生User Home,判断${user.home}/ivy.properties文件是否存在，并且是否能读到ivy.auth.username和Password</p>\n<p>创建一个ivy.properties（这里要看扩展名是否是properties，一定不能是txt）放入到User Home中。并且这个文本也必须是UTF-8的。</p>\n<p>最好是用eclipse新建一个，然后写好后，直接将这个文件放入到User Home中</p>\n<p>ivy.auth.username=[your username]<br>ivy.auth.password=[your password]</p>\n<p>[your username]是放入到fountain.corp.XX.com中用户名</p>\n<p>写完后在ant中执行check-existence，看是否能读到username和password<br>如果ok，选中resolve 然后 Run As-&gt;Ant Build</p>\n<p>之后调整一下项目的格式，或者让别人将eclipse中的.classpath发给你，之后F5刷新即可。</p>\n","site":{"data":{}},"excerpt":"","more":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_description\" content=\"ivy,ant,eclipse\"></p>\n<p><meta name=\"_su_rich_snippet_type\" content=\"none\"></p>\n<p><meta name=\"_su_title\" content=\"ivy,ant,eclipse\"></p>\n<p><meta name=\"views\" content=\"485\"><br>下面的XX是贵公司..zzz<br>首先先把公司的ivy+ant 都下了</p>\n<p>然后去fountain.corp.XX.com去试试自己的用户名，密码</p>\n<p>然后eclipse 3.6.2, jdk 1.6_14</p>\n<p>将工程导入到自己的eclipse中。</p>\n<p>进入eclipse 3.6.2 然后Project-&gt;Propertise-&gt;Builder-&gt;New一个新的antBuilder然后编辑那个ant,将main中BuildFile设置为build.xml</p>\n<p>在Project-&gt;Resource中将Text file encoding改为UTF-8</p>\n<p>然后将Base Directory设置为你的工程文件，在classpath中选中Ant Home（并点击Ant Home…）,并将其改为新的ivy+ant的目录。</p>\n<p>在build.xml中添加</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">&amp;lt;target name=&quot;check-exist&quot;&amp;gt;</div><div class=\"line\">   &amp;lt;echo message=&quot;user home = $&#123;user.home&#125;&quot; /&amp;gt;</div><div class=\"line\">   &amp;lt;echo message=&quot;user name = $&#123;ivy.auth.username&#125;&quot; /&amp;gt;</div><div class=\"line\">&amp;lt;/target&amp;gt;</div></pre></td></tr></table></figure>\n<p>eclipse中windows-&gt;show views-&gt;Ant，选中check-existence然后 Run As-&gt;Ant Build</p>\n<p>用ant执行上面的代码将产生User Home,判断${user.home}/ivy.properties文件是否存在，并且是否能读到ivy.auth.username和Password</p>\n<p>创建一个ivy.properties（这里要看扩展名是否是properties，一定不能是txt）放入到User Home中。并且这个文本也必须是UTF-8的。</p>\n<p>最好是用eclipse新建一个，然后写好后，直接将这个文件放入到User Home中</p>\n<p>ivy.auth.username=[your username]<br>ivy.auth.password=[your password]</p>\n<p>[your username]是放入到fountain.corp.XX.com中用户名</p>\n<p>写完后在ant中执行check-existence，看是否能读到username和password<br>如果ok，选中resolve 然后 Run As-&gt;Ant Build</p>\n<p>之后调整一下项目的格式，或者让别人将eclipse中的.classpath发给你，之后F5刷新即可。</p>\n"},{"layout":"post","title":"ant problem: Could not load definitions from resource tasks.properties. It could not be found.","date":"2011-07-18T16:00:00.000Z","wordpress_id":474,"comments":1,"_content":"<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_description\" content=\"solve ant problem: Could not load definitions from resource tasks.properties. It could not be found.\" />\n<meta name=\"_su_keywords\" content=\"ant,problem,tasks.propertise,resource,load,not,error\" />\n<meta name=\"_su_rich_snippet_type\" content=\"none\" />\n<meta name=\"_su_title\" content=\"ant,problem,tasks.propertise,resource,load,not,error\" />\n<meta name=\"views\" content=\"400\" />\n<meta name=\"_wp_old_slug\" content=\"ant-problem\" />\nproblem is :\nCould not load definitions from resource tasks.properties. It could not be found.\nerror code in build.xml\n<div><strong> \n{% codeblock %}&lt;path id=\"xx.classpath\"&gt;\n   &lt;fileset dir=\"lib\"&gt;\n      &lt;include name=\"a.jar\" /&gt;\n      &lt;include name=\"b.jar\" /&gt;\n   &lt;/fileset&gt;\n&lt;/path&gt;\n&lt;taskdef classpathref=\"xx.classpath\" resource=\"tasks.properties\" /&gt;{% endcodeblock %}\n</strong></div>\n<div><strong> </strong></div>\n<strong>{% codeblock %} \n\n{% endcodeblock %}</strong>\n\ncorrect code in build.xml:\n\n\n{% codeblock %}&lt;path id=\"xx.classpath\"&gt;\n   &lt;fileset dir=\"lib\"&gt;\n      &lt;include name=\"${basedir}/lib/a.jar\" /&gt;\n      &lt;include name=\"${basedir}/lib/b.jar\" /&gt;\n   &lt;/fileset&gt;\n&lt;/path&gt;\n&lt;taskdef classpathref=\"xx.classpath\" resource=\"tasks.properties\" /&gt;{% endcodeblock %}\n \n","source":"_posts/2011-07-19-ant-problem-load-definitions-resource-tasks-properties-found.markdown","raw":"---\nlayout: post\ntitle: \"ant problem: Could not load definitions from resource tasks.properties. It could not be found.\"\ndate: 2011-7-19\nwordpress_id: 474\ncomments: true\ncategories: [\"ant\", \"error\", \"open-source\", \"problem\", \"project\"]\n---\n<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_description\" content=\"solve ant problem: Could not load definitions from resource tasks.properties. It could not be found.\" />\n<meta name=\"_su_keywords\" content=\"ant,problem,tasks.propertise,resource,load,not,error\" />\n<meta name=\"_su_rich_snippet_type\" content=\"none\" />\n<meta name=\"_su_title\" content=\"ant,problem,tasks.propertise,resource,load,not,error\" />\n<meta name=\"views\" content=\"400\" />\n<meta name=\"_wp_old_slug\" content=\"ant-problem\" />\nproblem is :\nCould not load definitions from resource tasks.properties. It could not be found.\nerror code in build.xml\n<div><strong> \n{% codeblock %}&lt;path id=\"xx.classpath\"&gt;\n   &lt;fileset dir=\"lib\"&gt;\n      &lt;include name=\"a.jar\" /&gt;\n      &lt;include name=\"b.jar\" /&gt;\n   &lt;/fileset&gt;\n&lt;/path&gt;\n&lt;taskdef classpathref=\"xx.classpath\" resource=\"tasks.properties\" /&gt;{% endcodeblock %}\n</strong></div>\n<div><strong> </strong></div>\n<strong>{% codeblock %} \n\n{% endcodeblock %}</strong>\n\ncorrect code in build.xml:\n\n\n{% codeblock %}&lt;path id=\"xx.classpath\"&gt;\n   &lt;fileset dir=\"lib\"&gt;\n      &lt;include name=\"${basedir}/lib/a.jar\" /&gt;\n      &lt;include name=\"${basedir}/lib/b.jar\" /&gt;\n   &lt;/fileset&gt;\n&lt;/path&gt;\n&lt;taskdef classpathref=\"xx.classpath\" resource=\"tasks.properties\" /&gt;{% endcodeblock %}\n \n","slug":"2011-07-19-ant-problem-load-definitions-resource-tasks-properties-found","published":1,"updated":"2017-06-05T02:56:52.000Z","photos":[],"link":"","_id":"cj3jjpbbf001gzumjb1ku47yy","content":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_description\" content=\"solve ant problem: Could not load definitions from resource tasks.properties. It could not be found.\"></p>\n<p><meta name=\"_su_keywords\" content=\"ant,problem,tasks.propertise,resource,load,not,error\"></p>\n<p><meta name=\"_su_rich_snippet_type\" content=\"none\"></p>\n<p><meta name=\"_su_title\" content=\"ant,problem,tasks.propertise,resource,load,not,error\"></p>\n<p><meta name=\"views\" content=\"400\"></p>\n<p><meta name=\"_wp_old_slug\" content=\"ant-problem\"><br>problem is :<br>Could not load definitions from resource tasks.properties. It could not be found.<br>error code in build.xml</p>\n<p><div><strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">&amp;lt;path id=&quot;xx.classpath&quot;&amp;gt;</div><div class=\"line\">   &amp;lt;fileset dir=&quot;lib&quot;&amp;gt;</div><div class=\"line\">      &amp;lt;include name=&quot;a.jar&quot; /&amp;gt;</div><div class=\"line\">      &amp;lt;include name=&quot;b.jar&quot; /&amp;gt;</div><div class=\"line\">   &amp;lt;/fileset&amp;gt;</div><div class=\"line\">&amp;lt;/path&amp;gt;</div><div class=\"line\">&amp;lt;taskdef classpathref=&quot;xx.classpath&quot; resource=&quot;tasks.properties&quot; /&amp;gt;</div></pre></td></tr></table></figure><br></strong></div></p>\n<p><div><strong> </strong></div><br><strong><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"> </div><div class=\"line\"></div></pre></td></tr></table></figure></strong></p>\n<p>correct code in build.xml:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">&amp;lt;path id=&quot;xx.classpath&quot;&amp;gt;</div><div class=\"line\">   &amp;lt;fileset dir=&quot;lib&quot;&amp;gt;</div><div class=\"line\">      &amp;lt;include name=&quot;$&#123;basedir&#125;/lib/a.jar&quot; /&amp;gt;</div><div class=\"line\">      &amp;lt;include name=&quot;$&#123;basedir&#125;/lib/b.jar&quot; /&amp;gt;</div><div class=\"line\">   &amp;lt;/fileset&amp;gt;</div><div class=\"line\">&amp;lt;/path&amp;gt;</div><div class=\"line\">&amp;lt;taskdef classpathref=&quot;xx.classpath&quot; resource=&quot;tasks.properties&quot; /&amp;gt;</div></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_description\" content=\"solve ant problem: Could not load definitions from resource tasks.properties. It could not be found.\"></p>\n<p><meta name=\"_su_keywords\" content=\"ant,problem,tasks.propertise,resource,load,not,error\"></p>\n<p><meta name=\"_su_rich_snippet_type\" content=\"none\"></p>\n<p><meta name=\"_su_title\" content=\"ant,problem,tasks.propertise,resource,load,not,error\"></p>\n<p><meta name=\"views\" content=\"400\"></p>\n<p><meta name=\"_wp_old_slug\" content=\"ant-problem\"><br>problem is :<br>Could not load definitions from resource tasks.properties. It could not be found.<br>error code in build.xml</p>\n<p><div><strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">&amp;lt;path id=&quot;xx.classpath&quot;&amp;gt;</div><div class=\"line\">   &amp;lt;fileset dir=&quot;lib&quot;&amp;gt;</div><div class=\"line\">      &amp;lt;include name=&quot;a.jar&quot; /&amp;gt;</div><div class=\"line\">      &amp;lt;include name=&quot;b.jar&quot; /&amp;gt;</div><div class=\"line\">   &amp;lt;/fileset&amp;gt;</div><div class=\"line\">&amp;lt;/path&amp;gt;</div><div class=\"line\">&amp;lt;taskdef classpathref=&quot;xx.classpath&quot; resource=&quot;tasks.properties&quot; /&amp;gt;</div></pre></td></tr></table></figure><br></strong></div></p>\n<p><div><strong> </strong></div><br><strong><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"> </div><div class=\"line\"></div></pre></td></tr></table></figure></strong></p>\n<p>correct code in build.xml:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">&amp;lt;path id=&quot;xx.classpath&quot;&amp;gt;</div><div class=\"line\">   &amp;lt;fileset dir=&quot;lib&quot;&amp;gt;</div><div class=\"line\">      &amp;lt;include name=&quot;$&#123;basedir&#125;/lib/a.jar&quot; /&amp;gt;</div><div class=\"line\">      &amp;lt;include name=&quot;$&#123;basedir&#125;/lib/b.jar&quot; /&amp;gt;</div><div class=\"line\">   &amp;lt;/fileset&amp;gt;</div><div class=\"line\">&amp;lt;/path&amp;gt;</div><div class=\"line\">&amp;lt;taskdef classpathref=&quot;xx.classpath&quot; resource=&quot;tasks.properties&quot; /&amp;gt;</div></pre></td></tr></table></figure>\n"},{"layout":"post","title":"电影评呀评","date":"2011-07-18T16:00:00.000Z","wordpress_id":469,"comments":1,"_content":"<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_rich_snippet_type\" content=\"none\" />\n<meta name=\"_su_description\" content=\"电影评论\" />\n<meta name=\"_su_keywords\" content=\"电影评论\" />\n<meta name=\"_su_title\" content=\"电影评论\" />\n<meta name=\"views\" content=\"202\" />\n叶问 vs 蔡李佛。这两个电影完全就不是一个重量级的。一个是民族精神和武术内涵；另外一个是娱乐精神和武术的皮毛。叶问拍的再烂，有时候也是有股霸气在里面的。蔡李佛拍的再好，竟然让我们觉得反派好可怜，正派好无耻。这拍得实在是太有趣了。蔡中的主要问题是一个主旨被导演一直贯穿在戏中，并加以肯定。在最后却完全无视，以致最终否决主旨。我就想不明白了...这片子是不是主角的亲戚花钱拍的？女人因为主角需要，必须变得水性杨花。武术因为主角需要，必须得一层不变。主角就是GOD!\n然后又看了龙猫，这没有什么好说的。Good! Great!\n然后看了一些热评的facebook《社交网络》,我觉得最后一个句话说的好：主角不是个混蛋，是努力想成为混蛋！不知怎么，我作为宅男也完全不能理解这个家伙的想法：激进，暴躁，无信。相反我觉得爱德华的想法更能被人接受，当然主角开始出现时就已经已非人类的姿态出现了。所以这影片看起来...很不知所云。不过这影片并不是宣扬主角，所以这种叙事的方法还是值得肯定。\n然后是人在囧途。说得事很囧，也就是很尴尬。不过还好，吉人自有天象，风雨苦难都经历，人生自然不能风平浪静，但人生也不能一直大风大浪。所以最简单的方法是顺其自然。至于这社会好人多，信则有，不信则无。\n\n\n","source":"_posts/2011-07-19-dian-ying-ping-ya-ping.markdown","raw":"---\nlayout: post\ntitle: \"电影评呀评\"\ndate: 2011-7-19\nwordpress_id: 469\ncomments: true\ncategories: [\"movie\", \"movie\", \"see-hear\"]\n---\n<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_rich_snippet_type\" content=\"none\" />\n<meta name=\"_su_description\" content=\"电影评论\" />\n<meta name=\"_su_keywords\" content=\"电影评论\" />\n<meta name=\"_su_title\" content=\"电影评论\" />\n<meta name=\"views\" content=\"202\" />\n叶问 vs 蔡李佛。这两个电影完全就不是一个重量级的。一个是民族精神和武术内涵；另外一个是娱乐精神和武术的皮毛。叶问拍的再烂，有时候也是有股霸气在里面的。蔡李佛拍的再好，竟然让我们觉得反派好可怜，正派好无耻。这拍得实在是太有趣了。蔡中的主要问题是一个主旨被导演一直贯穿在戏中，并加以肯定。在最后却完全无视，以致最终否决主旨。我就想不明白了...这片子是不是主角的亲戚花钱拍的？女人因为主角需要，必须变得水性杨花。武术因为主角需要，必须得一层不变。主角就是GOD!\n然后又看了龙猫，这没有什么好说的。Good! Great!\n然后看了一些热评的facebook《社交网络》,我觉得最后一个句话说的好：主角不是个混蛋，是努力想成为混蛋！不知怎么，我作为宅男也完全不能理解这个家伙的想法：激进，暴躁，无信。相反我觉得爱德华的想法更能被人接受，当然主角开始出现时就已经已非人类的姿态出现了。所以这影片看起来...很不知所云。不过这影片并不是宣扬主角，所以这种叙事的方法还是值得肯定。\n然后是人在囧途。说得事很囧，也就是很尴尬。不过还好，吉人自有天象，风雨苦难都经历，人生自然不能风平浪静，但人生也不能一直大风大浪。所以最简单的方法是顺其自然。至于这社会好人多，信则有，不信则无。\n\n\n","slug":"2011-07-19-dian-ying-ping-ya-ping","published":1,"updated":"2017-06-05T02:56:52.000Z","photos":[],"link":"","_id":"cj3jjpbbh001izumjyex3qybu","content":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_rich_snippet_type\" content=\"none\"></p>\n<p><meta name=\"_su_description\" content=\"电影评论\"></p>\n<p><meta name=\"_su_keywords\" content=\"电影评论\"></p>\n<p><meta name=\"_su_title\" content=\"电影评论\"></p>\n<p><meta name=\"views\" content=\"202\"><br>叶问 vs 蔡李佛。这两个电影完全就不是一个重量级的。一个是民族精神和武术内涵；另外一个是娱乐精神和武术的皮毛。叶问拍的再烂，有时候也是有股霸气在里面的。蔡李佛拍的再好，竟然让我们觉得反派好可怜，正派好无耻。这拍得实在是太有趣了。蔡中的主要问题是一个主旨被导演一直贯穿在戏中，并加以肯定。在最后却完全无视，以致最终否决主旨。我就想不明白了…这片子是不是主角的亲戚花钱拍的？女人因为主角需要，必须变得水性杨花。武术因为主角需要，必须得一层不变。主角就是GOD!<br>然后又看了龙猫，这没有什么好说的。Good! Great!<br>然后看了一些热评的facebook《社交网络》,我觉得最后一个句话说的好：主角不是个混蛋，是努力想成为混蛋！不知怎么，我作为宅男也完全不能理解这个家伙的想法：激进，暴躁，无信。相反我觉得爱德华的想法更能被人接受，当然主角开始出现时就已经已非人类的姿态出现了。所以这影片看起来…很不知所云。不过这影片并不是宣扬主角，所以这种叙事的方法还是值得肯定。<br>然后是人在囧途。说得事很囧，也就是很尴尬。不过还好，吉人自有天象，风雨苦难都经历，人生自然不能风平浪静，但人生也不能一直大风大浪。所以最简单的方法是顺其自然。至于这社会好人多，信则有，不信则无。</p>\n","site":{"data":{}},"excerpt":"","more":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_rich_snippet_type\" content=\"none\"></p>\n<p><meta name=\"_su_description\" content=\"电影评论\"></p>\n<p><meta name=\"_su_keywords\" content=\"电影评论\"></p>\n<p><meta name=\"_su_title\" content=\"电影评论\"></p>\n<p><meta name=\"views\" content=\"202\"><br>叶问 vs 蔡李佛。这两个电影完全就不是一个重量级的。一个是民族精神和武术内涵；另外一个是娱乐精神和武术的皮毛。叶问拍的再烂，有时候也是有股霸气在里面的。蔡李佛拍的再好，竟然让我们觉得反派好可怜，正派好无耻。这拍得实在是太有趣了。蔡中的主要问题是一个主旨被导演一直贯穿在戏中，并加以肯定。在最后却完全无视，以致最终否决主旨。我就想不明白了…这片子是不是主角的亲戚花钱拍的？女人因为主角需要，必须变得水性杨花。武术因为主角需要，必须得一层不变。主角就是GOD!<br>然后又看了龙猫，这没有什么好说的。Good! Great!<br>然后看了一些热评的facebook《社交网络》,我觉得最后一个句话说的好：主角不是个混蛋，是努力想成为混蛋！不知怎么，我作为宅男也完全不能理解这个家伙的想法：激进，暴躁，无信。相反我觉得爱德华的想法更能被人接受，当然主角开始出现时就已经已非人类的姿态出现了。所以这影片看起来…很不知所云。不过这影片并不是宣扬主角，所以这种叙事的方法还是值得肯定。<br>然后是人在囧途。说得事很囧，也就是很尴尬。不过还好，吉人自有天象，风雨苦难都经历，人生自然不能风平浪静，但人生也不能一直大风大浪。所以最简单的方法是顺其自然。至于这社会好人多，信则有，不信则无。</p>\n"},{"layout":"post","title":"visual stdio 2005 hot key vs2005 常用快捷键","date":"2011-07-19T16:00:00.000Z","wordpress_id":489,"comments":1,"_content":"<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_rich_snippet_type\" content=\"none\" />\n<meta name=\"views\" content=\"318\" />\nctrl+-  change to back tab (找刚刚的那个tab，向后)\n\nshift+ctrl+- change to next tab （向前）\n\nF12 find its defination (查找定义)\n\nshift+F12 find all reference (找到所有的引用，但是据我使用，只能找个一个)\n\nctrl+tab change tabs (切换标签)\n\nshift+F3 mark and search next word (标记该词并查找下一个)\n\nF3 search next word (查找下一个)\n","source":"_posts/2011-07-20-vs2005hotkeykuai-jie-jian.markdown","raw":"---\nlayout: post\ntitle: \"visual stdio 2005 hot key vs2005 常用快捷键\"\ndate: 2011-7-20\nwordpress_id: 489\ncomments: true\ncategories: [\"cc\", \"code\", \"hotkey\", \"vs\"]\n---\n<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_rich_snippet_type\" content=\"none\" />\n<meta name=\"views\" content=\"318\" />\nctrl+-  change to back tab (找刚刚的那个tab，向后)\n\nshift+ctrl+- change to next tab （向前）\n\nF12 find its defination (查找定义)\n\nshift+F12 find all reference (找到所有的引用，但是据我使用，只能找个一个)\n\nctrl+tab change tabs (切换标签)\n\nshift+F3 mark and search next word (标记该词并查找下一个)\n\nF3 search next word (查找下一个)\n","slug":"2011-07-20-vs2005hotkeykuai-jie-jian","published":1,"updated":"2017-06-05T02:56:52.000Z","photos":[],"link":"","_id":"cj3jjpbbl001kzumj9wkuun3b","content":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_rich_snippet_type\" content=\"none\"></p>\n<p><meta name=\"views\" content=\"318\"><br>ctrl+-  change to back tab (找刚刚的那个tab，向后)</p>\n<p>shift+ctrl+- change to next tab （向前）</p>\n<p>F12 find its defination (查找定义)</p>\n<p>shift+F12 find all reference (找到所有的引用，但是据我使用，只能找个一个)</p>\n<p>ctrl+tab change tabs (切换标签)</p>\n<p>shift+F3 mark and search next word (标记该词并查找下一个)</p>\n<p>F3 search next word (查找下一个)</p>\n","site":{"data":{}},"excerpt":"","more":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_rich_snippet_type\" content=\"none\"></p>\n<p><meta name=\"views\" content=\"318\"><br>ctrl+-  change to back tab (找刚刚的那个tab，向后)</p>\n<p>shift+ctrl+- change to next tab （向前）</p>\n<p>F12 find its defination (查找定义)</p>\n<p>shift+F12 find all reference (找到所有的引用，但是据我使用，只能找个一个)</p>\n<p>ctrl+tab change tabs (切换标签)</p>\n<p>shift+F3 mark and search next word (标记该词并查找下一个)</p>\n<p>F3 search next word (查找下一个)</p>\n"},{"layout":"post","title":"回车换行符(Carriage-Return Line-Feed)","date":"2011-09-04T16:00:00.000Z","wordpress_id":498,"comments":1,"_content":"<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_rich_snippet_type\" content=\"none\" />\n<meta name=\"views\" content=\"124\" />\n<meta name=\"_wp_old_slug\" content=\"换行符line-break\" />\nIn Mac is \"\\r\"\nIn linux and Unix is \"\\n\"\nIn windows is \"\\r\\n\"\n\"\\r\" in ascii is 0x0D and \"\\n\" is 0x0A\n\"\\r\" is called CR.\n\"\\n\" is called LF.\nCR LF is short for \"Carriage-Return Line-Feed\"回车换行.\n中english结合 is good!\n","source":"_posts/2011-09-05-hui-che-huan-xing-fu-carriagereturnlinefeed.markdown","raw":"---\nlayout: post\ntitle: \"回车换行符(Carriage-Return Line-Feed)\"\ndate: 2011-9-5\nwordpress_id: 498\ncomments: true\ncategories: [\"cr\", \"lf\", \"project\", \"回车\", \"换行\"]\n---\n<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_rich_snippet_type\" content=\"none\" />\n<meta name=\"views\" content=\"124\" />\n<meta name=\"_wp_old_slug\" content=\"换行符line-break\" />\nIn Mac is \"\\r\"\nIn linux and Unix is \"\\n\"\nIn windows is \"\\r\\n\"\n\"\\r\" in ascii is 0x0D and \"\\n\" is 0x0A\n\"\\r\" is called CR.\n\"\\n\" is called LF.\nCR LF is short for \"Carriage-Return Line-Feed\"回车换行.\n中english结合 is good!\n","slug":"2011-09-05-hui-che-huan-xing-fu-carriagereturnlinefeed","published":1,"updated":"2017-06-05T02:56:52.000Z","photos":[],"link":"","_id":"cj3jjpbbt001mzumj0ztjdj2t","content":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_rich_snippet_type\" content=\"none\"></p>\n<p><meta name=\"views\" content=\"124\"></p>\n<p><meta name=\"_wp_old_slug\" content=\"换行符line-break\"><br>In Mac is “\\r”<br>In linux and Unix is “\\n”<br>In windows is “\\r\\n”<br>“\\r” in ascii is 0x0D and “\\n” is 0x0A<br>“\\r” is called CR.<br>“\\n” is called LF.<br>CR LF is short for “Carriage-Return Line-Feed”回车换行.<br>中english结合 is good!</p>\n","site":{"data":{}},"excerpt":"","more":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_rich_snippet_type\" content=\"none\"></p>\n<p><meta name=\"views\" content=\"124\"></p>\n<p><meta name=\"_wp_old_slug\" content=\"换行符line-break\"><br>In Mac is “\\r”<br>In linux and Unix is “\\n”<br>In windows is “\\r\\n”<br>“\\r” in ascii is 0x0D and “\\n” is 0x0A<br>“\\r” is called CR.<br>“\\n” is called LF.<br>CR LF is short for “Carriage-Return Line-Feed”回车换行.<br>中english结合 is good!</p>\n"},{"layout":"post","title":"htmlParser rewrite HTML","date":"2011-09-06T16:00:00.000Z","wordpress_id":500,"comments":1,"_content":"<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_rich_snippet_type\" content=\"none\" />\n<meta name=\"views\" content=\"194\" />\n<meta name=\"_su_description\" content=\"use java htmpParser api to rewrite html TagNode TextNode Node\" />\n<meta name=\"_su_keywords\" content=\"TagNode,TextNode,Node,html,parser\" />\n<meta name=\"_su_title\" content=\"htmlParser rewrite HTML\" />\nYesteday, I have tried many methods to rewrite HTML.\nAnd find TagNode can not write TextNode, so if I want to replace \"&lt;p&gt; id=\"hello\"&gt;&lt;/p&gt;\" to \"&lt;p id=\"hello\"&gt;it's me&lt;/p&gt;\". There is no method to support. And in htmlParser, there is a method call setText(). But setText is only set text into&lt;p id=\"hello\"&gt;, like \"&lt;p id=\"hello\" class=\"pp\"&gt;\". The method can not write text into\"&lt;p&gt;&lt;/p&gt;\". If you want to add a TextNode as TagNode child. HtmlParser can not support this idea also. Like:\n\nNodeList nl = p.parse(null);\nNodeVisitor nv = new NodeVisitor(){\n    public void visitTag(Tag tag) {\n        if (tag instanceof ParagraphTag) {\n            String attribute = tag.getAttribute(\"id\");\n            if (attribute == null){\n                return;\n            }\n            TextNode tn = new TextNode(tag.getText());\n            tn.setText(\"sidafnaf \");\n            if(tag.getAttribute(\"id\").equals(\"hello\")){\n                Text t = new TextNode(\"abc\");\n                t.setParent(tag);\n                // It does not work\n                NodeList temp = new NodeList();\n                temp.add(t);\n                tag.setChildren(temp);\n            } else if (tag.getAttribute(\"id\").equals(\"author\")){\n                tag.setAttribute(\"innerHTML\",\"id a\");\n            }\n        } else if (tag instanceof LinkTag){\n            if (tag.getAttribute(\"id\").equals(\"come-from\")){\n                // can write an attribute innerHtml = \"ok?\"\n                tag.setAttribute(\"innerHtml\",\"ok?\");\n                // can rewrite URL attribute \n                tag.setAttribute(\"href\", \"http://www.google.com\");\n            }\n        }\n    }\n};\n\nSolve this problem, you should flag where you want to insert. like<strong>&lt;p&gt;messgae&lt;/p&gt;</strong>\nThen use following code:\n\nNodeList nl = p.parse(null);\nNodeVisitor nv = new NodeVisitor(){\n   public void visitStringNode(Text string){\n          if(string.getText().equals(\"message\")){\n               string.setText(\"It's me\");\n          }\n          // if you want change attributes of &lt;p&gt;    \n          TagNode tn = string.getParent();\n          tn.setAttribute(\"id\",\"good!\");\n   }\n}\n\nNow it's done.\n","source":"_posts/2011-09-07-htmlparser-rewrite-html.markdown","raw":"---\nlayout: post\ntitle: \"htmlParser rewrite HTML\"\ndate: 2011-9-7\nwordpress_id: 500\ncomments: true\ncategories: [\"api\", \"code\", \"html\", \"java\", \"java\", \"parser\"]\n---\n<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_rich_snippet_type\" content=\"none\" />\n<meta name=\"views\" content=\"194\" />\n<meta name=\"_su_description\" content=\"use java htmpParser api to rewrite html TagNode TextNode Node\" />\n<meta name=\"_su_keywords\" content=\"TagNode,TextNode,Node,html,parser\" />\n<meta name=\"_su_title\" content=\"htmlParser rewrite HTML\" />\nYesteday, I have tried many methods to rewrite HTML.\nAnd find TagNode can not write TextNode, so if I want to replace \"&lt;p&gt; id=\"hello\"&gt;&lt;/p&gt;\" to \"&lt;p id=\"hello\"&gt;it's me&lt;/p&gt;\". There is no method to support. And in htmlParser, there is a method call setText(). But setText is only set text into&lt;p id=\"hello\"&gt;, like \"&lt;p id=\"hello\" class=\"pp\"&gt;\". The method can not write text into\"&lt;p&gt;&lt;/p&gt;\". If you want to add a TextNode as TagNode child. HtmlParser can not support this idea also. Like:\n\nNodeList nl = p.parse(null);\nNodeVisitor nv = new NodeVisitor(){\n    public void visitTag(Tag tag) {\n        if (tag instanceof ParagraphTag) {\n            String attribute = tag.getAttribute(\"id\");\n            if (attribute == null){\n                return;\n            }\n            TextNode tn = new TextNode(tag.getText());\n            tn.setText(\"sidafnaf \");\n            if(tag.getAttribute(\"id\").equals(\"hello\")){\n                Text t = new TextNode(\"abc\");\n                t.setParent(tag);\n                // It does not work\n                NodeList temp = new NodeList();\n                temp.add(t);\n                tag.setChildren(temp);\n            } else if (tag.getAttribute(\"id\").equals(\"author\")){\n                tag.setAttribute(\"innerHTML\",\"id a\");\n            }\n        } else if (tag instanceof LinkTag){\n            if (tag.getAttribute(\"id\").equals(\"come-from\")){\n                // can write an attribute innerHtml = \"ok?\"\n                tag.setAttribute(\"innerHtml\",\"ok?\");\n                // can rewrite URL attribute \n                tag.setAttribute(\"href\", \"http://www.google.com\");\n            }\n        }\n    }\n};\n\nSolve this problem, you should flag where you want to insert. like<strong>&lt;p&gt;messgae&lt;/p&gt;</strong>\nThen use following code:\n\nNodeList nl = p.parse(null);\nNodeVisitor nv = new NodeVisitor(){\n   public void visitStringNode(Text string){\n          if(string.getText().equals(\"message\")){\n               string.setText(\"It's me\");\n          }\n          // if you want change attributes of &lt;p&gt;    \n          TagNode tn = string.getParent();\n          tn.setAttribute(\"id\",\"good!\");\n   }\n}\n\nNow it's done.\n","slug":"2011-09-07-htmlparser-rewrite-html","published":1,"updated":"2017-06-05T02:56:52.000Z","photos":[],"link":"","_id":"cj3jjpbbw001ozumjvgd4f501","content":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_rich_snippet_type\" content=\"none\"></p>\n<p><meta name=\"views\" content=\"194\"></p>\n<p><meta name=\"_su_description\" content=\"use java htmpParser api to rewrite html TagNode TextNode Node\"></p>\n<p><meta name=\"_su_keywords\" content=\"TagNode,TextNode,Node,html,parser\"></p>\n<p><meta name=\"_su_title\" content=\"htmlParser rewrite HTML\"><br>Yesteday, I have tried many methods to rewrite HTML.<br>And find TagNode can not write TextNode, so if I want to replace “&lt;p&gt; id=”hello”&gt;&lt;/p&gt;” to “&lt;p id=”hello”&gt;it’s me&lt;/p&gt;”. There is no method to support. And in htmlParser, there is a method call setText(). But setText is only set text into&lt;p id=”hello”&gt;, like “&lt;p id=”hello” class=”pp”&gt;”. The method can not write text into”&lt;p&gt;&lt;/p&gt;”. If you want to add a TextNode as TagNode child. HtmlParser can not support this idea also. Like:</p>\n<p>NodeList nl = p.parse(null);<br>NodeVisitor nv = new NodeVisitor(){<br>    public void visitTag(Tag tag) {<br>        if (tag instanceof ParagraphTag) {<br>            String attribute = tag.getAttribute(“id”);<br>            if (attribute == null){<br>                return;<br>            }<br>            TextNode tn = new TextNode(tag.getText());<br>            tn.setText(“sidafnaf “);<br>            if(tag.getAttribute(“id”).equals(“hello”)){<br>                Text t = new TextNode(“abc”);<br>                t.setParent(tag);<br>                // It does not work<br>                NodeList temp = new NodeList();<br>                temp.add(t);<br>                tag.setChildren(temp);<br>            } else if (tag.getAttribute(“id”).equals(“author”)){<br>                tag.setAttribute(“innerHTML”,”id a”);<br>            }<br>        } else if (tag instanceof LinkTag){<br>            if (tag.getAttribute(“id”).equals(“come-from”)){<br>                // can write an attribute innerHtml = “ok?”<br>                tag.setAttribute(“innerHtml”,”ok?”);<br>                // can rewrite URL attribute<br>                tag.setAttribute(“href”, “<a href=\"http://www.google.com\" target=\"_blank\" rel=\"external\">http://www.google.com</a>“);<br>            }<br>        }<br>    }<br>};</p>\n<p>Solve this problem, you should flag where you want to insert. like<strong>&lt;p&gt;messgae&lt;/p&gt;</strong><br>Then use following code:</p>\n<p>NodeList nl = p.parse(null);<br>NodeVisitor nv = new NodeVisitor(){<br>   public void visitStringNode(Text string){<br>          if(string.getText().equals(“message”)){<br>               string.setText(“It’s me”);<br>          }<br>          // if you want change attributes of &lt;p&gt;<br>          TagNode tn = string.getParent();<br>          tn.setAttribute(“id”,”good!”);<br>   }<br>}</p>\n<p>Now it’s done.</p>\n","site":{"data":{}},"excerpt":"","more":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_rich_snippet_type\" content=\"none\"></p>\n<p><meta name=\"views\" content=\"194\"></p>\n<p><meta name=\"_su_description\" content=\"use java htmpParser api to rewrite html TagNode TextNode Node\"></p>\n<p><meta name=\"_su_keywords\" content=\"TagNode,TextNode,Node,html,parser\"></p>\n<p><meta name=\"_su_title\" content=\"htmlParser rewrite HTML\"><br>Yesteday, I have tried many methods to rewrite HTML.<br>And find TagNode can not write TextNode, so if I want to replace “&lt;p&gt; id=”hello”&gt;&lt;/p&gt;” to “&lt;p id=”hello”&gt;it’s me&lt;/p&gt;”. There is no method to support. And in htmlParser, there is a method call setText(). But setText is only set text into&lt;p id=”hello”&gt;, like “&lt;p id=”hello” class=”pp”&gt;”. The method can not write text into”&lt;p&gt;&lt;/p&gt;”. If you want to add a TextNode as TagNode child. HtmlParser can not support this idea also. Like:</p>\n<p>NodeList nl = p.parse(null);<br>NodeVisitor nv = new NodeVisitor(){<br>    public void visitTag(Tag tag) {<br>        if (tag instanceof ParagraphTag) {<br>            String attribute = tag.getAttribute(“id”);<br>            if (attribute == null){<br>                return;<br>            }<br>            TextNode tn = new TextNode(tag.getText());<br>            tn.setText(“sidafnaf “);<br>            if(tag.getAttribute(“id”).equals(“hello”)){<br>                Text t = new TextNode(“abc”);<br>                t.setParent(tag);<br>                // It does not work<br>                NodeList temp = new NodeList();<br>                temp.add(t);<br>                tag.setChildren(temp);<br>            } else if (tag.getAttribute(“id”).equals(“author”)){<br>                tag.setAttribute(“innerHTML”,”id a”);<br>            }<br>        } else if (tag instanceof LinkTag){<br>            if (tag.getAttribute(“id”).equals(“come-from”)){<br>                // can write an attribute innerHtml = “ok?”<br>                tag.setAttribute(“innerHtml”,”ok?”);<br>                // can rewrite URL attribute<br>                tag.setAttribute(“href”, “<a href=\"http://www.google.com\" target=\"_blank\" rel=\"external\">http://www.google.com</a>“);<br>            }<br>        }<br>    }<br>};</p>\n<p>Solve this problem, you should flag where you want to insert. like<strong>&lt;p&gt;messgae&lt;/p&gt;</strong><br>Then use following code:</p>\n<p>NodeList nl = p.parse(null);<br>NodeVisitor nv = new NodeVisitor(){<br>   public void visitStringNode(Text string){<br>          if(string.getText().equals(“message”)){<br>               string.setText(“It’s me”);<br>          }<br>          // if you want change attributes of &lt;p&gt;<br>          TagNode tn = string.getParent();<br>          tn.setAttribute(“id”,”good!”);<br>   }<br>}</p>\n<p>Now it’s done.</p>\n"},{"layout":"post","title":"svn commands","date":"2011-09-21T16:00:00.000Z","wordpress_id":508,"comments":1,"_content":"<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_rich_snippet_type\" content=\"none\" />\n<meta name=\"views\" content=\"141\" />\n<meta name=\"_wp_old_slug\" content=\"svn-command\" />\nsvn merge is used for merging code from branch or other path to chunk. Or you can use old version to cover new version.\nsvn co/ svn checkout is commonly used for checking code to local with svn information.\nsvn import is used for importing code to svn, which has no svn information.\nsvn export is used for checking out code without svn information.\n<!--more-->\nsvn merge 用于将分支代码迁回到trunk,当然也可以将旧代码覆盖新代码\nsvn co 这个是最常用的，用于将代码迁到本地\nsvn import 用于将某些代码或者项目放入到svn server上\nsvn export 是将代码迁出来，但是迁出来的代码是没有svn信息的\n","source":"_posts/2011-09-22-svn-commands.markdown","raw":"---\nlayout: post\ntitle: \"svn commands\"\ndate: 2011-9-22\nwordpress_id: 508\ncomments: true\ncategories: [\"project\", \"svn\"]\n---\n<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_rich_snippet_type\" content=\"none\" />\n<meta name=\"views\" content=\"141\" />\n<meta name=\"_wp_old_slug\" content=\"svn-command\" />\nsvn merge is used for merging code from branch or other path to chunk. Or you can use old version to cover new version.\nsvn co/ svn checkout is commonly used for checking code to local with svn information.\nsvn import is used for importing code to svn, which has no svn information.\nsvn export is used for checking out code without svn information.\n<!--more-->\nsvn merge 用于将分支代码迁回到trunk,当然也可以将旧代码覆盖新代码\nsvn co 这个是最常用的，用于将代码迁到本地\nsvn import 用于将某些代码或者项目放入到svn server上\nsvn export 是将代码迁出来，但是迁出来的代码是没有svn信息的\n","slug":"2011-09-22-svn-commands","published":1,"updated":"2017-06-05T02:56:52.000Z","photos":[],"link":"","_id":"cj3jjpbbz001qzumjfhr6gz5s","content":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_rich_snippet_type\" content=\"none\"></p>\n<p><meta name=\"views\" content=\"141\"></p>\n<p><meta name=\"_wp_old_slug\" content=\"svn-command\"><br>svn merge is used for merging code from branch or other path to chunk. Or you can use old version to cover new version.<br>svn co/ svn checkout is commonly used for checking code to local with svn information.<br>svn import is used for importing code to svn, which has no svn information.<br>svn export is used for checking out code without svn information.<br><a id=\"more\"></a><br>svn merge 用于将分支代码迁回到trunk,当然也可以将旧代码覆盖新代码<br>svn co 这个是最常用的，用于将代码迁到本地<br>svn import 用于将某些代码或者项目放入到svn server上<br>svn export 是将代码迁出来，但是迁出来的代码是没有svn信息的</p>\n","site":{"data":{}},"excerpt":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_rich_snippet_type\" content=\"none\"></p>\n<p><meta name=\"views\" content=\"141\"></p>\n<p><meta name=\"_wp_old_slug\" content=\"svn-command\"><br>svn merge is used for merging code from branch or other path to chunk. Or you can use old version to cover new version.<br>svn co/ svn checkout is commonly used for checking code to local with svn information.<br>svn import is used for importing code to svn, which has no svn information.<br>svn export is used for checking out code without svn information.<br>","more":"<br>svn merge 用于将分支代码迁回到trunk,当然也可以将旧代码覆盖新代码<br>svn co 这个是最常用的，用于将代码迁到本地<br>svn import 用于将某些代码或者项目放入到svn server上<br>svn export 是将代码迁出来，但是迁出来的代码是没有svn信息的</p>"},{"layout":"post","title":"svn roll back","date":"2011-09-21T16:00:00.000Z","wordpress_id":505,"comments":1,"_content":"<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_description\" content=\"svn roll back, recover. \" />\n<meta name=\"_su_keywords\" content=\"svn roll back, check out, recover\" />\n<meta name=\"_su_rich_snippet_type\" content=\"none\" />\n<meta name=\"_su_title\" content=\"svn roll back\" />\n<meta name=\"views\" content=\"112\" />\nIn svn command, if you want rollback your code of svn server. you should use svn merge to merage new version and old version.\nlike :\n<blockquote> svn merge -r newversion:oldversion</blockquote>\nBut if you want check out old version to cover new version. do like this:\n<blockquote> svn co -r oldversion svnpath localpath</blockquote>\nsvn 如果是svn server的代码需要回滚，则使用svn merge -r newversion:oldversion\n如果是svn客户端 check out出来的代码需要找到以前的版本，则使用svn co -r version svnpath localpath\n","source":"_posts/2011-09-22-svn-roll.markdown","raw":"---\nlayout: post\ntitle: \"svn roll back\"\ndate: 2011-9-22\nwordpress_id: 505\ncomments: true\ncategories: [\"project\", \"svn\"]\n---\n<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_description\" content=\"svn roll back, recover. \" />\n<meta name=\"_su_keywords\" content=\"svn roll back, check out, recover\" />\n<meta name=\"_su_rich_snippet_type\" content=\"none\" />\n<meta name=\"_su_title\" content=\"svn roll back\" />\n<meta name=\"views\" content=\"112\" />\nIn svn command, if you want rollback your code of svn server. you should use svn merge to merage new version and old version.\nlike :\n<blockquote> svn merge -r newversion:oldversion</blockquote>\nBut if you want check out old version to cover new version. do like this:\n<blockquote> svn co -r oldversion svnpath localpath</blockquote>\nsvn 如果是svn server的代码需要回滚，则使用svn merge -r newversion:oldversion\n如果是svn客户端 check out出来的代码需要找到以前的版本，则使用svn co -r version svnpath localpath\n","slug":"2011-09-22-svn-roll","published":1,"updated":"2017-06-05T02:56:52.000Z","photos":[],"link":"","_id":"cj3jjpbc3001szumj4ejlsmn6","content":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_description\" content=\"svn roll back, recover. \"></p>\n<p><meta name=\"_su_keywords\" content=\"svn roll back, check out, recover\"></p>\n<p><meta name=\"_su_rich_snippet_type\" content=\"none\"></p>\n<p><meta name=\"_su_title\" content=\"svn roll back\"></p>\n<p><meta name=\"views\" content=\"112\"><br>In svn command, if you want rollback your code of svn server. you should use svn merge to merage new version and old version.<br>like :</p>\n<p><blockquote> svn merge -r newversion:oldversion</blockquote><br>But if you want check out old version to cover new version. do like this:</p>\n<p><blockquote> svn co -r oldversion svnpath localpath</blockquote><br>svn 如果是svn server的代码需要回滚，则使用svn merge -r newversion:oldversion<br>如果是svn客户端 check out出来的代码需要找到以前的版本，则使用svn co -r version svnpath localpath</p>\n","site":{"data":{}},"excerpt":"","more":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_description\" content=\"svn roll back, recover. \"></p>\n<p><meta name=\"_su_keywords\" content=\"svn roll back, check out, recover\"></p>\n<p><meta name=\"_su_rich_snippet_type\" content=\"none\"></p>\n<p><meta name=\"_su_title\" content=\"svn roll back\"></p>\n<p><meta name=\"views\" content=\"112\"><br>In svn command, if you want rollback your code of svn server. you should use svn merge to merage new version and old version.<br>like :</p>\n<p><blockquote> svn merge -r newversion:oldversion</blockquote><br>But if you want check out old version to cover new version. do like this:</p>\n<p><blockquote> svn co -r oldversion svnpath localpath</blockquote><br>svn 如果是svn server的代码需要回滚，则使用svn merge -r newversion:oldversion<br>如果是svn客户端 check out出来的代码需要找到以前的版本，则使用svn co -r version svnpath localpath</p>\n"},{"layout":"post","title":"星际争霸 1 花屏错误解决 (winxp or vista or win7)","date":"2011-11-02T16:00:00.000Z","wordpress_id":511,"comments":1,"_content":"<meta name=\"_su_rich_snippet_type\" content=\"none\" />\n<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_description\" content=\"星际争霸花屏错误解决\" />\n<meta name=\"views\" content=\"72\" />\n<meta name=\"_su_keywords\" content=\"星际争霸,花屏,解决\" />\n<meta name=\"_su_title\" content=\"星际争霸 花屏 win7\" />\n花屏错误是因为不兼容导致的。所以需要在运行程序中使用兼容模式。找到在星际争霸1中根文件夹中的所有exe程序，然后对每一个右键->属性->兼容性->使用win98兼容运行，选中256色， 640*480显示两个。然后再运行主exe就ok了。\n","source":"_posts/2011-11-03-xing-ji-zheng-ba-1hua-ping-cuo-wu-jie-jue-winxpvistawin7.markdown","raw":"---\nlayout: post\ntitle: \"星际争霸 1 花屏错误解决 (winxp or vista or win7)\"\ndate: 2011-11-3\nwordpress_id: 511\ncomments: true\ncategories: [\"blurred\", \"game\", \"startcraft\", \"win7\", \"星际争霸\", \"花屏\"]\n---\n<meta name=\"_su_rich_snippet_type\" content=\"none\" />\n<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_description\" content=\"星际争霸花屏错误解决\" />\n<meta name=\"views\" content=\"72\" />\n<meta name=\"_su_keywords\" content=\"星际争霸,花屏,解决\" />\n<meta name=\"_su_title\" content=\"星际争霸 花屏 win7\" />\n花屏错误是因为不兼容导致的。所以需要在运行程序中使用兼容模式。找到在星际争霸1中根文件夹中的所有exe程序，然后对每一个右键->属性->兼容性->使用win98兼容运行，选中256色， 640*480显示两个。然后再运行主exe就ok了。\n","slug":"2011-11-03-xing-ji-zheng-ba-1hua-ping-cuo-wu-jie-jue-winxpvistawin7","published":1,"updated":"2017-06-05T02:56:52.000Z","photos":[],"link":"","_id":"cj3jjpbc8001uzumj8umjtmy2","content":"<p><meta name=\"_su_rich_snippet_type\" content=\"none\"></p>\n<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_description\" content=\"星际争霸花屏错误解决\"></p>\n<p><meta name=\"views\" content=\"72\"></p>\n<p><meta name=\"_su_keywords\" content=\"星际争霸,花屏,解决\"></p>\n<p><meta name=\"_su_title\" content=\"星际争霸 花屏 win7\"><br>花屏错误是因为不兼容导致的。所以需要在运行程序中使用兼容模式。找到在星际争霸1中根文件夹中的所有exe程序，然后对每一个右键-&gt;属性-&gt;兼容性-&gt;使用win98兼容运行，选中256色， 640*480显示两个。然后再运行主exe就ok了。</p>\n","site":{"data":{}},"excerpt":"","more":"<p><meta name=\"_su_rich_snippet_type\" content=\"none\"></p>\n<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_description\" content=\"星际争霸花屏错误解决\"></p>\n<p><meta name=\"views\" content=\"72\"></p>\n<p><meta name=\"_su_keywords\" content=\"星际争霸,花屏,解决\"></p>\n<p><meta name=\"_su_title\" content=\"星际争霸 花屏 win7\"><br>花屏错误是因为不兼容导致的。所以需要在运行程序中使用兼容模式。找到在星际争霸1中根文件夹中的所有exe程序，然后对每一个右键-&gt;属性-&gt;兼容性-&gt;使用win98兼容运行，选中256色， 640*480显示两个。然后再运行主exe就ok了。</p>\n"},{"layout":"post","title":"velocity encoding charset error","date":"2011-12-03T16:00:00.000Z","wordpress_id":514,"comments":1,"_content":"<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_description\" content=\"There is a solution for solve velocity encoding or charset error.\" />\n<meta name=\"_su_keywords\" content=\"encoding, charset, error, velocity\" />\n<meta name=\"_su_rich_snippet_type\" content=\"none\" />\n<meta name=\"_su_title\" content=\"encoding, charset, velocity, error, exception, java, web\" />\n<meta name=\"views\" content=\"64\" />\n<meta name=\"_wp_old_slug\" content=\"velocity-encoding-error\" />\n<p>   First, set some properties for velocity engine. Set vm file reading path. use file read-mode not resource read-mode.<br />\n<br />\n// set velocity path, if you don't do these, you will get Resource not found exception.<br />\nProperties p = new Properties();<br />\np.setProperty(\"resource.loader\", \"file\");<br />\np.setProperty(\"class.resource.loader.class\",\"org.apache.velocity.runtime.resource.loader.FileResourceLoader\");<br />\n// where is your vms path, set it<br />\np.setProperty(\"file.resource.loader.path\", realPath + \"/vm\");<br />\n// set output encoding<br />\n// nearly almost articals said the following will work, but it won't<br />\np.setProperty(Velocity.INPUT_ENCODING, Constant.DEFAULT_ENCODING);<br />\np.setProperty(Velocity.OUTPUT_ENCODING, Constant.DEFAULT_ENCODING);<br />\np.setProperty(\"contentType\", \"text/html;charset=\"+Constant.DEFAULT_ENCODING);<br />\nVelocity.init(p);<br />\n<br />\n   The above code should be write in beginning of use any of velocity objects. In Spring or Java web application, you should write them into Servlet context listener.<br />\n   If you use ascii word. There will no error encoding. But if you use gb2312 or UTF-8. You will find something weird. The above code dose not work. So I use response output to solve those encoding problem. In web application, we always use response.getOutputStream() to write something back. But now, we should construct output stream to write correct encoding word to the page. So velocity can encoding them correctly. The following code will help you.<br />\n<br />\nString encoding = \"utf-8\";<br />\n// If you use UTF-8 encoding in your application<br />\nWriter writer = new PrintWriter(new PrintStream(resp.getOutputStream(), true, encoding));<br />\n// velocity will find abc.vm in your file path folder.<br />\nString pageName = \"abc\";<br />\nTemplate template = Velocity.getTemplate(pageName);<br />\nVelocityContext context = new VelocityContext();<br />\ncontext.put(\"test\", new String(\"hello\".getBytes(encoding), encoding));<br />\n// here velocity will use the writer to write correct encoding words to response stream. So we can see the correct words showed by our page.<br />\ntemplate.merge(context, writer);<br />\n<br />\n   If you use jetty to run your web application, it works fine.<br />\n   But maybe you use windows resin to run war package. Sometimes, error encoding comes again. There is something wrong with your resin application. You should change config file in resin conf folder. In conf/resin.xml( resin 4.0+ ), add &lt;character-encoding&gt;UTF-8&lt;/character-encoding&gt;  in  &lt; web-app-default &gt;. Like following:<br />\n<blockquote>\n&lt; web-app-default &gt;<br />\n    &lt;character-encoding&gt;UTF-8&lt;/character-encoding&gt;<br />\n...<br />\n&lt; /web-app-default &gt;<br />\n</blockquote>\n   And you should use correct charset to start your resin. Else resin will use default charset of your operation system.</p>\n<blockquote><p>java -Dfile.encoding=UTF-8 -jar lib/resin.jar </p></blockquote>\n<p>   Addition, if you use spring framework, don't forget the encoding filter :<br />\n<blockquote>\n&lt;filter&gt;<br />\n    &lt;filter-name&gt;characterEncodingFilter&lt;/filter-name&gt;<br />\n        &lt;filter-class&gt;org.springframework.web.filter.CharacterEncodingFilter&lt;/filter-class&gt;<br />\n        &lt;init-param&gt;<br />\n            &lt;param-name&gt;encoding&lt;/param-name&gt;\n            &lt;param-value&gt;UTF-8&lt;/param-value&gt;\n        &lt;/init-param&gt;<br />\n    &lt;/filter&gt;<br />\n    &lt;filter-mapping&gt;<br />\n        &lt;filter-name&gt;characterEncodingFilter&lt;/filter-name&gt;<br />\n        &lt;url-pattern&gt;/*&lt;/url-pattern&gt;<br />\n    &lt;/filter-mapping&gt;<br />\n</blockquote>\n   In encoding or charset error. You should consider the following :</p>\n<li>  <b>environment (like resin, jetty, eclipse and etc.)</b></li>\n<li>  <b>Input (from outside, like user input, or reading from database )</b></li>\n<li>  <b>Output (to outside, like page presented, or writing to database or file)</b></li>\n<li>  <b>Process (maybe you encode words twice or more, or encode them to some other different charset)</b></li>\n","source":"_posts/2011-12-04-velocity-encoding-error-2.markdown","raw":"---\nlayout: post\ntitle: \"velocity encoding charset error\"\ndate: 2011-12-4\nwordpress_id: 514\ncomments: true\ncategories: [\"charset\", \"encoding\", \"error\", \"exception\", \"java\", \"java\", \"see-hear\", \"velocity\"]\n---\n<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_description\" content=\"There is a solution for solve velocity encoding or charset error.\" />\n<meta name=\"_su_keywords\" content=\"encoding, charset, error, velocity\" />\n<meta name=\"_su_rich_snippet_type\" content=\"none\" />\n<meta name=\"_su_title\" content=\"encoding, charset, velocity, error, exception, java, web\" />\n<meta name=\"views\" content=\"64\" />\n<meta name=\"_wp_old_slug\" content=\"velocity-encoding-error\" />\n<p>   First, set some properties for velocity engine. Set vm file reading path. use file read-mode not resource read-mode.<br />\n<br />\n// set velocity path, if you don't do these, you will get Resource not found exception.<br />\nProperties p = new Properties();<br />\np.setProperty(\"resource.loader\", \"file\");<br />\np.setProperty(\"class.resource.loader.class\",\"org.apache.velocity.runtime.resource.loader.FileResourceLoader\");<br />\n// where is your vms path, set it<br />\np.setProperty(\"file.resource.loader.path\", realPath + \"/vm\");<br />\n// set output encoding<br />\n// nearly almost articals said the following will work, but it won't<br />\np.setProperty(Velocity.INPUT_ENCODING, Constant.DEFAULT_ENCODING);<br />\np.setProperty(Velocity.OUTPUT_ENCODING, Constant.DEFAULT_ENCODING);<br />\np.setProperty(\"contentType\", \"text/html;charset=\"+Constant.DEFAULT_ENCODING);<br />\nVelocity.init(p);<br />\n<br />\n   The above code should be write in beginning of use any of velocity objects. In Spring or Java web application, you should write them into Servlet context listener.<br />\n   If you use ascii word. There will no error encoding. But if you use gb2312 or UTF-8. You will find something weird. The above code dose not work. So I use response output to solve those encoding problem. In web application, we always use response.getOutputStream() to write something back. But now, we should construct output stream to write correct encoding word to the page. So velocity can encoding them correctly. The following code will help you.<br />\n<br />\nString encoding = \"utf-8\";<br />\n// If you use UTF-8 encoding in your application<br />\nWriter writer = new PrintWriter(new PrintStream(resp.getOutputStream(), true, encoding));<br />\n// velocity will find abc.vm in your file path folder.<br />\nString pageName = \"abc\";<br />\nTemplate template = Velocity.getTemplate(pageName);<br />\nVelocityContext context = new VelocityContext();<br />\ncontext.put(\"test\", new String(\"hello\".getBytes(encoding), encoding));<br />\n// here velocity will use the writer to write correct encoding words to response stream. So we can see the correct words showed by our page.<br />\ntemplate.merge(context, writer);<br />\n<br />\n   If you use jetty to run your web application, it works fine.<br />\n   But maybe you use windows resin to run war package. Sometimes, error encoding comes again. There is something wrong with your resin application. You should change config file in resin conf folder. In conf/resin.xml( resin 4.0+ ), add &lt;character-encoding&gt;UTF-8&lt;/character-encoding&gt;  in  &lt; web-app-default &gt;. Like following:<br />\n<blockquote>\n&lt; web-app-default &gt;<br />\n    &lt;character-encoding&gt;UTF-8&lt;/character-encoding&gt;<br />\n...<br />\n&lt; /web-app-default &gt;<br />\n</blockquote>\n   And you should use correct charset to start your resin. Else resin will use default charset of your operation system.</p>\n<blockquote><p>java -Dfile.encoding=UTF-8 -jar lib/resin.jar </p></blockquote>\n<p>   Addition, if you use spring framework, don't forget the encoding filter :<br />\n<blockquote>\n&lt;filter&gt;<br />\n    &lt;filter-name&gt;characterEncodingFilter&lt;/filter-name&gt;<br />\n        &lt;filter-class&gt;org.springframework.web.filter.CharacterEncodingFilter&lt;/filter-class&gt;<br />\n        &lt;init-param&gt;<br />\n            &lt;param-name&gt;encoding&lt;/param-name&gt;\n            &lt;param-value&gt;UTF-8&lt;/param-value&gt;\n        &lt;/init-param&gt;<br />\n    &lt;/filter&gt;<br />\n    &lt;filter-mapping&gt;<br />\n        &lt;filter-name&gt;characterEncodingFilter&lt;/filter-name&gt;<br />\n        &lt;url-pattern&gt;/*&lt;/url-pattern&gt;<br />\n    &lt;/filter-mapping&gt;<br />\n</blockquote>\n   In encoding or charset error. You should consider the following :</p>\n<li>  <b>environment (like resin, jetty, eclipse and etc.)</b></li>\n<li>  <b>Input (from outside, like user input, or reading from database )</b></li>\n<li>  <b>Output (to outside, like page presented, or writing to database or file)</b></li>\n<li>  <b>Process (maybe you encode words twice or more, or encode them to some other different charset)</b></li>\n","slug":"2011-12-04-velocity-encoding-error-2","published":1,"updated":"2017-06-05T02:56:52.000Z","photos":[],"link":"","_id":"cj3jjpbcb001wzumjvueos0vs","content":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_description\" content=\"There is a solution for solve velocity encoding or charset error.\"></p>\n<p><meta name=\"_su_keywords\" content=\"encoding, charset, error, velocity\"></p>\n<p><meta name=\"_su_rich_snippet_type\" content=\"none\"></p>\n<p><meta name=\"_su_title\" content=\"encoding, charset, velocity, error, exception, java, web\"></p>\n<p><meta name=\"views\" content=\"64\"></p>\n<p><meta name=\"_wp_old_slug\" content=\"velocity-encoding-error\"></p>\n<p></p><p>   First, set some properties for velocity engine. Set vm file reading path. use file read-mode not resource read-mode.<br><br><br><br>// set velocity path, if you don’t do these, you will get Resource not found exception.<br><br>Properties p = new Properties();<br><br>p.setProperty(“resource.loader”, “file”);<br><br>p.setProperty(“class.resource.loader.class”,”org.apache.velocity.runtime.resource.loader.FileResourceLoader”);<br><br>// where is your vms path, set it<br><br>p.setProperty(“file.resource.loader.path”, realPath + “/vm”);<br><br>// set output encoding<br><br>// nearly almost articals said the following will work, but it won’t<br><br>p.setProperty(Velocity.INPUT_ENCODING, Constant.DEFAULT_ENCODING);<br><br>p.setProperty(Velocity.OUTPUT_ENCODING, Constant.DEFAULT_ENCODING);<br><br>p.setProperty(“contentType”, “text/html;charset=”+Constant.DEFAULT_ENCODING);<br><br>Velocity.init(p);<br><br><br><br>   The above code should be write in beginning of use any of velocity objects. In Spring or Java web application, you should write them into Servlet context listener.<br><br>   If you use ascii word. There will no error encoding. But if you use gb2312 or UTF-8. You will find something weird. The above code dose not work. So I use response output to solve those encoding problem. In web application, we always use response.getOutputStream() to write something back. But now, we should construct output stream to write correct encoding word to the page. So velocity can encoding them correctly. The following code will help you.<br><br><br><br>String encoding = “utf-8”;<br><br>// If you use UTF-8 encoding in your application<br><br>Writer writer = new PrintWriter(new PrintStream(resp.getOutputStream(), true, encoding));<br><br>// velocity will find abc.vm in your file path folder.<br><br>String pageName = “abc”;<br><br>Template template = Velocity.getTemplate(pageName);<br><br>VelocityContext context = new VelocityContext();<br><br>context.put(“test”, new String(“hello”.getBytes(encoding), encoding));<br><br>// here velocity will use the writer to write correct encoding words to response stream. So we can see the correct words showed by our page.<br><br>template.merge(context, writer);<br><br><br><br>   If you use jetty to run your web application, it works fine.<br><br>   But maybe you use windows resin to run war package. Sometimes, error encoding comes again. There is something wrong with your resin application. You should change config file in resin conf folder. In conf/resin.xml( resin 4.0+ ), add &lt;character-encoding&gt;UTF-8&lt;/character-encoding&gt;  in  &lt; web-app-default &gt;. Like following:<br></p>\n<p><blockquote><br>&lt; web-app-default &gt;<br><br>    &lt;character-encoding&gt;UTF-8&lt;/character-encoding&gt;<br><br>…<br><br>&lt; /web-app-default &gt;<br><br></blockquote><br>   And you should use correct charset to start your resin. Else resin will use default charset of your operation system.</p><p></p>\n<p><blockquote><p>java -Dfile.encoding=UTF-8 -jar lib/resin.jar </p></blockquote></p>\n<p></p><p>   Addition, if you use spring framework, don’t forget the encoding filter :<br></p>\n<p><blockquote><br>&lt;filter&gt;<br><br>    &lt;filter-name&gt;characterEncodingFilter&lt;/filter-name&gt;<br><br>        &lt;filter-class&gt;org.springframework.web.filter.CharacterEncodingFilter&lt;/filter-class&gt;<br><br>        &lt;init-param&gt;<br><br>            &lt;param-name&gt;encoding&lt;/param-name&gt;<br>            &lt;param-value&gt;UTF-8&lt;/param-value&gt;<br>        &lt;/init-param&gt;<br><br>    &lt;/filter&gt;<br><br>    &lt;filter-mapping&gt;<br><br>        &lt;filter-name&gt;characterEncodingFilter&lt;/filter-name&gt;<br><br>        &lt;url-pattern&gt;/*&lt;/url-pattern&gt;<br><br>    &lt;/filter-mapping&gt;<br><br></blockquote><br>   In encoding or charset error. You should consider the following :</p><p></p>\n<li>  <b>environment (like resin, jetty, eclipse and etc.)</b></li><br><li>  <b>Input (from outside, like user input, or reading from database )</b></li><br><li>  <b>Output (to outside, like page presented, or writing to database or file)</b></li><br><li>  <b>Process (maybe you encode words twice or more, or encode them to some other different charset)</b></li>\n","site":{"data":{}},"excerpt":"","more":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_description\" content=\"There is a solution for solve velocity encoding or charset error.\"></p>\n<p><meta name=\"_su_keywords\" content=\"encoding, charset, error, velocity\"></p>\n<p><meta name=\"_su_rich_snippet_type\" content=\"none\"></p>\n<p><meta name=\"_su_title\" content=\"encoding, charset, velocity, error, exception, java, web\"></p>\n<p><meta name=\"views\" content=\"64\"></p>\n<p><meta name=\"_wp_old_slug\" content=\"velocity-encoding-error\"></p>\n<p></p><p>   First, set some properties for velocity engine. Set vm file reading path. use file read-mode not resource read-mode.<br><br><br><br>// set velocity path, if you don’t do these, you will get Resource not found exception.<br><br>Properties p = new Properties();<br><br>p.setProperty(“resource.loader”, “file”);<br><br>p.setProperty(“class.resource.loader.class”,”org.apache.velocity.runtime.resource.loader.FileResourceLoader”);<br><br>// where is your vms path, set it<br><br>p.setProperty(“file.resource.loader.path”, realPath + “/vm”);<br><br>// set output encoding<br><br>// nearly almost articals said the following will work, but it won’t<br><br>p.setProperty(Velocity.INPUT_ENCODING, Constant.DEFAULT_ENCODING);<br><br>p.setProperty(Velocity.OUTPUT_ENCODING, Constant.DEFAULT_ENCODING);<br><br>p.setProperty(“contentType”, “text/html;charset=”+Constant.DEFAULT_ENCODING);<br><br>Velocity.init(p);<br><br><br><br>   The above code should be write in beginning of use any of velocity objects. In Spring or Java web application, you should write them into Servlet context listener.<br><br>   If you use ascii word. There will no error encoding. But if you use gb2312 or UTF-8. You will find something weird. The above code dose not work. So I use response output to solve those encoding problem. In web application, we always use response.getOutputStream() to write something back. But now, we should construct output stream to write correct encoding word to the page. So velocity can encoding them correctly. The following code will help you.<br><br><br><br>String encoding = “utf-8”;<br><br>// If you use UTF-8 encoding in your application<br><br>Writer writer = new PrintWriter(new PrintStream(resp.getOutputStream(), true, encoding));<br><br>// velocity will find abc.vm in your file path folder.<br><br>String pageName = “abc”;<br><br>Template template = Velocity.getTemplate(pageName);<br><br>VelocityContext context = new VelocityContext();<br><br>context.put(“test”, new String(“hello”.getBytes(encoding), encoding));<br><br>// here velocity will use the writer to write correct encoding words to response stream. So we can see the correct words showed by our page.<br><br>template.merge(context, writer);<br><br><br><br>   If you use jetty to run your web application, it works fine.<br><br>   But maybe you use windows resin to run war package. Sometimes, error encoding comes again. There is something wrong with your resin application. You should change config file in resin conf folder. In conf/resin.xml( resin 4.0+ ), add &lt;character-encoding&gt;UTF-8&lt;/character-encoding&gt;  in  &lt; web-app-default &gt;. Like following:<br></p>\n<p><blockquote><br>&lt; web-app-default &gt;<br><br>    &lt;character-encoding&gt;UTF-8&lt;/character-encoding&gt;<br><br>…<br><br>&lt; /web-app-default &gt;<br><br></blockquote><br>   And you should use correct charset to start your resin. Else resin will use default charset of your operation system.</p><p></p>\n<p><blockquote><p>java -Dfile.encoding=UTF-8 -jar lib/resin.jar </p></blockquote></p>\n<p></p><p>   Addition, if you use spring framework, don’t forget the encoding filter :<br></p>\n<p><blockquote><br>&lt;filter&gt;<br><br>    &lt;filter-name&gt;characterEncodingFilter&lt;/filter-name&gt;<br><br>        &lt;filter-class&gt;org.springframework.web.filter.CharacterEncodingFilter&lt;/filter-class&gt;<br><br>        &lt;init-param&gt;<br><br>            &lt;param-name&gt;encoding&lt;/param-name&gt;<br>            &lt;param-value&gt;UTF-8&lt;/param-value&gt;<br>        &lt;/init-param&gt;<br><br>    &lt;/filter&gt;<br><br>    &lt;filter-mapping&gt;<br><br>        &lt;filter-name&gt;characterEncodingFilter&lt;/filter-name&gt;<br><br>        &lt;url-pattern&gt;/*&lt;/url-pattern&gt;<br><br>    &lt;/filter-mapping&gt;<br><br></blockquote><br>   In encoding or charset error. You should consider the following :</p><p></p>\n<li>  <b>environment (like resin, jetty, eclipse and etc.)</b></li><br><li>  <b>Input (from outside, like user input, or reading from database )</b></li><br><li>  <b>Output (to outside, like page presented, or writing to database or file)</b></li><br><li>  <b>Process (maybe you encode words twice or more, or encode them to some other different charset)</b></li>\n"},{"layout":"post","title":"CSDN hacked","date":"2011-12-21T16:00:00.000Z","wordpress_id":527,"comments":1,"_content":"<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_description\" content=\"csdn password\" />\n<meta name=\"_su_rich_snippet_type\" content=\"none\" />\n<meta name=\"_su_title\" content=\"csdn password\" />\n<meta name=\"views\" content=\"55\" />\nCSDN lost its user-password-email information. And all has published in Internet. If you want to find whether your password is exposed. Go to this website[<a href=\"http://0bad.com/csdn.php\" title=\"the link\" target=\"_blank\">the link</a>].\n<table>\n<tr><tb> repeat times </tb><tb> passwod </tb><tb> percent </tb></tr><br/>\n<tr><tb> 501 </tb><tb> qwerasdf </tb><tb> (0.0124073903469017) </tb></tr><br/>\n<tr><tb> 504 </tb><tb> computer </tb><tb> (0.012481686097482) </tb></tr><br/>\n<tr><tb> 519 </tb><tb> zxczxczxc </tb><tb> (0.0128531648503832) </tb></tr><br/>\n<tr><tb> 521 </tb><tb> dddddddd </tb><tb> (0.0129026953507701) </tb></tr><br/>\n<tr><tb> 525 </tb><tb> 299792458 </tb><tb> (0.0130017563515437) </tb></tr><br/>\n<tr><tb> 532 </tb><tb> 135792468 </tb><tb> (0.0131751131028976) </tb></tr><br/>\n<tr><tb> 535 </tb><tb> 20082008 </tb><tb> (0.0132494088534779) </tb></tr><br/>\n<tr><tb> 536 </tb><tb> 369369369 </tb><tb> (0.0132741741036713) </tb></tr><br/>\n<tr><tb> 553 </tb><tb> 5845211314 </tb><tb> (0.0136951833569594) </tb></tr><br/>\n<tr><tb> 556 </tb><tb> yangyang </tb><tb> (0.0137694791075396) </tb></tr><br/>\n<tr><tb> 559 </tb><tb> csdncsdn </tb><tb> (0.0138437748581199) </tb></tr><br/>\n<tr><tb> 559 </tb><tb> google250 </tb><tb> (0.0138437748581199) </tb></tr><br/>\n<tr><tb> 561 </tb><tb> woaini520 </tb><tb> (0.0138933053585067) </tb></tr><br/>\n<tr><tb> 562 </tb><tb> zhang123 </tb><tb> (0.0139180706087001) </tb></tr><br/>\n<tr><tb> 562 </tb><tb> 1234567b </tb><tb> (0.0139180706087001) </tb></tr><br/>\n<tr><tb> 565 </tb><tb> wocaonima </tb><tb> (0.0139923663592804) </tb></tr><br/>\n<tr><tb> 567 </tb><tb> 1233211234567 </tb><tb> (0.0140418968596672) </tb></tr><br/>\n<tr><tb> 567 </tb><tb> 9876543210 </tb><tb> (0.0140418968596672) </tb></tr><br/>\n<tr><tb> 570 </tb><tb> qaz123456 </tb><tb> (0.0141161926102475) </tb></tr><br/>\n<tr><tb> 571 </tb><tb> q123456789 </tb><tb> (0.0141409578604409) </tb></tr><br/>\n<tr><tb> 572 </tb><tb> 321654987 </tb><tb> (0.0141657231106343) </tb></tr><br/>\n<tr><tb> 578 </tb><tb> 369258147 </tb><tb> (0.0143143146117948) </tb></tr><br/>\n<tr><tb> 585 </tb><tb> aaa123456 </tb><tb> (0.0144876713631487) </tb></tr><br/>\n<tr><tb> 589 </tb><tb> 1357924680 </tb><tb> (0.0145867323639224) </tb></tr><br/>\n<tr><tb> 592 </tb><tb> 123321aa </tb><tb> (0.0146610281145026) </tb></tr><br/>\n<tr><tb> 601 </tb><tb> 25257758 </tb><tb> (0.0148839153662434) </tb></tr><br/>\n<tr><tb> 608 </tb><tb> wojiushiwo </tb><tb> (0.0150572721175973) </tb></tr><br/>\n<tr><tb> 616 </tb><tb> ssssssss </tb><tb> (0.0152553941191446) </tb></tr><br/>\n<tr><tb> 618 </tb><tb> qazwsx123 </tb><tb> (0.0153049246195315) </tb></tr><br/>\n<tr><tb> 621 </tb><tb> 123456aaa </tb><tb> (0.0153792203701117) </tb></tr><br/>\n<tr><tb> 623 </tb><tb> 1234567a </tb><tb> (0.0154287508704985) </tb></tr><br/>\n<tr><tb> 642 </tb><tb> z123456789 </tb><tb> (0.0158992906241735) </tb></tr><br/>\n<tr><tb> 649 </tb><tb> woainima </tb><tb> (0.0160726473755274) </tb></tr><br/>\n<tr><tb> 650 </tb><tb> 44444444 </tb><tb> (0.0160974126257208) </tb></tr><br/>\n<tr><tb> 651 </tb><tb> buzhidao </tb><tb> (0.0161221778759142) </tb></tr><br/>\n<tr><tb> 657 </tb><tb> ffffffff </tb><tb> (0.0162707693770747) </tb></tr><br/>\n<tr><tb> 669 </tb><tb> 100200300 </tb><tb> (0.0165679523793957) </tb></tr><br/>\n<tr><tb> 680 </tb><tb> 12345679 </tb><tb> (0.0168403701315233) </tb></tr><br/>\n<tr><tb> 685 </tb><tb> 12369874 </tb><tb> (0.0169641963824904) </tb></tr><br/>\n<tr><tb> 693 </tb><tb> 1122334455 </tb><tb> (0.0171623183840377) </tb></tr><br/>\n<tr><tb> 702 </tb><tb> 111111 </tb><tb> (0.0173852056357785) </tb></tr><br/>\n<tr><tb> 708 </tb><tb> woaini123 </tb><tb> (0.017533797136939) </tb></tr><br/>\n<tr><tb> 713 </tb><tb> qwe123456 </tb><tb> (0.017657623387906) </tb></tr><br/>\n<tr><tb> 726 </tb><tb> xiaoxiao </tb><tb> (0.0179795716404205) </tb></tr><br/>\n<tr><tb> 727 </tb><tb> 123456654321 </tb><tb> (0.0180043368906139) </tb></tr><br/>\n<tr><tb> 729 </tb><tb> woshishui </tb><tb> (0.0180538673910007) </tb></tr><br/>\n<tr><tb> 732 </tb><tb> 12301230 </tb><tb> (0.018128163141581) </tb></tr><br/>\n<tr><tb> 740 </tb><tb> 1234554321 </tb><tb> (0.0183262851431283) </tb></tr><br/>\n<tr><tb> 741 </tb><tb> 5201314520 </tb><tb> (0.0183510503933217) </tb></tr><br/>\n<tr><tb> 744 </tb><tb> 12345612 </tb><tb> (0.018425346143902) </tb></tr><br/>\n<tr><tb> 765 </tb><tb> lilylily </tb><tb> (0.0189454163979637) </tb></tr><br/>\n<tr><tb> 770 </tb><tb> 123456asd </tb><tb> (0.0190692426489308) </tb></tr><br/>\n<tr><tb> 772 </tb><tb> 10101010 </tb><tb> (0.0191187731493176) </tb></tr><br/>\n<tr><tb> 777 </tb><tb> 1q2w3e4r5t </tb><tb> (0.0192425994002847) </tb></tr><br/>\n<tr><tb> 783 </tb><tb> 11235813 </tb><tb> (0.0193911909014452) </tb></tr><br/>\n<tr><tb> 805 </tb><tb> 12345600 </tb><tb> (0.0199360264057004) </tb></tr><br/>\n<tr><tb> 835 </tb><tb> 11111111111111111111 </tb><tb> (0.0206789839115029) </tb></tr><br/>\n<tr><tb> 847 </tb><tb> wwwwwwww </tb><tb> (0.0209761669138239) </tb></tr><br/>\n<tr><tb> 852 </tb><tb> 0987654321 </tb><tb> (0.0210999931647909) </tb></tr><br/>\n<tr><tb> 882 </tb><tb> 5845201314 </tb><tb> (0.0218429506705934) </tb></tr><br/>\n<tr><tb> 882 </tb><tb> zxcvbnm123 </tb><tb> (0.0218429506705934) </tb></tr><br/>\n<tr><tb> 892 </tb><tb> kingcom5 </tb><tb> (0.0220906031725276) </tb></tr><br/>\n<tr><tb> 894 </tb><tb> 123456987 </tb><tb> (0.0221401336729144) </tb></tr><br/>\n<tr><tb> 910 </tb><tb> 05962514787 </tb><tb> (0.0225363776760091) </tb></tr><br/>\n<tr><tb> 920 </tb><tb> 321321321 </tb><tb> (0.0227840301779433) </tb></tr><br/>\n<tr><tb> 967 </tb><tb> woaiwojia </tb><tb> (0.0239479969370339) </tb></tr><br/>\n<tr><tb> 975 </tb><tb> 1qazxsw2 </tb><tb> (0.0241461189385812) </tb></tr><br/>\n<tr><tb> 988 </tb><tb> 123qweasd </tb><tb> (0.0244680671910956) </tb></tr><br/>\n<tr><tb> 991 </tb><tb> 1234abcd </tb><tb> (0.0245423629416759) </tb></tr><br/>\n<tr><tb> 1003 </tb><tb> woaini1314 </tb><tb> (0.0248395459439969) </tb></tr><br/>\n<tr><tb> 1037 </tb><tb> 12345678a </tb><tb> (0.025681564450573) </tb></tr><br/>\n<tr><tb> 1054 </tb><tb> q1w2e3r4 </tb><tb> (0.0261025737038611) </tb></tr><br/>\n<tr><tb> 1058 </tb><tb> asdfghjk </tb><tb> (0.0262016347046348) </tb></tr><br/>\n<tr><tb> 1109 </tb><tb> 1123581321 </tb><tb> (0.027464662464499) </tb></tr><br/>\n<tr><tb> 1111 </tb><tb> 123698745 </tb><tb> (0.0275141929648858) </tb></tr><br/>\n<tr><tb> 1119 </tb><tb> asdf1234 </tb><tb> (0.0277123149664332) </tb></tr><br/>\n<tr><tb> 1136 </tb><tb> 521521521 </tb><tb> (0.0281333242197213) </tb></tr><br/>\n<tr><tb> 1148 </tb><tb> 147852369 </tb><tb> (0.0284305072220423) </tb></tr><br/>\n<tr><tb> 1183 </tb><tb> 123456qq </tb><tb> (0.0292972909788118) </tb></tr><br/>\n<tr><tb> 1200 </tb><tb> 3.1415926 </tb><tb> (0.0297183002320999) </tb></tr><br/>\n<tr><tb> 1206 </tb><tb> qweqweqwe </tb><tb> (0.0298668917332604) </tb></tr><br/>\n<tr><tb> 1214 </tb><tb> 111222333 </tb><tb> (0.0300650137348078) </tb></tr><br/>\n<tr><tb> 1245 </tb><tb> zzzzzzzz </tb><tb> (0.0308327364908037) </tb></tr><br/>\n<tr><tb> 1268 </tb><tb> ms0083jxj </tb><tb> (0.0314023372452523) </tb></tr><br/>\n<tr><tb> 1273 </tb><tb> 11112222 </tb><tb> (0.0315261634962193) </tb></tr><br/>\n<tr><tb> 1285 </tb><tb> code8925 </tb><tb> (0.0318233464985403) </tb></tr><br/>\n<tr><tb> 1316 </tb><tb> qweasdzxc </tb><tb> (0.0325910692545363) </tb></tr><br/>\n<tr><tb> 1339 </tb><tb> 77777777 </tb><tb> (0.0331606700089848) </tb></tr><br/>\n<tr><tb> 1384 </tb><tb> asd123456 </tb><tb> (0.0342751062676886) </tb></tr><br/>\n<tr><tb> 1480 </tb><tb> qwer1234 </tb><tb> (0.0366525702862566) </tb></tr><br/>\n<tr><tb> 1589 </tb><tb> 33333333 </tb><tb> (0.039351982557339) </tb></tr><br/>\n<tr><tb> 1652 </tb><tb> 55555555 </tb><tb> (0.0409121933195242) </tb></tr><br/>\n<tr><tb> 1652 </tb><tb> 741852963 </tb><tb> (0.0409121933195242) </tb></tr><br/>\n<tr><tb> 1656 </tb><tb> 963852741 </tb><tb> (0.0410112543202979) </tb></tr><br/>\n<tr><tb> 1699 </tb><tb> 520520520 </tb><tb> (0.0420761600786148) </tb></tr><br/>\n<tr><tb> 1854 </tb><tb> 123456123456 </tb><tb> (0.0459147738585944) </tb></tr><br/>\n<tr><tb> 1859 </tb><tb> 999999999 </tb><tb> (0.0460386001095615) </tb></tr><br/>\n<tr><tb> 1859 </tb><tb> 123456aa </tb><tb> (0.0460386001095615) </tb></tr><br/>\n<tr><tb> 1891 </tb><tb> 99999999 </tb><tb> (0.0468310881157508) </tb></tr><br/>\n<tr><tb> 1918 </tb><tb> asdfasdf </tb><tb> (0.047499749870973) </tb></tr><br/>\n<tr><tb> 1971 </tb><tb> aa123456 </tb><tb> (0.0488123081312241) </tb></tr><br/>\n<tr><tb> 1986 </tb><tb> 123456789a </tb><tb> (0.0491837868841254) </tb></tr><br/>\n<tr><tb> 1989 </tb><tb> qwertyui </tb><tb> (0.0492580826347056) </tb></tr><br/>\n<tr><tb> 2100 </tb><tb> 1234qwer </tb><tb> (0.0520070254061749) </tb></tr><br/>\n<tr><tb> 2106 </tb><tb> a1234567 </tb><tb> (0.0521556169073354) </tb></tr><br/>\n<tr><tb> 2113 </tb><tb> 123456123 </tb><tb> (0.0523289736586893) </tb></tr><br/>\n<tr><tb> 2131 </tb><tb> 123456 </tb><tb> (0.0527747481621708) </tb></tr><br/>\n<tr><tb> 2138 </tb><tb> a12345678 </tb><tb> (0.0529481049135247) </tb></tr><br/>\n<tr><tb> 2160 </tb><tb> abc123456 </tb><tb> (0.0534929404177799) </tb></tr><br/>\n<tr><tb> 2166 </tb><tb> 123321123 </tb><tb> (0.0536415319189404) </tb></tr><br/>\n<tr><tb> 2243 </tb><tb> 22222222 </tb><tb> (0.0555484561838334) </tb></tr><br/>\n<tr><tb> 2296 </tb><tb> asdasdasd </tb><tb> (0.0568610144440845) </tb></tr><br/>\n<tr><tb> 2348 </tb><tb> 110110110 </tb><tb> (0.0581488074541422) </tb></tr><br/>\n<tr><tb> 2380 </tb><tb> 12341234 </tb><tb> (0.0589412954603315) </tb></tr><br/>\n<tr><tb> 2396 </tb><tb> abcd1234 </tb><tb> (0.0593375394634262) </tb></tr><br/>\n<tr><tb> 2515 </tb><tb> qazwsxedc </tb><tb> (0.0622846042364428) </tb></tr><br/>\n<tr><tb> 2540 </tb><tb> 12121212 </tb><tb> (0.0629037354912782) </tb></tr><br/>\n<tr><tb> 2573 </tb><tb> 123654789 </tb><tb> (0.0637209887476609) </tb></tr><br/>\n<tr><tb> 2578 </tb><tb> 0123456789 </tb><tb> (0.063844814998628) </tb></tr><br/>\n<tr><tb> 2580 </tb><tb> 123456abc </tb><tb> (0.0638943454990148) </tb></tr><br/>\n<tr><tb> 2796 </tb><tb> 1q2w3e4r </tb><tb> (0.0692436395407928) </tb></tr><br/>\n<tr><tb> 2826 </tb><tb> asdfghjkl </tb><tb> (0.0699865970465953) </tb></tr><br/>\n<tr><tb> 2885 </tb><tb> 0000000000 </tb><tb> (0.0714477468080069) </tb></tr><br/>\n<tr><tb> 2985 </tb><tb> 12344321 </tb><tb> (0.0739242718273486) </tb></tr><br/>\n<tr><tb> 3061 </tb><tb> 31415926 </tb><tb> (0.0758064308420482) </tb></tr><br/>\n<tr><tb> 3080 </tb><tb> iloveyou </tb><tb> (0.0762769705957231) </tb></tr><br/>\n<tr><tb> 3094 </tb><tb> qq123456 </tb><tb> (0.076623684098431) </tb></tr><br/>\n<tr><tb> 3143 </tb><tb> qwertyuiop </tb><tb> (0.0778371813579084) </tb></tr><br/>\n<tr><tb> 3175 </tb><tb> 000000000 </tb><tb> (0.0786296693640977) </tb></tr><br/>\n<tr><tb> 3277 </tb><tb> qqqqqqqq </tb><tb> (0.0811557248838262) </tb></tr><br/>\n<tr><tb> 3281 </tb><tb> 87654321 </tb><tb> (0.0812547858845999) </tb></tr><br/>\n<tr><tb> 3501 </tb><tb> password </tb><tb> (0.0867031409271515) </tb></tr><br/>\n<tr><tb> 3610 </tb><tb> 789456123 </tb><tb> (0.0894025531982339) </tb></tr><br/>\n<tr><tb> 3649 </tb><tb> xiazhili </tb><tb> (0.0903683979557772) </tb></tr><br/>\n<tr><tb> 3667 </tb><tb> 1qaz2wsx </tb><tb> (0.0908141724592587) </tb></tr><br/>\n<tr><tb> 4096 </tb><tb> 11223344 </tb><tb> (0.101438464792234) </tb></tr><br/>\n<tr><tb> 4435 </tb><tb> a123456789 </tb><tb> (0.109833884607803) </tb></tr><br/>\n<tr><tb> 5025 </tb><tb> 66666666 </tb><tb> (0.124445382221918) </tb></tr><br/>\n<tr><tb> 5145 </tb><tb> 1111111111 </tb><tb> (0.127417212245128) </tb></tr><br/>\n<tr><tb> 5459 </tb><tb> aaaaaaaa </tb><tb> (0.135193500805861) </tb></tr><br/>\n<tr><tb> 5553 </tb><tb> 987654321 </tb><tb> (0.137521434324042) </tb></tr><br/>\n<tr><tb> 5965 </tb><tb> 147258369 </tb><tb> (0.14772471740373) </tb></tr><br/>\n<tr><tb> 6995 </tb><tb> 111111111 </tb><tb> (0.173232925102949) </tb></tr><br/>\n<tr><tb> 15033 </tb><tb> 88888888 </tb><tb> (0.372296006157632) </tb></tr><br/>\n<tr><tb> 17790 </tb><tb> 1234567890 </tb><tb> (0.440573800940881) </tb></tr><br/>\n<tr><tb> 19986 </tb><tb> 123123123 </tb><tb> (0.494958290365624) </tb></tr><br/>\n<tr><tb> 34952 </tb><tb> 00000000 </tb><tb> (0.865595024760297) </tb></tr><br/>\n<tr><tb> 46053 </tb><tb> dearbook </tb><tb> (1.14051406715741) </tb></tr><br/>\n<tr><tb> 76346 </tb><tb> 11111111 </tb><tb> (1.89072779126658) </tb></tr><br/>\n<tr><tb> 212749 </tb><tb> 12345678 </tb><tb> (5.26878221339919) </tb></tr><br/>\n<tr><tb> 235012 </tb><tb> 123456789 </tb><tb> (5.82013097845522) </tb></tr><br/>\n</table><br/>\n<!--more-->\nCSDN的用户名-密码-邮箱被泄露在互联网上。如果你想知道自己的用户名密码是否被泄露，点击<a href=\"http://0bad.com/csdn.php\" target=\"_blank\">链接</a>。\n这里是统计出的密码重复次数。转载自某个地方..\n<table>\n<tr><tb> 重复次数 </tb><tb> 密码 </tb><tb> 百分比 </tb></tr><br/>\n<tr><tb> 501 </tb><tb> qwerasdf </tb><tb> (0.0124073903469017) </tb></tr><br/>\n<tr><tb> 504 </tb><tb> computer </tb><tb> (0.012481686097482) </tb></tr><br/>\n<tr><tb> 519 </tb><tb> zxczxczxc </tb><tb> (0.0128531648503832) </tb></tr><br/>\n<tr><tb> 521 </tb><tb> dddddddd </tb><tb> (0.0129026953507701) </tb></tr><br/>\n<tr><tb> 525 </tb><tb> 299792458 </tb><tb> (0.0130017563515437) </tb></tr><br/>\n<tr><tb> 532 </tb><tb> 135792468 </tb><tb> (0.0131751131028976) </tb></tr><br/>\n<tr><tb> 535 </tb><tb> 20082008 </tb><tb> (0.0132494088534779) </tb></tr><br/>\n<tr><tb> 536 </tb><tb> 369369369 </tb><tb> (0.0132741741036713) </tb></tr><br/>\n<tr><tb> 553 </tb><tb> 5845211314 </tb><tb> (0.0136951833569594) </tb></tr><br/>\n<tr><tb> 556 </tb><tb> yangyang </tb><tb> (0.0137694791075396) </tb></tr><br/>\n<tr><tb> 559 </tb><tb> csdncsdn </tb><tb> (0.0138437748581199) </tb></tr><br/>\n<tr><tb> 559 </tb><tb> google250 </tb><tb> (0.0138437748581199) </tb></tr><br/>\n<tr><tb> 561 </tb><tb> woaini520 </tb><tb> (0.0138933053585067) </tb></tr><br/>\n<tr><tb> 562 </tb><tb> zhang123 </tb><tb> (0.0139180706087001) </tb></tr><br/>\n<tr><tb> 562 </tb><tb> 1234567b </tb><tb> (0.0139180706087001) </tb></tr><br/>\n<tr><tb> 565 </tb><tb> wocaonima </tb><tb> (0.0139923663592804) </tb></tr><br/>\n<tr><tb> 567 </tb><tb> 1233211234567 </tb><tb> (0.0140418968596672) </tb></tr><br/>\n<tr><tb> 567 </tb><tb> 9876543210 </tb><tb> (0.0140418968596672) </tb></tr><br/>\n<tr><tb> 570 </tb><tb> qaz123456 </tb><tb> (0.0141161926102475) </tb></tr><br/>\n<tr><tb> 571 </tb><tb> q123456789 </tb><tb> (0.0141409578604409) </tb></tr><br/>\n<tr><tb> 572 </tb><tb> 321654987 </tb><tb> (0.0141657231106343) </tb></tr><br/>\n<tr><tb> 578 </tb><tb> 369258147 </tb><tb> (0.0143143146117948) </tb></tr><br/>\n<tr><tb> 585 </tb><tb> aaa123456 </tb><tb> (0.0144876713631487) </tb></tr><br/>\n<tr><tb> 589 </tb><tb> 1357924680 </tb><tb> (0.0145867323639224) </tb></tr><br/>\n<tr><tb> 592 </tb><tb> 123321aa </tb><tb> (0.0146610281145026) </tb></tr><br/>\n<tr><tb> 601 </tb><tb> 25257758 </tb><tb> (0.0148839153662434) </tb></tr><br/>\n<tr><tb> 608 </tb><tb> wojiushiwo </tb><tb> (0.0150572721175973) </tb></tr><br/>\n<tr><tb> 616 </tb><tb> ssssssss </tb><tb> (0.0152553941191446) </tb></tr><br/>\n<tr><tb> 618 </tb><tb> qazwsx123 </tb><tb> (0.0153049246195315) </tb></tr><br/>\n<tr><tb> 621 </tb><tb> 123456aaa </tb><tb> (0.0153792203701117) </tb></tr><br/>\n<tr><tb> 623 </tb><tb> 1234567a </tb><tb> (0.0154287508704985) </tb></tr><br/>\n<tr><tb> 642 </tb><tb> z123456789 </tb><tb> (0.0158992906241735) </tb></tr><br/>\n<tr><tb> 649 </tb><tb> woainima </tb><tb> (0.0160726473755274) </tb></tr><br/>\n<tr><tb> 650 </tb><tb> 44444444 </tb><tb> (0.0160974126257208) </tb></tr><br/>\n<tr><tb> 651 </tb><tb> buzhidao </tb><tb> (0.0161221778759142) </tb></tr><br/>\n<tr><tb> 657 </tb><tb> ffffffff </tb><tb> (0.0162707693770747) </tb></tr><br/>\n<tr><tb> 669 </tb><tb> 100200300 </tb><tb> (0.0165679523793957) </tb></tr><br/>\n<tr><tb> 680 </tb><tb> 12345679 </tb><tb> (0.0168403701315233) </tb></tr><br/>\n<tr><tb> 685 </tb><tb> 12369874 </tb><tb> (0.0169641963824904) </tb></tr><br/>\n<tr><tb> 693 </tb><tb> 1122334455 </tb><tb> (0.0171623183840377) </tb></tr><br/>\n<tr><tb> 702 </tb><tb> 111111 </tb><tb> (0.0173852056357785) </tb></tr><br/>\n<tr><tb> 708 </tb><tb> woaini123 </tb><tb> (0.017533797136939) </tb></tr><br/>\n<tr><tb> 713 </tb><tb> qwe123456 </tb><tb> (0.017657623387906) </tb></tr><br/>\n<tr><tb> 726 </tb><tb> xiaoxiao </tb><tb> (0.0179795716404205) </tb></tr><br/>\n<tr><tb> 727 </tb><tb> 123456654321 </tb><tb> (0.0180043368906139) </tb></tr><br/>\n<tr><tb> 729 </tb><tb> woshishui </tb><tb> (0.0180538673910007) </tb></tr><br/>\n<tr><tb> 732 </tb><tb> 12301230 </tb><tb> (0.018128163141581) </tb></tr><br/>\n<tr><tb> 740 </tb><tb> 1234554321 </tb><tb> (0.0183262851431283) </tb></tr><br/>\n<tr><tb> 741 </tb><tb> 5201314520 </tb><tb> (0.0183510503933217) </tb></tr><br/>\n<tr><tb> 744 </tb><tb> 12345612 </tb><tb> (0.018425346143902) </tb></tr><br/>\n<tr><tb> 765 </tb><tb> lilylily </tb><tb> (0.0189454163979637) </tb></tr><br/>\n<tr><tb> 770 </tb><tb> 123456asd </tb><tb> (0.0190692426489308) </tb></tr><br/>\n<tr><tb> 772 </tb><tb> 10101010 </tb><tb> (0.0191187731493176) </tb></tr><br/>\n<tr><tb> 777 </tb><tb> 1q2w3e4r5t </tb><tb> (0.0192425994002847) </tb></tr><br/>\n<tr><tb> 783 </tb><tb> 11235813 </tb><tb> (0.0193911909014452) </tb></tr><br/>\n<tr><tb> 805 </tb><tb> 12345600 </tb><tb> (0.0199360264057004) </tb></tr><br/>\n<tr><tb> 835 </tb><tb> 11111111111111111111 </tb><tb> (0.0206789839115029) </tb></tr><br/>\n<tr><tb> 847 </tb><tb> wwwwwwww </tb><tb> (0.0209761669138239) </tb></tr><br/>\n<tr><tb> 852 </tb><tb> 0987654321 </tb><tb> (0.0210999931647909) </tb></tr><br/>\n<tr><tb> 882 </tb><tb> 5845201314 </tb><tb> (0.0218429506705934) </tb></tr><br/>\n<tr><tb> 882 </tb><tb> zxcvbnm123 </tb><tb> (0.0218429506705934) </tb></tr><br/>\n<tr><tb> 892 </tb><tb> kingcom5 </tb><tb> (0.0220906031725276) </tb></tr><br/>\n<tr><tb> 894 </tb><tb> 123456987 </tb><tb> (0.0221401336729144) </tb></tr><br/>\n<tr><tb> 910 </tb><tb> 05962514787 </tb><tb> (0.0225363776760091) </tb></tr><br/>\n<tr><tb> 920 </tb><tb> 321321321 </tb><tb> (0.0227840301779433) </tb></tr><br/>\n<tr><tb> 967 </tb><tb> woaiwojia </tb><tb> (0.0239479969370339) </tb></tr><br/>\n<tr><tb> 975 </tb><tb> 1qazxsw2 </tb><tb> (0.0241461189385812) </tb></tr><br/>\n<tr><tb> 988 </tb><tb> 123qweasd </tb><tb> (0.0244680671910956) </tb></tr><br/>\n<tr><tb> 991 </tb><tb> 1234abcd </tb><tb> (0.0245423629416759) </tb></tr><br/>\n<tr><tb> 1003 </tb><tb> woaini1314 </tb><tb> (0.0248395459439969) </tb></tr><br/>\n<tr><tb> 1037 </tb><tb> 12345678a </tb><tb> (0.025681564450573) </tb></tr><br/>\n<tr><tb> 1054 </tb><tb> q1w2e3r4 </tb><tb> (0.0261025737038611) </tb></tr><br/>\n<tr><tb> 1058 </tb><tb> asdfghjk </tb><tb> (0.0262016347046348) </tb></tr><br/>\n<tr><tb> 1109 </tb><tb> 1123581321 </tb><tb> (0.027464662464499) </tb></tr><br/>\n<tr><tb> 1111 </tb><tb> 123698745 </tb><tb> (0.0275141929648858) </tb></tr><br/>\n<tr><tb> 1119 </tb><tb> asdf1234 </tb><tb> (0.0277123149664332) </tb></tr><br/>\n<tr><tb> 1136 </tb><tb> 521521521 </tb><tb> (0.0281333242197213) </tb></tr><br/>\n<tr><tb> 1148 </tb><tb> 147852369 </tb><tb> (0.0284305072220423) </tb></tr><br/>\n<tr><tb> 1183 </tb><tb> 123456qq </tb><tb> (0.0292972909788118) </tb></tr><br/>\n<tr><tb> 1200 </tb><tb> 3.1415926 </tb><tb> (0.0297183002320999) </tb></tr><br/>\n<tr><tb> 1206 </tb><tb> qweqweqwe </tb><tb> (0.0298668917332604) </tb></tr><br/>\n<tr><tb> 1214 </tb><tb> 111222333 </tb><tb> (0.0300650137348078) </tb></tr><br/>\n<tr><tb> 1245 </tb><tb> zzzzzzzz </tb><tb> (0.0308327364908037) </tb></tr><br/>\n<tr><tb> 1268 </tb><tb> ms0083jxj </tb><tb> (0.0314023372452523) </tb></tr><br/>\n<tr><tb> 1273 </tb><tb> 11112222 </tb><tb> (0.0315261634962193) </tb></tr><br/>\n<tr><tb> 1285 </tb><tb> code8925 </tb><tb> (0.0318233464985403) </tb></tr><br/>\n<tr><tb> 1316 </tb><tb> qweasdzxc </tb><tb> (0.0325910692545363) </tb></tr><br/>\n<tr><tb> 1339 </tb><tb> 77777777 </tb><tb> (0.0331606700089848) </tb></tr><br/>\n<tr><tb> 1384 </tb><tb> asd123456 </tb><tb> (0.0342751062676886) </tb></tr><br/>\n<tr><tb> 1480 </tb><tb> qwer1234 </tb><tb> (0.0366525702862566) </tb></tr><br/>\n<tr><tb> 1589 </tb><tb> 33333333 </tb><tb> (0.039351982557339) </tb></tr><br/>\n<tr><tb> 1652 </tb><tb> 55555555 </tb><tb> (0.0409121933195242) </tb></tr><br/>\n<tr><tb> 1652 </tb><tb> 741852963 </tb><tb> (0.0409121933195242) </tb></tr><br/>\n<tr><tb> 1656 </tb><tb> 963852741 </tb><tb> (0.0410112543202979) </tb></tr><br/>\n<tr><tb> 1699 </tb><tb> 520520520 </tb><tb> (0.0420761600786148) </tb></tr><br/>\n<tr><tb> 1854 </tb><tb> 123456123456 </tb><tb> (0.0459147738585944) </tb></tr><br/>\n<tr><tb> 1859 </tb><tb> 999999999 </tb><tb> (0.0460386001095615) </tb></tr><br/>\n<tr><tb> 1859 </tb><tb> 123456aa </tb><tb> (0.0460386001095615) </tb></tr><br/>\n<tr><tb> 1891 </tb><tb> 99999999 </tb><tb> (0.0468310881157508) </tb></tr><br/>\n<tr><tb> 1918 </tb><tb> asdfasdf </tb><tb> (0.047499749870973) </tb></tr><br/>\n<tr><tb> 1971 </tb><tb> aa123456 </tb><tb> (0.0488123081312241) </tb></tr><br/>\n<tr><tb> 1986 </tb><tb> 123456789a </tb><tb> (0.0491837868841254) </tb></tr><br/>\n<tr><tb> 1989 </tb><tb> qwertyui </tb><tb> (0.0492580826347056) </tb></tr><br/>\n<tr><tb> 2100 </tb><tb> 1234qwer </tb><tb> (0.0520070254061749) </tb></tr><br/>\n<tr><tb> 2106 </tb><tb> a1234567 </tb><tb> (0.0521556169073354) </tb></tr><br/>\n<tr><tb> 2113 </tb><tb> 123456123 </tb><tb> (0.0523289736586893) </tb></tr><br/>\n<tr><tb> 2131 </tb><tb> 123456 </tb><tb> (0.0527747481621708) </tb></tr><br/>\n<tr><tb> 2138 </tb><tb> a12345678 </tb><tb> (0.0529481049135247) </tb></tr><br/>\n<tr><tb> 2160 </tb><tb> abc123456 </tb><tb> (0.0534929404177799) </tb></tr><br/>\n<tr><tb> 2166 </tb><tb> 123321123 </tb><tb> (0.0536415319189404) </tb></tr><br/>\n<tr><tb> 2243 </tb><tb> 22222222 </tb><tb> (0.0555484561838334) </tb></tr><br/>\n<tr><tb> 2296 </tb><tb> asdasdasd </tb><tb> (0.0568610144440845) </tb></tr><br/>\n<tr><tb> 2348 </tb><tb> 110110110 </tb><tb> (0.0581488074541422) </tb></tr><br/>\n<tr><tb> 2380 </tb><tb> 12341234 </tb><tb> (0.0589412954603315) </tb></tr><br/>\n<tr><tb> 2396 </tb><tb> abcd1234 </tb><tb> (0.0593375394634262) </tb></tr><br/>\n<tr><tb> 2515 </tb><tb> qazwsxedc </tb><tb> (0.0622846042364428) </tb></tr><br/>\n<tr><tb> 2540 </tb><tb> 12121212 </tb><tb> (0.0629037354912782) </tb></tr><br/>\n<tr><tb> 2573 </tb><tb> 123654789 </tb><tb> (0.0637209887476609) </tb></tr><br/>\n<tr><tb> 2578 </tb><tb> 0123456789 </tb><tb> (0.063844814998628) </tb></tr><br/>\n<tr><tb> 2580 </tb><tb> 123456abc </tb><tb> (0.0638943454990148) </tb></tr><br/>\n<tr><tb> 2796 </tb><tb> 1q2w3e4r </tb><tb> (0.0692436395407928) </tb></tr><br/>\n<tr><tb> 2826 </tb><tb> asdfghjkl </tb><tb> (0.0699865970465953) </tb></tr><br/>\n<tr><tb> 2885 </tb><tb> 0000000000 </tb><tb> (0.0714477468080069) </tb></tr><br/>\n<tr><tb> 2985 </tb><tb> 12344321 </tb><tb> (0.0739242718273486) </tb></tr><br/>\n<tr><tb> 3061 </tb><tb> 31415926 </tb><tb> (0.0758064308420482) </tb></tr><br/>\n<tr><tb> 3080 </tb><tb> iloveyou </tb><tb> (0.0762769705957231) </tb></tr><br/>\n<tr><tb> 3094 </tb><tb> qq123456 </tb><tb> (0.076623684098431) </tb></tr><br/>\n<tr><tb> 3143 </tb><tb> qwertyuiop </tb><tb> (0.0778371813579084) </tb></tr><br/>\n<tr><tb> 3175 </tb><tb> 000000000 </tb><tb> (0.0786296693640977) </tb></tr><br/>\n<tr><tb> 3277 </tb><tb> qqqqqqqq </tb><tb> (0.0811557248838262) </tb></tr><br/>\n<tr><tb> 3281 </tb><tb> 87654321 </tb><tb> (0.0812547858845999) </tb></tr><br/>\n<tr><tb> 3501 </tb><tb> password </tb><tb> (0.0867031409271515) </tb></tr><br/>\n<tr><tb> 3610 </tb><tb> 789456123 </tb><tb> (0.0894025531982339) </tb></tr><br/>\n<tr><tb> 3649 </tb><tb> xiazhili </tb><tb> (0.0903683979557772) </tb></tr><br/>\n<tr><tb> 3667 </tb><tb> 1qaz2wsx </tb><tb> (0.0908141724592587) </tb></tr><br/>\n<tr><tb> 4096 </tb><tb> 11223344 </tb><tb> (0.101438464792234) </tb></tr><br/>\n<tr><tb> 4435 </tb><tb> a123456789 </tb><tb> (0.109833884607803) </tb></tr><br/>\n<tr><tb> 5025 </tb><tb> 66666666 </tb><tb> (0.124445382221918) </tb></tr><br/>\n<tr><tb> 5145 </tb><tb> 1111111111 </tb><tb> (0.127417212245128) </tb></tr><br/>\n<tr><tb> 5459 </tb><tb> aaaaaaaa </tb><tb> (0.135193500805861) </tb></tr><br/>\n<tr><tb> 5553 </tb><tb> 987654321 </tb><tb> (0.137521434324042) </tb></tr><br/>\n<tr><tb> 5965 </tb><tb> 147258369 </tb><tb> (0.14772471740373) </tb></tr><br/>\n<tr><tb> 6995 </tb><tb> 111111111 </tb><tb> (0.173232925102949) </tb></tr><br/>\n<tr><tb> 15033 </tb><tb> 88888888 </tb><tb> (0.372296006157632) </tb></tr><br/>\n<tr><tb> 17790 </tb><tb> 1234567890 </tb><tb> (0.440573800940881) </tb></tr><br/>\n<tr><tb> 19986 </tb><tb> 123123123 </tb><tb> (0.494958290365624) </tb></tr><br/>\n<tr><tb> 34952 </tb><tb> 00000000 </tb><tb> (0.865595024760297) </tb></tr><br/>\n<tr><tb> 46053 </tb><tb> dearbook </tb><tb> (1.14051406715741) </tb></tr><br/>\n<tr><tb> 76346 </tb><tb> 11111111 </tb><tb> (1.89072779126658) </tb></tr><br/>\n<tr><tb> 212749 </tb><tb> 12345678 </tb><tb> (5.26878221339919) </tb></tr><br/>\n<tr><tb> 235012 </tb><tb> 123456789 </tb><tb> (5.82013097845522) </tb></tr><br/>\n</table>\n","source":"_posts/2011-12-22-csdn-hacked.markdown","raw":"---\nlayout: post\ntitle: \"CSDN hacked\"\ndate: 2011-12-22\nwordpress_id: 527\ncomments: true\ncategories: [\"csdn\", \"see-hear\"]\n---\n<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_description\" content=\"csdn password\" />\n<meta name=\"_su_rich_snippet_type\" content=\"none\" />\n<meta name=\"_su_title\" content=\"csdn password\" />\n<meta name=\"views\" content=\"55\" />\nCSDN lost its user-password-email information. And all has published in Internet. If you want to find whether your password is exposed. Go to this website[<a href=\"http://0bad.com/csdn.php\" title=\"the link\" target=\"_blank\">the link</a>].\n<table>\n<tr><tb> repeat times </tb><tb> passwod </tb><tb> percent </tb></tr><br/>\n<tr><tb> 501 </tb><tb> qwerasdf </tb><tb> (0.0124073903469017) </tb></tr><br/>\n<tr><tb> 504 </tb><tb> computer </tb><tb> (0.012481686097482) </tb></tr><br/>\n<tr><tb> 519 </tb><tb> zxczxczxc </tb><tb> (0.0128531648503832) </tb></tr><br/>\n<tr><tb> 521 </tb><tb> dddddddd </tb><tb> (0.0129026953507701) </tb></tr><br/>\n<tr><tb> 525 </tb><tb> 299792458 </tb><tb> (0.0130017563515437) </tb></tr><br/>\n<tr><tb> 532 </tb><tb> 135792468 </tb><tb> (0.0131751131028976) </tb></tr><br/>\n<tr><tb> 535 </tb><tb> 20082008 </tb><tb> (0.0132494088534779) </tb></tr><br/>\n<tr><tb> 536 </tb><tb> 369369369 </tb><tb> (0.0132741741036713) </tb></tr><br/>\n<tr><tb> 553 </tb><tb> 5845211314 </tb><tb> (0.0136951833569594) </tb></tr><br/>\n<tr><tb> 556 </tb><tb> yangyang </tb><tb> (0.0137694791075396) </tb></tr><br/>\n<tr><tb> 559 </tb><tb> csdncsdn </tb><tb> (0.0138437748581199) </tb></tr><br/>\n<tr><tb> 559 </tb><tb> google250 </tb><tb> (0.0138437748581199) </tb></tr><br/>\n<tr><tb> 561 </tb><tb> woaini520 </tb><tb> (0.0138933053585067) </tb></tr><br/>\n<tr><tb> 562 </tb><tb> zhang123 </tb><tb> (0.0139180706087001) </tb></tr><br/>\n<tr><tb> 562 </tb><tb> 1234567b </tb><tb> (0.0139180706087001) </tb></tr><br/>\n<tr><tb> 565 </tb><tb> wocaonima </tb><tb> (0.0139923663592804) </tb></tr><br/>\n<tr><tb> 567 </tb><tb> 1233211234567 </tb><tb> (0.0140418968596672) </tb></tr><br/>\n<tr><tb> 567 </tb><tb> 9876543210 </tb><tb> (0.0140418968596672) </tb></tr><br/>\n<tr><tb> 570 </tb><tb> qaz123456 </tb><tb> (0.0141161926102475) </tb></tr><br/>\n<tr><tb> 571 </tb><tb> q123456789 </tb><tb> (0.0141409578604409) </tb></tr><br/>\n<tr><tb> 572 </tb><tb> 321654987 </tb><tb> (0.0141657231106343) </tb></tr><br/>\n<tr><tb> 578 </tb><tb> 369258147 </tb><tb> (0.0143143146117948) </tb></tr><br/>\n<tr><tb> 585 </tb><tb> aaa123456 </tb><tb> (0.0144876713631487) </tb></tr><br/>\n<tr><tb> 589 </tb><tb> 1357924680 </tb><tb> (0.0145867323639224) </tb></tr><br/>\n<tr><tb> 592 </tb><tb> 123321aa </tb><tb> (0.0146610281145026) </tb></tr><br/>\n<tr><tb> 601 </tb><tb> 25257758 </tb><tb> (0.0148839153662434) </tb></tr><br/>\n<tr><tb> 608 </tb><tb> wojiushiwo </tb><tb> (0.0150572721175973) </tb></tr><br/>\n<tr><tb> 616 </tb><tb> ssssssss </tb><tb> (0.0152553941191446) </tb></tr><br/>\n<tr><tb> 618 </tb><tb> qazwsx123 </tb><tb> (0.0153049246195315) </tb></tr><br/>\n<tr><tb> 621 </tb><tb> 123456aaa </tb><tb> (0.0153792203701117) </tb></tr><br/>\n<tr><tb> 623 </tb><tb> 1234567a </tb><tb> (0.0154287508704985) </tb></tr><br/>\n<tr><tb> 642 </tb><tb> z123456789 </tb><tb> (0.0158992906241735) </tb></tr><br/>\n<tr><tb> 649 </tb><tb> woainima </tb><tb> (0.0160726473755274) </tb></tr><br/>\n<tr><tb> 650 </tb><tb> 44444444 </tb><tb> (0.0160974126257208) </tb></tr><br/>\n<tr><tb> 651 </tb><tb> buzhidao </tb><tb> (0.0161221778759142) </tb></tr><br/>\n<tr><tb> 657 </tb><tb> ffffffff </tb><tb> (0.0162707693770747) </tb></tr><br/>\n<tr><tb> 669 </tb><tb> 100200300 </tb><tb> (0.0165679523793957) </tb></tr><br/>\n<tr><tb> 680 </tb><tb> 12345679 </tb><tb> (0.0168403701315233) </tb></tr><br/>\n<tr><tb> 685 </tb><tb> 12369874 </tb><tb> (0.0169641963824904) </tb></tr><br/>\n<tr><tb> 693 </tb><tb> 1122334455 </tb><tb> (0.0171623183840377) </tb></tr><br/>\n<tr><tb> 702 </tb><tb> 111111 </tb><tb> (0.0173852056357785) </tb></tr><br/>\n<tr><tb> 708 </tb><tb> woaini123 </tb><tb> (0.017533797136939) </tb></tr><br/>\n<tr><tb> 713 </tb><tb> qwe123456 </tb><tb> (0.017657623387906) </tb></tr><br/>\n<tr><tb> 726 </tb><tb> xiaoxiao </tb><tb> (0.0179795716404205) </tb></tr><br/>\n<tr><tb> 727 </tb><tb> 123456654321 </tb><tb> (0.0180043368906139) </tb></tr><br/>\n<tr><tb> 729 </tb><tb> woshishui </tb><tb> (0.0180538673910007) </tb></tr><br/>\n<tr><tb> 732 </tb><tb> 12301230 </tb><tb> (0.018128163141581) </tb></tr><br/>\n<tr><tb> 740 </tb><tb> 1234554321 </tb><tb> (0.0183262851431283) </tb></tr><br/>\n<tr><tb> 741 </tb><tb> 5201314520 </tb><tb> (0.0183510503933217) </tb></tr><br/>\n<tr><tb> 744 </tb><tb> 12345612 </tb><tb> (0.018425346143902) </tb></tr><br/>\n<tr><tb> 765 </tb><tb> lilylily </tb><tb> (0.0189454163979637) </tb></tr><br/>\n<tr><tb> 770 </tb><tb> 123456asd </tb><tb> (0.0190692426489308) </tb></tr><br/>\n<tr><tb> 772 </tb><tb> 10101010 </tb><tb> (0.0191187731493176) </tb></tr><br/>\n<tr><tb> 777 </tb><tb> 1q2w3e4r5t </tb><tb> (0.0192425994002847) </tb></tr><br/>\n<tr><tb> 783 </tb><tb> 11235813 </tb><tb> (0.0193911909014452) </tb></tr><br/>\n<tr><tb> 805 </tb><tb> 12345600 </tb><tb> (0.0199360264057004) </tb></tr><br/>\n<tr><tb> 835 </tb><tb> 11111111111111111111 </tb><tb> (0.0206789839115029) </tb></tr><br/>\n<tr><tb> 847 </tb><tb> wwwwwwww </tb><tb> (0.0209761669138239) </tb></tr><br/>\n<tr><tb> 852 </tb><tb> 0987654321 </tb><tb> (0.0210999931647909) </tb></tr><br/>\n<tr><tb> 882 </tb><tb> 5845201314 </tb><tb> (0.0218429506705934) </tb></tr><br/>\n<tr><tb> 882 </tb><tb> zxcvbnm123 </tb><tb> (0.0218429506705934) </tb></tr><br/>\n<tr><tb> 892 </tb><tb> kingcom5 </tb><tb> (0.0220906031725276) </tb></tr><br/>\n<tr><tb> 894 </tb><tb> 123456987 </tb><tb> (0.0221401336729144) </tb></tr><br/>\n<tr><tb> 910 </tb><tb> 05962514787 </tb><tb> (0.0225363776760091) </tb></tr><br/>\n<tr><tb> 920 </tb><tb> 321321321 </tb><tb> (0.0227840301779433) </tb></tr><br/>\n<tr><tb> 967 </tb><tb> woaiwojia </tb><tb> (0.0239479969370339) </tb></tr><br/>\n<tr><tb> 975 </tb><tb> 1qazxsw2 </tb><tb> (0.0241461189385812) </tb></tr><br/>\n<tr><tb> 988 </tb><tb> 123qweasd </tb><tb> (0.0244680671910956) </tb></tr><br/>\n<tr><tb> 991 </tb><tb> 1234abcd </tb><tb> (0.0245423629416759) </tb></tr><br/>\n<tr><tb> 1003 </tb><tb> woaini1314 </tb><tb> (0.0248395459439969) </tb></tr><br/>\n<tr><tb> 1037 </tb><tb> 12345678a </tb><tb> (0.025681564450573) </tb></tr><br/>\n<tr><tb> 1054 </tb><tb> q1w2e3r4 </tb><tb> (0.0261025737038611) </tb></tr><br/>\n<tr><tb> 1058 </tb><tb> asdfghjk </tb><tb> (0.0262016347046348) </tb></tr><br/>\n<tr><tb> 1109 </tb><tb> 1123581321 </tb><tb> (0.027464662464499) </tb></tr><br/>\n<tr><tb> 1111 </tb><tb> 123698745 </tb><tb> (0.0275141929648858) </tb></tr><br/>\n<tr><tb> 1119 </tb><tb> asdf1234 </tb><tb> (0.0277123149664332) </tb></tr><br/>\n<tr><tb> 1136 </tb><tb> 521521521 </tb><tb> (0.0281333242197213) </tb></tr><br/>\n<tr><tb> 1148 </tb><tb> 147852369 </tb><tb> (0.0284305072220423) </tb></tr><br/>\n<tr><tb> 1183 </tb><tb> 123456qq </tb><tb> (0.0292972909788118) </tb></tr><br/>\n<tr><tb> 1200 </tb><tb> 3.1415926 </tb><tb> (0.0297183002320999) </tb></tr><br/>\n<tr><tb> 1206 </tb><tb> qweqweqwe </tb><tb> (0.0298668917332604) </tb></tr><br/>\n<tr><tb> 1214 </tb><tb> 111222333 </tb><tb> (0.0300650137348078) </tb></tr><br/>\n<tr><tb> 1245 </tb><tb> zzzzzzzz </tb><tb> (0.0308327364908037) </tb></tr><br/>\n<tr><tb> 1268 </tb><tb> ms0083jxj </tb><tb> (0.0314023372452523) </tb></tr><br/>\n<tr><tb> 1273 </tb><tb> 11112222 </tb><tb> (0.0315261634962193) </tb></tr><br/>\n<tr><tb> 1285 </tb><tb> code8925 </tb><tb> (0.0318233464985403) </tb></tr><br/>\n<tr><tb> 1316 </tb><tb> qweasdzxc </tb><tb> (0.0325910692545363) </tb></tr><br/>\n<tr><tb> 1339 </tb><tb> 77777777 </tb><tb> (0.0331606700089848) </tb></tr><br/>\n<tr><tb> 1384 </tb><tb> asd123456 </tb><tb> (0.0342751062676886) </tb></tr><br/>\n<tr><tb> 1480 </tb><tb> qwer1234 </tb><tb> (0.0366525702862566) </tb></tr><br/>\n<tr><tb> 1589 </tb><tb> 33333333 </tb><tb> (0.039351982557339) </tb></tr><br/>\n<tr><tb> 1652 </tb><tb> 55555555 </tb><tb> (0.0409121933195242) </tb></tr><br/>\n<tr><tb> 1652 </tb><tb> 741852963 </tb><tb> (0.0409121933195242) </tb></tr><br/>\n<tr><tb> 1656 </tb><tb> 963852741 </tb><tb> (0.0410112543202979) </tb></tr><br/>\n<tr><tb> 1699 </tb><tb> 520520520 </tb><tb> (0.0420761600786148) </tb></tr><br/>\n<tr><tb> 1854 </tb><tb> 123456123456 </tb><tb> (0.0459147738585944) </tb></tr><br/>\n<tr><tb> 1859 </tb><tb> 999999999 </tb><tb> (0.0460386001095615) </tb></tr><br/>\n<tr><tb> 1859 </tb><tb> 123456aa </tb><tb> (0.0460386001095615) </tb></tr><br/>\n<tr><tb> 1891 </tb><tb> 99999999 </tb><tb> (0.0468310881157508) </tb></tr><br/>\n<tr><tb> 1918 </tb><tb> asdfasdf </tb><tb> (0.047499749870973) </tb></tr><br/>\n<tr><tb> 1971 </tb><tb> aa123456 </tb><tb> (0.0488123081312241) </tb></tr><br/>\n<tr><tb> 1986 </tb><tb> 123456789a </tb><tb> (0.0491837868841254) </tb></tr><br/>\n<tr><tb> 1989 </tb><tb> qwertyui </tb><tb> (0.0492580826347056) </tb></tr><br/>\n<tr><tb> 2100 </tb><tb> 1234qwer </tb><tb> (0.0520070254061749) </tb></tr><br/>\n<tr><tb> 2106 </tb><tb> a1234567 </tb><tb> (0.0521556169073354) </tb></tr><br/>\n<tr><tb> 2113 </tb><tb> 123456123 </tb><tb> (0.0523289736586893) </tb></tr><br/>\n<tr><tb> 2131 </tb><tb> 123456 </tb><tb> (0.0527747481621708) </tb></tr><br/>\n<tr><tb> 2138 </tb><tb> a12345678 </tb><tb> (0.0529481049135247) </tb></tr><br/>\n<tr><tb> 2160 </tb><tb> abc123456 </tb><tb> (0.0534929404177799) </tb></tr><br/>\n<tr><tb> 2166 </tb><tb> 123321123 </tb><tb> (0.0536415319189404) </tb></tr><br/>\n<tr><tb> 2243 </tb><tb> 22222222 </tb><tb> (0.0555484561838334) </tb></tr><br/>\n<tr><tb> 2296 </tb><tb> asdasdasd </tb><tb> (0.0568610144440845) </tb></tr><br/>\n<tr><tb> 2348 </tb><tb> 110110110 </tb><tb> (0.0581488074541422) </tb></tr><br/>\n<tr><tb> 2380 </tb><tb> 12341234 </tb><tb> (0.0589412954603315) </tb></tr><br/>\n<tr><tb> 2396 </tb><tb> abcd1234 </tb><tb> (0.0593375394634262) </tb></tr><br/>\n<tr><tb> 2515 </tb><tb> qazwsxedc </tb><tb> (0.0622846042364428) </tb></tr><br/>\n<tr><tb> 2540 </tb><tb> 12121212 </tb><tb> (0.0629037354912782) </tb></tr><br/>\n<tr><tb> 2573 </tb><tb> 123654789 </tb><tb> (0.0637209887476609) </tb></tr><br/>\n<tr><tb> 2578 </tb><tb> 0123456789 </tb><tb> (0.063844814998628) </tb></tr><br/>\n<tr><tb> 2580 </tb><tb> 123456abc </tb><tb> (0.0638943454990148) </tb></tr><br/>\n<tr><tb> 2796 </tb><tb> 1q2w3e4r </tb><tb> (0.0692436395407928) </tb></tr><br/>\n<tr><tb> 2826 </tb><tb> asdfghjkl </tb><tb> (0.0699865970465953) </tb></tr><br/>\n<tr><tb> 2885 </tb><tb> 0000000000 </tb><tb> (0.0714477468080069) </tb></tr><br/>\n<tr><tb> 2985 </tb><tb> 12344321 </tb><tb> (0.0739242718273486) </tb></tr><br/>\n<tr><tb> 3061 </tb><tb> 31415926 </tb><tb> (0.0758064308420482) </tb></tr><br/>\n<tr><tb> 3080 </tb><tb> iloveyou </tb><tb> (0.0762769705957231) </tb></tr><br/>\n<tr><tb> 3094 </tb><tb> qq123456 </tb><tb> (0.076623684098431) </tb></tr><br/>\n<tr><tb> 3143 </tb><tb> qwertyuiop </tb><tb> (0.0778371813579084) </tb></tr><br/>\n<tr><tb> 3175 </tb><tb> 000000000 </tb><tb> (0.0786296693640977) </tb></tr><br/>\n<tr><tb> 3277 </tb><tb> qqqqqqqq </tb><tb> (0.0811557248838262) </tb></tr><br/>\n<tr><tb> 3281 </tb><tb> 87654321 </tb><tb> (0.0812547858845999) </tb></tr><br/>\n<tr><tb> 3501 </tb><tb> password </tb><tb> (0.0867031409271515) </tb></tr><br/>\n<tr><tb> 3610 </tb><tb> 789456123 </tb><tb> (0.0894025531982339) </tb></tr><br/>\n<tr><tb> 3649 </tb><tb> xiazhili </tb><tb> (0.0903683979557772) </tb></tr><br/>\n<tr><tb> 3667 </tb><tb> 1qaz2wsx </tb><tb> (0.0908141724592587) </tb></tr><br/>\n<tr><tb> 4096 </tb><tb> 11223344 </tb><tb> (0.101438464792234) </tb></tr><br/>\n<tr><tb> 4435 </tb><tb> a123456789 </tb><tb> (0.109833884607803) </tb></tr><br/>\n<tr><tb> 5025 </tb><tb> 66666666 </tb><tb> (0.124445382221918) </tb></tr><br/>\n<tr><tb> 5145 </tb><tb> 1111111111 </tb><tb> (0.127417212245128) </tb></tr><br/>\n<tr><tb> 5459 </tb><tb> aaaaaaaa </tb><tb> (0.135193500805861) </tb></tr><br/>\n<tr><tb> 5553 </tb><tb> 987654321 </tb><tb> (0.137521434324042) </tb></tr><br/>\n<tr><tb> 5965 </tb><tb> 147258369 </tb><tb> (0.14772471740373) </tb></tr><br/>\n<tr><tb> 6995 </tb><tb> 111111111 </tb><tb> (0.173232925102949) </tb></tr><br/>\n<tr><tb> 15033 </tb><tb> 88888888 </tb><tb> (0.372296006157632) </tb></tr><br/>\n<tr><tb> 17790 </tb><tb> 1234567890 </tb><tb> (0.440573800940881) </tb></tr><br/>\n<tr><tb> 19986 </tb><tb> 123123123 </tb><tb> (0.494958290365624) </tb></tr><br/>\n<tr><tb> 34952 </tb><tb> 00000000 </tb><tb> (0.865595024760297) </tb></tr><br/>\n<tr><tb> 46053 </tb><tb> dearbook </tb><tb> (1.14051406715741) </tb></tr><br/>\n<tr><tb> 76346 </tb><tb> 11111111 </tb><tb> (1.89072779126658) </tb></tr><br/>\n<tr><tb> 212749 </tb><tb> 12345678 </tb><tb> (5.26878221339919) </tb></tr><br/>\n<tr><tb> 235012 </tb><tb> 123456789 </tb><tb> (5.82013097845522) </tb></tr><br/>\n</table><br/>\n<!--more-->\nCSDN的用户名-密码-邮箱被泄露在互联网上。如果你想知道自己的用户名密码是否被泄露，点击<a href=\"http://0bad.com/csdn.php\" target=\"_blank\">链接</a>。\n这里是统计出的密码重复次数。转载自某个地方..\n<table>\n<tr><tb> 重复次数 </tb><tb> 密码 </tb><tb> 百分比 </tb></tr><br/>\n<tr><tb> 501 </tb><tb> qwerasdf </tb><tb> (0.0124073903469017) </tb></tr><br/>\n<tr><tb> 504 </tb><tb> computer </tb><tb> (0.012481686097482) </tb></tr><br/>\n<tr><tb> 519 </tb><tb> zxczxczxc </tb><tb> (0.0128531648503832) </tb></tr><br/>\n<tr><tb> 521 </tb><tb> dddddddd </tb><tb> (0.0129026953507701) </tb></tr><br/>\n<tr><tb> 525 </tb><tb> 299792458 </tb><tb> (0.0130017563515437) </tb></tr><br/>\n<tr><tb> 532 </tb><tb> 135792468 </tb><tb> (0.0131751131028976) </tb></tr><br/>\n<tr><tb> 535 </tb><tb> 20082008 </tb><tb> (0.0132494088534779) </tb></tr><br/>\n<tr><tb> 536 </tb><tb> 369369369 </tb><tb> (0.0132741741036713) </tb></tr><br/>\n<tr><tb> 553 </tb><tb> 5845211314 </tb><tb> (0.0136951833569594) </tb></tr><br/>\n<tr><tb> 556 </tb><tb> yangyang </tb><tb> (0.0137694791075396) </tb></tr><br/>\n<tr><tb> 559 </tb><tb> csdncsdn </tb><tb> (0.0138437748581199) </tb></tr><br/>\n<tr><tb> 559 </tb><tb> google250 </tb><tb> (0.0138437748581199) </tb></tr><br/>\n<tr><tb> 561 </tb><tb> woaini520 </tb><tb> (0.0138933053585067) </tb></tr><br/>\n<tr><tb> 562 </tb><tb> zhang123 </tb><tb> (0.0139180706087001) </tb></tr><br/>\n<tr><tb> 562 </tb><tb> 1234567b </tb><tb> (0.0139180706087001) </tb></tr><br/>\n<tr><tb> 565 </tb><tb> wocaonima </tb><tb> (0.0139923663592804) </tb></tr><br/>\n<tr><tb> 567 </tb><tb> 1233211234567 </tb><tb> (0.0140418968596672) </tb></tr><br/>\n<tr><tb> 567 </tb><tb> 9876543210 </tb><tb> (0.0140418968596672) </tb></tr><br/>\n<tr><tb> 570 </tb><tb> qaz123456 </tb><tb> (0.0141161926102475) </tb></tr><br/>\n<tr><tb> 571 </tb><tb> q123456789 </tb><tb> (0.0141409578604409) </tb></tr><br/>\n<tr><tb> 572 </tb><tb> 321654987 </tb><tb> (0.0141657231106343) </tb></tr><br/>\n<tr><tb> 578 </tb><tb> 369258147 </tb><tb> (0.0143143146117948) </tb></tr><br/>\n<tr><tb> 585 </tb><tb> aaa123456 </tb><tb> (0.0144876713631487) </tb></tr><br/>\n<tr><tb> 589 </tb><tb> 1357924680 </tb><tb> (0.0145867323639224) </tb></tr><br/>\n<tr><tb> 592 </tb><tb> 123321aa </tb><tb> (0.0146610281145026) </tb></tr><br/>\n<tr><tb> 601 </tb><tb> 25257758 </tb><tb> (0.0148839153662434) </tb></tr><br/>\n<tr><tb> 608 </tb><tb> wojiushiwo </tb><tb> (0.0150572721175973) </tb></tr><br/>\n<tr><tb> 616 </tb><tb> ssssssss </tb><tb> (0.0152553941191446) </tb></tr><br/>\n<tr><tb> 618 </tb><tb> qazwsx123 </tb><tb> (0.0153049246195315) </tb></tr><br/>\n<tr><tb> 621 </tb><tb> 123456aaa </tb><tb> (0.0153792203701117) </tb></tr><br/>\n<tr><tb> 623 </tb><tb> 1234567a </tb><tb> (0.0154287508704985) </tb></tr><br/>\n<tr><tb> 642 </tb><tb> z123456789 </tb><tb> (0.0158992906241735) </tb></tr><br/>\n<tr><tb> 649 </tb><tb> woainima </tb><tb> (0.0160726473755274) </tb></tr><br/>\n<tr><tb> 650 </tb><tb> 44444444 </tb><tb> (0.0160974126257208) </tb></tr><br/>\n<tr><tb> 651 </tb><tb> buzhidao </tb><tb> (0.0161221778759142) </tb></tr><br/>\n<tr><tb> 657 </tb><tb> ffffffff </tb><tb> (0.0162707693770747) </tb></tr><br/>\n<tr><tb> 669 </tb><tb> 100200300 </tb><tb> (0.0165679523793957) </tb></tr><br/>\n<tr><tb> 680 </tb><tb> 12345679 </tb><tb> (0.0168403701315233) </tb></tr><br/>\n<tr><tb> 685 </tb><tb> 12369874 </tb><tb> (0.0169641963824904) </tb></tr><br/>\n<tr><tb> 693 </tb><tb> 1122334455 </tb><tb> (0.0171623183840377) </tb></tr><br/>\n<tr><tb> 702 </tb><tb> 111111 </tb><tb> (0.0173852056357785) </tb></tr><br/>\n<tr><tb> 708 </tb><tb> woaini123 </tb><tb> (0.017533797136939) </tb></tr><br/>\n<tr><tb> 713 </tb><tb> qwe123456 </tb><tb> (0.017657623387906) </tb></tr><br/>\n<tr><tb> 726 </tb><tb> xiaoxiao </tb><tb> (0.0179795716404205) </tb></tr><br/>\n<tr><tb> 727 </tb><tb> 123456654321 </tb><tb> (0.0180043368906139) </tb></tr><br/>\n<tr><tb> 729 </tb><tb> woshishui </tb><tb> (0.0180538673910007) </tb></tr><br/>\n<tr><tb> 732 </tb><tb> 12301230 </tb><tb> (0.018128163141581) </tb></tr><br/>\n<tr><tb> 740 </tb><tb> 1234554321 </tb><tb> (0.0183262851431283) </tb></tr><br/>\n<tr><tb> 741 </tb><tb> 5201314520 </tb><tb> (0.0183510503933217) </tb></tr><br/>\n<tr><tb> 744 </tb><tb> 12345612 </tb><tb> (0.018425346143902) </tb></tr><br/>\n<tr><tb> 765 </tb><tb> lilylily </tb><tb> (0.0189454163979637) </tb></tr><br/>\n<tr><tb> 770 </tb><tb> 123456asd </tb><tb> (0.0190692426489308) </tb></tr><br/>\n<tr><tb> 772 </tb><tb> 10101010 </tb><tb> (0.0191187731493176) </tb></tr><br/>\n<tr><tb> 777 </tb><tb> 1q2w3e4r5t </tb><tb> (0.0192425994002847) </tb></tr><br/>\n<tr><tb> 783 </tb><tb> 11235813 </tb><tb> (0.0193911909014452) </tb></tr><br/>\n<tr><tb> 805 </tb><tb> 12345600 </tb><tb> (0.0199360264057004) </tb></tr><br/>\n<tr><tb> 835 </tb><tb> 11111111111111111111 </tb><tb> (0.0206789839115029) </tb></tr><br/>\n<tr><tb> 847 </tb><tb> wwwwwwww </tb><tb> (0.0209761669138239) </tb></tr><br/>\n<tr><tb> 852 </tb><tb> 0987654321 </tb><tb> (0.0210999931647909) </tb></tr><br/>\n<tr><tb> 882 </tb><tb> 5845201314 </tb><tb> (0.0218429506705934) </tb></tr><br/>\n<tr><tb> 882 </tb><tb> zxcvbnm123 </tb><tb> (0.0218429506705934) </tb></tr><br/>\n<tr><tb> 892 </tb><tb> kingcom5 </tb><tb> (0.0220906031725276) </tb></tr><br/>\n<tr><tb> 894 </tb><tb> 123456987 </tb><tb> (0.0221401336729144) </tb></tr><br/>\n<tr><tb> 910 </tb><tb> 05962514787 </tb><tb> (0.0225363776760091) </tb></tr><br/>\n<tr><tb> 920 </tb><tb> 321321321 </tb><tb> (0.0227840301779433) </tb></tr><br/>\n<tr><tb> 967 </tb><tb> woaiwojia </tb><tb> (0.0239479969370339) </tb></tr><br/>\n<tr><tb> 975 </tb><tb> 1qazxsw2 </tb><tb> (0.0241461189385812) </tb></tr><br/>\n<tr><tb> 988 </tb><tb> 123qweasd </tb><tb> (0.0244680671910956) </tb></tr><br/>\n<tr><tb> 991 </tb><tb> 1234abcd </tb><tb> (0.0245423629416759) </tb></tr><br/>\n<tr><tb> 1003 </tb><tb> woaini1314 </tb><tb> (0.0248395459439969) </tb></tr><br/>\n<tr><tb> 1037 </tb><tb> 12345678a </tb><tb> (0.025681564450573) </tb></tr><br/>\n<tr><tb> 1054 </tb><tb> q1w2e3r4 </tb><tb> (0.0261025737038611) </tb></tr><br/>\n<tr><tb> 1058 </tb><tb> asdfghjk </tb><tb> (0.0262016347046348) </tb></tr><br/>\n<tr><tb> 1109 </tb><tb> 1123581321 </tb><tb> (0.027464662464499) </tb></tr><br/>\n<tr><tb> 1111 </tb><tb> 123698745 </tb><tb> (0.0275141929648858) </tb></tr><br/>\n<tr><tb> 1119 </tb><tb> asdf1234 </tb><tb> (0.0277123149664332) </tb></tr><br/>\n<tr><tb> 1136 </tb><tb> 521521521 </tb><tb> (0.0281333242197213) </tb></tr><br/>\n<tr><tb> 1148 </tb><tb> 147852369 </tb><tb> (0.0284305072220423) </tb></tr><br/>\n<tr><tb> 1183 </tb><tb> 123456qq </tb><tb> (0.0292972909788118) </tb></tr><br/>\n<tr><tb> 1200 </tb><tb> 3.1415926 </tb><tb> (0.0297183002320999) </tb></tr><br/>\n<tr><tb> 1206 </tb><tb> qweqweqwe </tb><tb> (0.0298668917332604) </tb></tr><br/>\n<tr><tb> 1214 </tb><tb> 111222333 </tb><tb> (0.0300650137348078) </tb></tr><br/>\n<tr><tb> 1245 </tb><tb> zzzzzzzz </tb><tb> (0.0308327364908037) </tb></tr><br/>\n<tr><tb> 1268 </tb><tb> ms0083jxj </tb><tb> (0.0314023372452523) </tb></tr><br/>\n<tr><tb> 1273 </tb><tb> 11112222 </tb><tb> (0.0315261634962193) </tb></tr><br/>\n<tr><tb> 1285 </tb><tb> code8925 </tb><tb> (0.0318233464985403) </tb></tr><br/>\n<tr><tb> 1316 </tb><tb> qweasdzxc </tb><tb> (0.0325910692545363) </tb></tr><br/>\n<tr><tb> 1339 </tb><tb> 77777777 </tb><tb> (0.0331606700089848) </tb></tr><br/>\n<tr><tb> 1384 </tb><tb> asd123456 </tb><tb> (0.0342751062676886) </tb></tr><br/>\n<tr><tb> 1480 </tb><tb> qwer1234 </tb><tb> (0.0366525702862566) </tb></tr><br/>\n<tr><tb> 1589 </tb><tb> 33333333 </tb><tb> (0.039351982557339) </tb></tr><br/>\n<tr><tb> 1652 </tb><tb> 55555555 </tb><tb> (0.0409121933195242) </tb></tr><br/>\n<tr><tb> 1652 </tb><tb> 741852963 </tb><tb> (0.0409121933195242) </tb></tr><br/>\n<tr><tb> 1656 </tb><tb> 963852741 </tb><tb> (0.0410112543202979) </tb></tr><br/>\n<tr><tb> 1699 </tb><tb> 520520520 </tb><tb> (0.0420761600786148) </tb></tr><br/>\n<tr><tb> 1854 </tb><tb> 123456123456 </tb><tb> (0.0459147738585944) </tb></tr><br/>\n<tr><tb> 1859 </tb><tb> 999999999 </tb><tb> (0.0460386001095615) </tb></tr><br/>\n<tr><tb> 1859 </tb><tb> 123456aa </tb><tb> (0.0460386001095615) </tb></tr><br/>\n<tr><tb> 1891 </tb><tb> 99999999 </tb><tb> (0.0468310881157508) </tb></tr><br/>\n<tr><tb> 1918 </tb><tb> asdfasdf </tb><tb> (0.047499749870973) </tb></tr><br/>\n<tr><tb> 1971 </tb><tb> aa123456 </tb><tb> (0.0488123081312241) </tb></tr><br/>\n<tr><tb> 1986 </tb><tb> 123456789a </tb><tb> (0.0491837868841254) </tb></tr><br/>\n<tr><tb> 1989 </tb><tb> qwertyui </tb><tb> (0.0492580826347056) </tb></tr><br/>\n<tr><tb> 2100 </tb><tb> 1234qwer </tb><tb> (0.0520070254061749) </tb></tr><br/>\n<tr><tb> 2106 </tb><tb> a1234567 </tb><tb> (0.0521556169073354) </tb></tr><br/>\n<tr><tb> 2113 </tb><tb> 123456123 </tb><tb> (0.0523289736586893) </tb></tr><br/>\n<tr><tb> 2131 </tb><tb> 123456 </tb><tb> (0.0527747481621708) </tb></tr><br/>\n<tr><tb> 2138 </tb><tb> a12345678 </tb><tb> (0.0529481049135247) </tb></tr><br/>\n<tr><tb> 2160 </tb><tb> abc123456 </tb><tb> (0.0534929404177799) </tb></tr><br/>\n<tr><tb> 2166 </tb><tb> 123321123 </tb><tb> (0.0536415319189404) </tb></tr><br/>\n<tr><tb> 2243 </tb><tb> 22222222 </tb><tb> (0.0555484561838334) </tb></tr><br/>\n<tr><tb> 2296 </tb><tb> asdasdasd </tb><tb> (0.0568610144440845) </tb></tr><br/>\n<tr><tb> 2348 </tb><tb> 110110110 </tb><tb> (0.0581488074541422) </tb></tr><br/>\n<tr><tb> 2380 </tb><tb> 12341234 </tb><tb> (0.0589412954603315) </tb></tr><br/>\n<tr><tb> 2396 </tb><tb> abcd1234 </tb><tb> (0.0593375394634262) </tb></tr><br/>\n<tr><tb> 2515 </tb><tb> qazwsxedc </tb><tb> (0.0622846042364428) </tb></tr><br/>\n<tr><tb> 2540 </tb><tb> 12121212 </tb><tb> (0.0629037354912782) </tb></tr><br/>\n<tr><tb> 2573 </tb><tb> 123654789 </tb><tb> (0.0637209887476609) </tb></tr><br/>\n<tr><tb> 2578 </tb><tb> 0123456789 </tb><tb> (0.063844814998628) </tb></tr><br/>\n<tr><tb> 2580 </tb><tb> 123456abc </tb><tb> (0.0638943454990148) </tb></tr><br/>\n<tr><tb> 2796 </tb><tb> 1q2w3e4r </tb><tb> (0.0692436395407928) </tb></tr><br/>\n<tr><tb> 2826 </tb><tb> asdfghjkl </tb><tb> (0.0699865970465953) </tb></tr><br/>\n<tr><tb> 2885 </tb><tb> 0000000000 </tb><tb> (0.0714477468080069) </tb></tr><br/>\n<tr><tb> 2985 </tb><tb> 12344321 </tb><tb> (0.0739242718273486) </tb></tr><br/>\n<tr><tb> 3061 </tb><tb> 31415926 </tb><tb> (0.0758064308420482) </tb></tr><br/>\n<tr><tb> 3080 </tb><tb> iloveyou </tb><tb> (0.0762769705957231) </tb></tr><br/>\n<tr><tb> 3094 </tb><tb> qq123456 </tb><tb> (0.076623684098431) </tb></tr><br/>\n<tr><tb> 3143 </tb><tb> qwertyuiop </tb><tb> (0.0778371813579084) </tb></tr><br/>\n<tr><tb> 3175 </tb><tb> 000000000 </tb><tb> (0.0786296693640977) </tb></tr><br/>\n<tr><tb> 3277 </tb><tb> qqqqqqqq </tb><tb> (0.0811557248838262) </tb></tr><br/>\n<tr><tb> 3281 </tb><tb> 87654321 </tb><tb> (0.0812547858845999) </tb></tr><br/>\n<tr><tb> 3501 </tb><tb> password </tb><tb> (0.0867031409271515) </tb></tr><br/>\n<tr><tb> 3610 </tb><tb> 789456123 </tb><tb> (0.0894025531982339) </tb></tr><br/>\n<tr><tb> 3649 </tb><tb> xiazhili </tb><tb> (0.0903683979557772) </tb></tr><br/>\n<tr><tb> 3667 </tb><tb> 1qaz2wsx </tb><tb> (0.0908141724592587) </tb></tr><br/>\n<tr><tb> 4096 </tb><tb> 11223344 </tb><tb> (0.101438464792234) </tb></tr><br/>\n<tr><tb> 4435 </tb><tb> a123456789 </tb><tb> (0.109833884607803) </tb></tr><br/>\n<tr><tb> 5025 </tb><tb> 66666666 </tb><tb> (0.124445382221918) </tb></tr><br/>\n<tr><tb> 5145 </tb><tb> 1111111111 </tb><tb> (0.127417212245128) </tb></tr><br/>\n<tr><tb> 5459 </tb><tb> aaaaaaaa </tb><tb> (0.135193500805861) </tb></tr><br/>\n<tr><tb> 5553 </tb><tb> 987654321 </tb><tb> (0.137521434324042) </tb></tr><br/>\n<tr><tb> 5965 </tb><tb> 147258369 </tb><tb> (0.14772471740373) </tb></tr><br/>\n<tr><tb> 6995 </tb><tb> 111111111 </tb><tb> (0.173232925102949) </tb></tr><br/>\n<tr><tb> 15033 </tb><tb> 88888888 </tb><tb> (0.372296006157632) </tb></tr><br/>\n<tr><tb> 17790 </tb><tb> 1234567890 </tb><tb> (0.440573800940881) </tb></tr><br/>\n<tr><tb> 19986 </tb><tb> 123123123 </tb><tb> (0.494958290365624) </tb></tr><br/>\n<tr><tb> 34952 </tb><tb> 00000000 </tb><tb> (0.865595024760297) </tb></tr><br/>\n<tr><tb> 46053 </tb><tb> dearbook </tb><tb> (1.14051406715741) </tb></tr><br/>\n<tr><tb> 76346 </tb><tb> 11111111 </tb><tb> (1.89072779126658) </tb></tr><br/>\n<tr><tb> 212749 </tb><tb> 12345678 </tb><tb> (5.26878221339919) </tb></tr><br/>\n<tr><tb> 235012 </tb><tb> 123456789 </tb><tb> (5.82013097845522) </tb></tr><br/>\n</table>\n","slug":"2011-12-22-csdn-hacked","published":1,"updated":"2017-06-05T02:56:52.000Z","photos":[],"link":"","_id":"cj3jjpbcf001yzumj0d6td7dy","content":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_description\" content=\"csdn password\"></p>\n<p><meta name=\"_su_rich_snippet_type\" content=\"none\"></p>\n<p><meta name=\"_su_title\" content=\"csdn password\"></p>\n<p><meta name=\"views\" content=\"55\"><br>CSDN lost its user-password-email information. And all has published in Internet. If you want to find whether your password is exposed. Go to this website[<a href=\"http://0bad.com/csdn.php\" title=\"the link\" target=\"_blank\">the link</a>].</p>\n<table><br><tr><tb> repeat times </tb><tb> passwod </tb><tb> percent </tb></tr><br><br><tr><tb> 501 </tb><tb> qwerasdf </tb><tb> (0.0124073903469017) </tb></tr><br><br><tr><tb> 504 </tb><tb> computer </tb><tb> (0.012481686097482) </tb></tr><br><br><tr><tb> 519 </tb><tb> zxczxczxc </tb><tb> (0.0128531648503832) </tb></tr><br><br><tr><tb> 521 </tb><tb> dddddddd </tb><tb> (0.0129026953507701) </tb></tr><br><br><tr><tb> 525 </tb><tb> 299792458 </tb><tb> (0.0130017563515437) </tb></tr><br><br><tr><tb> 532 </tb><tb> 135792468 </tb><tb> (0.0131751131028976) </tb></tr><br><br><tr><tb> 535 </tb><tb> 20082008 </tb><tb> (0.0132494088534779) </tb></tr><br><br><tr><tb> 536 </tb><tb> 369369369 </tb><tb> (0.0132741741036713) </tb></tr><br><br><tr><tb> 553 </tb><tb> 5845211314 </tb><tb> (0.0136951833569594) </tb></tr><br><br><tr><tb> 556 </tb><tb> yangyang </tb><tb> (0.0137694791075396) </tb></tr><br><br><tr><tb> 559 </tb><tb> csdncsdn </tb><tb> (0.0138437748581199) </tb></tr><br><br><tr><tb> 559 </tb><tb> google250 </tb><tb> (0.0138437748581199) </tb></tr><br><br><tr><tb> 561 </tb><tb> woaini520 </tb><tb> (0.0138933053585067) </tb></tr><br><br><tr><tb> 562 </tb><tb> zhang123 </tb><tb> (0.0139180706087001) </tb></tr><br><br><tr><tb> 562 </tb><tb> 1234567b </tb><tb> (0.0139180706087001) </tb></tr><br><br><tr><tb> 565 </tb><tb> wocaonima </tb><tb> (0.0139923663592804) </tb></tr><br><br><tr><tb> 567 </tb><tb> 1233211234567 </tb><tb> (0.0140418968596672) </tb></tr><br><br><tr><tb> 567 </tb><tb> 9876543210 </tb><tb> (0.0140418968596672) </tb></tr><br><br><tr><tb> 570 </tb><tb> qaz123456 </tb><tb> (0.0141161926102475) </tb></tr><br><br><tr><tb> 571 </tb><tb> q123456789 </tb><tb> (0.0141409578604409) </tb></tr><br><br><tr><tb> 572 </tb><tb> 321654987 </tb><tb> (0.0141657231106343) </tb></tr><br><br><tr><tb> 578 </tb><tb> 369258147 </tb><tb> (0.0143143146117948) </tb></tr><br><br><tr><tb> 585 </tb><tb> aaa123456 </tb><tb> (0.0144876713631487) </tb></tr><br><br><tr><tb> 589 </tb><tb> 1357924680 </tb><tb> (0.0145867323639224) </tb></tr><br><br><tr><tb> 592 </tb><tb> 123321aa </tb><tb> (0.0146610281145026) </tb></tr><br><br><tr><tb> 601 </tb><tb> 25257758 </tb><tb> (0.0148839153662434) </tb></tr><br><br><tr><tb> 608 </tb><tb> wojiushiwo </tb><tb> (0.0150572721175973) </tb></tr><br><br><tr><tb> 616 </tb><tb> ssssssss </tb><tb> (0.0152553941191446) </tb></tr><br><br><tr><tb> 618 </tb><tb> qazwsx123 </tb><tb> (0.0153049246195315) </tb></tr><br><br><tr><tb> 621 </tb><tb> 123456aaa </tb><tb> (0.0153792203701117) </tb></tr><br><br><tr><tb> 623 </tb><tb> 1234567a </tb><tb> (0.0154287508704985) </tb></tr><br><br><tr><tb> 642 </tb><tb> z123456789 </tb><tb> (0.0158992906241735) </tb></tr><br><br><tr><tb> 649 </tb><tb> woainima </tb><tb> (0.0160726473755274) </tb></tr><br><br><tr><tb> 650 </tb><tb> 44444444 </tb><tb> (0.0160974126257208) </tb></tr><br><br><tr><tb> 651 </tb><tb> buzhidao </tb><tb> (0.0161221778759142) </tb></tr><br><br><tr><tb> 657 </tb><tb> ffffffff </tb><tb> (0.0162707693770747) </tb></tr><br><br><tr><tb> 669 </tb><tb> 100200300 </tb><tb> (0.0165679523793957) </tb></tr><br><br><tr><tb> 680 </tb><tb> 12345679 </tb><tb> (0.0168403701315233) </tb></tr><br><br><tr><tb> 685 </tb><tb> 12369874 </tb><tb> (0.0169641963824904) </tb></tr><br><br><tr><tb> 693 </tb><tb> 1122334455 </tb><tb> (0.0171623183840377) </tb></tr><br><br><tr><tb> 702 </tb><tb> 111111 </tb><tb> (0.0173852056357785) </tb></tr><br><br><tr><tb> 708 </tb><tb> woaini123 </tb><tb> (0.017533797136939) </tb></tr><br><br><tr><tb> 713 </tb><tb> qwe123456 </tb><tb> (0.017657623387906) </tb></tr><br><br><tr><tb> 726 </tb><tb> xiaoxiao </tb><tb> (0.0179795716404205) </tb></tr><br><br><tr><tb> 727 </tb><tb> 123456654321 </tb><tb> (0.0180043368906139) </tb></tr><br><br><tr><tb> 729 </tb><tb> woshishui </tb><tb> (0.0180538673910007) </tb></tr><br><br><tr><tb> 732 </tb><tb> 12301230 </tb><tb> (0.018128163141581) </tb></tr><br><br><tr><tb> 740 </tb><tb> 1234554321 </tb><tb> (0.0183262851431283) </tb></tr><br><br><tr><tb> 741 </tb><tb> 5201314520 </tb><tb> (0.0183510503933217) </tb></tr><br><br><tr><tb> 744 </tb><tb> 12345612 </tb><tb> (0.018425346143902) </tb></tr><br><br><tr><tb> 765 </tb><tb> lilylily </tb><tb> (0.0189454163979637) </tb></tr><br><br><tr><tb> 770 </tb><tb> 123456asd </tb><tb> (0.0190692426489308) </tb></tr><br><br><tr><tb> 772 </tb><tb> 10101010 </tb><tb> (0.0191187731493176) </tb></tr><br><br><tr><tb> 777 </tb><tb> 1q2w3e4r5t </tb><tb> (0.0192425994002847) </tb></tr><br><br><tr><tb> 783 </tb><tb> 11235813 </tb><tb> (0.0193911909014452) </tb></tr><br><br><tr><tb> 805 </tb><tb> 12345600 </tb><tb> (0.0199360264057004) </tb></tr><br><br><tr><tb> 835 </tb><tb> 11111111111111111111 </tb><tb> (0.0206789839115029) </tb></tr><br><br><tr><tb> 847 </tb><tb> wwwwwwww </tb><tb> (0.0209761669138239) </tb></tr><br><br><tr><tb> 852 </tb><tb> 0987654321 </tb><tb> (0.0210999931647909) </tb></tr><br><br><tr><tb> 882 </tb><tb> 5845201314 </tb><tb> (0.0218429506705934) </tb></tr><br><br><tr><tb> 882 </tb><tb> zxcvbnm123 </tb><tb> (0.0218429506705934) </tb></tr><br><br><tr><tb> 892 </tb><tb> kingcom5 </tb><tb> (0.0220906031725276) </tb></tr><br><br><tr><tb> 894 </tb><tb> 123456987 </tb><tb> (0.0221401336729144) </tb></tr><br><br><tr><tb> 910 </tb><tb> 05962514787 </tb><tb> (0.0225363776760091) </tb></tr><br><br><tr><tb> 920 </tb><tb> 321321321 </tb><tb> (0.0227840301779433) </tb></tr><br><br><tr><tb> 967 </tb><tb> woaiwojia </tb><tb> (0.0239479969370339) </tb></tr><br><br><tr><tb> 975 </tb><tb> 1qazxsw2 </tb><tb> (0.0241461189385812) </tb></tr><br><br><tr><tb> 988 </tb><tb> 123qweasd </tb><tb> (0.0244680671910956) </tb></tr><br><br><tr><tb> 991 </tb><tb> 1234abcd </tb><tb> (0.0245423629416759) </tb></tr><br><br><tr><tb> 1003 </tb><tb> woaini1314 </tb><tb> (0.0248395459439969) </tb></tr><br><br><tr><tb> 1037 </tb><tb> 12345678a </tb><tb> (0.025681564450573) </tb></tr><br><br><tr><tb> 1054 </tb><tb> q1w2e3r4 </tb><tb> (0.0261025737038611) </tb></tr><br><br><tr><tb> 1058 </tb><tb> asdfghjk </tb><tb> (0.0262016347046348) </tb></tr><br><br><tr><tb> 1109 </tb><tb> 1123581321 </tb><tb> (0.027464662464499) </tb></tr><br><br><tr><tb> 1111 </tb><tb> 123698745 </tb><tb> (0.0275141929648858) </tb></tr><br><br><tr><tb> 1119 </tb><tb> asdf1234 </tb><tb> (0.0277123149664332) </tb></tr><br><br><tr><tb> 1136 </tb><tb> 521521521 </tb><tb> (0.0281333242197213) </tb></tr><br><br><tr><tb> 1148 </tb><tb> 147852369 </tb><tb> (0.0284305072220423) </tb></tr><br><br><tr><tb> 1183 </tb><tb> 123456qq </tb><tb> (0.0292972909788118) </tb></tr><br><br><tr><tb> 1200 </tb><tb> 3.1415926 </tb><tb> (0.0297183002320999) </tb></tr><br><br><tr><tb> 1206 </tb><tb> qweqweqwe </tb><tb> (0.0298668917332604) </tb></tr><br><br><tr><tb> 1214 </tb><tb> 111222333 </tb><tb> (0.0300650137348078) </tb></tr><br><br><tr><tb> 1245 </tb><tb> zzzzzzzz </tb><tb> (0.0308327364908037) </tb></tr><br><br><tr><tb> 1268 </tb><tb> ms0083jxj </tb><tb> (0.0314023372452523) </tb></tr><br><br><tr><tb> 1273 </tb><tb> 11112222 </tb><tb> (0.0315261634962193) </tb></tr><br><br><tr><tb> 1285 </tb><tb> code8925 </tb><tb> (0.0318233464985403) </tb></tr><br><br><tr><tb> 1316 </tb><tb> qweasdzxc </tb><tb> (0.0325910692545363) </tb></tr><br><br><tr><tb> 1339 </tb><tb> 77777777 </tb><tb> (0.0331606700089848) </tb></tr><br><br><tr><tb> 1384 </tb><tb> asd123456 </tb><tb> (0.0342751062676886) </tb></tr><br><br><tr><tb> 1480 </tb><tb> qwer1234 </tb><tb> (0.0366525702862566) </tb></tr><br><br><tr><tb> 1589 </tb><tb> 33333333 </tb><tb> (0.039351982557339) </tb></tr><br><br><tr><tb> 1652 </tb><tb> 55555555 </tb><tb> (0.0409121933195242) </tb></tr><br><br><tr><tb> 1652 </tb><tb> 741852963 </tb><tb> (0.0409121933195242) </tb></tr><br><br><tr><tb> 1656 </tb><tb> 963852741 </tb><tb> (0.0410112543202979) </tb></tr><br><br><tr><tb> 1699 </tb><tb> 520520520 </tb><tb> (0.0420761600786148) </tb></tr><br><br><tr><tb> 1854 </tb><tb> 123456123456 </tb><tb> (0.0459147738585944) </tb></tr><br><br><tr><tb> 1859 </tb><tb> 999999999 </tb><tb> (0.0460386001095615) </tb></tr><br><br><tr><tb> 1859 </tb><tb> 123456aa </tb><tb> (0.0460386001095615) </tb></tr><br><br><tr><tb> 1891 </tb><tb> 99999999 </tb><tb> (0.0468310881157508) </tb></tr><br><br><tr><tb> 1918 </tb><tb> asdfasdf </tb><tb> (0.047499749870973) </tb></tr><br><br><tr><tb> 1971 </tb><tb> aa123456 </tb><tb> (0.0488123081312241) </tb></tr><br><br><tr><tb> 1986 </tb><tb> 123456789a </tb><tb> (0.0491837868841254) </tb></tr><br><br><tr><tb> 1989 </tb><tb> qwertyui </tb><tb> (0.0492580826347056) </tb></tr><br><br><tr><tb> 2100 </tb><tb> 1234qwer </tb><tb> (0.0520070254061749) </tb></tr><br><br><tr><tb> 2106 </tb><tb> a1234567 </tb><tb> (0.0521556169073354) </tb></tr><br><br><tr><tb> 2113 </tb><tb> 123456123 </tb><tb> (0.0523289736586893) </tb></tr><br><br><tr><tb> 2131 </tb><tb> 123456 </tb><tb> (0.0527747481621708) </tb></tr><br><br><tr><tb> 2138 </tb><tb> a12345678 </tb><tb> (0.0529481049135247) </tb></tr><br><br><tr><tb> 2160 </tb><tb> abc123456 </tb><tb> (0.0534929404177799) </tb></tr><br><br><tr><tb> 2166 </tb><tb> 123321123 </tb><tb> (0.0536415319189404) </tb></tr><br><br><tr><tb> 2243 </tb><tb> 22222222 </tb><tb> (0.0555484561838334) </tb></tr><br><br><tr><tb> 2296 </tb><tb> asdasdasd </tb><tb> (0.0568610144440845) </tb></tr><br><br><tr><tb> 2348 </tb><tb> 110110110 </tb><tb> (0.0581488074541422) </tb></tr><br><br><tr><tb> 2380 </tb><tb> 12341234 </tb><tb> (0.0589412954603315) </tb></tr><br><br><tr><tb> 2396 </tb><tb> abcd1234 </tb><tb> (0.0593375394634262) </tb></tr><br><br><tr><tb> 2515 </tb><tb> qazwsxedc </tb><tb> (0.0622846042364428) </tb></tr><br><br><tr><tb> 2540 </tb><tb> 12121212 </tb><tb> (0.0629037354912782) </tb></tr><br><br><tr><tb> 2573 </tb><tb> 123654789 </tb><tb> (0.0637209887476609) </tb></tr><br><br><tr><tb> 2578 </tb><tb> 0123456789 </tb><tb> (0.063844814998628) </tb></tr><br><br><tr><tb> 2580 </tb><tb> 123456abc </tb><tb> (0.0638943454990148) </tb></tr><br><br><tr><tb> 2796 </tb><tb> 1q2w3e4r </tb><tb> (0.0692436395407928) </tb></tr><br><br><tr><tb> 2826 </tb><tb> asdfghjkl </tb><tb> (0.0699865970465953) </tb></tr><br><br><tr><tb> 2885 </tb><tb> 0000000000 </tb><tb> (0.0714477468080069) </tb></tr><br><br><tr><tb> 2985 </tb><tb> 12344321 </tb><tb> (0.0739242718273486) </tb></tr><br><br><tr><tb> 3061 </tb><tb> 31415926 </tb><tb> (0.0758064308420482) </tb></tr><br><br><tr><tb> 3080 </tb><tb> iloveyou </tb><tb> (0.0762769705957231) </tb></tr><br><br><tr><tb> 3094 </tb><tb> qq123456 </tb><tb> (0.076623684098431) </tb></tr><br><br><tr><tb> 3143 </tb><tb> qwertyuiop </tb><tb> (0.0778371813579084) </tb></tr><br><br><tr><tb> 3175 </tb><tb> 000000000 </tb><tb> (0.0786296693640977) </tb></tr><br><br><tr><tb> 3277 </tb><tb> qqqqqqqq </tb><tb> (0.0811557248838262) </tb></tr><br><br><tr><tb> 3281 </tb><tb> 87654321 </tb><tb> (0.0812547858845999) </tb></tr><br><br><tr><tb> 3501 </tb><tb> password </tb><tb> (0.0867031409271515) </tb></tr><br><br><tr><tb> 3610 </tb><tb> 789456123 </tb><tb> (0.0894025531982339) </tb></tr><br><br><tr><tb> 3649 </tb><tb> xiazhili </tb><tb> (0.0903683979557772) </tb></tr><br><br><tr><tb> 3667 </tb><tb> 1qaz2wsx </tb><tb> (0.0908141724592587) </tb></tr><br><br><tr><tb> 4096 </tb><tb> 11223344 </tb><tb> (0.101438464792234) </tb></tr><br><br><tr><tb> 4435 </tb><tb> a123456789 </tb><tb> (0.109833884607803) </tb></tr><br><br><tr><tb> 5025 </tb><tb> 66666666 </tb><tb> (0.124445382221918) </tb></tr><br><br><tr><tb> 5145 </tb><tb> 1111111111 </tb><tb> (0.127417212245128) </tb></tr><br><br><tr><tb> 5459 </tb><tb> aaaaaaaa </tb><tb> (0.135193500805861) </tb></tr><br><br><tr><tb> 5553 </tb><tb> 987654321 </tb><tb> (0.137521434324042) </tb></tr><br><br><tr><tb> 5965 </tb><tb> 147258369 </tb><tb> (0.14772471740373) </tb></tr><br><br><tr><tb> 6995 </tb><tb> 111111111 </tb><tb> (0.173232925102949) </tb></tr><br><br><tr><tb> 15033 </tb><tb> 88888888 </tb><tb> (0.372296006157632) </tb></tr><br><br><tr><tb> 17790 </tb><tb> 1234567890 </tb><tb> (0.440573800940881) </tb></tr><br><br><tr><tb> 19986 </tb><tb> 123123123 </tb><tb> (0.494958290365624) </tb></tr><br><br><tr><tb> 34952 </tb><tb> 00000000 </tb><tb> (0.865595024760297) </tb></tr><br><br><tr><tb> 46053 </tb><tb> dearbook </tb><tb> (1.14051406715741) </tb></tr><br><br><tr><tb> 76346 </tb><tb> 11111111 </tb><tb> (1.89072779126658) </tb></tr><br><br><tr><tb> 212749 </tb><tb> 12345678 </tb><tb> (5.26878221339919) </tb></tr><br><br><tr><tb> 235012 </tb><tb> 123456789 </tb><tb> (5.82013097845522) </tb></tr><br><br></table><br><br><a id=\"more\"></a><br>CSDN的用户名-密码-邮箱被泄露在互联网上。如果你想知道自己的用户名密码是否被泄露，点击<a href=\"http://0bad.com/csdn.php\" target=\"_blank\">链接</a>。<br>这里是统计出的密码重复次数。转载自某个地方..<br><table><br><tr><tb> 重复次数 </tb><tb> 密码 </tb><tb> 百分比 </tb></tr><br><br><tr><tb> 501 </tb><tb> qwerasdf </tb><tb> (0.0124073903469017) </tb></tr><br><br><tr><tb> 504 </tb><tb> computer </tb><tb> (0.012481686097482) </tb></tr><br><br><tr><tb> 519 </tb><tb> zxczxczxc </tb><tb> (0.0128531648503832) </tb></tr><br><br><tr><tb> 521 </tb><tb> dddddddd </tb><tb> (0.0129026953507701) </tb></tr><br><br><tr><tb> 525 </tb><tb> 299792458 </tb><tb> (0.0130017563515437) </tb></tr><br><br><tr><tb> 532 </tb><tb> 135792468 </tb><tb> (0.0131751131028976) </tb></tr><br><br><tr><tb> 535 </tb><tb> 20082008 </tb><tb> (0.0132494088534779) </tb></tr><br><br><tr><tb> 536 </tb><tb> 369369369 </tb><tb> (0.0132741741036713) </tb></tr><br><br><tr><tb> 553 </tb><tb> 5845211314 </tb><tb> (0.0136951833569594) </tb></tr><br><br><tr><tb> 556 </tb><tb> yangyang </tb><tb> (0.0137694791075396) </tb></tr><br><br><tr><tb> 559 </tb><tb> csdncsdn </tb><tb> (0.0138437748581199) </tb></tr><br><br><tr><tb> 559 </tb><tb> google250 </tb><tb> (0.0138437748581199) </tb></tr><br><br><tr><tb> 561 </tb><tb> woaini520 </tb><tb> (0.0138933053585067) </tb></tr><br><br><tr><tb> 562 </tb><tb> zhang123 </tb><tb> (0.0139180706087001) </tb></tr><br><br><tr><tb> 562 </tb><tb> 1234567b </tb><tb> (0.0139180706087001) </tb></tr><br><br><tr><tb> 565 </tb><tb> wocaonima </tb><tb> (0.0139923663592804) </tb></tr><br><br><tr><tb> 567 </tb><tb> 1233211234567 </tb><tb> (0.0140418968596672) </tb></tr><br><br><tr><tb> 567 </tb><tb> 9876543210 </tb><tb> (0.0140418968596672) </tb></tr><br><br><tr><tb> 570 </tb><tb> qaz123456 </tb><tb> (0.0141161926102475) </tb></tr><br><br><tr><tb> 571 </tb><tb> q123456789 </tb><tb> (0.0141409578604409) </tb></tr><br><br><tr><tb> 572 </tb><tb> 321654987 </tb><tb> (0.0141657231106343) </tb></tr><br><br><tr><tb> 578 </tb><tb> 369258147 </tb><tb> (0.0143143146117948) </tb></tr><br><br><tr><tb> 585 </tb><tb> aaa123456 </tb><tb> (0.0144876713631487) </tb></tr><br><br><tr><tb> 589 </tb><tb> 1357924680 </tb><tb> (0.0145867323639224) </tb></tr><br><br><tr><tb> 592 </tb><tb> 123321aa </tb><tb> (0.0146610281145026) </tb></tr><br><br><tr><tb> 601 </tb><tb> 25257758 </tb><tb> (0.0148839153662434) </tb></tr><br><br><tr><tb> 608 </tb><tb> wojiushiwo </tb><tb> (0.0150572721175973) </tb></tr><br><br><tr><tb> 616 </tb><tb> ssssssss </tb><tb> (0.0152553941191446) </tb></tr><br><br><tr><tb> 618 </tb><tb> qazwsx123 </tb><tb> (0.0153049246195315) </tb></tr><br><br><tr><tb> 621 </tb><tb> 123456aaa </tb><tb> (0.0153792203701117) </tb></tr><br><br><tr><tb> 623 </tb><tb> 1234567a </tb><tb> (0.0154287508704985) </tb></tr><br><br><tr><tb> 642 </tb><tb> z123456789 </tb><tb> (0.0158992906241735) </tb></tr><br><br><tr><tb> 649 </tb><tb> woainima </tb><tb> (0.0160726473755274) </tb></tr><br><br><tr><tb> 650 </tb><tb> 44444444 </tb><tb> (0.0160974126257208) </tb></tr><br><br><tr><tb> 651 </tb><tb> buzhidao </tb><tb> (0.0161221778759142) </tb></tr><br><br><tr><tb> 657 </tb><tb> ffffffff </tb><tb> (0.0162707693770747) </tb></tr><br><br><tr><tb> 669 </tb><tb> 100200300 </tb><tb> (0.0165679523793957) </tb></tr><br><br><tr><tb> 680 </tb><tb> 12345679 </tb><tb> (0.0168403701315233) </tb></tr><br><br><tr><tb> 685 </tb><tb> 12369874 </tb><tb> (0.0169641963824904) </tb></tr><br><br><tr><tb> 693 </tb><tb> 1122334455 </tb><tb> (0.0171623183840377) </tb></tr><br><br><tr><tb> 702 </tb><tb> 111111 </tb><tb> (0.0173852056357785) </tb></tr><br><br><tr><tb> 708 </tb><tb> woaini123 </tb><tb> (0.017533797136939) </tb></tr><br><br><tr><tb> 713 </tb><tb> qwe123456 </tb><tb> (0.017657623387906) </tb></tr><br><br><tr><tb> 726 </tb><tb> xiaoxiao </tb><tb> (0.0179795716404205) </tb></tr><br><br><tr><tb> 727 </tb><tb> 123456654321 </tb><tb> (0.0180043368906139) </tb></tr><br><br><tr><tb> 729 </tb><tb> woshishui </tb><tb> (0.0180538673910007) </tb></tr><br><br><tr><tb> 732 </tb><tb> 12301230 </tb><tb> (0.018128163141581) </tb></tr><br><br><tr><tb> 740 </tb><tb> 1234554321 </tb><tb> (0.0183262851431283) </tb></tr><br><br><tr><tb> 741 </tb><tb> 5201314520 </tb><tb> (0.0183510503933217) </tb></tr><br><br><tr><tb> 744 </tb><tb> 12345612 </tb><tb> (0.018425346143902) </tb></tr><br><br><tr><tb> 765 </tb><tb> lilylily </tb><tb> (0.0189454163979637) </tb></tr><br><br><tr><tb> 770 </tb><tb> 123456asd </tb><tb> (0.0190692426489308) </tb></tr><br><br><tr><tb> 772 </tb><tb> 10101010 </tb><tb> (0.0191187731493176) </tb></tr><br><br><tr><tb> 777 </tb><tb> 1q2w3e4r5t </tb><tb> (0.0192425994002847) </tb></tr><br><br><tr><tb> 783 </tb><tb> 11235813 </tb><tb> (0.0193911909014452) </tb></tr><br><br><tr><tb> 805 </tb><tb> 12345600 </tb><tb> (0.0199360264057004) </tb></tr><br><br><tr><tb> 835 </tb><tb> 11111111111111111111 </tb><tb> (0.0206789839115029) </tb></tr><br><br><tr><tb> 847 </tb><tb> wwwwwwww </tb><tb> (0.0209761669138239) </tb></tr><br><br><tr><tb> 852 </tb><tb> 0987654321 </tb><tb> (0.0210999931647909) </tb></tr><br><br><tr><tb> 882 </tb><tb> 5845201314 </tb><tb> (0.0218429506705934) </tb></tr><br><br><tr><tb> 882 </tb><tb> zxcvbnm123 </tb><tb> (0.0218429506705934) </tb></tr><br><br><tr><tb> 892 </tb><tb> kingcom5 </tb><tb> (0.0220906031725276) </tb></tr><br><br><tr><tb> 894 </tb><tb> 123456987 </tb><tb> (0.0221401336729144) </tb></tr><br><br><tr><tb> 910 </tb><tb> 05962514787 </tb><tb> (0.0225363776760091) </tb></tr><br><br><tr><tb> 920 </tb><tb> 321321321 </tb><tb> (0.0227840301779433) </tb></tr><br><br><tr><tb> 967 </tb><tb> woaiwojia </tb><tb> (0.0239479969370339) </tb></tr><br><br><tr><tb> 975 </tb><tb> 1qazxsw2 </tb><tb> (0.0241461189385812) </tb></tr><br><br><tr><tb> 988 </tb><tb> 123qweasd </tb><tb> (0.0244680671910956) </tb></tr><br><br><tr><tb> 991 </tb><tb> 1234abcd </tb><tb> (0.0245423629416759) </tb></tr><br><br><tr><tb> 1003 </tb><tb> woaini1314 </tb><tb> (0.0248395459439969) </tb></tr><br><br><tr><tb> 1037 </tb><tb> 12345678a </tb><tb> (0.025681564450573) </tb></tr><br><br><tr><tb> 1054 </tb><tb> q1w2e3r4 </tb><tb> (0.0261025737038611) </tb></tr><br><br><tr><tb> 1058 </tb><tb> asdfghjk </tb><tb> (0.0262016347046348) </tb></tr><br><br><tr><tb> 1109 </tb><tb> 1123581321 </tb><tb> (0.027464662464499) </tb></tr><br><br><tr><tb> 1111 </tb><tb> 123698745 </tb><tb> (0.0275141929648858) </tb></tr><br><br><tr><tb> 1119 </tb><tb> asdf1234 </tb><tb> (0.0277123149664332) </tb></tr><br><br><tr><tb> 1136 </tb><tb> 521521521 </tb><tb> (0.0281333242197213) </tb></tr><br><br><tr><tb> 1148 </tb><tb> 147852369 </tb><tb> (0.0284305072220423) </tb></tr><br><br><tr><tb> 1183 </tb><tb> 123456qq </tb><tb> (0.0292972909788118) </tb></tr><br><br><tr><tb> 1200 </tb><tb> 3.1415926 </tb><tb> (0.0297183002320999) </tb></tr><br><br><tr><tb> 1206 </tb><tb> qweqweqwe </tb><tb> (0.0298668917332604) </tb></tr><br><br><tr><tb> 1214 </tb><tb> 111222333 </tb><tb> (0.0300650137348078) </tb></tr><br><br><tr><tb> 1245 </tb><tb> zzzzzzzz </tb><tb> (0.0308327364908037) </tb></tr><br><br><tr><tb> 1268 </tb><tb> ms0083jxj </tb><tb> (0.0314023372452523) </tb></tr><br><br><tr><tb> 1273 </tb><tb> 11112222 </tb><tb> (0.0315261634962193) </tb></tr><br><br><tr><tb> 1285 </tb><tb> code8925 </tb><tb> (0.0318233464985403) </tb></tr><br><br><tr><tb> 1316 </tb><tb> qweasdzxc </tb><tb> (0.0325910692545363) </tb></tr><br><br><tr><tb> 1339 </tb><tb> 77777777 </tb><tb> (0.0331606700089848) </tb></tr><br><br><tr><tb> 1384 </tb><tb> asd123456 </tb><tb> (0.0342751062676886) </tb></tr><br><br><tr><tb> 1480 </tb><tb> qwer1234 </tb><tb> (0.0366525702862566) </tb></tr><br><br><tr><tb> 1589 </tb><tb> 33333333 </tb><tb> (0.039351982557339) </tb></tr><br><br><tr><tb> 1652 </tb><tb> 55555555 </tb><tb> (0.0409121933195242) </tb></tr><br><br><tr><tb> 1652 </tb><tb> 741852963 </tb><tb> (0.0409121933195242) </tb></tr><br><br><tr><tb> 1656 </tb><tb> 963852741 </tb><tb> (0.0410112543202979) </tb></tr><br><br><tr><tb> 1699 </tb><tb> 520520520 </tb><tb> (0.0420761600786148) </tb></tr><br><br><tr><tb> 1854 </tb><tb> 123456123456 </tb><tb> (0.0459147738585944) </tb></tr><br><br><tr><tb> 1859 </tb><tb> 999999999 </tb><tb> (0.0460386001095615) </tb></tr><br><br><tr><tb> 1859 </tb><tb> 123456aa </tb><tb> (0.0460386001095615) </tb></tr><br><br><tr><tb> 1891 </tb><tb> 99999999 </tb><tb> (0.0468310881157508) </tb></tr><br><br><tr><tb> 1918 </tb><tb> asdfasdf </tb><tb> (0.047499749870973) </tb></tr><br><br><tr><tb> 1971 </tb><tb> aa123456 </tb><tb> (0.0488123081312241) </tb></tr><br><br><tr><tb> 1986 </tb><tb> 123456789a </tb><tb> (0.0491837868841254) </tb></tr><br><br><tr><tb> 1989 </tb><tb> qwertyui </tb><tb> (0.0492580826347056) </tb></tr><br><br><tr><tb> 2100 </tb><tb> 1234qwer </tb><tb> (0.0520070254061749) </tb></tr><br><br><tr><tb> 2106 </tb><tb> a1234567 </tb><tb> (0.0521556169073354) </tb></tr><br><br><tr><tb> 2113 </tb><tb> 123456123 </tb><tb> (0.0523289736586893) </tb></tr><br><br><tr><tb> 2131 </tb><tb> 123456 </tb><tb> (0.0527747481621708) </tb></tr><br><br><tr><tb> 2138 </tb><tb> a12345678 </tb><tb> (0.0529481049135247) </tb></tr><br><br><tr><tb> 2160 </tb><tb> abc123456 </tb><tb> (0.0534929404177799) </tb></tr><br><br><tr><tb> 2166 </tb><tb> 123321123 </tb><tb> (0.0536415319189404) </tb></tr><br><br><tr><tb> 2243 </tb><tb> 22222222 </tb><tb> (0.0555484561838334) </tb></tr><br><br><tr><tb> 2296 </tb><tb> asdasdasd </tb><tb> (0.0568610144440845) </tb></tr><br><br><tr><tb> 2348 </tb><tb> 110110110 </tb><tb> (0.0581488074541422) </tb></tr><br><br><tr><tb> 2380 </tb><tb> 12341234 </tb><tb> (0.0589412954603315) </tb></tr><br><br><tr><tb> 2396 </tb><tb> abcd1234 </tb><tb> (0.0593375394634262) </tb></tr><br><br><tr><tb> 2515 </tb><tb> qazwsxedc </tb><tb> (0.0622846042364428) </tb></tr><br><br><tr><tb> 2540 </tb><tb> 12121212 </tb><tb> (0.0629037354912782) </tb></tr><br><br><tr><tb> 2573 </tb><tb> 123654789 </tb><tb> (0.0637209887476609) </tb></tr><br><br><tr><tb> 2578 </tb><tb> 0123456789 </tb><tb> (0.063844814998628) </tb></tr><br><br><tr><tb> 2580 </tb><tb> 123456abc </tb><tb> (0.0638943454990148) </tb></tr><br><br><tr><tb> 2796 </tb><tb> 1q2w3e4r </tb><tb> (0.0692436395407928) </tb></tr><br><br><tr><tb> 2826 </tb><tb> asdfghjkl </tb><tb> (0.0699865970465953) </tb></tr><br><br><tr><tb> 2885 </tb><tb> 0000000000 </tb><tb> (0.0714477468080069) </tb></tr><br><br><tr><tb> 2985 </tb><tb> 12344321 </tb><tb> (0.0739242718273486) </tb></tr><br><br><tr><tb> 3061 </tb><tb> 31415926 </tb><tb> (0.0758064308420482) </tb></tr><br><br><tr><tb> 3080 </tb><tb> iloveyou </tb><tb> (0.0762769705957231) </tb></tr><br><br><tr><tb> 3094 </tb><tb> qq123456 </tb><tb> (0.076623684098431) </tb></tr><br><br><tr><tb> 3143 </tb><tb> qwertyuiop </tb><tb> (0.0778371813579084) </tb></tr><br><br><tr><tb> 3175 </tb><tb> 000000000 </tb><tb> (0.0786296693640977) </tb></tr><br><br><tr><tb> 3277 </tb><tb> qqqqqqqq </tb><tb> (0.0811557248838262) </tb></tr><br><br><tr><tb> 3281 </tb><tb> 87654321 </tb><tb> (0.0812547858845999) </tb></tr><br><br><tr><tb> 3501 </tb><tb> password </tb><tb> (0.0867031409271515) </tb></tr><br><br><tr><tb> 3610 </tb><tb> 789456123 </tb><tb> (0.0894025531982339) </tb></tr><br><br><tr><tb> 3649 </tb><tb> xiazhili </tb><tb> (0.0903683979557772) </tb></tr><br><br><tr><tb> 3667 </tb><tb> 1qaz2wsx </tb><tb> (0.0908141724592587) </tb></tr><br><br><tr><tb> 4096 </tb><tb> 11223344 </tb><tb> (0.101438464792234) </tb></tr><br><br><tr><tb> 4435 </tb><tb> a123456789 </tb><tb> (0.109833884607803) </tb></tr><br><br><tr><tb> 5025 </tb><tb> 66666666 </tb><tb> (0.124445382221918) </tb></tr><br><br><tr><tb> 5145 </tb><tb> 1111111111 </tb><tb> (0.127417212245128) </tb></tr><br><br><tr><tb> 5459 </tb><tb> aaaaaaaa </tb><tb> (0.135193500805861) </tb></tr><br><br><tr><tb> 5553 </tb><tb> 987654321 </tb><tb> (0.137521434324042) </tb></tr><br><br><tr><tb> 5965 </tb><tb> 147258369 </tb><tb> (0.14772471740373) </tb></tr><br><br><tr><tb> 6995 </tb><tb> 111111111 </tb><tb> (0.173232925102949) </tb></tr><br><br><tr><tb> 15033 </tb><tb> 88888888 </tb><tb> (0.372296006157632) </tb></tr><br><br><tr><tb> 17790 </tb><tb> 1234567890 </tb><tb> (0.440573800940881) </tb></tr><br><br><tr><tb> 19986 </tb><tb> 123123123 </tb><tb> (0.494958290365624) </tb></tr><br><br><tr><tb> 34952 </tb><tb> 00000000 </tb><tb> (0.865595024760297) </tb></tr><br><br><tr><tb> 46053 </tb><tb> dearbook </tb><tb> (1.14051406715741) </tb></tr><br><br><tr><tb> 76346 </tb><tb> 11111111 </tb><tb> (1.89072779126658) </tb></tr><br><br><tr><tb> 212749 </tb><tb> 12345678 </tb><tb> (5.26878221339919) </tb></tr><br><br><tr><tb> 235012 </tb><tb> 123456789 </tb><tb> (5.82013097845522) </tb></tr><br><br></table>\n","site":{"data":{}},"excerpt":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_description\" content=\"csdn password\"></p>\n<p><meta name=\"_su_rich_snippet_type\" content=\"none\"></p>\n<p><meta name=\"_su_title\" content=\"csdn password\"></p>\n<p><meta name=\"views\" content=\"55\"><br>CSDN lost its user-password-email information. And all has published in Internet. If you want to find whether your password is exposed. Go to this website[<a href=\"http://0bad.com/csdn.php\" title=\"the link\" target=\"_blank\">the link</a>].</p>\n<table><br><tr><tb> repeat times </tb><tb> passwod </tb><tb> percent </tb></tr><br><br><tr><tb> 501 </tb><tb> qwerasdf </tb><tb> (0.0124073903469017) </tb></tr><br><br><tr><tb> 504 </tb><tb> computer </tb><tb> (0.012481686097482) </tb></tr><br><br><tr><tb> 519 </tb><tb> zxczxczxc </tb><tb> (0.0128531648503832) </tb></tr><br><br><tr><tb> 521 </tb><tb> dddddddd </tb><tb> (0.0129026953507701) </tb></tr><br><br><tr><tb> 525 </tb><tb> 299792458 </tb><tb> (0.0130017563515437) </tb></tr><br><br><tr><tb> 532 </tb><tb> 135792468 </tb><tb> (0.0131751131028976) </tb></tr><br><br><tr><tb> 535 </tb><tb> 20082008 </tb><tb> (0.0132494088534779) </tb></tr><br><br><tr><tb> 536 </tb><tb> 369369369 </tb><tb> (0.0132741741036713) </tb></tr><br><br><tr><tb> 553 </tb><tb> 5845211314 </tb><tb> (0.0136951833569594) </tb></tr><br><br><tr><tb> 556 </tb><tb> yangyang </tb><tb> (0.0137694791075396) </tb></tr><br><br><tr><tb> 559 </tb><tb> csdncsdn </tb><tb> (0.0138437748581199) </tb></tr><br><br><tr><tb> 559 </tb><tb> google250 </tb><tb> (0.0138437748581199) </tb></tr><br><br><tr><tb> 561 </tb><tb> woaini520 </tb><tb> (0.0138933053585067) </tb></tr><br><br><tr><tb> 562 </tb><tb> zhang123 </tb><tb> (0.0139180706087001) </tb></tr><br><br><tr><tb> 562 </tb><tb> 1234567b </tb><tb> (0.0139180706087001) </tb></tr><br><br><tr><tb> 565 </tb><tb> wocaonima </tb><tb> (0.0139923663592804) </tb></tr><br><br><tr><tb> 567 </tb><tb> 1233211234567 </tb><tb> (0.0140418968596672) </tb></tr><br><br><tr><tb> 567 </tb><tb> 9876543210 </tb><tb> (0.0140418968596672) </tb></tr><br><br><tr><tb> 570 </tb><tb> qaz123456 </tb><tb> (0.0141161926102475) </tb></tr><br><br><tr><tb> 571 </tb><tb> q123456789 </tb><tb> (0.0141409578604409) </tb></tr><br><br><tr><tb> 572 </tb><tb> 321654987 </tb><tb> (0.0141657231106343) </tb></tr><br><br><tr><tb> 578 </tb><tb> 369258147 </tb><tb> (0.0143143146117948) </tb></tr><br><br><tr><tb> 585 </tb><tb> aaa123456 </tb><tb> (0.0144876713631487) </tb></tr><br><br><tr><tb> 589 </tb><tb> 1357924680 </tb><tb> (0.0145867323639224) </tb></tr><br><br><tr><tb> 592 </tb><tb> 123321aa </tb><tb> (0.0146610281145026) </tb></tr><br><br><tr><tb> 601 </tb><tb> 25257758 </tb><tb> (0.0148839153662434) </tb></tr><br><br><tr><tb> 608 </tb><tb> wojiushiwo </tb><tb> (0.0150572721175973) </tb></tr><br><br><tr><tb> 616 </tb><tb> ssssssss </tb><tb> (0.0152553941191446) </tb></tr><br><br><tr><tb> 618 </tb><tb> qazwsx123 </tb><tb> (0.0153049246195315) </tb></tr><br><br><tr><tb> 621 </tb><tb> 123456aaa </tb><tb> (0.0153792203701117) </tb></tr><br><br><tr><tb> 623 </tb><tb> 1234567a </tb><tb> (0.0154287508704985) </tb></tr><br><br><tr><tb> 642 </tb><tb> z123456789 </tb><tb> (0.0158992906241735) </tb></tr><br><br><tr><tb> 649 </tb><tb> woainima </tb><tb> (0.0160726473755274) </tb></tr><br><br><tr><tb> 650 </tb><tb> 44444444 </tb><tb> (0.0160974126257208) </tb></tr><br><br><tr><tb> 651 </tb><tb> buzhidao </tb><tb> (0.0161221778759142) </tb></tr><br><br><tr><tb> 657 </tb><tb> ffffffff </tb><tb> (0.0162707693770747) </tb></tr><br><br><tr><tb> 669 </tb><tb> 100200300 </tb><tb> (0.0165679523793957) </tb></tr><br><br><tr><tb> 680 </tb><tb> 12345679 </tb><tb> (0.0168403701315233) </tb></tr><br><br><tr><tb> 685 </tb><tb> 12369874 </tb><tb> (0.0169641963824904) </tb></tr><br><br><tr><tb> 693 </tb><tb> 1122334455 </tb><tb> (0.0171623183840377) </tb></tr><br><br><tr><tb> 702 </tb><tb> 111111 </tb><tb> (0.0173852056357785) </tb></tr><br><br><tr><tb> 708 </tb><tb> woaini123 </tb><tb> (0.017533797136939) </tb></tr><br><br><tr><tb> 713 </tb><tb> qwe123456 </tb><tb> (0.017657623387906) </tb></tr><br><br><tr><tb> 726 </tb><tb> xiaoxiao </tb><tb> (0.0179795716404205) </tb></tr><br><br><tr><tb> 727 </tb><tb> 123456654321 </tb><tb> (0.0180043368906139) </tb></tr><br><br><tr><tb> 729 </tb><tb> woshishui </tb><tb> (0.0180538673910007) </tb></tr><br><br><tr><tb> 732 </tb><tb> 12301230 </tb><tb> (0.018128163141581) </tb></tr><br><br><tr><tb> 740 </tb><tb> 1234554321 </tb><tb> (0.0183262851431283) </tb></tr><br><br><tr><tb> 741 </tb><tb> 5201314520 </tb><tb> (0.0183510503933217) </tb></tr><br><br><tr><tb> 744 </tb><tb> 12345612 </tb><tb> (0.018425346143902) </tb></tr><br><br><tr><tb> 765 </tb><tb> lilylily </tb><tb> (0.0189454163979637) </tb></tr><br><br><tr><tb> 770 </tb><tb> 123456asd </tb><tb> (0.0190692426489308) </tb></tr><br><br><tr><tb> 772 </tb><tb> 10101010 </tb><tb> (0.0191187731493176) </tb></tr><br><br><tr><tb> 777 </tb><tb> 1q2w3e4r5t </tb><tb> (0.0192425994002847) </tb></tr><br><br><tr><tb> 783 </tb><tb> 11235813 </tb><tb> (0.0193911909014452) </tb></tr><br><br><tr><tb> 805 </tb><tb> 12345600 </tb><tb> (0.0199360264057004) </tb></tr><br><br><tr><tb> 835 </tb><tb> 11111111111111111111 </tb><tb> (0.0206789839115029) </tb></tr><br><br><tr><tb> 847 </tb><tb> wwwwwwww </tb><tb> (0.0209761669138239) </tb></tr><br><br><tr><tb> 852 </tb><tb> 0987654321 </tb><tb> (0.0210999931647909) </tb></tr><br><br><tr><tb> 882 </tb><tb> 5845201314 </tb><tb> (0.0218429506705934) </tb></tr><br><br><tr><tb> 882 </tb><tb> zxcvbnm123 </tb><tb> (0.0218429506705934) </tb></tr><br><br><tr><tb> 892 </tb><tb> kingcom5 </tb><tb> (0.0220906031725276) </tb></tr><br><br><tr><tb> 894 </tb><tb> 123456987 </tb><tb> (0.0221401336729144) </tb></tr><br><br><tr><tb> 910 </tb><tb> 05962514787 </tb><tb> (0.0225363776760091) </tb></tr><br><br><tr><tb> 920 </tb><tb> 321321321 </tb><tb> (0.0227840301779433) </tb></tr><br><br><tr><tb> 967 </tb><tb> woaiwojia </tb><tb> (0.0239479969370339) </tb></tr><br><br><tr><tb> 975 </tb><tb> 1qazxsw2 </tb><tb> (0.0241461189385812) </tb></tr><br><br><tr><tb> 988 </tb><tb> 123qweasd </tb><tb> (0.0244680671910956) </tb></tr><br><br><tr><tb> 991 </tb><tb> 1234abcd </tb><tb> (0.0245423629416759) </tb></tr><br><br><tr><tb> 1003 </tb><tb> woaini1314 </tb><tb> (0.0248395459439969) </tb></tr><br><br><tr><tb> 1037 </tb><tb> 12345678a </tb><tb> (0.025681564450573) </tb></tr><br><br><tr><tb> 1054 </tb><tb> q1w2e3r4 </tb><tb> (0.0261025737038611) </tb></tr><br><br><tr><tb> 1058 </tb><tb> asdfghjk </tb><tb> (0.0262016347046348) </tb></tr><br><br><tr><tb> 1109 </tb><tb> 1123581321 </tb><tb> (0.027464662464499) </tb></tr><br><br><tr><tb> 1111 </tb><tb> 123698745 </tb><tb> (0.0275141929648858) </tb></tr><br><br><tr><tb> 1119 </tb><tb> asdf1234 </tb><tb> (0.0277123149664332) </tb></tr><br><br><tr><tb> 1136 </tb><tb> 521521521 </tb><tb> (0.0281333242197213) </tb></tr><br><br><tr><tb> 1148 </tb><tb> 147852369 </tb><tb> (0.0284305072220423) </tb></tr><br><br><tr><tb> 1183 </tb><tb> 123456qq </tb><tb> (0.0292972909788118) </tb></tr><br><br><tr><tb> 1200 </tb><tb> 3.1415926 </tb><tb> (0.0297183002320999) </tb></tr><br><br><tr><tb> 1206 </tb><tb> qweqweqwe </tb><tb> (0.0298668917332604) </tb></tr><br><br><tr><tb> 1214 </tb><tb> 111222333 </tb><tb> (0.0300650137348078) </tb></tr><br><br><tr><tb> 1245 </tb><tb> zzzzzzzz </tb><tb> (0.0308327364908037) </tb></tr><br><br><tr><tb> 1268 </tb><tb> ms0083jxj </tb><tb> (0.0314023372452523) </tb></tr><br><br><tr><tb> 1273 </tb><tb> 11112222 </tb><tb> (0.0315261634962193) </tb></tr><br><br><tr><tb> 1285 </tb><tb> code8925 </tb><tb> (0.0318233464985403) </tb></tr><br><br><tr><tb> 1316 </tb><tb> qweasdzxc </tb><tb> (0.0325910692545363) </tb></tr><br><br><tr><tb> 1339 </tb><tb> 77777777 </tb><tb> (0.0331606700089848) </tb></tr><br><br><tr><tb> 1384 </tb><tb> asd123456 </tb><tb> (0.0342751062676886) </tb></tr><br><br><tr><tb> 1480 </tb><tb> qwer1234 </tb><tb> (0.0366525702862566) </tb></tr><br><br><tr><tb> 1589 </tb><tb> 33333333 </tb><tb> (0.039351982557339) </tb></tr><br><br><tr><tb> 1652 </tb><tb> 55555555 </tb><tb> (0.0409121933195242) </tb></tr><br><br><tr><tb> 1652 </tb><tb> 741852963 </tb><tb> (0.0409121933195242) </tb></tr><br><br><tr><tb> 1656 </tb><tb> 963852741 </tb><tb> (0.0410112543202979) </tb></tr><br><br><tr><tb> 1699 </tb><tb> 520520520 </tb><tb> (0.0420761600786148) </tb></tr><br><br><tr><tb> 1854 </tb><tb> 123456123456 </tb><tb> (0.0459147738585944) </tb></tr><br><br><tr><tb> 1859 </tb><tb> 999999999 </tb><tb> (0.0460386001095615) </tb></tr><br><br><tr><tb> 1859 </tb><tb> 123456aa </tb><tb> (0.0460386001095615) </tb></tr><br><br><tr><tb> 1891 </tb><tb> 99999999 </tb><tb> (0.0468310881157508) </tb></tr><br><br><tr><tb> 1918 </tb><tb> asdfasdf </tb><tb> (0.047499749870973) </tb></tr><br><br><tr><tb> 1971 </tb><tb> aa123456 </tb><tb> (0.0488123081312241) </tb></tr><br><br><tr><tb> 1986 </tb><tb> 123456789a </tb><tb> (0.0491837868841254) </tb></tr><br><br><tr><tb> 1989 </tb><tb> qwertyui </tb><tb> (0.0492580826347056) </tb></tr><br><br><tr><tb> 2100 </tb><tb> 1234qwer </tb><tb> (0.0520070254061749) </tb></tr><br><br><tr><tb> 2106 </tb><tb> a1234567 </tb><tb> (0.0521556169073354) </tb></tr><br><br><tr><tb> 2113 </tb><tb> 123456123 </tb><tb> (0.0523289736586893) </tb></tr><br><br><tr><tb> 2131 </tb><tb> 123456 </tb><tb> (0.0527747481621708) </tb></tr><br><br><tr><tb> 2138 </tb><tb> a12345678 </tb><tb> (0.0529481049135247) </tb></tr><br><br><tr><tb> 2160 </tb><tb> abc123456 </tb><tb> (0.0534929404177799) </tb></tr><br><br><tr><tb> 2166 </tb><tb> 123321123 </tb><tb> (0.0536415319189404) </tb></tr><br><br><tr><tb> 2243 </tb><tb> 22222222 </tb><tb> (0.0555484561838334) </tb></tr><br><br><tr><tb> 2296 </tb><tb> asdasdasd </tb><tb> (0.0568610144440845) </tb></tr><br><br><tr><tb> 2348 </tb><tb> 110110110 </tb><tb> (0.0581488074541422) </tb></tr><br><br><tr><tb> 2380 </tb><tb> 12341234 </tb><tb> (0.0589412954603315) </tb></tr><br><br><tr><tb> 2396 </tb><tb> abcd1234 </tb><tb> (0.0593375394634262) </tb></tr><br><br><tr><tb> 2515 </tb><tb> qazwsxedc </tb><tb> (0.0622846042364428) </tb></tr><br><br><tr><tb> 2540 </tb><tb> 12121212 </tb><tb> (0.0629037354912782) </tb></tr><br><br><tr><tb> 2573 </tb><tb> 123654789 </tb><tb> (0.0637209887476609) </tb></tr><br><br><tr><tb> 2578 </tb><tb> 0123456789 </tb><tb> (0.063844814998628) </tb></tr><br><br><tr><tb> 2580 </tb><tb> 123456abc </tb><tb> (0.0638943454990148) </tb></tr><br><br><tr><tb> 2796 </tb><tb> 1q2w3e4r </tb><tb> (0.0692436395407928) </tb></tr><br><br><tr><tb> 2826 </tb><tb> asdfghjkl </tb><tb> (0.0699865970465953) </tb></tr><br><br><tr><tb> 2885 </tb><tb> 0000000000 </tb><tb> (0.0714477468080069) </tb></tr><br><br><tr><tb> 2985 </tb><tb> 12344321 </tb><tb> (0.0739242718273486) </tb></tr><br><br><tr><tb> 3061 </tb><tb> 31415926 </tb><tb> (0.0758064308420482) </tb></tr><br><br><tr><tb> 3080 </tb><tb> iloveyou </tb><tb> (0.0762769705957231) </tb></tr><br><br><tr><tb> 3094 </tb><tb> qq123456 </tb><tb> (0.076623684098431) </tb></tr><br><br><tr><tb> 3143 </tb><tb> qwertyuiop </tb><tb> (0.0778371813579084) </tb></tr><br><br><tr><tb> 3175 </tb><tb> 000000000 </tb><tb> (0.0786296693640977) </tb></tr><br><br><tr><tb> 3277 </tb><tb> qqqqqqqq </tb><tb> (0.0811557248838262) </tb></tr><br><br><tr><tb> 3281 </tb><tb> 87654321 </tb><tb> (0.0812547858845999) </tb></tr><br><br><tr><tb> 3501 </tb><tb> password </tb><tb> (0.0867031409271515) </tb></tr><br><br><tr><tb> 3610 </tb><tb> 789456123 </tb><tb> (0.0894025531982339) </tb></tr><br><br><tr><tb> 3649 </tb><tb> xiazhili </tb><tb> (0.0903683979557772) </tb></tr><br><br><tr><tb> 3667 </tb><tb> 1qaz2wsx </tb><tb> (0.0908141724592587) </tb></tr><br><br><tr><tb> 4096 </tb><tb> 11223344 </tb><tb> (0.101438464792234) </tb></tr><br><br><tr><tb> 4435 </tb><tb> a123456789 </tb><tb> (0.109833884607803) </tb></tr><br><br><tr><tb> 5025 </tb><tb> 66666666 </tb><tb> (0.124445382221918) </tb></tr><br><br><tr><tb> 5145 </tb><tb> 1111111111 </tb><tb> (0.127417212245128) </tb></tr><br><br><tr><tb> 5459 </tb><tb> aaaaaaaa </tb><tb> (0.135193500805861) </tb></tr><br><br><tr><tb> 5553 </tb><tb> 987654321 </tb><tb> (0.137521434324042) </tb></tr><br><br><tr><tb> 5965 </tb><tb> 147258369 </tb><tb> (0.14772471740373) </tb></tr><br><br><tr><tb> 6995 </tb><tb> 111111111 </tb><tb> (0.173232925102949) </tb></tr><br><br><tr><tb> 15033 </tb><tb> 88888888 </tb><tb> (0.372296006157632) </tb></tr><br><br><tr><tb> 17790 </tb><tb> 1234567890 </tb><tb> (0.440573800940881) </tb></tr><br><br><tr><tb> 19986 </tb><tb> 123123123 </tb><tb> (0.494958290365624) </tb></tr><br><br><tr><tb> 34952 </tb><tb> 00000000 </tb><tb> (0.865595024760297) </tb></tr><br><br><tr><tb> 46053 </tb><tb> dearbook </tb><tb> (1.14051406715741) </tb></tr><br><br><tr><tb> 76346 </tb><tb> 11111111 </tb><tb> (1.89072779126658) </tb></tr><br><br><tr><tb> 212749 </tb><tb> 12345678 </tb><tb> (5.26878221339919) </tb></tr><br><br><tr><tb> 235012 </tb><tb> 123456789 </tb><tb> (5.82013097845522) </tb></tr><br><br></table><br><br>","more":"<br>CSDN的用户名-密码-邮箱被泄露在互联网上。如果你想知道自己的用户名密码是否被泄露，点击<a href=\"http://0bad.com/csdn.php\" target=\"_blank\">链接</a>。<br>这里是统计出的密码重复次数。转载自某个地方..<br><table><br><tr><tb> 重复次数 </tb><tb> 密码 </tb><tb> 百分比 </tb></tr><br><br><tr><tb> 501 </tb><tb> qwerasdf </tb><tb> (0.0124073903469017) </tb></tr><br><br><tr><tb> 504 </tb><tb> computer </tb><tb> (0.012481686097482) </tb></tr><br><br><tr><tb> 519 </tb><tb> zxczxczxc </tb><tb> (0.0128531648503832) </tb></tr><br><br><tr><tb> 521 </tb><tb> dddddddd </tb><tb> (0.0129026953507701) </tb></tr><br><br><tr><tb> 525 </tb><tb> 299792458 </tb><tb> (0.0130017563515437) </tb></tr><br><br><tr><tb> 532 </tb><tb> 135792468 </tb><tb> (0.0131751131028976) </tb></tr><br><br><tr><tb> 535 </tb><tb> 20082008 </tb><tb> (0.0132494088534779) </tb></tr><br><br><tr><tb> 536 </tb><tb> 369369369 </tb><tb> (0.0132741741036713) </tb></tr><br><br><tr><tb> 553 </tb><tb> 5845211314 </tb><tb> (0.0136951833569594) </tb></tr><br><br><tr><tb> 556 </tb><tb> yangyang </tb><tb> (0.0137694791075396) </tb></tr><br><br><tr><tb> 559 </tb><tb> csdncsdn </tb><tb> (0.0138437748581199) </tb></tr><br><br><tr><tb> 559 </tb><tb> google250 </tb><tb> (0.0138437748581199) </tb></tr><br><br><tr><tb> 561 </tb><tb> woaini520 </tb><tb> (0.0138933053585067) </tb></tr><br><br><tr><tb> 562 </tb><tb> zhang123 </tb><tb> (0.0139180706087001) </tb></tr><br><br><tr><tb> 562 </tb><tb> 1234567b </tb><tb> (0.0139180706087001) </tb></tr><br><br><tr><tb> 565 </tb><tb> wocaonima </tb><tb> (0.0139923663592804) </tb></tr><br><br><tr><tb> 567 </tb><tb> 1233211234567 </tb><tb> (0.0140418968596672) </tb></tr><br><br><tr><tb> 567 </tb><tb> 9876543210 </tb><tb> (0.0140418968596672) </tb></tr><br><br><tr><tb> 570 </tb><tb> qaz123456 </tb><tb> (0.0141161926102475) </tb></tr><br><br><tr><tb> 571 </tb><tb> q123456789 </tb><tb> (0.0141409578604409) </tb></tr><br><br><tr><tb> 572 </tb><tb> 321654987 </tb><tb> (0.0141657231106343) </tb></tr><br><br><tr><tb> 578 </tb><tb> 369258147 </tb><tb> (0.0143143146117948) </tb></tr><br><br><tr><tb> 585 </tb><tb> aaa123456 </tb><tb> (0.0144876713631487) </tb></tr><br><br><tr><tb> 589 </tb><tb> 1357924680 </tb><tb> (0.0145867323639224) </tb></tr><br><br><tr><tb> 592 </tb><tb> 123321aa </tb><tb> (0.0146610281145026) </tb></tr><br><br><tr><tb> 601 </tb><tb> 25257758 </tb><tb> (0.0148839153662434) </tb></tr><br><br><tr><tb> 608 </tb><tb> wojiushiwo </tb><tb> (0.0150572721175973) </tb></tr><br><br><tr><tb> 616 </tb><tb> ssssssss </tb><tb> (0.0152553941191446) </tb></tr><br><br><tr><tb> 618 </tb><tb> qazwsx123 </tb><tb> (0.0153049246195315) </tb></tr><br><br><tr><tb> 621 </tb><tb> 123456aaa </tb><tb> (0.0153792203701117) </tb></tr><br><br><tr><tb> 623 </tb><tb> 1234567a </tb><tb> (0.0154287508704985) </tb></tr><br><br><tr><tb> 642 </tb><tb> z123456789 </tb><tb> (0.0158992906241735) </tb></tr><br><br><tr><tb> 649 </tb><tb> woainima </tb><tb> (0.0160726473755274) </tb></tr><br><br><tr><tb> 650 </tb><tb> 44444444 </tb><tb> (0.0160974126257208) </tb></tr><br><br><tr><tb> 651 </tb><tb> buzhidao </tb><tb> (0.0161221778759142) </tb></tr><br><br><tr><tb> 657 </tb><tb> ffffffff </tb><tb> (0.0162707693770747) </tb></tr><br><br><tr><tb> 669 </tb><tb> 100200300 </tb><tb> (0.0165679523793957) </tb></tr><br><br><tr><tb> 680 </tb><tb> 12345679 </tb><tb> (0.0168403701315233) </tb></tr><br><br><tr><tb> 685 </tb><tb> 12369874 </tb><tb> (0.0169641963824904) </tb></tr><br><br><tr><tb> 693 </tb><tb> 1122334455 </tb><tb> (0.0171623183840377) </tb></tr><br><br><tr><tb> 702 </tb><tb> 111111 </tb><tb> (0.0173852056357785) </tb></tr><br><br><tr><tb> 708 </tb><tb> woaini123 </tb><tb> (0.017533797136939) </tb></tr><br><br><tr><tb> 713 </tb><tb> qwe123456 </tb><tb> (0.017657623387906) </tb></tr><br><br><tr><tb> 726 </tb><tb> xiaoxiao </tb><tb> (0.0179795716404205) </tb></tr><br><br><tr><tb> 727 </tb><tb> 123456654321 </tb><tb> (0.0180043368906139) </tb></tr><br><br><tr><tb> 729 </tb><tb> woshishui </tb><tb> (0.0180538673910007) </tb></tr><br><br><tr><tb> 732 </tb><tb> 12301230 </tb><tb> (0.018128163141581) </tb></tr><br><br><tr><tb> 740 </tb><tb> 1234554321 </tb><tb> (0.0183262851431283) </tb></tr><br><br><tr><tb> 741 </tb><tb> 5201314520 </tb><tb> (0.0183510503933217) </tb></tr><br><br><tr><tb> 744 </tb><tb> 12345612 </tb><tb> (0.018425346143902) </tb></tr><br><br><tr><tb> 765 </tb><tb> lilylily </tb><tb> (0.0189454163979637) </tb></tr><br><br><tr><tb> 770 </tb><tb> 123456asd </tb><tb> (0.0190692426489308) </tb></tr><br><br><tr><tb> 772 </tb><tb> 10101010 </tb><tb> (0.0191187731493176) </tb></tr><br><br><tr><tb> 777 </tb><tb> 1q2w3e4r5t </tb><tb> (0.0192425994002847) </tb></tr><br><br><tr><tb> 783 </tb><tb> 11235813 </tb><tb> (0.0193911909014452) </tb></tr><br><br><tr><tb> 805 </tb><tb> 12345600 </tb><tb> (0.0199360264057004) </tb></tr><br><br><tr><tb> 835 </tb><tb> 11111111111111111111 </tb><tb> (0.0206789839115029) </tb></tr><br><br><tr><tb> 847 </tb><tb> wwwwwwww </tb><tb> (0.0209761669138239) </tb></tr><br><br><tr><tb> 852 </tb><tb> 0987654321 </tb><tb> (0.0210999931647909) </tb></tr><br><br><tr><tb> 882 </tb><tb> 5845201314 </tb><tb> (0.0218429506705934) </tb></tr><br><br><tr><tb> 882 </tb><tb> zxcvbnm123 </tb><tb> (0.0218429506705934) </tb></tr><br><br><tr><tb> 892 </tb><tb> kingcom5 </tb><tb> (0.0220906031725276) </tb></tr><br><br><tr><tb> 894 </tb><tb> 123456987 </tb><tb> (0.0221401336729144) </tb></tr><br><br><tr><tb> 910 </tb><tb> 05962514787 </tb><tb> (0.0225363776760091) </tb></tr><br><br><tr><tb> 920 </tb><tb> 321321321 </tb><tb> (0.0227840301779433) </tb></tr><br><br><tr><tb> 967 </tb><tb> woaiwojia </tb><tb> (0.0239479969370339) </tb></tr><br><br><tr><tb> 975 </tb><tb> 1qazxsw2 </tb><tb> (0.0241461189385812) </tb></tr><br><br><tr><tb> 988 </tb><tb> 123qweasd </tb><tb> (0.0244680671910956) </tb></tr><br><br><tr><tb> 991 </tb><tb> 1234abcd </tb><tb> (0.0245423629416759) </tb></tr><br><br><tr><tb> 1003 </tb><tb> woaini1314 </tb><tb> (0.0248395459439969) </tb></tr><br><br><tr><tb> 1037 </tb><tb> 12345678a </tb><tb> (0.025681564450573) </tb></tr><br><br><tr><tb> 1054 </tb><tb> q1w2e3r4 </tb><tb> (0.0261025737038611) </tb></tr><br><br><tr><tb> 1058 </tb><tb> asdfghjk </tb><tb> (0.0262016347046348) </tb></tr><br><br><tr><tb> 1109 </tb><tb> 1123581321 </tb><tb> (0.027464662464499) </tb></tr><br><br><tr><tb> 1111 </tb><tb> 123698745 </tb><tb> (0.0275141929648858) </tb></tr><br><br><tr><tb> 1119 </tb><tb> asdf1234 </tb><tb> (0.0277123149664332) </tb></tr><br><br><tr><tb> 1136 </tb><tb> 521521521 </tb><tb> (0.0281333242197213) </tb></tr><br><br><tr><tb> 1148 </tb><tb> 147852369 </tb><tb> (0.0284305072220423) </tb></tr><br><br><tr><tb> 1183 </tb><tb> 123456qq </tb><tb> (0.0292972909788118) </tb></tr><br><br><tr><tb> 1200 </tb><tb> 3.1415926 </tb><tb> (0.0297183002320999) </tb></tr><br><br><tr><tb> 1206 </tb><tb> qweqweqwe </tb><tb> (0.0298668917332604) </tb></tr><br><br><tr><tb> 1214 </tb><tb> 111222333 </tb><tb> (0.0300650137348078) </tb></tr><br><br><tr><tb> 1245 </tb><tb> zzzzzzzz </tb><tb> (0.0308327364908037) </tb></tr><br><br><tr><tb> 1268 </tb><tb> ms0083jxj </tb><tb> (0.0314023372452523) </tb></tr><br><br><tr><tb> 1273 </tb><tb> 11112222 </tb><tb> (0.0315261634962193) </tb></tr><br><br><tr><tb> 1285 </tb><tb> code8925 </tb><tb> (0.0318233464985403) </tb></tr><br><br><tr><tb> 1316 </tb><tb> qweasdzxc </tb><tb> (0.0325910692545363) </tb></tr><br><br><tr><tb> 1339 </tb><tb> 77777777 </tb><tb> (0.0331606700089848) </tb></tr><br><br><tr><tb> 1384 </tb><tb> asd123456 </tb><tb> (0.0342751062676886) </tb></tr><br><br><tr><tb> 1480 </tb><tb> qwer1234 </tb><tb> (0.0366525702862566) </tb></tr><br><br><tr><tb> 1589 </tb><tb> 33333333 </tb><tb> (0.039351982557339) </tb></tr><br><br><tr><tb> 1652 </tb><tb> 55555555 </tb><tb> (0.0409121933195242) </tb></tr><br><br><tr><tb> 1652 </tb><tb> 741852963 </tb><tb> (0.0409121933195242) </tb></tr><br><br><tr><tb> 1656 </tb><tb> 963852741 </tb><tb> (0.0410112543202979) </tb></tr><br><br><tr><tb> 1699 </tb><tb> 520520520 </tb><tb> (0.0420761600786148) </tb></tr><br><br><tr><tb> 1854 </tb><tb> 123456123456 </tb><tb> (0.0459147738585944) </tb></tr><br><br><tr><tb> 1859 </tb><tb> 999999999 </tb><tb> (0.0460386001095615) </tb></tr><br><br><tr><tb> 1859 </tb><tb> 123456aa </tb><tb> (0.0460386001095615) </tb></tr><br><br><tr><tb> 1891 </tb><tb> 99999999 </tb><tb> (0.0468310881157508) </tb></tr><br><br><tr><tb> 1918 </tb><tb> asdfasdf </tb><tb> (0.047499749870973) </tb></tr><br><br><tr><tb> 1971 </tb><tb> aa123456 </tb><tb> (0.0488123081312241) </tb></tr><br><br><tr><tb> 1986 </tb><tb> 123456789a </tb><tb> (0.0491837868841254) </tb></tr><br><br><tr><tb> 1989 </tb><tb> qwertyui </tb><tb> (0.0492580826347056) </tb></tr><br><br><tr><tb> 2100 </tb><tb> 1234qwer </tb><tb> (0.0520070254061749) </tb></tr><br><br><tr><tb> 2106 </tb><tb> a1234567 </tb><tb> (0.0521556169073354) </tb></tr><br><br><tr><tb> 2113 </tb><tb> 123456123 </tb><tb> (0.0523289736586893) </tb></tr><br><br><tr><tb> 2131 </tb><tb> 123456 </tb><tb> (0.0527747481621708) </tb></tr><br><br><tr><tb> 2138 </tb><tb> a12345678 </tb><tb> (0.0529481049135247) </tb></tr><br><br><tr><tb> 2160 </tb><tb> abc123456 </tb><tb> (0.0534929404177799) </tb></tr><br><br><tr><tb> 2166 </tb><tb> 123321123 </tb><tb> (0.0536415319189404) </tb></tr><br><br><tr><tb> 2243 </tb><tb> 22222222 </tb><tb> (0.0555484561838334) </tb></tr><br><br><tr><tb> 2296 </tb><tb> asdasdasd </tb><tb> (0.0568610144440845) </tb></tr><br><br><tr><tb> 2348 </tb><tb> 110110110 </tb><tb> (0.0581488074541422) </tb></tr><br><br><tr><tb> 2380 </tb><tb> 12341234 </tb><tb> (0.0589412954603315) </tb></tr><br><br><tr><tb> 2396 </tb><tb> abcd1234 </tb><tb> (0.0593375394634262) </tb></tr><br><br><tr><tb> 2515 </tb><tb> qazwsxedc </tb><tb> (0.0622846042364428) </tb></tr><br><br><tr><tb> 2540 </tb><tb> 12121212 </tb><tb> (0.0629037354912782) </tb></tr><br><br><tr><tb> 2573 </tb><tb> 123654789 </tb><tb> (0.0637209887476609) </tb></tr><br><br><tr><tb> 2578 </tb><tb> 0123456789 </tb><tb> (0.063844814998628) </tb></tr><br><br><tr><tb> 2580 </tb><tb> 123456abc </tb><tb> (0.0638943454990148) </tb></tr><br><br><tr><tb> 2796 </tb><tb> 1q2w3e4r </tb><tb> (0.0692436395407928) </tb></tr><br><br><tr><tb> 2826 </tb><tb> asdfghjkl </tb><tb> (0.0699865970465953) </tb></tr><br><br><tr><tb> 2885 </tb><tb> 0000000000 </tb><tb> (0.0714477468080069) </tb></tr><br><br><tr><tb> 2985 </tb><tb> 12344321 </tb><tb> (0.0739242718273486) </tb></tr><br><br><tr><tb> 3061 </tb><tb> 31415926 </tb><tb> (0.0758064308420482) </tb></tr><br><br><tr><tb> 3080 </tb><tb> iloveyou </tb><tb> (0.0762769705957231) </tb></tr><br><br><tr><tb> 3094 </tb><tb> qq123456 </tb><tb> (0.076623684098431) </tb></tr><br><br><tr><tb> 3143 </tb><tb> qwertyuiop </tb><tb> (0.0778371813579084) </tb></tr><br><br><tr><tb> 3175 </tb><tb> 000000000 </tb><tb> (0.0786296693640977) </tb></tr><br><br><tr><tb> 3277 </tb><tb> qqqqqqqq </tb><tb> (0.0811557248838262) </tb></tr><br><br><tr><tb> 3281 </tb><tb> 87654321 </tb><tb> (0.0812547858845999) </tb></tr><br><br><tr><tb> 3501 </tb><tb> password </tb><tb> (0.0867031409271515) </tb></tr><br><br><tr><tb> 3610 </tb><tb> 789456123 </tb><tb> (0.0894025531982339) </tb></tr><br><br><tr><tb> 3649 </tb><tb> xiazhili </tb><tb> (0.0903683979557772) </tb></tr><br><br><tr><tb> 3667 </tb><tb> 1qaz2wsx </tb><tb> (0.0908141724592587) </tb></tr><br><br><tr><tb> 4096 </tb><tb> 11223344 </tb><tb> (0.101438464792234) </tb></tr><br><br><tr><tb> 4435 </tb><tb> a123456789 </tb><tb> (0.109833884607803) </tb></tr><br><br><tr><tb> 5025 </tb><tb> 66666666 </tb><tb> (0.124445382221918) </tb></tr><br><br><tr><tb> 5145 </tb><tb> 1111111111 </tb><tb> (0.127417212245128) </tb></tr><br><br><tr><tb> 5459 </tb><tb> aaaaaaaa </tb><tb> (0.135193500805861) </tb></tr><br><br><tr><tb> 5553 </tb><tb> 987654321 </tb><tb> (0.137521434324042) </tb></tr><br><br><tr><tb> 5965 </tb><tb> 147258369 </tb><tb> (0.14772471740373) </tb></tr><br><br><tr><tb> 6995 </tb><tb> 111111111 </tb><tb> (0.173232925102949) </tb></tr><br><br><tr><tb> 15033 </tb><tb> 88888888 </tb><tb> (0.372296006157632) </tb></tr><br><br><tr><tb> 17790 </tb><tb> 1234567890 </tb><tb> (0.440573800940881) </tb></tr><br><br><tr><tb> 19986 </tb><tb> 123123123 </tb><tb> (0.494958290365624) </tb></tr><br><br><tr><tb> 34952 </tb><tb> 00000000 </tb><tb> (0.865595024760297) </tb></tr><br><br><tr><tb> 46053 </tb><tb> dearbook </tb><tb> (1.14051406715741) </tb></tr><br><br><tr><tb> 76346 </tb><tb> 11111111 </tb><tb> (1.89072779126658) </tb></tr><br><br><tr><tb> 212749 </tb><tb> 12345678 </tb><tb> (5.26878221339919) </tb></tr><br><br><tr><tb> 235012 </tb><tb> 123456789 </tb><tb> (5.82013097845522) </tb></tr><br><br></table>"},{"layout":"post","title":"octopress markdown","date":"2012-01-14T12:49:00.000Z","comments":1,"_content":"今天又弄了一下octopress，发现octopress和markdown中间还是有些兼容问题。例如codeblock、四个空格、tab、\\` \\` \\`以及\\*的使用。都有些bug。应该是octopress解析时候有问题。`*`后面紧跟的一段，如果后面紧跟代码一定是8个空格或者两个tab。偶然情况下，使用4个空格也是可以作为code的。而code一定是以没有空格开头到行结束的。即使你使用了\\{\\% codeblock \\%\\} 以及 \\{\\% endcodeblock \\%\\} 也是不会被识别的。\n所以blog还是简单点好。   \n> Simple is beauty!   \n>  by someone   \n{% blockquote someone http://chillyc.info %}\nSimple is beauty!\n{% endblockquote %}\n{% pullquote %}\n下面再使用一下pull quote\n{\"其实我真的不想再说什么了...\"}\n好吧，让这篇blog结束吧。\n{% endpullquote%}\n","source":"_posts/2012-01-14-new-title.markdown","raw":"---\nlayout: post\ntitle: \"octopress markdown\"\ndate: 2012-01-14 20:49\ncomments: true\ncategories: new\n---\n今天又弄了一下octopress，发现octopress和markdown中间还是有些兼容问题。例如codeblock、四个空格、tab、\\` \\` \\`以及\\*的使用。都有些bug。应该是octopress解析时候有问题。`*`后面紧跟的一段，如果后面紧跟代码一定是8个空格或者两个tab。偶然情况下，使用4个空格也是可以作为code的。而code一定是以没有空格开头到行结束的。即使你使用了\\{\\% codeblock \\%\\} 以及 \\{\\% endcodeblock \\%\\} 也是不会被识别的。\n所以blog还是简单点好。   \n> Simple is beauty!   \n>  by someone   \n{% blockquote someone http://chillyc.info %}\nSimple is beauty!\n{% endblockquote %}\n{% pullquote %}\n下面再使用一下pull quote\n{\"其实我真的不想再说什么了...\"}\n好吧，让这篇blog结束吧。\n{% endpullquote%}\n","slug":"2012-01-14-new-title","published":1,"updated":"2017-06-05T02:58:02.000Z","photos":[],"link":"","_id":"cj3jjqt4b000005mjt9obvf73","content":"<p>今天又弄了一下octopress，发现octopress和markdown中间还是有些兼容问题。例如codeblock、四个空格、tab、` ` `以及*的使用。都有些bug。应该是octopress解析时候有问题。<code>*</code>后面紧跟的一段，如果后面紧跟代码一定是8个空格或者两个tab。偶然情况下，使用4个空格也是可以作为code的。而code一定是以没有空格开头到行结束的。即使你使用了{\\% codeblock \\%} 以及 {\\% endcodeblock \\%} 也是不会被识别的。<br>所以blog还是简单点好。   </p>\n<blockquote>\n<p>Simple is beauty!<br> by someone<br><blockquote><p>Simple is beauty!</p>\n<footer><strong>someone</strong><cite><a href=\"http://chillyc.info\">chillyc.info</a></cite></footer></blockquote><br><blockquote class=\"pullquote\"><p>下面再使用一下pull quote<br>{“其实我真的不想再说什么了…”}<br>好吧，让这篇blog结束吧。</p>\n</blockquote></p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<p>今天又弄了一下octopress，发现octopress和markdown中间还是有些兼容问题。例如codeblock、四个空格、tab、` ` `以及*的使用。都有些bug。应该是octopress解析时候有问题。<code>*</code>后面紧跟的一段，如果后面紧跟代码一定是8个空格或者两个tab。偶然情况下，使用4个空格也是可以作为code的。而code一定是以没有空格开头到行结束的。即使你使用了{\\% codeblock \\%} 以及 {\\% endcodeblock \\%} 也是不会被识别的。<br>所以blog还是简单点好。   </p>\n<blockquote>\n<p>Simple is beauty!<br> by someone<br><blockquote><p>Simple is beauty!</p>\n<footer><strong>someone</strong><cite><a href=\"http://chillyc.info\">chillyc.info</a></cite></footer></blockquote><br><blockquote class=\"pullquote\"><p>下面再使用一下pull quote<br>{“其实我真的不想再说什么了…”}<br>好吧，让这篇blog结束吧。</p>\n</blockquote></p>\n</blockquote>\n"},{"layout":"post","title":"first use octopress","date":"2012-01-14T12:43:00.000Z","comments":1,"_content":"\n这是第二篇blog。第一篇貌似什么都没有写。现在在linux下过得相当到舒坦。比windows的感觉好多了。就是拼音输入法支持到不怎么样。谢谢搭建octopress的感受吧。第一感受是这东西真不好装。需要现学到知识也有很多，例如rvm, ruby, gem, bundle, rake, git, MarkDown. 再加上在windows下养成到习惯，到linux下还是要熟悉一下。首先要先安装openssl和libtool相关的包。\n{% codeblock %}\n    sudo apt-get install openssh-client openssl libruby1.9.1 libssl-dev libssl libtool\n{% endcodeblock %}\n下面挨个介绍吧。  \n*   rvm 是管理ruby的工具，因为octopress需要使用ruby1.9.2所以必须使用rvm,否则就自己去[ruby] []的官网上自己下载，然后编译安装。这里使用rvm是可以管理多个ruby版本。并且可以自动编译安装ruby。安装rvm需要一行命令\n    bash -s stable < <(curl -s https://raw.github.com/wayneeseguin/rvm/master/binscripts/rvm-installer)   \n敲命令时注意`< <`之间的空格。安装完这个，需要将rvm添加到path中。在~/.bashrc中添加` PATH=$PATH:~/.rvm/bin `。注意有些系统可能~/.bashprofile或者其他，详情在哪里添加请[google] []。添加完后，关闭bash shell.再启动shell或者终端。然后下面的命令可以很好执行：\n    which rvm\n    # 看到底rvm路径对了没有\n    rvm install 1.9.2 && rvm use 1.9.2\n    # 安装ruby 1.9.2并且使用这个版本\n    ruby --version\n    # 是否是1.9.2版本\n这里需要注意rvm use 1.9.2,如果你的机器重启，这里下次还要再设置一边。否则很有可能不能找到正确的ruby.\n*   这一步要使用到git, git是管理代码到工具。不会用的话详情见[git] []。octopress也主要使用了git和github,否则该实现到功能都不能用了。\n    git clone git://github.com/imathis/octopress.git octopress\n    # 把octopress的主要内容down下来。   \n*   这里要使用gem， bundle, rake了。gem,bundler都是管理ruby各个小类库的工具。而rake是ruby make. \n        gem install bundler\n        bundle install\n        rake install\n        # 如果这里rake运行不成功，有可能是有多个版本到rake,要使用bundle exec rake install\n*   剩下的详情请查阅[octopress][octopress-deploy]。\n如果在`rake generate`处因为openssl卡住，则需要安装完openssl,再安装ruby.yaml编译不成功，是因为没有安装libtool.\n[octopress-deploy]: http://octopress.org/docs/deploying/\n[git]: http://git-scm.com\n[ruby]: http://ruby-lang.org\n[google]: http://google.com\n","source":"_posts/2012-01-14-new.markdown","raw":"---\nlayout: post\ntitle: \"first use octopress\"\ndate: 2012-01-14 20:43\ncomments: true\ncategories: new \n---\n\n这是第二篇blog。第一篇貌似什么都没有写。现在在linux下过得相当到舒坦。比windows的感觉好多了。就是拼音输入法支持到不怎么样。谢谢搭建octopress的感受吧。第一感受是这东西真不好装。需要现学到知识也有很多，例如rvm, ruby, gem, bundle, rake, git, MarkDown. 再加上在windows下养成到习惯，到linux下还是要熟悉一下。首先要先安装openssl和libtool相关的包。\n{% codeblock %}\n    sudo apt-get install openssh-client openssl libruby1.9.1 libssl-dev libssl libtool\n{% endcodeblock %}\n下面挨个介绍吧。  \n*   rvm 是管理ruby的工具，因为octopress需要使用ruby1.9.2所以必须使用rvm,否则就自己去[ruby] []的官网上自己下载，然后编译安装。这里使用rvm是可以管理多个ruby版本。并且可以自动编译安装ruby。安装rvm需要一行命令\n    bash -s stable < <(curl -s https://raw.github.com/wayneeseguin/rvm/master/binscripts/rvm-installer)   \n敲命令时注意`< <`之间的空格。安装完这个，需要将rvm添加到path中。在~/.bashrc中添加` PATH=$PATH:~/.rvm/bin `。注意有些系统可能~/.bashprofile或者其他，详情在哪里添加请[google] []。添加完后，关闭bash shell.再启动shell或者终端。然后下面的命令可以很好执行：\n    which rvm\n    # 看到底rvm路径对了没有\n    rvm install 1.9.2 && rvm use 1.9.2\n    # 安装ruby 1.9.2并且使用这个版本\n    ruby --version\n    # 是否是1.9.2版本\n这里需要注意rvm use 1.9.2,如果你的机器重启，这里下次还要再设置一边。否则很有可能不能找到正确的ruby.\n*   这一步要使用到git, git是管理代码到工具。不会用的话详情见[git] []。octopress也主要使用了git和github,否则该实现到功能都不能用了。\n    git clone git://github.com/imathis/octopress.git octopress\n    # 把octopress的主要内容down下来。   \n*   这里要使用gem， bundle, rake了。gem,bundler都是管理ruby各个小类库的工具。而rake是ruby make. \n        gem install bundler\n        bundle install\n        rake install\n        # 如果这里rake运行不成功，有可能是有多个版本到rake,要使用bundle exec rake install\n*   剩下的详情请查阅[octopress][octopress-deploy]。\n如果在`rake generate`处因为openssl卡住，则需要安装完openssl,再安装ruby.yaml编译不成功，是因为没有安装libtool.\n[octopress-deploy]: http://octopress.org/docs/deploying/\n[git]: http://git-scm.com\n[ruby]: http://ruby-lang.org\n[google]: http://google.com\n","slug":"2012-01-14-new","published":1,"updated":"2017-06-05T02:58:02.000Z","photos":[],"link":"","_id":"cj3jjqt4k000105mjenqkzgc2","content":"<p>这是第二篇blog。第一篇貌似什么都没有写。现在在linux下过得相当到舒坦。比windows的感觉好多了。就是拼音输入法支持到不怎么样。谢谢搭建octopress的感受吧。第一感受是这东西真不好装。需要现学到知识也有很多，例如rvm, ruby, gem, bundle, rake, git, MarkDown. 再加上在windows下养成到习惯，到linux下还是要熟悉一下。首先要先安装openssl和libtool相关的包。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get install openssh-client openssl libruby1.9.1 libssl-dev libssl libtool</div></pre></td></tr></table></figure><br>下面挨个介绍吧。  </p>\n<ul>\n<li>rvm 是管理ruby的工具，因为octopress需要使用ruby1.9.2所以必须使用rvm,否则就自己去<a href=\"http://ruby-lang.org\" target=\"_blank\" rel=\"external\">ruby</a>的官网上自己下载，然后编译安装。这里使用rvm是可以管理多个ruby版本。并且可以自动编译安装ruby。安装rvm需要一行命令<br>bash -s stable &lt; &lt;(curl -s <a href=\"https://raw.github.com/wayneeseguin/rvm/master/binscripts/rvm-installer\" target=\"_blank\" rel=\"external\">https://raw.github.com/wayneeseguin/rvm/master/binscripts/rvm-installer</a>)<br>敲命令时注意<code>&lt; &lt;</code>之间的空格。安装完这个，需要将rvm添加到path中。在~/.bashrc中添加<code>PATH=$PATH:~/.rvm/bin</code>。注意有些系统可能~/.bashprofile或者其他，详情在哪里添加请<a href=\"http://google.com\" target=\"_blank\" rel=\"external\">google</a>。添加完后，关闭bash shell.再启动shell或者终端。然后下面的命令可以很好执行：<br>which rvm<h1 id=\"看到底rvm路径对了没有\"><a href=\"#看到底rvm路径对了没有\" class=\"headerlink\" title=\"看到底rvm路径对了没有\"></a>看到底rvm路径对了没有</h1>rvm install 1.9.2 &amp;&amp; rvm use 1.9.2<h1 id=\"安装ruby-1-9-2并且使用这个版本\"><a href=\"#安装ruby-1-9-2并且使用这个版本\" class=\"headerlink\" title=\"安装ruby 1.9.2并且使用这个版本\"></a>安装ruby 1.9.2并且使用这个版本</h1>ruby –version<h1 id=\"是否是1-9-2版本\"><a href=\"#是否是1-9-2版本\" class=\"headerlink\" title=\"是否是1.9.2版本\"></a>是否是1.9.2版本</h1>这里需要注意rvm use 1.9.2,如果你的机器重启，这里下次还要再设置一边。否则很有可能不能找到正确的ruby.</li>\n<li>这一步要使用到git, git是管理代码到工具。不会用的话详情见<a href=\"http://git-scm.com\" target=\"_blank\" rel=\"external\">git</a>。octopress也主要使用了git和github,否则该实现到功能都不能用了。<br>git clone git://github.com/imathis/octopress.git octopress<h1 id=\"把octopress的主要内容down下来。\"><a href=\"#把octopress的主要内容down下来。\" class=\"headerlink\" title=\"把octopress的主要内容down下来。\"></a>把octopress的主要内容down下来。</h1></li>\n<li>这里要使用gem， bundle, rake了。gem,bundler都是管理ruby各个小类库的工具。而rake是ruby make. <pre><code>gem install bundler\nbundle install\nrake install\n# 如果这里rake运行不成功，有可能是有多个版本到rake,要使用bundle exec rake install\n</code></pre></li>\n<li>剩下的详情请查阅<a href=\"http://octopress.org/docs/deploying/\" target=\"_blank\" rel=\"external\">octopress</a>。<br>如果在<code>rake generate</code>处因为openssl卡住，则需要安装完openssl,再安装ruby.yaml编译不成功，是因为没有安装libtool.</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p>这是第二篇blog。第一篇貌似什么都没有写。现在在linux下过得相当到舒坦。比windows的感觉好多了。就是拼音输入法支持到不怎么样。谢谢搭建octopress的感受吧。第一感受是这东西真不好装。需要现学到知识也有很多，例如rvm, ruby, gem, bundle, rake, git, MarkDown. 再加上在windows下养成到习惯，到linux下还是要熟悉一下。首先要先安装openssl和libtool相关的包。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get install openssh-client openssl libruby1.9.1 libssl-dev libssl libtool</div></pre></td></tr></table></figure><br>下面挨个介绍吧。  </p>\n<ul>\n<li>rvm 是管理ruby的工具，因为octopress需要使用ruby1.9.2所以必须使用rvm,否则就自己去<a href=\"http://ruby-lang.org\" target=\"_blank\" rel=\"external\">ruby</a>的官网上自己下载，然后编译安装。这里使用rvm是可以管理多个ruby版本。并且可以自动编译安装ruby。安装rvm需要一行命令<br>bash -s stable &lt; &lt;(curl -s <a href=\"https://raw.github.com/wayneeseguin/rvm/master/binscripts/rvm-installer\" target=\"_blank\" rel=\"external\">https://raw.github.com/wayneeseguin/rvm/master/binscripts/rvm-installer</a>)<br>敲命令时注意<code>&lt; &lt;</code>之间的空格。安装完这个，需要将rvm添加到path中。在~/.bashrc中添加<code>PATH=$PATH:~/.rvm/bin</code>。注意有些系统可能~/.bashprofile或者其他，详情在哪里添加请<a href=\"http://google.com\" target=\"_blank\" rel=\"external\">google</a>。添加完后，关闭bash shell.再启动shell或者终端。然后下面的命令可以很好执行：<br>which rvm<h1 id=\"看到底rvm路径对了没有\"><a href=\"#看到底rvm路径对了没有\" class=\"headerlink\" title=\"看到底rvm路径对了没有\"></a>看到底rvm路径对了没有</h1>rvm install 1.9.2 &amp;&amp; rvm use 1.9.2<h1 id=\"安装ruby-1-9-2并且使用这个版本\"><a href=\"#安装ruby-1-9-2并且使用这个版本\" class=\"headerlink\" title=\"安装ruby 1.9.2并且使用这个版本\"></a>安装ruby 1.9.2并且使用这个版本</h1>ruby –version<h1 id=\"是否是1-9-2版本\"><a href=\"#是否是1-9-2版本\" class=\"headerlink\" title=\"是否是1.9.2版本\"></a>是否是1.9.2版本</h1>这里需要注意rvm use 1.9.2,如果你的机器重启，这里下次还要再设置一边。否则很有可能不能找到正确的ruby.</li>\n<li>这一步要使用到git, git是管理代码到工具。不会用的话详情见<a href=\"http://git-scm.com\" target=\"_blank\" rel=\"external\">git</a>。octopress也主要使用了git和github,否则该实现到功能都不能用了。<br>git clone git://github.com/imathis/octopress.git octopress<h1 id=\"把octopress的主要内容down下来。\"><a href=\"#把octopress的主要内容down下来。\" class=\"headerlink\" title=\"把octopress的主要内容down下来。\"></a>把octopress的主要内容down下来。</h1></li>\n<li>这里要使用gem， bundle, rake了。gem,bundler都是管理ruby各个小类库的工具。而rake是ruby make. <pre><code>gem install bundler\nbundle install\nrake install\n# 如果这里rake运行不成功，有可能是有多个版本到rake,要使用bundle exec rake install\n</code></pre></li>\n<li>剩下的详情请查阅<a href=\"http://octopress.org/docs/deploying/\" target=\"_blank\" rel=\"external\">octopress</a>。<br>如果在<code>rake generate</code>处因为openssl卡住，则需要安装完openssl,再安装ruby.yaml编译不成功，是因为没有安装libtool.</li>\n</ul>\n"},{"layout":"post","title":"web config permission of files and dirs","date":"2012-01-15T15:29:00.000Z","comments":1,"_content":"permission of files: 0644\npermission of dirs:  0755\nif not, you will not see the web page. Or your site may have an exploit.\n配置文件的权限为0644, 配置dir的权限为0755,这样即可以让用户访问到，又不会有太大的安全漏洞。\n","source":"_posts/2012-01-15-web-config-permission-of-files-and-dirs.markdown","raw":"---\nlayout: post\ntitle: \"web config permission of files and dirs\"\ndate: 2012-01-15 23:29\ncomments: true\ncategories: \n---\npermission of files: 0644\npermission of dirs:  0755\nif not, you will not see the web page. Or your site may have an exploit.\n配置文件的权限为0644, 配置dir的权限为0755,这样即可以让用户访问到，又不会有太大的安全漏洞。\n","slug":"2012-01-15-web-config-permission-of-files-and-dirs","published":1,"updated":"2017-06-05T02:58:02.000Z","photos":[],"link":"","_id":"cj3jjqt4p000205mjddn4pxiu","content":"<p>permission of files: 0644<br>permission of dirs:  0755<br>if not, you will not see the web page. Or your site may have an exploit.<br>配置文件的权限为0644, 配置dir的权限为0755,这样即可以让用户访问到，又不会有太大的安全漏洞。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>permission of files: 0644<br>permission of dirs:  0755<br>if not, you will not see the web page. Or your site may have an exploit.<br>配置文件的权限为0644, 配置dir的权限为0755,这样即可以让用户访问到，又不会有太大的安全漏洞。</p>\n"},{"layout":"post","title":"temp file, just test","date":"2012-01-16T12:43:00.000Z","comments":1,"_content":"This blog is just for octopress test. Not use ` rake new_post `, just `vi source/_post/2012-01-16-test.markdown`. I want to see whether it works.   \nEn, it works.\n\n\n","source":"_posts/2012-01-16-test.markdown","raw":"---\nlayout: post\ntitle: \"temp file, just test\"\ndate: 2012-01-16 20:43\ncomments: true\ncategories: [new, test] \n---\nThis blog is just for octopress test. Not use ` rake new_post `, just `vi source/_post/2012-01-16-test.markdown`. I want to see whether it works.   \nEn, it works.\n\n\n","slug":"2012-01-16-test","published":1,"updated":"2017-06-05T02:58:02.000Z","photos":[],"link":"","_id":"cj3jjqt4r000405mjedxqlfja","content":"<p>This blog is just for octopress test. Not use <code>rake new_post</code>, just <code>vi source/_post/2012-01-16-test.markdown</code>. I want to see whether it works.<br>En, it works.</p>\n","site":{"data":{}},"excerpt":"","more":"<p>This blog is just for octopress test. Not use <code>rake new_post</code>, just <code>vi source/_post/2012-01-16-test.markdown</code>. I want to see whether it works.<br>En, it works.</p>\n"},{"layout":"post","title":"新浪Oauth","date":"2012-01-16T16:11:00.000Z","comments":1,"_content":"<meta name=\"description\" content=\"这篇文章是关于新浪Oauth认证上的一些经验\">\n新浪Oauth好像是上Oauth2.0了。不过也支持OAuth 1.0a.但是新浪的OAuth 1.0a是冒牌的。也就是说，应该是1.0～1.0a或者是真正到1.0 alpha.\n因为这个Oauth不支持oauth_callback_confirm参数，也就是在request_token之后就仅仅返回oauth_token和oauth_secret.因为没有这个oauth_call_confirm,\n也就无法区分Oauth到底是1.0的还是1.0a的。另外如果你真的照着OAuth1.0a的流程与新浪的接口整合。就会发现在获取authorized_token，还是要传给新浪\noauth_callback,否则新浪真的不知道callback到哪里去，于是新浪就展示给你获取oauth_verifier到页面,也就是授权码页面。   \n\n{% pullquote %}\n另外如果你真的加了oauth_callback,加入你的callback中没有参数，那谢天谢地，你的程序可以跑得很好。如果你的callback中有一个参数，那也谢天谢地，\n你的程序可以跑得良好。如果你的callback中有更多到参数，那就别想跑得好了。因为新浪在某些情况下会丢参数。即使你将oauth_callback中的值整个用urlEncode编码一下（再使用替换个别字符转为Oauth特殊编码），也是有可能给你丢参数的。    \n{\" 所以请记住：国内就真的没有什么Oauth1.0a. \"}\n另外传说腾讯Oauth的oauth_callback的特殊值不是oob, 而是null.    \n所以最简单有效到方法是将oauth_callback值中的'&'替换为'||'，将'='替换为'|'.然后在callback之后的页面进行反编码。就可以得到自己想要到参数了。\n新浪是从Oauth1.0进行改版到Oauth1.0a的。其实就仅仅做了oauth_verifier的生成。然后就真的啥事请都没有做。  \n{% endpullquote %}\n\n","source":"_posts/2012-01-17-xin-lang-oauth.markdown","raw":"---\nlayout: post\ntitle: \"新浪Oauth\"\ndate: 2012-01-17 00:11\ncomments: true\ncategories: [新浪,oauth,OAuth,callback]\n---\n<meta name=\"description\" content=\"这篇文章是关于新浪Oauth认证上的一些经验\">\n新浪Oauth好像是上Oauth2.0了。不过也支持OAuth 1.0a.但是新浪的OAuth 1.0a是冒牌的。也就是说，应该是1.0～1.0a或者是真正到1.0 alpha.\n因为这个Oauth不支持oauth_callback_confirm参数，也就是在request_token之后就仅仅返回oauth_token和oauth_secret.因为没有这个oauth_call_confirm,\n也就无法区分Oauth到底是1.0的还是1.0a的。另外如果你真的照着OAuth1.0a的流程与新浪的接口整合。就会发现在获取authorized_token，还是要传给新浪\noauth_callback,否则新浪真的不知道callback到哪里去，于是新浪就展示给你获取oauth_verifier到页面,也就是授权码页面。   \n\n{% pullquote %}\n另外如果你真的加了oauth_callback,加入你的callback中没有参数，那谢天谢地，你的程序可以跑得很好。如果你的callback中有一个参数，那也谢天谢地，\n你的程序可以跑得良好。如果你的callback中有更多到参数，那就别想跑得好了。因为新浪在某些情况下会丢参数。即使你将oauth_callback中的值整个用urlEncode编码一下（再使用替换个别字符转为Oauth特殊编码），也是有可能给你丢参数的。    \n{\" 所以请记住：国内就真的没有什么Oauth1.0a. \"}\n另外传说腾讯Oauth的oauth_callback的特殊值不是oob, 而是null.    \n所以最简单有效到方法是将oauth_callback值中的'&'替换为'||'，将'='替换为'|'.然后在callback之后的页面进行反编码。就可以得到自己想要到参数了。\n新浪是从Oauth1.0进行改版到Oauth1.0a的。其实就仅仅做了oauth_verifier的生成。然后就真的啥事请都没有做。  \n{% endpullquote %}\n\n","slug":"2012-01-17-xin-lang-oauth","published":1,"updated":"2017-06-05T02:58:02.000Z","photos":[],"link":"","_id":"cj3jjqt4u000605mji5hscljx","content":"<p><meta name=\"description\" content=\"这篇文章是关于新浪Oauth认证上的一些经验\"><br>新浪Oauth好像是上Oauth2.0了。不过也支持OAuth 1.0a.但是新浪的OAuth 1.0a是冒牌的。也就是说，应该是1.0～1.0a或者是真正到1.0 alpha.<br>因为这个Oauth不支持oauth_callback_confirm参数，也就是在request_token之后就仅仅返回oauth_token和oauth_secret.因为没有这个oauth_call_confirm,<br>也就无法区分Oauth到底是1.0的还是1.0a的。另外如果你真的照着OAuth1.0a的流程与新浪的接口整合。就会发现在获取authorized_token，还是要传给新浪<br>oauth_callback,否则新浪真的不知道callback到哪里去，于是新浪就展示给你获取oauth_verifier到页面,也就是授权码页面。   </p>\n<blockquote class=\"pullquote\"><p>另外如果你真的加了oauth_callback,加入你的callback中没有参数，那谢天谢地，你的程序可以跑得很好。如果你的callback中有一个参数，那也谢天谢地，<br>你的程序可以跑得良好。如果你的callback中有更多到参数，那就别想跑得好了。因为新浪在某些情况下会丢参数。即使你将oauth_callback中的值整个用urlEncode编码一下（再使用替换个别字符转为Oauth特殊编码），也是有可能给你丢参数的。<br>{“ 所以请记住：国内就真的没有什么Oauth1.0a. “}<br>另外传说腾讯Oauth的oauth_callback的特殊值不是oob, 而是null.<br>所以最简单有效到方法是将oauth_callback值中的’&amp;’替换为’||’，将’=’替换为’|’.然后在callback之后的页面进行反编码。就可以得到自己想要到参数了。<br>新浪是从Oauth1.0进行改版到Oauth1.0a的。其实就仅仅做了oauth_verifier的生成。然后就真的啥事请都没有做。  </p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<p><meta name=\"description\" content=\"这篇文章是关于新浪Oauth认证上的一些经验\"><br>新浪Oauth好像是上Oauth2.0了。不过也支持OAuth 1.0a.但是新浪的OAuth 1.0a是冒牌的。也就是说，应该是1.0～1.0a或者是真正到1.0 alpha.<br>因为这个Oauth不支持oauth_callback_confirm参数，也就是在request_token之后就仅仅返回oauth_token和oauth_secret.因为没有这个oauth_call_confirm,<br>也就无法区分Oauth到底是1.0的还是1.0a的。另外如果你真的照着OAuth1.0a的流程与新浪的接口整合。就会发现在获取authorized_token，还是要传给新浪<br>oauth_callback,否则新浪真的不知道callback到哪里去，于是新浪就展示给你获取oauth_verifier到页面,也就是授权码页面。   </p>\n<blockquote class=\"pullquote\"><p>另外如果你真的加了oauth_callback,加入你的callback中没有参数，那谢天谢地，你的程序可以跑得很好。如果你的callback中有一个参数，那也谢天谢地，<br>你的程序可以跑得良好。如果你的callback中有更多到参数，那就别想跑得好了。因为新浪在某些情况下会丢参数。即使你将oauth_callback中的值整个用urlEncode编码一下（再使用替换个别字符转为Oauth特殊编码），也是有可能给你丢参数的。<br>{“ 所以请记住：国内就真的没有什么Oauth1.0a. “}<br>另外传说腾讯Oauth的oauth_callback的特殊值不是oob, 而是null.<br>所以最简单有效到方法是将oauth_callback值中的’&amp;’替换为’||’，将’=’替换为’|’.然后在callback之后的页面进行反编码。就可以得到自己想要到参数了。<br>新浪是从Oauth1.0进行改版到Oauth1.0a的。其实就仅仅做了oauth_verifier的生成。然后就真的啥事请都没有做。  </p>\n</blockquote>\n"},{"layout":"post","title":"back home","date":"2012-01-21T13:11:00.000Z","comments":1,"_content":"今天终于到家了。卧了一夜到火车。在六点多睡势良好的情况下被列车猿唤醒换票。另外卧铺车厢开灯太早了，并且关灯太晚了。 <br/>\n回到家中吃吃喝喝，洗澡理发，不知不觉就到中午了。下午实在困，睡了一下午。晚上的时候家人一起玩玩UNO.感觉很好。教会了爸妈。UNO还是适合各种人群的。 <br/>\n公司发的扑克牌，貌似只对懂外语的年轻人有效。对爸妈一点杀伤力都没有。下午还看了一下holmes.剧情还不错，根据现代场景改变的历史剧还是很有看头。 <br/>\n晚上再研究一下wordpress导入。自己改的脚本还是多多少少有些问题。导致解析不成功。\n","source":"_posts/2012-01-21-back-home.markdown","raw":"---\nlayout: post\ntitle: \"back home\"\ndate: 2012-01-21 21:11\ncomments: true\ncategories: [back,home,2012] \n---\n今天终于到家了。卧了一夜到火车。在六点多睡势良好的情况下被列车猿唤醒换票。另外卧铺车厢开灯太早了，并且关灯太晚了。 <br/>\n回到家中吃吃喝喝，洗澡理发，不知不觉就到中午了。下午实在困，睡了一下午。晚上的时候家人一起玩玩UNO.感觉很好。教会了爸妈。UNO还是适合各种人群的。 <br/>\n公司发的扑克牌，貌似只对懂外语的年轻人有效。对爸妈一点杀伤力都没有。下午还看了一下holmes.剧情还不错，根据现代场景改变的历史剧还是很有看头。 <br/>\n晚上再研究一下wordpress导入。自己改的脚本还是多多少少有些问题。导致解析不成功。\n","slug":"2012-01-21-back-home","published":1,"updated":"2017-06-05T02:58:02.000Z","photos":[],"link":"","_id":"cj3jjqt4w000705mjx8r4aeud","content":"<p>今天终于到家了。卧了一夜到火车。在六点多睡势良好的情况下被列车猿唤醒换票。另外卧铺车厢开灯太早了，并且关灯太晚了。 <br><br>回到家中吃吃喝喝，洗澡理发，不知不觉就到中午了。下午实在困，睡了一下午。晚上的时候家人一起玩玩UNO.感觉很好。教会了爸妈。UNO还是适合各种人群的。 <br><br>公司发的扑克牌，貌似只对懂外语的年轻人有效。对爸妈一点杀伤力都没有。下午还看了一下holmes.剧情还不错，根据现代场景改变的历史剧还是很有看头。 <br><br>晚上再研究一下wordpress导入。自己改的脚本还是多多少少有些问题。导致解析不成功。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>今天终于到家了。卧了一夜到火车。在六点多睡势良好的情况下被列车猿唤醒换票。另外卧铺车厢开灯太早了，并且关灯太晚了。 <br><br>回到家中吃吃喝喝，洗澡理发，不知不觉就到中午了。下午实在困，睡了一下午。晚上的时候家人一起玩玩UNO.感觉很好。教会了爸妈。UNO还是适合各种人群的。 <br><br>公司发的扑克牌，貌似只对懂外语的年轻人有效。对爸妈一点杀伤力都没有。下午还看了一下holmes.剧情还不错，根据现代场景改变的历史剧还是很有看头。 <br><br>晚上再研究一下wordpress导入。自己改的脚本还是多多少少有些问题。导致解析不成功。</p>\n"},{"layout":"post","title":"octopress deploy","date":"2012-01-25T15:23:00.000Z","comments":1,"_content":"octopress这东西还是很难弄的。这几天发生了各种git的异常。也不知道是怎么发生的。亦难解决。这stack overflow中查到都是中看不中用的东西。最后只好从github上再次clone下来。然后`git init`.这里要注意的是，octopress的home目录中其实是ignore `_deploy` 文件夹的。home 对应的是自己的source分支。而`_deploy`中才是master分支。      \n`rake deploy` 其实是调用的`rake push`。其实是将`_public`中的内容copy到`_deploy`中。然后    \n{% codeblock %}\ncd _deploy\ngit init\ngit add .\ngit add -u\ngit commit -m \"some time\"\ngit push -u origin master\n{% endcodeblock %}    \n所以还是多看看octopress的内部实现比较好。\n","source":"_posts/2012-01-25-octopress-deploy.markdown","raw":"---\nlayout: post\ntitle: \"octopress deploy\"\ndate: 2012-01-25 23:23\ncomments: true\ncategories: [octopress, principle] \n---\noctopress这东西还是很难弄的。这几天发生了各种git的异常。也不知道是怎么发生的。亦难解决。这stack overflow中查到都是中看不中用的东西。最后只好从github上再次clone下来。然后`git init`.这里要注意的是，octopress的home目录中其实是ignore `_deploy` 文件夹的。home 对应的是自己的source分支。而`_deploy`中才是master分支。      \n`rake deploy` 其实是调用的`rake push`。其实是将`_public`中的内容copy到`_deploy`中。然后    \n{% codeblock %}\ncd _deploy\ngit init\ngit add .\ngit add -u\ngit commit -m \"some time\"\ngit push -u origin master\n{% endcodeblock %}    \n所以还是多看看octopress的内部实现比较好。\n","slug":"2012-01-25-octopress-deploy","published":1,"updated":"2017-06-05T02:58:02.000Z","photos":[],"link":"","_id":"cj3jjqt4y000805mj2s24w32j","content":"<p>octopress这东西还是很难弄的。这几天发生了各种git的异常。也不知道是怎么发生的。亦难解决。这stack overflow中查到都是中看不中用的东西。最后只好从github上再次clone下来。然后<code>git init</code>.这里要注意的是，octopress的home目录中其实是ignore <code>_deploy</code> 文件夹的。home 对应的是自己的source分支。而<code>_deploy</code>中才是master分支。<br><code>rake deploy</code> 其实是调用的<code>rake push</code>。其实是将<code>_public</code>中的内容copy到<code>_deploy</code>中。然后<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">cd _deploy</div><div class=\"line\">git init</div><div class=\"line\">git add .</div><div class=\"line\">git add -u</div><div class=\"line\">git commit -m &quot;some time&quot;</div><div class=\"line\">git push -u origin master</div></pre></td></tr></table></figure><br>所以还是多看看octopress的内部实现比较好。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>octopress这东西还是很难弄的。这几天发生了各种git的异常。也不知道是怎么发生的。亦难解决。这stack overflow中查到都是中看不中用的东西。最后只好从github上再次clone下来。然后<code>git init</code>.这里要注意的是，octopress的home目录中其实是ignore <code>_deploy</code> 文件夹的。home 对应的是自己的source分支。而<code>_deploy</code>中才是master分支。<br><code>rake deploy</code> 其实是调用的<code>rake push</code>。其实是将<code>_public</code>中的内容copy到<code>_deploy</code>中。然后<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">cd _deploy</div><div class=\"line\">git init</div><div class=\"line\">git add .</div><div class=\"line\">git add -u</div><div class=\"line\">git commit -m &quot;some time&quot;</div><div class=\"line\">git push -u origin master</div></pre></td></tr></table></figure><br>所以还是多看看octopress的内部实现比较好。</p>\n"},{"layout":"post","title":"octopress bugs","date":"2012-01-21T13:19:00.000Z","comments":1,"_content":"<meta name=\"Keywords\" content=\"octopress,bug,solve\"/>\n<meta name=\"Description\" content=\"The page will show many octopress bugs. And tell you how to solve it.\"> \n\nToday, I have met a bug of octopress. When you write your blog with number in categories, like \"cattegories: [some keyword, 2012]\".\n\nWhen you type  `rake generate`. The command will report:    \n\n{%blockquote%}\n/plugins/category_generator.rb:109:in `block in write_category_indexes`;: undefined method `gsub`; for 2012:Fixnum (NoMethodError)\n{%endblockquote%}   \nIt is caused by your number `2012`.\n{%codeblock%}\nvi plugins/category_generator.rb\n{%endcodeblock%}   \nGo to line `109`. and add a line code:\n{%codeblock%}\ncategory = category.to_s\n{%endcodeblock%}  \nNow, type `rake generate` again. It will be fine.\n","source":"_posts/2012-01-21-octopress-bugs.markdown","raw":"---\nlayout: post\ntitle: \"octopress bugs\"\ndate: 2012-01-21 21:19\ncomments: true\ncategories: [octopress, bug, solve] \n---\n<meta name=\"Keywords\" content=\"octopress,bug,solve\"/>\n<meta name=\"Description\" content=\"The page will show many octopress bugs. And tell you how to solve it.\"> \n\nToday, I have met a bug of octopress. When you write your blog with number in categories, like \"cattegories: [some keyword, 2012]\".\n\nWhen you type  `rake generate`. The command will report:    \n\n{%blockquote%}\n/plugins/category_generator.rb:109:in `block in write_category_indexes`;: undefined method `gsub`; for 2012:Fixnum (NoMethodError)\n{%endblockquote%}   \nIt is caused by your number `2012`.\n{%codeblock%}\nvi plugins/category_generator.rb\n{%endcodeblock%}   \nGo to line `109`. and add a line code:\n{%codeblock%}\ncategory = category.to_s\n{%endcodeblock%}  \nNow, type `rake generate` again. It will be fine.\n","slug":"2012-01-21-octopress-bugs","published":1,"updated":"2017-06-05T02:58:02.000Z","photos":[],"link":"","_id":"cj3jjqt51000a05mjo78uwvvp","content":"<p><meta name=\"Keywords\" content=\"octopress,bug,solve\"></p>\n<meta name=\"Description\" content=\"The page will show many octopress bugs. And tell you how to solve it.\"> \n\n<p>Today, I have met a bug of octopress. When you write your blog with number in categories, like “cattegories: [some keyword, 2012]”.</p>\n<p>When you type  <code>rake generate</code>. The command will report:    </p>\n<blockquote><p>/plugins/category_generator.rb:109:in <code>block in write_category_indexes</code>;: undefined method <code>gsub</code>; for 2012:Fixnum (NoMethodError)</p>\n</blockquote>   \n<p>It is caused by your number <code>2012</code>.<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">vi plugins/category_generator.rb</div></pre></td></tr></table></figure><br>Go to line <code>109</code>. and add a line code:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">category = category.to_s</div></pre></td></tr></table></figure><br>Now, type <code>rake generate</code> again. It will be fine.</p>\n","site":{"data":{}},"excerpt":"","more":"<p><meta name=\"Keywords\" content=\"octopress,bug,solve\"></p>\n<meta name=\"Description\" content=\"The page will show many octopress bugs. And tell you how to solve it.\"> \n\n<p>Today, I have met a bug of octopress. When you write your blog with number in categories, like “cattegories: [some keyword, 2012]”.</p>\n<p>When you type  <code>rake generate</code>. The command will report:    </p>\n<blockquote><p>/plugins/category_generator.rb:109:in <code>block in write_category_indexes</code>;: undefined method <code>gsub</code>; for 2012:Fixnum (NoMethodError)</p>\n</blockquote>   \n<p>It is caused by your number <code>2012</code>.<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">vi plugins/category_generator.rb</div></pre></td></tr></table></figure><br>Go to line <code>109</code>. and add a line code:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">category = category.to_s</div></pre></td></tr></table></figure><br>Now, type <code>rake generate</code> again. It will be fine.</p>\n"},{"layout":"post","title":"孔府，孔庙，孔林","date":"2012-01-26T11:41:00.000Z","comments":1,"_content":"今天跟姐和姐夫逛了下曲阜。三孔很小的时候去过，现在基本什么记忆都没有了。当年好像破破烂烂。现在好像好一点了。很多翻修的痕迹，如果过去不砸，也就不用修了。跟着导游看了看，貌似只有题字有看的必要。翻修的有些差，就如同翻修的长城。      \n在孔林里听说只要姓孔就可以埋到孔林里。孔老师看来很有希望...\n","source":"_posts/2012-01-26-kong-fu-kong-miao-kong-lin.markdown","raw":"---\nlayout: post\ntitle: \"孔府，孔庙，孔林\"\ndate: 2012-01-26 19:41\ncomments: true\ncategories: [孔府，孔庙，孔林] \n---\n今天跟姐和姐夫逛了下曲阜。三孔很小的时候去过，现在基本什么记忆都没有了。当年好像破破烂烂。现在好像好一点了。很多翻修的痕迹，如果过去不砸，也就不用修了。跟着导游看了看，貌似只有题字有看的必要。翻修的有些差，就如同翻修的长城。      \n在孔林里听说只要姓孔就可以埋到孔林里。孔老师看来很有希望...\n","slug":"2012-01-26-kong-fu-kong-miao-kong-lin","published":1,"updated":"2017-06-05T02:58:02.000Z","photos":[],"link":"","_id":"cj3jjqt54000c05mjgj3oaugd","content":"<p>今天跟姐和姐夫逛了下曲阜。三孔很小的时候去过，现在基本什么记忆都没有了。当年好像破破烂烂。现在好像好一点了。很多翻修的痕迹，如果过去不砸，也就不用修了。跟着导游看了看，貌似只有题字有看的必要。翻修的有些差，就如同翻修的长城。<br>在孔林里听说只要姓孔就可以埋到孔林里。孔老师看来很有希望…</p>\n","site":{"data":{}},"excerpt":"","more":"<p>今天跟姐和姐夫逛了下曲阜。三孔很小的时候去过，现在基本什么记忆都没有了。当年好像破破烂烂。现在好像好一点了。很多翻修的痕迹，如果过去不砸，也就不用修了。跟着导游看了看，貌似只有题字有看的必要。翻修的有些差，就如同翻修的长城。<br>在孔林里听说只要姓孔就可以埋到孔林里。孔老师看来很有希望…</p>\n"},{"layout":"post","title":"git alias","date":"2012-01-31T11:57:00.000Z","comments":1,"_content":"今天唐大牛教了些git的命令。顺便把他的git别名也发给我了。啥叫别名，就是\n{% blockquote %}\ngit br\n==>\ngit branch\n{% endblockquote %}\n只需要在home目录下的.gitconfig文件中添加：\n```\n[alias]\n  st = status -s\n  ci = commit\n  l = log --oneline --decorate -13\n  ll = log --oneline --decorate\n  co = checkout\n  br = branch\n  rb = rebase\n  dci = dcommit\n```\n\n以后就可以使用别名了。\n\n<!-- more -->\nToday, big tang teaches me some git commands. And he gives me his alias of git commands to me. What's alias? That's\n```\ngit br\n==>\ngit branch\n\n```\n\nonly write the following code in `~/.gitconfig` file.\n```\n[alias]\n  st = status -s\n  ci = commit\n  l = log --oneline --decorate -13\n  ll = log --oneline --decorate\n  co = checkout\n  br = branch\n  rb = rebase\n  dci = dcommit\n\n```\nAnd now you can use alias of git commands. Try `git br`\n","source":"_posts/2012-01-31-git-alias.markdown","raw":"---\nlayout: post\ntitle: \"git alias\"\ndate: 2012-01-31 19:57\ncomments: true\ncategories: git, alias, 别名\n---\n今天唐大牛教了些git的命令。顺便把他的git别名也发给我了。啥叫别名，就是\n{% blockquote %}\ngit br\n==>\ngit branch\n{% endblockquote %}\n只需要在home目录下的.gitconfig文件中添加：\n```\n[alias]\n  st = status -s\n  ci = commit\n  l = log --oneline --decorate -13\n  ll = log --oneline --decorate\n  co = checkout\n  br = branch\n  rb = rebase\n  dci = dcommit\n```\n\n以后就可以使用别名了。\n\n<!-- more -->\nToday, big tang teaches me some git commands. And he gives me his alias of git commands to me. What's alias? That's\n```\ngit br\n==>\ngit branch\n\n```\n\nonly write the following code in `~/.gitconfig` file.\n```\n[alias]\n  st = status -s\n  ci = commit\n  l = log --oneline --decorate -13\n  ll = log --oneline --decorate\n  co = checkout\n  br = branch\n  rb = rebase\n  dci = dcommit\n\n```\nAnd now you can use alias of git commands. Try `git br`\n","slug":"2012-01-31-git-alias","published":1,"updated":"2017-06-05T02:58:02.000Z","photos":[],"link":"","_id":"cj3jjqt56000e05mjc4vpwb6i","content":"<p>今天唐大牛教了些git的命令。顺便把他的git别名也发给我了。啥叫别名，就是<br><blockquote><p>git br<br>==&gt;<br>git branch</p>\n</blockquote><br>只需要在home目录下的.gitconfig文件中添加：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">[alias]</div><div class=\"line\">  st = status -s</div><div class=\"line\">  ci = commit</div><div class=\"line\">  l = log --oneline --decorate -13</div><div class=\"line\">  ll = log --oneline --decorate</div><div class=\"line\">  co = checkout</div><div class=\"line\">  br = branch</div><div class=\"line\">  rb = rebase</div><div class=\"line\">  dci = dcommit</div></pre></td></tr></table></figure></p>\n<p>以后就可以使用别名了。</p>\n<a id=\"more\"></a>\n<p>Today, big tang teaches me some git commands. And he gives me his alias of git commands to me. What’s alias? That’s<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">git br</div><div class=\"line\">==&gt;</div><div class=\"line\">git branch</div></pre></td></tr></table></figure></p>\n<p>only write the following code in <code>~/.gitconfig</code> file.<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">[alias]</div><div class=\"line\">  st = status -s</div><div class=\"line\">  ci = commit</div><div class=\"line\">  l = log --oneline --decorate -13</div><div class=\"line\">  ll = log --oneline --decorate</div><div class=\"line\">  co = checkout</div><div class=\"line\">  br = branch</div><div class=\"line\">  rb = rebase</div><div class=\"line\">  dci = dcommit</div></pre></td></tr></table></figure></p>\n<p>And now you can use alias of git commands. Try <code>git br</code></p>\n","site":{"data":{}},"excerpt":"<p>今天唐大牛教了些git的命令。顺便把他的git别名也发给我了。啥叫别名，就是<br><blockquote><p>git br<br>==&gt;<br>git branch</p>\n</blockquote><br>只需要在home目录下的.gitconfig文件中添加：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">[alias]</div><div class=\"line\">  st = status -s</div><div class=\"line\">  ci = commit</div><div class=\"line\">  l = log --oneline --decorate -13</div><div class=\"line\">  ll = log --oneline --decorate</div><div class=\"line\">  co = checkout</div><div class=\"line\">  br = branch</div><div class=\"line\">  rb = rebase</div><div class=\"line\">  dci = dcommit</div></pre></td></tr></table></figure></p>\n<p>以后就可以使用别名了。</p>","more":"<p>Today, big tang teaches me some git commands. And he gives me his alias of git commands to me. What’s alias? That’s<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">git br</div><div class=\"line\">==&gt;</div><div class=\"line\">git branch</div></pre></td></tr></table></figure></p>\n<p>only write the following code in <code>~/.gitconfig</code> file.<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">[alias]</div><div class=\"line\">  st = status -s</div><div class=\"line\">  ci = commit</div><div class=\"line\">  l = log --oneline --decorate -13</div><div class=\"line\">  ll = log --oneline --decorate</div><div class=\"line\">  co = checkout</div><div class=\"line\">  br = branch</div><div class=\"line\">  rb = rebase</div><div class=\"line\">  dci = dcommit</div></pre></td></tr></table></figure></p>\n<p>And now you can use alias of git commands. Try <code>git br</code></p>"},{"layout":"post","title":"jstack jmap resin","date":"2012-02-01T12:41:00.000Z","comments":1,"_content":"Today, I use `jstack`, `jmap`, and `resin` to look up why my server is deading in stress test. And I also find printing information into log is useful. You can print log in entrance of function and exit of function.   \njstack is a tool which is looked up stack of system, specailly in threads. It is mainly for looking up dead lock and some functions which are executed too slowly.    \njmap is a tool which is looked up current memory of system or some memery jvm can not delete immediately.\nYou can use jstack like this:\n```\njstack -l [pid]\n```\nIf you know pid of the process, you can see what's the situation of stacks in process. If you want to see the detail, looking at those stacks.   \njmap is used like this:\n```\njmap -heap [pid]\n```\nToday, Big niu Qiao tells me about JVM GC policy.   \nThere are New Generation, Old Generate and Perm Generation in JVM. You can find them in jmap command. And New Generation are new objects. And Old Generation are old objects which are still be refered. Eden Space stores new generate objects. And From Space stores still alive objects after gc once. To space stores objects which are not refered and in From space before gc once. If an objects is in From Space many times, it will be moved to Old Generation by JVM. Perm Generation are static objects and Classes.   \nBy the way, if your application runs in resin, you should look up those logs of resin, for example, jvm-default.log. The log file contains GC log information. If GC throws overMemory exception, you should modify your configuration of resin (resin.xml in resin4.0+). Modify or add:\n```\n<jvm-arg>-Xmx1024</jvm-arg>\n``` \nThis means set JVM heap space to 1G.\n<!-- more -->  \n今天使用了一下jstack, jmap来查看系统为啥在压力测试中缓慢的挂掉。我发现还是很有用的还有就是打log.函数入口和函数出口都打log。    \njstack是查看系统现在卡在那里，特别是各个线程在哪里，主要是排查死锁或者运行相当缓慢的函数。jmap是为了看系统的内存。当前使用的内存，以及jvm想删除却很久都没有删除的内存。    \njstack的使用方法如下\n```\njstack -l [pid]\n```\n只要知道pid,就能知道该进程现在的stack情况。具体排查就是看那些stack...\n    \njmap的使用基本一致\n```\njmap -heap [pid]\n```\n今天继续听巧大牛讲JVM GC策略。\njmap中有New Generation 和Old Generation. 分别对应新生成的和很久都没有被释放的。Eden Space就是新生成的对象。而From Space是以前曾经存活的对象（一次GC之后，Eden区的对象都会转换为From区）。To Space是以前曾经存活的对象但是现在已经没有引用了（一次GC过后, Eden区全部对象和From区尚有引用的对象回全部放入到To区）。而对象如果一直在From区，就会被jvm放入到Old Generation中。\nOld Generation是扫描一边标记，再扫一边回收，另外涉及到内存压缩云云。 \nPerm Generation是static对象和class    \n另外如果运行在resin中，还是看看resin的各个log.例如jvm-default.log.这个log中有关于GC的信息。如果GC已经OverMemery了.那就不用找了，直接在resin的conf中的resin.xml中找到jvm参数修改-Xmx的值即可。例如改为`-Xmx1024`即为java将使用内存1G.\n","source":"_posts/2012-02-01-jstack-jmap-resin.markdown","raw":"---\nlayout: post\ntitle: \"jstack jmap resin\"\ndate: 2012-02-01 20:41\ncomments: true\ncategories: jmap, jstack, resin \n---\nToday, I use `jstack`, `jmap`, and `resin` to look up why my server is deading in stress test. And I also find printing information into log is useful. You can print log in entrance of function and exit of function.   \njstack is a tool which is looked up stack of system, specailly in threads. It is mainly for looking up dead lock and some functions which are executed too slowly.    \njmap is a tool which is looked up current memory of system or some memery jvm can not delete immediately.\nYou can use jstack like this:\n```\njstack -l [pid]\n```\nIf you know pid of the process, you can see what's the situation of stacks in process. If you want to see the detail, looking at those stacks.   \njmap is used like this:\n```\njmap -heap [pid]\n```\nToday, Big niu Qiao tells me about JVM GC policy.   \nThere are New Generation, Old Generate and Perm Generation in JVM. You can find them in jmap command. And New Generation are new objects. And Old Generation are old objects which are still be refered. Eden Space stores new generate objects. And From Space stores still alive objects after gc once. To space stores objects which are not refered and in From space before gc once. If an objects is in From Space many times, it will be moved to Old Generation by JVM. Perm Generation are static objects and Classes.   \nBy the way, if your application runs in resin, you should look up those logs of resin, for example, jvm-default.log. The log file contains GC log information. If GC throws overMemory exception, you should modify your configuration of resin (resin.xml in resin4.0+). Modify or add:\n```\n<jvm-arg>-Xmx1024</jvm-arg>\n``` \nThis means set JVM heap space to 1G.\n<!-- more -->  \n今天使用了一下jstack, jmap来查看系统为啥在压力测试中缓慢的挂掉。我发现还是很有用的还有就是打log.函数入口和函数出口都打log。    \njstack是查看系统现在卡在那里，特别是各个线程在哪里，主要是排查死锁或者运行相当缓慢的函数。jmap是为了看系统的内存。当前使用的内存，以及jvm想删除却很久都没有删除的内存。    \njstack的使用方法如下\n```\njstack -l [pid]\n```\n只要知道pid,就能知道该进程现在的stack情况。具体排查就是看那些stack...\n    \njmap的使用基本一致\n```\njmap -heap [pid]\n```\n今天继续听巧大牛讲JVM GC策略。\njmap中有New Generation 和Old Generation. 分别对应新生成的和很久都没有被释放的。Eden Space就是新生成的对象。而From Space是以前曾经存活的对象（一次GC之后，Eden区的对象都会转换为From区）。To Space是以前曾经存活的对象但是现在已经没有引用了（一次GC过后, Eden区全部对象和From区尚有引用的对象回全部放入到To区）。而对象如果一直在From区，就会被jvm放入到Old Generation中。\nOld Generation是扫描一边标记，再扫一边回收，另外涉及到内存压缩云云。 \nPerm Generation是static对象和class    \n另外如果运行在resin中，还是看看resin的各个log.例如jvm-default.log.这个log中有关于GC的信息。如果GC已经OverMemery了.那就不用找了，直接在resin的conf中的resin.xml中找到jvm参数修改-Xmx的值即可。例如改为`-Xmx1024`即为java将使用内存1G.\n","slug":"2012-02-01-jstack-jmap-resin","published":1,"updated":"2017-06-05T02:58:02.000Z","photos":[],"link":"","_id":"cj3jjqt59000g05mja3ohi00c","content":"<p>Today, I use <code>jstack</code>, <code>jmap</code>, and <code>resin</code> to look up why my server is deading in stress test. And I also find printing information into log is useful. You can print log in entrance of function and exit of function.<br>jstack is a tool which is looked up stack of system, specailly in threads. It is mainly for looking up dead lock and some functions which are executed too slowly.<br>jmap is a tool which is looked up current memory of system or some memery jvm can not delete immediately.<br>You can use jstack like this:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">jstack -l [pid]</div></pre></td></tr></table></figure></p>\n<p>If you know pid of the process, you can see what’s the situation of stacks in process. If you want to see the detail, looking at those stacks.<br>jmap is used like this:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">jmap -heap [pid]</div></pre></td></tr></table></figure></p>\n<p>Today, Big niu Qiao tells me about JVM GC policy.<br>There are New Generation, Old Generate and Perm Generation in JVM. You can find them in jmap command. And New Generation are new objects. And Old Generation are old objects which are still be refered. Eden Space stores new generate objects. And From Space stores still alive objects after gc once. To space stores objects which are not refered and in From space before gc once. If an objects is in From Space many times, it will be moved to Old Generation by JVM. Perm Generation are static objects and Classes.<br>By the way, if your application runs in resin, you should look up those logs of resin, for example, jvm-default.log. The log file contains GC log information. If GC throws overMemory exception, you should modify your configuration of resin (resin.xml in resin4.0+). Modify or add:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;jvm-arg&gt;-Xmx1024&lt;/jvm-arg&gt;</div><div class=\"line\">``` </div><div class=\"line\">This means set JVM heap space to 1G.</div><div class=\"line\">&lt;!-- more --&gt;  </div><div class=\"line\">今天使用了一下jstack, jmap来查看系统为啥在压力测试中缓慢的挂掉。我发现还是很有用的还有就是打log.函数入口和函数出口都打log。    </div><div class=\"line\">jstack是查看系统现在卡在那里，特别是各个线程在哪里，主要是排查死锁或者运行相当缓慢的函数。jmap是为了看系统的内存。当前使用的内存，以及jvm想删除却很久都没有删除的内存。    </div><div class=\"line\">jstack的使用方法如下</div></pre></td></tr></table></figure></p>\n<p>jstack -l [pid]<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">只要知道pid,就能知道该进程现在的stack情况。具体排查就是看那些stack...</div><div class=\"line\">    </div><div class=\"line\">jmap的使用基本一致</div></pre></td></tr></table></figure></p>\n<p>jmap -heap [pid]<br><code>``\n今天继续听巧大牛讲JVM GC策略。\njmap中有New Generation 和Old Generation. 分别对应新生成的和很久都没有被释放的。Eden Space就是新生成的对象。而From Space是以前曾经存活的对象（一次GC之后，Eden区的对象都会转换为From区）。To Space是以前曾经存活的对象但是现在已经没有引用了（一次GC过后, Eden区全部对象和From区尚有引用的对象回全部放入到To区）。而对象如果一直在From区，就会被jvm放入到Old Generation中。\nOld Generation是扫描一边标记，再扫一边回收，另外涉及到内存压缩云云。 \nPerm Generation是static对象和class    \n另外如果运行在resin中，还是看看resin的各个log.例如jvm-default.log.这个log中有关于GC的信息。如果GC已经OverMemery了.那就不用找了，直接在resin的conf中的resin.xml中找到jvm参数修改-Xmx的值即可。例如改为</code>-Xmx1024`即为java将使用内存1G.</p>\n","site":{"data":{}},"excerpt":"","more":"<p>Today, I use <code>jstack</code>, <code>jmap</code>, and <code>resin</code> to look up why my server is deading in stress test. And I also find printing information into log is useful. You can print log in entrance of function and exit of function.<br>jstack is a tool which is looked up stack of system, specailly in threads. It is mainly for looking up dead lock and some functions which are executed too slowly.<br>jmap is a tool which is looked up current memory of system or some memery jvm can not delete immediately.<br>You can use jstack like this:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">jstack -l [pid]</div></pre></td></tr></table></figure></p>\n<p>If you know pid of the process, you can see what’s the situation of stacks in process. If you want to see the detail, looking at those stacks.<br>jmap is used like this:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">jmap -heap [pid]</div></pre></td></tr></table></figure></p>\n<p>Today, Big niu Qiao tells me about JVM GC policy.<br>There are New Generation, Old Generate and Perm Generation in JVM. You can find them in jmap command. And New Generation are new objects. And Old Generation are old objects which are still be refered. Eden Space stores new generate objects. And From Space stores still alive objects after gc once. To space stores objects which are not refered and in From space before gc once. If an objects is in From Space many times, it will be moved to Old Generation by JVM. Perm Generation are static objects and Classes.<br>By the way, if your application runs in resin, you should look up those logs of resin, for example, jvm-default.log. The log file contains GC log information. If GC throws overMemory exception, you should modify your configuration of resin (resin.xml in resin4.0+). Modify or add:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;jvm-arg&gt;-Xmx1024&lt;/jvm-arg&gt;</div><div class=\"line\">``` </div><div class=\"line\">This means set JVM heap space to 1G.</div><div class=\"line\">&lt;!-- more --&gt;  </div><div class=\"line\">今天使用了一下jstack, jmap来查看系统为啥在压力测试中缓慢的挂掉。我发现还是很有用的还有就是打log.函数入口和函数出口都打log。    </div><div class=\"line\">jstack是查看系统现在卡在那里，特别是各个线程在哪里，主要是排查死锁或者运行相当缓慢的函数。jmap是为了看系统的内存。当前使用的内存，以及jvm想删除却很久都没有删除的内存。    </div><div class=\"line\">jstack的使用方法如下</div></pre></td></tr></table></figure></p>\n<p>jstack -l [pid]<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">只要知道pid,就能知道该进程现在的stack情况。具体排查就是看那些stack...</div><div class=\"line\">    </div><div class=\"line\">jmap的使用基本一致</div></pre></td></tr></table></figure></p>\n<p>jmap -heap [pid]<br><code>``\n今天继续听巧大牛讲JVM GC策略。\njmap中有New Generation 和Old Generation. 分别对应新生成的和很久都没有被释放的。Eden Space就是新生成的对象。而From Space是以前曾经存活的对象（一次GC之后，Eden区的对象都会转换为From区）。To Space是以前曾经存活的对象但是现在已经没有引用了（一次GC过后, Eden区全部对象和From区尚有引用的对象回全部放入到To区）。而对象如果一直在From区，就会被jvm放入到Old Generation中。\nOld Generation是扫描一边标记，再扫一边回收，另外涉及到内存压缩云云。 \nPerm Generation是static对象和class    \n另外如果运行在resin中，还是看看resin的各个log.例如jvm-default.log.这个log中有关于GC的信息。如果GC已经OverMemery了.那就不用找了，直接在resin的conf中的resin.xml中找到jvm参数修改-Xmx的值即可。例如改为</code>-Xmx1024`即为java将使用内存1G.</p>\n"},{"layout":"post","title":"machine learning","date":"2012-02-06T06:06:00.000Z","comments":1,"_content":"\n概率，贝叶斯，熵，条件熵。互信息`I(X,Y)=H(Y)-H(Y|X)`，两个变量之间的依赖度。\n今天接触了一个新的概念：学习的本质是压缩。化为经典就是`大道至简`。\n","source":"_posts/2012-02-06-machine-learning.markdown","raw":"---\nlayout: post\ntitle: \"machine learning\"\ndate: 2012-02-06 14:06\ncomments: true\ncategories: machine, learning, introduce \n---\n\n概率，贝叶斯，熵，条件熵。互信息`I(X,Y)=H(Y)-H(Y|X)`，两个变量之间的依赖度。\n今天接触了一个新的概念：学习的本质是压缩。化为经典就是`大道至简`。\n","slug":"2012-02-06-machine-learning","published":1,"updated":"2017-06-05T02:58:02.000Z","photos":[],"link":"","_id":"cj3jjqt5b000i05mjpkopu2fv","content":"<p>概率，贝叶斯，熵，条件熵。互信息<code>I(X,Y)=H(Y)-H(Y|X)</code>，两个变量之间的依赖度。<br>今天接触了一个新的概念：学习的本质是压缩。化为经典就是<code>大道至简</code>。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>概率，贝叶斯，熵，条件熵。互信息<code>I(X,Y)=H(Y)-H(Y|X)</code>，两个变量之间的依赖度。<br>今天接触了一个新的概念：学习的本质是压缩。化为经典就是<code>大道至简</code>。</p>\n"},{"layout":"post","title":"xrange and range in python","date":"2012-02-13T12:14:00.000Z","comments":1,"_content":"#### 简单来说\npython range会生成一个list对象，然后返回list中的内容，而xrange不会生成list对象。所以xrange相对与range来说更省空间，并且速度较快。\n\n在英文中的官方解释是：\n{% blockquote %}\nclass xrange(object)\n |  xrange([start,] stop[, step]) -> xrange object\n |  \n |  Like range(), but instead of returning a list, returns an object that\n |  generates the numbers in the range on demand.  For looping, this is \n |  slightly faster than range() and more memory efficient.\n{% endblockquote %}\nok. Do you understand?\n\n","source":"_posts/2012-02-13-xrange-and-range-in-python.markdown","raw":"---\nlayout: post\ntitle: \"xrange and range in python\"\ndate: 2012-02-13 20:14\ncomments: true\ncategories: python, xrange, range, difference,区别  \n---\n#### 简单来说\npython range会生成一个list对象，然后返回list中的内容，而xrange不会生成list对象。所以xrange相对与range来说更省空间，并且速度较快。\n\n在英文中的官方解释是：\n{% blockquote %}\nclass xrange(object)\n |  xrange([start,] stop[, step]) -> xrange object\n |  \n |  Like range(), but instead of returning a list, returns an object that\n |  generates the numbers in the range on demand.  For looping, this is \n |  slightly faster than range() and more memory efficient.\n{% endblockquote %}\nok. Do you understand?\n\n","slug":"2012-02-13-xrange-and-range-in-python","published":1,"updated":"2017-06-05T02:58:02.000Z","photos":[],"link":"","_id":"cj3jjqt5f000k05mjf85iruep","content":"<h4 id=\"简单来说\"><a href=\"#简单来说\" class=\"headerlink\" title=\"简单来说\"></a>简单来说</h4><p>python range会生成一个list对象，然后返回list中的内容，而xrange不会生成list对象。所以xrange相对与range来说更省空间，并且速度较快。</p>\n<p>在英文中的官方解释是：<br><blockquote><p>class xrange(object)<br> |  xrange([start,] stop[, step]) -&gt; xrange object<br> |<br> |  Like range(), but instead of returning a list, returns an object that<br> |  generates the numbers in the range on demand.  For looping, this is<br> |  slightly faster than range() and more memory efficient.</p>\n</blockquote><br>ok. Do you understand?</p>\n","site":{"data":{}},"excerpt":"","more":"<h4 id=\"简单来说\"><a href=\"#简单来说\" class=\"headerlink\" title=\"简单来说\"></a>简单来说</h4><p>python range会生成一个list对象，然后返回list中的内容，而xrange不会生成list对象。所以xrange相对与range来说更省空间，并且速度较快。</p>\n<p>在英文中的官方解释是：<br><blockquote><p>class xrange(object)<br> |  xrange([start,] stop[, step]) -&gt; xrange object<br> |<br> |  Like range(), but instead of returning a list, returns an object that<br> |  generates the numbers in the range on demand.  For looping, this is<br> |  slightly faster than range() and more memory efficient.</p>\n</blockquote><br>ok. Do you understand?</p>\n"},{"layout":"post","title":"build website in ubuntu","date":"2012-02-11T06:31:00.000Z","comments":1,"_content":"This article will tell you how to build a website in ubuntu system. First you should install apache and php. These two tools can help you to build a small website, like \"hello world\" websit:D   \n{% blockquote %}\n// run the following commands\nsudo apt-get install apache2 php5 libapache2-mod-php5\n/etc/init.d/apache2 restart\n{% endblockquote %}\n#### important path    \nThen you should remember the following paths:   \n{% blockquote %}\n * /etc/init.d/apache2 \n * /var/www \n * /etc/apache2/apache2.conf\n * /etc/apache2/conf.d\n * /etc/apache2/sites-enabled\n{% endblockquote %}\n  Apache's default document root is /var/www on Ubuntu, and the configuration file is /etc/apache2/apache2.conf. Additional configurations are stored in subdirectories of the /etc/apache2 directory such as /etc/apache2/mods-enabled (for Apache modules), /etc/apache2/sites-enabled (for virtual hosts), and /etc/apache2/conf.d    \n#### Test your php\n```\nvi /var/www/hello.php\n```\n```\n<?php\nphpinfo();\n?>\n```\nThen call this file in browser (http://localhost/hello.php)\nDONE:D\n","source":"_posts/2012-02-11-build-website-in-ubuntu.markdown","raw":"---\nlayout: post\ntitle: \"build website in ubuntu\"\ndate: 2012-02-11 14:31\ncomments: true\ncategories: web,site,build,ubuntu,linux,php\n---\nThis article will tell you how to build a website in ubuntu system. First you should install apache and php. These two tools can help you to build a small website, like \"hello world\" websit:D   \n{% blockquote %}\n// run the following commands\nsudo apt-get install apache2 php5 libapache2-mod-php5\n/etc/init.d/apache2 restart\n{% endblockquote %}\n#### important path    \nThen you should remember the following paths:   \n{% blockquote %}\n * /etc/init.d/apache2 \n * /var/www \n * /etc/apache2/apache2.conf\n * /etc/apache2/conf.d\n * /etc/apache2/sites-enabled\n{% endblockquote %}\n  Apache's default document root is /var/www on Ubuntu, and the configuration file is /etc/apache2/apache2.conf. Additional configurations are stored in subdirectories of the /etc/apache2 directory such as /etc/apache2/mods-enabled (for Apache modules), /etc/apache2/sites-enabled (for virtual hosts), and /etc/apache2/conf.d    \n#### Test your php\n```\nvi /var/www/hello.php\n```\n```\n<?php\nphpinfo();\n?>\n```\nThen call this file in browser (http://localhost/hello.php)\nDONE:D\n","slug":"2012-02-11-build-website-in-ubuntu","published":1,"updated":"2017-06-05T02:58:02.000Z","photos":[],"link":"","_id":"cj3jjqt5h000m05mj8ta87k6j","content":"<p>This article will tell you how to build a website in ubuntu system. First you should install apache and php. These two tools can help you to build a small website, like “hello world” websit:D<br><blockquote><p>// run the following commands<br>sudo apt-get install apache2 php5 libapache2-mod-php5<br>/etc/init.d/apache2 restart</p>\n</blockquote></p>\n<h4 id=\"important-path\"><a href=\"#important-path\" class=\"headerlink\" title=\"important path\"></a>important path</h4><p>Then you should remember the following paths:<br><blockquote><ul>\n<li>/etc/init.d/apache2 </li>\n<li>/var/www </li>\n<li>/etc/apache2/apache2.conf</li>\n<li>/etc/apache2/conf.d</li>\n<li>/etc/apache2/sites-enabled</li>\n</ul>\n</blockquote><br>  Apache’s default document root is /var/www on Ubuntu, and the configuration file is /etc/apache2/apache2.conf. Additional configurations are stored in subdirectories of the /etc/apache2 directory such as /etc/apache2/mods-enabled (for Apache modules), /etc/apache2/sites-enabled (for virtual hosts), and /etc/apache2/conf.d    </p>\n<h4 id=\"Test-your-php\"><a href=\"#Test-your-php\" class=\"headerlink\" title=\"Test your php\"></a>Test your php</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">vi /var/www/hello.php</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?php</div><div class=\"line\">phpinfo();</div><div class=\"line\">?&gt;</div></pre></td></tr></table></figure>\n<p>Then call this file in browser (<a href=\"http://localhost/hello.php\" target=\"_blank\" rel=\"external\">http://localhost/hello.php</a>)<br>DONE:D</p>\n","site":{"data":{}},"excerpt":"","more":"<p>This article will tell you how to build a website in ubuntu system. First you should install apache and php. These two tools can help you to build a small website, like “hello world” websit:D<br><blockquote><p>// run the following commands<br>sudo apt-get install apache2 php5 libapache2-mod-php5<br>/etc/init.d/apache2 restart</p>\n</blockquote></p>\n<h4 id=\"important-path\"><a href=\"#important-path\" class=\"headerlink\" title=\"important path\"></a>important path</h4><p>Then you should remember the following paths:<br><blockquote><ul>\n<li>/etc/init.d/apache2 </li>\n<li>/var/www </li>\n<li>/etc/apache2/apache2.conf</li>\n<li>/etc/apache2/conf.d</li>\n<li>/etc/apache2/sites-enabled</li>\n</ul>\n</blockquote><br>  Apache’s default document root is /var/www on Ubuntu, and the configuration file is /etc/apache2/apache2.conf. Additional configurations are stored in subdirectories of the /etc/apache2 directory such as /etc/apache2/mods-enabled (for Apache modules), /etc/apache2/sites-enabled (for virtual hosts), and /etc/apache2/conf.d    </p>\n<h4 id=\"Test-your-php\"><a href=\"#Test-your-php\" class=\"headerlink\" title=\"Test your php\"></a>Test your php</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">vi /var/www/hello.php</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?php</div><div class=\"line\">phpinfo();</div><div class=\"line\">?&gt;</div></pre></td></tr></table></figure>\n<p>Then call this file in browser (<a href=\"http://localhost/hello.php\" target=\"_blank\" rel=\"external\">http://localhost/hello.php</a>)<br>DONE:D</p>\n"},{"layout":"post","title":"程序中有游离的\\x,忽略空字符","date":"2012-02-20T05:32:00.000Z","comments":1,"_content":"今天解决了linux 环境中编译c++或者c文件时产生的错误。\n{% blockquote %}\n程序中有游离的\"\\xxx\"\n忽略空字符\n{% endblockquote %}\n以上两个错误，产生的原因和字符编码有关系。一般是文件从windows转移到linux下，然后使用c或者cc或者g++编译。产生了一系列的报警和错误信息。\n解决方法如下：\n```\n1. 使用vi打开报错的文件\n2. 查看其文件编码. 也就是用vi 查看encoding变量。\":set fileencoding?\" \n3. 如果编码不是utf-8则转换为utf-8. 使用\":set fileencoding=utf-8\"\n4. 保存文件\n```\n当然产生这种错误的原因还有可能是由于在代码里输入了全角字符引起的。如果上面的方法不对，还需要再进一步排查`cat -A filename`。\n\n","source":"_posts/2012-02-20-jie-jue-cheng-xu-zhong-you-you-chi-de-slash-xxx-hu-lue-kong-zi-fu.markdown","raw":"---\nlayout: post\ntitle: \"程序中有游离的\\\\x,忽略空字符\"\ndate: 2012-02-20 13:32\ncomments: true\ncategories: [\"solve\", \"解决\", \"c++\", \"c\", \"windows\", \"linux\", \"编译\"]\n---\n今天解决了linux 环境中编译c++或者c文件时产生的错误。\n{% blockquote %}\n程序中有游离的\"\\xxx\"\n忽略空字符\n{% endblockquote %}\n以上两个错误，产生的原因和字符编码有关系。一般是文件从windows转移到linux下，然后使用c或者cc或者g++编译。产生了一系列的报警和错误信息。\n解决方法如下：\n```\n1. 使用vi打开报错的文件\n2. 查看其文件编码. 也就是用vi 查看encoding变量。\":set fileencoding?\" \n3. 如果编码不是utf-8则转换为utf-8. 使用\":set fileencoding=utf-8\"\n4. 保存文件\n```\n当然产生这种错误的原因还有可能是由于在代码里输入了全角字符引起的。如果上面的方法不对，还需要再进一步排查`cat -A filename`。\n\n","slug":"2012-02-20-jie-jue-cheng-xu-zhong-you-you-chi-de-slash-xxx-hu-lue-kong-zi-fu","published":1,"updated":"2017-06-05T02:58:02.000Z","photos":[],"link":"","_id":"cj3jjqt5j000o05mjnj1nb4f2","content":"<p>今天解决了linux 环境中编译c++或者c文件时产生的错误。<br><blockquote><p>程序中有游离的”\\xxx”<br>忽略空字符</p>\n</blockquote><br>以上两个错误，产生的原因和字符编码有关系。一般是文件从windows转移到linux下，然后使用c或者cc或者g++编译。产生了一系列的报警和错误信息。<br>解决方法如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">1. 使用vi打开报错的文件</div><div class=\"line\">2. 查看其文件编码. 也就是用vi 查看encoding变量。&quot;:set fileencoding?&quot; </div><div class=\"line\">3. 如果编码不是utf-8则转换为utf-8. 使用&quot;:set fileencoding=utf-8&quot;</div><div class=\"line\">4. 保存文件</div></pre></td></tr></table></figure></p>\n<p>当然产生这种错误的原因还有可能是由于在代码里输入了全角字符引起的。如果上面的方法不对，还需要再进一步排查<code>cat -A filename</code>。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>今天解决了linux 环境中编译c++或者c文件时产生的错误。<br><blockquote><p>程序中有游离的”\\xxx”<br>忽略空字符</p>\n</blockquote><br>以上两个错误，产生的原因和字符编码有关系。一般是文件从windows转移到linux下，然后使用c或者cc或者g++编译。产生了一系列的报警和错误信息。<br>解决方法如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">1. 使用vi打开报错的文件</div><div class=\"line\">2. 查看其文件编码. 也就是用vi 查看encoding变量。&quot;:set fileencoding?&quot; </div><div class=\"line\">3. 如果编码不是utf-8则转换为utf-8. 使用&quot;:set fileencoding=utf-8&quot;</div><div class=\"line\">4. 保存文件</div></pre></td></tr></table></figure></p>\n<p>当然产生这种错误的原因还有可能是由于在代码里输入了全角字符引起的。如果上面的方法不对，还需要再进一步排查<code>cat -A filename</code>。</p>\n"},{"layout":"post","title":"octopress error, rake generate","date":"2012-02-21T12:00:00.000Z","comments":1,"_content":"Today, I met the following problem. I wrote an article, and use `rake generate` to generate the site. Then the console reports:\n{% blockquote %}\n/home/chico/.rvm/rubies/ruby-1.9.2-p290/lib/ruby/1.9.1/psych.rb:148:in `parse': couldn't parse YAML at line 3 column 17 (Psych::SyntaxError)\n{% endblockquote %}\nwhy?     \nThen I found the reason:   \n{% blockquote %}\n  \"\\\\\" should not be written in title of your article. If you really want to write it, use \"\\\\\\\\\"\n{% endblockquote %}\n","source":"_posts/2012-02-21-octopress-error.markdown","raw":"---\nlayout: post\ntitle: \"octopress error, rake generate\"\ndate: 2012-02-21 20:00\ncomments: true\ncategories: SyntaxError, octopress, error, rake generate\n---\nToday, I met the following problem. I wrote an article, and use `rake generate` to generate the site. Then the console reports:\n{% blockquote %}\n/home/chico/.rvm/rubies/ruby-1.9.2-p290/lib/ruby/1.9.1/psych.rb:148:in `parse': couldn't parse YAML at line 3 column 17 (Psych::SyntaxError)\n{% endblockquote %}\nwhy?     \nThen I found the reason:   \n{% blockquote %}\n  \"\\\\\" should not be written in title of your article. If you really want to write it, use \"\\\\\\\\\"\n{% endblockquote %}\n","slug":"2012-02-21-octopress-error","published":1,"updated":"2017-06-05T02:58:02.000Z","photos":[],"link":"","_id":"cj3jjqt5k000q05mj000c25ej","content":"<p>Today, I met the following problem. I wrote an article, and use <code>rake generate</code> to generate the site. Then the console reports:<br><blockquote><p>/home/chico/.rvm/rubies/ruby-1.9.2-p290/lib/ruby/1.9.1/psych.rb:148:in `parse’: couldn’t parse YAML at line 3 column 17 (Psych::SyntaxError)</p>\n</blockquote><br>why?<br>Then I found the reason:<br><blockquote><p>“\\“ should not be written in title of your article. If you really want to write it, use “\\\\“</p>\n</blockquote></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Today, I met the following problem. I wrote an article, and use <code>rake generate</code> to generate the site. Then the console reports:<br><blockquote><p>/home/chico/.rvm/rubies/ruby-1.9.2-p290/lib/ruby/1.9.1/psych.rb:148:in `parse’: couldn’t parse YAML at line 3 column 17 (Psych::SyntaxError)</p>\n</blockquote><br>why?<br>Then I found the reason:<br><blockquote><p>“\\“ should not be written in title of your article. If you really want to write it, use “\\\\“</p>\n</blockquote></p>\n"},{"layout":"post","title":"windows c++程序迁移到linux","date":"2012-02-21T12:16:00.000Z","comments":1,"_content":"今天把程序从windows上迁移到了linux上。主要遇到到问题是: makeFile, lib库, compile error, 编码 encoding.     \n####make file   \n这里其实可以使用eclipse中到cdt插件，然后就可以从eclipse中写c++。挺方便的，同时也解决了make file的问题。因为创建一个c++ 或者 c project，eclipse会自动创建一系列的makefile文件。所以让make file步骤简单无比。       \n####lib库和include库   \n这里真的要注意/usr/include和/usr/lib中是否有你想要到文件。当然如果你是纯c++代码，可以尝试下只使用/usr/include/c++. 当如除了-L libpath, 还有-llibname, 这里的libname其实是libXXXX.so中的XXXX. 不过如果不会写，这里还是会费些劲。还有include路径要使用`-I`,每一个路径前都要有一个`-I`. 另外还要在eclipse run configurate中的environment中填入LD_LIBRARY_PATH,这个是你要调用的lib库（这个lib库如果不在/usr/lib中，那么就要手工将路径填入到LD_LIBRARY_PATH变量里）。并且在.bashrc中写：\n```\nLD_LIBRARY_PATH=$LD_LIBRARY_PATH:your_lib_path\n```  \n####编码\n因为windows上最常用到中文编码是GBK,而文件编码最常用到是utf-16el.这里最有可能会出错。在eclipse中或者gcc直接编译，都最好转换为UTF-8编码。文件也需要是UTF-8的编码。否则就会报\"程序有游离的XXX, 忽略空字符\"等诡异的错误。[详见解决方法](http://chillyc.info/blog/2012/02/20/jie-jue-cheng-xu-zhong-you-you-chi-de-slash-xxx-hu-lue-kong-zi-fu/)    \n####compile error\n这个可能就多种多样了。不过有c/c++基础的，应该大部分都可以搞定了。   \n\n       \n       \n如果使用eclipse, 直接build project就可以编译成功。然后找到main函数run就可以了。\n","source":"_posts/2012-02-21-windows-c-plus-plus-cheng-xu-qian-yi-dao-linux.markdown","raw":"---\nlayout: post\ntitle: \"windows c++程序迁移到linux\"\ndate: 2012-02-21 20:16\ncomments: true\ncategories: windows, c++, linux, 移植, 迁移，程序 \n---\n今天把程序从windows上迁移到了linux上。主要遇到到问题是: makeFile, lib库, compile error, 编码 encoding.     \n####make file   \n这里其实可以使用eclipse中到cdt插件，然后就可以从eclipse中写c++。挺方便的，同时也解决了make file的问题。因为创建一个c++ 或者 c project，eclipse会自动创建一系列的makefile文件。所以让make file步骤简单无比。       \n####lib库和include库   \n这里真的要注意/usr/include和/usr/lib中是否有你想要到文件。当然如果你是纯c++代码，可以尝试下只使用/usr/include/c++. 当如除了-L libpath, 还有-llibname, 这里的libname其实是libXXXX.so中的XXXX. 不过如果不会写，这里还是会费些劲。还有include路径要使用`-I`,每一个路径前都要有一个`-I`. 另外还要在eclipse run configurate中的environment中填入LD_LIBRARY_PATH,这个是你要调用的lib库（这个lib库如果不在/usr/lib中，那么就要手工将路径填入到LD_LIBRARY_PATH变量里）。并且在.bashrc中写：\n```\nLD_LIBRARY_PATH=$LD_LIBRARY_PATH:your_lib_path\n```  \n####编码\n因为windows上最常用到中文编码是GBK,而文件编码最常用到是utf-16el.这里最有可能会出错。在eclipse中或者gcc直接编译，都最好转换为UTF-8编码。文件也需要是UTF-8的编码。否则就会报\"程序有游离的XXX, 忽略空字符\"等诡异的错误。[详见解决方法](http://chillyc.info/blog/2012/02/20/jie-jue-cheng-xu-zhong-you-you-chi-de-slash-xxx-hu-lue-kong-zi-fu/)    \n####compile error\n这个可能就多种多样了。不过有c/c++基础的，应该大部分都可以搞定了。   \n\n       \n       \n如果使用eclipse, 直接build project就可以编译成功。然后找到main函数run就可以了。\n","slug":"2012-02-21-windows-c-plus-plus-cheng-xu-qian-yi-dao-linux","published":1,"updated":"2017-06-05T02:58:02.000Z","photos":[],"link":"","_id":"cj3jjqt5n000s05mj8lkhq6vz","content":"<p>今天把程序从windows上迁移到了linux上。主要遇到到问题是: makeFile, lib库, compile error, 编码 encoding.     </p>\n<p>####make file<br>这里其实可以使用eclipse中到cdt插件，然后就可以从eclipse中写c++。挺方便的，同时也解决了make file的问题。因为创建一个c++ 或者 c project，eclipse会自动创建一系列的makefile文件。所以让make file步骤简单无比。       </p>\n<p>####lib库和include库<br>这里真的要注意/usr/include和/usr/lib中是否有你想要到文件。当然如果你是纯c++代码，可以尝试下只使用/usr/include/c++. 当如除了-L libpath, 还有-llibname, 这里的libname其实是libXXXX.so中的XXXX. 不过如果不会写，这里还是会费些劲。还有include路径要使用<code>-I</code>,每一个路径前都要有一个<code>-I</code>. 另外还要在eclipse run configurate中的environment中填入LD_LIBRARY_PATH,这个是你要调用的lib库（这个lib库如果不在/usr/lib中，那么就要手工将路径填入到LD_LIBRARY_PATH变量里）。并且在.bashrc中写：</p>\n<pre><code>LD_LIBRARY_PATH=$LD_LIBRARY_PATH:your_lib_path\n</code></pre><p>####编码<br>因为windows上最常用到中文编码是GBK,而文件编码最常用到是utf-16el.这里最有可能会出错。在eclipse中或者gcc直接编译，都最好转换为UTF-8编码。文件也需要是UTF-8的编码。否则就会报”程序有游离的XXX, 忽略空字符”等诡异的错误。<a href=\"http://chillyc.info/blog/2012/02/20/jie-jue-cheng-xu-zhong-you-you-chi-de-slash-xxx-hu-lue-kong-zi-fu/\">详见解决方法</a>    </p>\n<p>####compile error<br>这个可能就多种多样了。不过有c/c++基础的，应该大部分都可以搞定了。   </p>\n<p>如果使用eclipse, 直接build project就可以编译成功。然后找到main函数run就可以了。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>今天把程序从windows上迁移到了linux上。主要遇到到问题是: makeFile, lib库, compile error, 编码 encoding.     </p>\n<p>####make file<br>这里其实可以使用eclipse中到cdt插件，然后就可以从eclipse中写c++。挺方便的，同时也解决了make file的问题。因为创建一个c++ 或者 c project，eclipse会自动创建一系列的makefile文件。所以让make file步骤简单无比。       </p>\n<p>####lib库和include库<br>这里真的要注意/usr/include和/usr/lib中是否有你想要到文件。当然如果你是纯c++代码，可以尝试下只使用/usr/include/c++. 当如除了-L libpath, 还有-llibname, 这里的libname其实是libXXXX.so中的XXXX. 不过如果不会写，这里还是会费些劲。还有include路径要使用<code>-I</code>,每一个路径前都要有一个<code>-I</code>. 另外还要在eclipse run configurate中的environment中填入LD_LIBRARY_PATH,这个是你要调用的lib库（这个lib库如果不在/usr/lib中，那么就要手工将路径填入到LD_LIBRARY_PATH变量里）。并且在.bashrc中写：</p>\n<pre><code>LD_LIBRARY_PATH=$LD_LIBRARY_PATH:your_lib_path\n</code></pre><p>####编码<br>因为windows上最常用到中文编码是GBK,而文件编码最常用到是utf-16el.这里最有可能会出错。在eclipse中或者gcc直接编译，都最好转换为UTF-8编码。文件也需要是UTF-8的编码。否则就会报”程序有游离的XXX, 忽略空字符”等诡异的错误。<a href=\"http://chillyc.info/blog/2012/02/20/jie-jue-cheng-xu-zhong-you-you-chi-de-slash-xxx-hu-lue-kong-zi-fu/\">详见解决方法</a>    </p>\n<p>####compile error<br>这个可能就多种多样了。不过有c/c++基础的，应该大部分都可以搞定了。   </p>\n<p>如果使用eclipse, 直接build project就可以编译成功。然后找到main函数run就可以了。</p>\n"},{"layout":"post","title":"svn diff","date":"2012-03-21T13:21:00.000Z","comments":1,"_content":"最近碰到了`svn merge`之后，再使用`svn diff`产生出来的patch中缺少某些文件的信息。后来发现了原因。使用`svn st`查看那些文件信息，类似于:\n```\nA       src/aa.c\nA   +   src/bb.c\nM       src/cc.c\n```\n    \n这样输出的patch中，aa.c是信息是都有的。cc.c也是有的。但是bb.c的信息不存在。主要是存在那个`+`. `+`的意思是这些文件存在于提交历史中，所以该文件不能再次被diff.但是为什么会存在于提交历史中，这个我就不知道了。     \n下面是教你如何去掉`+`.\n使用下面的脚本会方便的去掉各个文件的`+`,对于目录的`+`是不能去掉的.\n```\n#!/bin/sh\nplus_file=`svn st | grep \"^A\" | grep \"+\" | cut -d\" \" -f6`\nfor i in $plus_file; do\n        if [ -d $i ]; then\n                echo \"skip $i\"\n        else\n                cp ${i} ${i}.back;\n                echo $i;\n                svn revert $i;\n                mv ${i}.back ${i};\n                svn add $i;\n        fi\n\ndone;\n```\n      \n```\n上面脚本的工作原理是:\ncp src/bb.c src/bb.c.back\nsvn revert src/bb.c\nmv src/bb.c.back src/bb.c\nsvn add src/bb.c\n```\n\n         \n这样所有的`A +`状态就变为了`A`。这样再使用`svn diff`就可以得到完整的diff信息。如果有想法还可以处理一下文件夹。不过review code时，文件夹的意义并不大，所以就没有处理。这里顺便感谢下巧大牛。\n\n","source":"_posts/2012-03-21-svn-diff.markdown","raw":"---\nlayout: post\ntitle: \"svn diff\"\ndate: 2012-03-21 21:21\ncomments: true\ncategories: svn,diff,merge,lost,patch  \n---\n最近碰到了`svn merge`之后，再使用`svn diff`产生出来的patch中缺少某些文件的信息。后来发现了原因。使用`svn st`查看那些文件信息，类似于:\n```\nA       src/aa.c\nA   +   src/bb.c\nM       src/cc.c\n```\n    \n这样输出的patch中，aa.c是信息是都有的。cc.c也是有的。但是bb.c的信息不存在。主要是存在那个`+`. `+`的意思是这些文件存在于提交历史中，所以该文件不能再次被diff.但是为什么会存在于提交历史中，这个我就不知道了。     \n下面是教你如何去掉`+`.\n使用下面的脚本会方便的去掉各个文件的`+`,对于目录的`+`是不能去掉的.\n```\n#!/bin/sh\nplus_file=`svn st | grep \"^A\" | grep \"+\" | cut -d\" \" -f6`\nfor i in $plus_file; do\n        if [ -d $i ]; then\n                echo \"skip $i\"\n        else\n                cp ${i} ${i}.back;\n                echo $i;\n                svn revert $i;\n                mv ${i}.back ${i};\n                svn add $i;\n        fi\n\ndone;\n```\n      \n```\n上面脚本的工作原理是:\ncp src/bb.c src/bb.c.back\nsvn revert src/bb.c\nmv src/bb.c.back src/bb.c\nsvn add src/bb.c\n```\n\n         \n这样所有的`A +`状态就变为了`A`。这样再使用`svn diff`就可以得到完整的diff信息。如果有想法还可以处理一下文件夹。不过review code时，文件夹的意义并不大，所以就没有处理。这里顺便感谢下巧大牛。\n\n","slug":"2012-03-21-svn-diff","published":1,"updated":"2017-06-05T02:58:02.000Z","photos":[],"link":"","_id":"cj3jjqt5q000u05mj0qu6j7hi","content":"<p>最近碰到了<code>svn merge</code>之后，再使用<code>svn diff</code>产生出来的patch中缺少某些文件的信息。后来发现了原因。使用<code>svn st</code>查看那些文件信息，类似于:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">A       src/aa.c</div><div class=\"line\">A   +   src/bb.c</div><div class=\"line\">M       src/cc.c</div></pre></td></tr></table></figure></p>\n<p>这样输出的patch中，aa.c是信息是都有的。cc.c也是有的。但是bb.c的信息不存在。主要是存在那个<code>+</code>. <code>+</code>的意思是这些文件存在于提交历史中，所以该文件不能再次被diff.但是为什么会存在于提交历史中，这个我就不知道了。<br>下面是教你如何去掉<code>+</code>.<br>使用下面的脚本会方便的去掉各个文件的<code>+</code>,对于目录的<code>+</code>是不能去掉的.<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">#!/bin/sh</div><div class=\"line\">plus_file=`svn st | grep &quot;^A&quot; | grep &quot;+&quot; | cut -d&quot; &quot; -f6`</div><div class=\"line\">for i in $plus_file; do</div><div class=\"line\">        if [ -d $i ]; then</div><div class=\"line\">                echo &quot;skip $i&quot;</div><div class=\"line\">        else</div><div class=\"line\">                cp $&#123;i&#125; $&#123;i&#125;.back;</div><div class=\"line\">                echo $i;</div><div class=\"line\">                svn revert $i;</div><div class=\"line\">                mv $&#123;i&#125;.back $&#123;i&#125;;</div><div class=\"line\">                svn add $i;</div><div class=\"line\">        fi</div><div class=\"line\"></div><div class=\"line\">done;</div></pre></td></tr></table></figure></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">上面脚本的工作原理是:</div><div class=\"line\">cp src/bb.c src/bb.c.back</div><div class=\"line\">svn revert src/bb.c</div><div class=\"line\">mv src/bb.c.back src/bb.c</div><div class=\"line\">svn add src/bb.c</div></pre></td></tr></table></figure>\n<p>这样所有的<code>A +</code>状态就变为了<code>A</code>。这样再使用<code>svn diff</code>就可以得到完整的diff信息。如果有想法还可以处理一下文件夹。不过review code时，文件夹的意义并不大，所以就没有处理。这里顺便感谢下巧大牛。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>最近碰到了<code>svn merge</code>之后，再使用<code>svn diff</code>产生出来的patch中缺少某些文件的信息。后来发现了原因。使用<code>svn st</code>查看那些文件信息，类似于:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">A       src/aa.c</div><div class=\"line\">A   +   src/bb.c</div><div class=\"line\">M       src/cc.c</div></pre></td></tr></table></figure></p>\n<p>这样输出的patch中，aa.c是信息是都有的。cc.c也是有的。但是bb.c的信息不存在。主要是存在那个<code>+</code>. <code>+</code>的意思是这些文件存在于提交历史中，所以该文件不能再次被diff.但是为什么会存在于提交历史中，这个我就不知道了。<br>下面是教你如何去掉<code>+</code>.<br>使用下面的脚本会方便的去掉各个文件的<code>+</code>,对于目录的<code>+</code>是不能去掉的.<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">#!/bin/sh</div><div class=\"line\">plus_file=`svn st | grep &quot;^A&quot; | grep &quot;+&quot; | cut -d&quot; &quot; -f6`</div><div class=\"line\">for i in $plus_file; do</div><div class=\"line\">        if [ -d $i ]; then</div><div class=\"line\">                echo &quot;skip $i&quot;</div><div class=\"line\">        else</div><div class=\"line\">                cp $&#123;i&#125; $&#123;i&#125;.back;</div><div class=\"line\">                echo $i;</div><div class=\"line\">                svn revert $i;</div><div class=\"line\">                mv $&#123;i&#125;.back $&#123;i&#125;;</div><div class=\"line\">                svn add $i;</div><div class=\"line\">        fi</div><div class=\"line\"></div><div class=\"line\">done;</div></pre></td></tr></table></figure></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">上面脚本的工作原理是:</div><div class=\"line\">cp src/bb.c src/bb.c.back</div><div class=\"line\">svn revert src/bb.c</div><div class=\"line\">mv src/bb.c.back src/bb.c</div><div class=\"line\">svn add src/bb.c</div></pre></td></tr></table></figure>\n<p>这样所有的<code>A +</code>状态就变为了<code>A</code>。这样再使用<code>svn diff</code>就可以得到完整的diff信息。如果有想法还可以处理一下文件夹。不过review code时，文件夹的意义并不大，所以就没有处理。这里顺便感谢下巧大牛。</p>\n"},{"layout":"post","title":"有道云笔记1.5正式版上线","date":"2012-02-22T18:08:00.000Z","comments":1,"_content":"今天晚上..或者说今天早上。反正是跨天的.有道云笔记1.5版本正式上线。开始时数据转换花了很长时间。后面基本没有出现什么大问题，主要是id不统一。整到两点钟才算正式搞好。明天早上就不准备去上班了.困...还是把这篇blog写完吧。    \n     \n####问题：\n 1. 其实测试环境下，还是不能测试出所有到问题。因为和线上的配置不一样。   \n 2. 其实组内改动什么设计问题，可能牵扯到几个人，但是做设计或者真正写代码的时候，其实不知道牵扯到谁。   \n 3. web页面的文字链.其实没有提前做好。不知道为什么UI总是在临上线的时候才有。\n 4. 技术先导的project,再让PM来设计.真的是比较痛苦。\n          \n####新的功能：\n 1. 客户端新浪微博帐号登录。其实根据现在的涉及还是有些bug的。比如打开两个授权页面，第一个页面其实已经不能再用来登录了。但是用户输入用户名密码还是会授权成功。至于为什么..我不告诉你～\n 2. 锁屏...离线登录态....还有啥就不知道了。\n 3. server端的设计有改动。\n 4. 。。。。。\n       \n####好了..该去睡觉了。\n另外今天上线的是有道云笔记1.5正式版.....比官方稿件快7-8个小时...\n另外地址是[有道云笔记1.5](http://note.youdao.com)\n","source":"_posts/2012-02-23-you-dao-yun-bi-ji-1-dot-5zheng-shi-ban-shang-xian.markdown","raw":"---\nlayout: post\ntitle: \"有道云笔记1.5正式版上线\"\ndate: 2012-02-23 02:08\ncomments: true\ncategories: 有道,云笔记,youdao,1.5,上线,正式版 \n---\n今天晚上..或者说今天早上。反正是跨天的.有道云笔记1.5版本正式上线。开始时数据转换花了很长时间。后面基本没有出现什么大问题，主要是id不统一。整到两点钟才算正式搞好。明天早上就不准备去上班了.困...还是把这篇blog写完吧。    \n     \n####问题：\n 1. 其实测试环境下，还是不能测试出所有到问题。因为和线上的配置不一样。   \n 2. 其实组内改动什么设计问题，可能牵扯到几个人，但是做设计或者真正写代码的时候，其实不知道牵扯到谁。   \n 3. web页面的文字链.其实没有提前做好。不知道为什么UI总是在临上线的时候才有。\n 4. 技术先导的project,再让PM来设计.真的是比较痛苦。\n          \n####新的功能：\n 1. 客户端新浪微博帐号登录。其实根据现在的涉及还是有些bug的。比如打开两个授权页面，第一个页面其实已经不能再用来登录了。但是用户输入用户名密码还是会授权成功。至于为什么..我不告诉你～\n 2. 锁屏...离线登录态....还有啥就不知道了。\n 3. server端的设计有改动。\n 4. 。。。。。\n       \n####好了..该去睡觉了。\n另外今天上线的是有道云笔记1.5正式版.....比官方稿件快7-8个小时...\n另外地址是[有道云笔记1.5](http://note.youdao.com)\n","slug":"2012-02-23-you-dao-yun-bi-ji-1-dot-5zheng-shi-ban-shang-xian","published":1,"updated":"2017-06-05T02:58:02.000Z","photos":[],"link":"","_id":"cj3jjqt5u000w05mj7ertewxr","content":"<p>今天晚上..或者说今天早上。反正是跨天的.有道云笔记1.5版本正式上线。开始时数据转换花了很长时间。后面基本没有出现什么大问题，主要是id不统一。整到两点钟才算正式搞好。明天早上就不准备去上班了.困…还是把这篇blog写完吧。    </p>\n<p>####问题：</p>\n<ol>\n<li>其实测试环境下，还是不能测试出所有到问题。因为和线上的配置不一样。   </li>\n<li>其实组内改动什么设计问题，可能牵扯到几个人，但是做设计或者真正写代码的时候，其实不知道牵扯到谁。   </li>\n<li>web页面的文字链.其实没有提前做好。不知道为什么UI总是在临上线的时候才有。</li>\n<li>技术先导的project,再让PM来设计.真的是比较痛苦。</li>\n</ol>\n<p>####新的功能：</p>\n<ol>\n<li>客户端新浪微博帐号登录。其实根据现在的涉及还是有些bug的。比如打开两个授权页面，第一个页面其实已经不能再用来登录了。但是用户输入用户名密码还是会授权成功。至于为什么..我不告诉你～</li>\n<li>锁屏…离线登录态….还有啥就不知道了。</li>\n<li>server端的设计有改动。</li>\n<li>。。。。。</li>\n</ol>\n<p>####好了..该去睡觉了。<br>另外今天上线的是有道云笔记1.5正式版…..比官方稿件快7-8个小时…<br>另外地址是<a href=\"http://note.youdao.com\" target=\"_blank\" rel=\"external\">有道云笔记1.5</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>今天晚上..或者说今天早上。反正是跨天的.有道云笔记1.5版本正式上线。开始时数据转换花了很长时间。后面基本没有出现什么大问题，主要是id不统一。整到两点钟才算正式搞好。明天早上就不准备去上班了.困…还是把这篇blog写完吧。    </p>\n<p>####问题：</p>\n<ol>\n<li>其实测试环境下，还是不能测试出所有到问题。因为和线上的配置不一样。   </li>\n<li>其实组内改动什么设计问题，可能牵扯到几个人，但是做设计或者真正写代码的时候，其实不知道牵扯到谁。   </li>\n<li>web页面的文字链.其实没有提前做好。不知道为什么UI总是在临上线的时候才有。</li>\n<li>技术先导的project,再让PM来设计.真的是比较痛苦。</li>\n</ol>\n<p>####新的功能：</p>\n<ol>\n<li>客户端新浪微博帐号登录。其实根据现在的涉及还是有些bug的。比如打开两个授权页面，第一个页面其实已经不能再用来登录了。但是用户输入用户名密码还是会授权成功。至于为什么..我不告诉你～</li>\n<li>锁屏…离线登录态….还有啥就不知道了。</li>\n<li>server端的设计有改动。</li>\n<li>。。。。。</li>\n</ol>\n<p>####好了..该去睡觉了。<br>另外今天上线的是有道云笔记1.5正式版…..比官方稿件快7-8个小时…<br>另外地址是<a href=\"http://note.youdao.com\" target=\"_blank\" rel=\"external\">有道云笔记1.5</a></p>\n"},{"layout":"post","title":"新浪Oauth认证又改出bug...mismatch url","date":"2012-04-26T14:18:00.000Z","comments":1,"_content":"万恶的新浪呀～～～今天本来事情多，结果新浪Oauth2.0接口突然有变化。导致新浪用户无法使用有道云笔记登录，登录就会有mismatch url error。于是今天做hot fix. 一时找不出问题时，客户端登录不上去，但是web可以正常使用。然后经大师兄点拨，对比了一下两个访问新浪的url,终于发现了不同。原因在于某个新浪小白程序猿写程序出了bug。我的callback地址是四级域名（xx.xx.youdao.com）而新浪现在的接口即使绑定了域名，还是只支持三级域名(xx.youdao.com). 以前新浪的小白程序猿还写出来仅接受一个url参数的神奇程序，当然出现这个情况也在意料之中。我时常在想写新浪微博和写新浪微博openAPI的一定不是同一批人。最主要的是新浪更新或者新浪自己挂掉从来不通知开发者。这让人相当费解。只有不要传播谣言啥的专门给开发者发信...他们真有趣。\n\n\n\n知道了原因，首先做hot fix.让新浪那边改，那难比登天呀。做第三方这事情还是QQ做得好些。Hot fix比较恶心，不推荐大家学习。虽然只改了一句code，但是是硬编码。Hot Fix之后，所有的客户端就能正常登录了。但是有道云笔记的页面会最终说..其实你没有认证成功的....但是客户端的确是活着好好的。这是为啥...上了趟厕所，灵感来了。有道server完成了跳转，但是因为cookie的domain和callback的域名不一致。所以那个最终页面看到没有带来cookie呀，那肯定登录失败了。但是cookie被client端很好接收。所以也就可以完成登录和获取数据。这就是为啥登录失败了，但是客户端还活着好好的。\n\n\n然后继续做Hot FIX.后来发现自己编来编去，还是太丑陋。直接叫运维做了一个跳转...然后客户端就活得好好的了。也不会出现登录失败页了。\n\n\n今天大事小事都赶到一起了。做了一个TTT，本以为写得概括大家就都能听懂，结果大家都听得很朦胧。以后写ppt还是要写细致一些，还要写挑战和为什么要做这件事。嗯嗯，下次会更好..这又让我想到写论文...话说敏姐的致谢中大部分都是在赞美导师...这一定是怕不让毕业...\n","source":"_posts/2012-04-26-sina-oauth2.markdown","raw":"---\nlayout: post\ntitle: \"新浪Oauth认证又改出bug...mismatch url\"\ndate: 2012-04-26 22:18\ncomments: true\ncategories: sina, oauth2.0, oauth, open, authorization, 新浪, 有道, 有道云笔记\n---\n万恶的新浪呀～～～今天本来事情多，结果新浪Oauth2.0接口突然有变化。导致新浪用户无法使用有道云笔记登录，登录就会有mismatch url error。于是今天做hot fix. 一时找不出问题时，客户端登录不上去，但是web可以正常使用。然后经大师兄点拨，对比了一下两个访问新浪的url,终于发现了不同。原因在于某个新浪小白程序猿写程序出了bug。我的callback地址是四级域名（xx.xx.youdao.com）而新浪现在的接口即使绑定了域名，还是只支持三级域名(xx.youdao.com). 以前新浪的小白程序猿还写出来仅接受一个url参数的神奇程序，当然出现这个情况也在意料之中。我时常在想写新浪微博和写新浪微博openAPI的一定不是同一批人。最主要的是新浪更新或者新浪自己挂掉从来不通知开发者。这让人相当费解。只有不要传播谣言啥的专门给开发者发信...他们真有趣。\n\n\n\n知道了原因，首先做hot fix.让新浪那边改，那难比登天呀。做第三方这事情还是QQ做得好些。Hot fix比较恶心，不推荐大家学习。虽然只改了一句code，但是是硬编码。Hot Fix之后，所有的客户端就能正常登录了。但是有道云笔记的页面会最终说..其实你没有认证成功的....但是客户端的确是活着好好的。这是为啥...上了趟厕所，灵感来了。有道server完成了跳转，但是因为cookie的domain和callback的域名不一致。所以那个最终页面看到没有带来cookie呀，那肯定登录失败了。但是cookie被client端很好接收。所以也就可以完成登录和获取数据。这就是为啥登录失败了，但是客户端还活着好好的。\n\n\n然后继续做Hot FIX.后来发现自己编来编去，还是太丑陋。直接叫运维做了一个跳转...然后客户端就活得好好的了。也不会出现登录失败页了。\n\n\n今天大事小事都赶到一起了。做了一个TTT，本以为写得概括大家就都能听懂，结果大家都听得很朦胧。以后写ppt还是要写细致一些，还要写挑战和为什么要做这件事。嗯嗯，下次会更好..这又让我想到写论文...话说敏姐的致谢中大部分都是在赞美导师...这一定是怕不让毕业...\n","slug":"2012-04-26-sina-oauth2","published":1,"updated":"2017-06-05T02:58:02.000Z","photos":[],"link":"","_id":"cj3jjqt5x000y05mjlmiquwq4","content":"<p>万恶的新浪呀～～～今天本来事情多，结果新浪Oauth2.0接口突然有变化。导致新浪用户无法使用有道云笔记登录，登录就会有mismatch url error。于是今天做hot fix. 一时找不出问题时，客户端登录不上去，但是web可以正常使用。然后经大师兄点拨，对比了一下两个访问新浪的url,终于发现了不同。原因在于某个新浪小白程序猿写程序出了bug。我的callback地址是四级域名（xx.xx.youdao.com）而新浪现在的接口即使绑定了域名，还是只支持三级域名(xx.youdao.com). 以前新浪的小白程序猿还写出来仅接受一个url参数的神奇程序，当然出现这个情况也在意料之中。我时常在想写新浪微博和写新浪微博openAPI的一定不是同一批人。最主要的是新浪更新或者新浪自己挂掉从来不通知开发者。这让人相当费解。只有不要传播谣言啥的专门给开发者发信…他们真有趣。</p>\n<p>知道了原因，首先做hot fix.让新浪那边改，那难比登天呀。做第三方这事情还是QQ做得好些。Hot fix比较恶心，不推荐大家学习。虽然只改了一句code，但是是硬编码。Hot Fix之后，所有的客户端就能正常登录了。但是有道云笔记的页面会最终说..其实你没有认证成功的….但是客户端的确是活着好好的。这是为啥…上了趟厕所，灵感来了。有道server完成了跳转，但是因为cookie的domain和callback的域名不一致。所以那个最终页面看到没有带来cookie呀，那肯定登录失败了。但是cookie被client端很好接收。所以也就可以完成登录和获取数据。这就是为啥登录失败了，但是客户端还活着好好的。</p>\n<p>然后继续做Hot FIX.后来发现自己编来编去，还是太丑陋。直接叫运维做了一个跳转…然后客户端就活得好好的了。也不会出现登录失败页了。</p>\n<p>今天大事小事都赶到一起了。做了一个TTT，本以为写得概括大家就都能听懂，结果大家都听得很朦胧。以后写ppt还是要写细致一些，还要写挑战和为什么要做这件事。嗯嗯，下次会更好..这又让我想到写论文…话说敏姐的致谢中大部分都是在赞美导师…这一定是怕不让毕业…</p>\n","site":{"data":{}},"excerpt":"","more":"<p>万恶的新浪呀～～～今天本来事情多，结果新浪Oauth2.0接口突然有变化。导致新浪用户无法使用有道云笔记登录，登录就会有mismatch url error。于是今天做hot fix. 一时找不出问题时，客户端登录不上去，但是web可以正常使用。然后经大师兄点拨，对比了一下两个访问新浪的url,终于发现了不同。原因在于某个新浪小白程序猿写程序出了bug。我的callback地址是四级域名（xx.xx.youdao.com）而新浪现在的接口即使绑定了域名，还是只支持三级域名(xx.youdao.com). 以前新浪的小白程序猿还写出来仅接受一个url参数的神奇程序，当然出现这个情况也在意料之中。我时常在想写新浪微博和写新浪微博openAPI的一定不是同一批人。最主要的是新浪更新或者新浪自己挂掉从来不通知开发者。这让人相当费解。只有不要传播谣言啥的专门给开发者发信…他们真有趣。</p>\n<p>知道了原因，首先做hot fix.让新浪那边改，那难比登天呀。做第三方这事情还是QQ做得好些。Hot fix比较恶心，不推荐大家学习。虽然只改了一句code，但是是硬编码。Hot Fix之后，所有的客户端就能正常登录了。但是有道云笔记的页面会最终说..其实你没有认证成功的….但是客户端的确是活着好好的。这是为啥…上了趟厕所，灵感来了。有道server完成了跳转，但是因为cookie的domain和callback的域名不一致。所以那个最终页面看到没有带来cookie呀，那肯定登录失败了。但是cookie被client端很好接收。所以也就可以完成登录和获取数据。这就是为啥登录失败了，但是客户端还活着好好的。</p>\n<p>然后继续做Hot FIX.后来发现自己编来编去，还是太丑陋。直接叫运维做了一个跳转…然后客户端就活得好好的了。也不会出现登录失败页了。</p>\n<p>今天大事小事都赶到一起了。做了一个TTT，本以为写得概括大家就都能听懂，结果大家都听得很朦胧。以后写ppt还是要写细致一些，还要写挑战和为什么要做这件事。嗯嗯，下次会更好..这又让我想到写论文…话说敏姐的致谢中大部分都是在赞美导师…这一定是怕不让毕业…</p>\n"},{"layout":"post","title":"cookie","date":"2012-05-10T17:26:00.000Z","comments":1,"_content":"Cookie的特性：        \n\n * 首先分为3种cookie:       \n    1. 持久化cookie(persist cookie), 这种cookie有过期时间, 关掉浏览器还存在。   \n    2. 会话cookie(session cookie), 这种cookie没有过期时间，关掉浏览器就消失。  \n    3. 要被删除的cookie(deleted cookie). 这种cookie到达请求方就立即失效了。不会再带回服务器端。       \n * Cookie的domain一定要对。例如发送给note.youdao.com的cookie, domain可以是.note.youdao.com, 可以是.youdao.com.但是最好是.note.youdao.com, 否则有可能给其他的应用带去不必要的cookie, 增大传输量。    \n * Cookie的path一定要对，如果在生成cookie时没有指明，那就是那个页面的当前路径。例如note.youdao.com/web/x.html 生成了cookie, 那路径就是/web, 再访问note.youdao.com/时，这个cookie不会被带上。只有/web以及/web的子路径可以得到该cookie.所以一般cookie的path设置为\"/\".    \n * Cookie是否是HTTP ONLY.这个对JS很重要。其实就是SET-COOKIE: header中加入了httponly的字段。但是HttpOnly的cookie, JS是拿不到的。在一定程度上保证安全。\n * 永久cookie是跨进程的。当然chrome做到session cookie也跨进程(跨chrome进程)。永久cookie可以跨所有的进程。例如客户端用A帐号访问，web端用B帐号访问。客户端的永久cookie会带到web访问中。     \n * JAVA的HttpClient或者其他httpClient库发送cookie到server时不会带上HTTPOnly或者domain信息，因为他们只有对的domain才会发送cookie. 但是如果server要做抹除客户端cookie的事情，那就必须在返回消息中发送除cookie value和过期时间不一致，其他都要一致的cookie才行。否则达不到抹除的目的。    \n\n 就先写到这里。\n","source":"_posts/2012-05-11-cookie.markdown","raw":"---\nlayout: post\ntitle: \"cookie\"\ndate: 2012-05-11 01:26\ncomments: true\ncategories: cookie \n---\nCookie的特性：        \n\n * 首先分为3种cookie:       \n    1. 持久化cookie(persist cookie), 这种cookie有过期时间, 关掉浏览器还存在。   \n    2. 会话cookie(session cookie), 这种cookie没有过期时间，关掉浏览器就消失。  \n    3. 要被删除的cookie(deleted cookie). 这种cookie到达请求方就立即失效了。不会再带回服务器端。       \n * Cookie的domain一定要对。例如发送给note.youdao.com的cookie, domain可以是.note.youdao.com, 可以是.youdao.com.但是最好是.note.youdao.com, 否则有可能给其他的应用带去不必要的cookie, 增大传输量。    \n * Cookie的path一定要对，如果在生成cookie时没有指明，那就是那个页面的当前路径。例如note.youdao.com/web/x.html 生成了cookie, 那路径就是/web, 再访问note.youdao.com/时，这个cookie不会被带上。只有/web以及/web的子路径可以得到该cookie.所以一般cookie的path设置为\"/\".    \n * Cookie是否是HTTP ONLY.这个对JS很重要。其实就是SET-COOKIE: header中加入了httponly的字段。但是HttpOnly的cookie, JS是拿不到的。在一定程度上保证安全。\n * 永久cookie是跨进程的。当然chrome做到session cookie也跨进程(跨chrome进程)。永久cookie可以跨所有的进程。例如客户端用A帐号访问，web端用B帐号访问。客户端的永久cookie会带到web访问中。     \n * JAVA的HttpClient或者其他httpClient库发送cookie到server时不会带上HTTPOnly或者domain信息，因为他们只有对的domain才会发送cookie. 但是如果server要做抹除客户端cookie的事情，那就必须在返回消息中发送除cookie value和过期时间不一致，其他都要一致的cookie才行。否则达不到抹除的目的。    \n\n 就先写到这里。\n","slug":"2012-05-11-cookie","published":1,"updated":"2017-06-05T02:58:02.000Z","photos":[],"link":"","_id":"cj3jjqt60001005mj20xmr3ao","content":"<p>Cookie的特性：        </p>\n<ul>\n<li>首先分为3种cookie:       <ol>\n<li>持久化cookie(persist cookie), 这种cookie有过期时间, 关掉浏览器还存在。   </li>\n<li>会话cookie(session cookie), 这种cookie没有过期时间，关掉浏览器就消失。  </li>\n<li>要被删除的cookie(deleted cookie). 这种cookie到达请求方就立即失效了。不会再带回服务器端。       </li>\n</ol>\n</li>\n<li>Cookie的domain一定要对。例如发送给note.youdao.com的cookie, domain可以是.note.youdao.com, 可以是.youdao.com.但是最好是.note.youdao.com, 否则有可能给其他的应用带去不必要的cookie, 增大传输量。    </li>\n<li>Cookie的path一定要对，如果在生成cookie时没有指明，那就是那个页面的当前路径。例如note.youdao.com/web/x.html 生成了cookie, 那路径就是/web, 再访问note.youdao.com/时，这个cookie不会被带上。只有/web以及/web的子路径可以得到该cookie.所以一般cookie的path设置为”/“.    </li>\n<li>Cookie是否是HTTP ONLY.这个对JS很重要。其实就是SET-COOKIE: header中加入了httponly的字段。但是HttpOnly的cookie, JS是拿不到的。在一定程度上保证安全。</li>\n<li>永久cookie是跨进程的。当然chrome做到session cookie也跨进程(跨chrome进程)。永久cookie可以跨所有的进程。例如客户端用A帐号访问，web端用B帐号访问。客户端的永久cookie会带到web访问中。     </li>\n<li><p>JAVA的HttpClient或者其他httpClient库发送cookie到server时不会带上HTTPOnly或者domain信息，因为他们只有对的domain才会发送cookie. 但是如果server要做抹除客户端cookie的事情，那就必须在返回消息中发送除cookie value和过期时间不一致，其他都要一致的cookie才行。否则达不到抹除的目的。    </p>\n<p>就先写到这里。</p>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p>Cookie的特性：        </p>\n<ul>\n<li>首先分为3种cookie:       <ol>\n<li>持久化cookie(persist cookie), 这种cookie有过期时间, 关掉浏览器还存在。   </li>\n<li>会话cookie(session cookie), 这种cookie没有过期时间，关掉浏览器就消失。  </li>\n<li>要被删除的cookie(deleted cookie). 这种cookie到达请求方就立即失效了。不会再带回服务器端。       </li>\n</ol>\n</li>\n<li>Cookie的domain一定要对。例如发送给note.youdao.com的cookie, domain可以是.note.youdao.com, 可以是.youdao.com.但是最好是.note.youdao.com, 否则有可能给其他的应用带去不必要的cookie, 增大传输量。    </li>\n<li>Cookie的path一定要对，如果在生成cookie时没有指明，那就是那个页面的当前路径。例如note.youdao.com/web/x.html 生成了cookie, 那路径就是/web, 再访问note.youdao.com/时，这个cookie不会被带上。只有/web以及/web的子路径可以得到该cookie.所以一般cookie的path设置为”/“.    </li>\n<li>Cookie是否是HTTP ONLY.这个对JS很重要。其实就是SET-COOKIE: header中加入了httponly的字段。但是HttpOnly的cookie, JS是拿不到的。在一定程度上保证安全。</li>\n<li>永久cookie是跨进程的。当然chrome做到session cookie也跨进程(跨chrome进程)。永久cookie可以跨所有的进程。例如客户端用A帐号访问，web端用B帐号访问。客户端的永久cookie会带到web访问中。     </li>\n<li><p>JAVA的HttpClient或者其他httpClient库发送cookie到server时不会带上HTTPOnly或者domain信息，因为他们只有对的domain才会发送cookie. 但是如果server要做抹除客户端cookie的事情，那就必须在返回消息中发送除cookie value和过期时间不一致，其他都要一致的cookie才行。否则达不到抹除的目的。    </p>\n<p>就先写到这里。</p>\n</li>\n</ul>\n"},{"layout":"post","title":"server 1.6 上线","date":"2012-05-10T16:30:00.000Z","comments":1,"_content":"今天server端上线，自己负责的两个server上线，一个更新了依赖，另外一个FIX了一个稳定性问题。当然变化最大的server很快就会上线。话说本产品的最大竞争对手入住中国，本以为有啥大事发生，后来发现只改了个名字。搞出一个中国公司这事情还要瞒着zzzz\n\n然后今天晚上发现微博里好多活动的人。都有做server的潜质呀。\n\n个人感觉还是不要加什么硬类型，什么硬编码，什么字段。map存储是扩展王道。当然弱类型肯定速度慢，但如果这里速度慢不是瓶颈，那不算什么问题。\n\n这周解决的问题颇多，后来发现是自己遗留下的问题颇多。当初的设计想想都是很奇葩的。现在只能愈加奇葩。下个版本重构一下，遗留的能fix的就fix吧。\n\n答辩终于结束，心里压力顿时小许多。filter呀filter, 整合入common吧～\n\n明早倒休....要睡到中午~~~~\n\n好吧，有空出篇技术贴，现在写blog太水了。\n\n\nServer上线还是没有一次成功。又出了各种小问题。这次主要是由于配置文件线上和milestone不同。以后要diff一下milestone的配置文件和online的配置文件。确认后再上线。\n","source":"_posts/2012-05-11-server-1-dot-6-shang-xian.markdown","raw":"---\nlayout: post\ntitle: \"server 1.6 上线\"\ndate: 2012-05-11 00:30\ncomments: true\ncategories: server \n---\n今天server端上线，自己负责的两个server上线，一个更新了依赖，另外一个FIX了一个稳定性问题。当然变化最大的server很快就会上线。话说本产品的最大竞争对手入住中国，本以为有啥大事发生，后来发现只改了个名字。搞出一个中国公司这事情还要瞒着zzzz\n\n然后今天晚上发现微博里好多活动的人。都有做server的潜质呀。\n\n个人感觉还是不要加什么硬类型，什么硬编码，什么字段。map存储是扩展王道。当然弱类型肯定速度慢，但如果这里速度慢不是瓶颈，那不算什么问题。\n\n这周解决的问题颇多，后来发现是自己遗留下的问题颇多。当初的设计想想都是很奇葩的。现在只能愈加奇葩。下个版本重构一下，遗留的能fix的就fix吧。\n\n答辩终于结束，心里压力顿时小许多。filter呀filter, 整合入common吧～\n\n明早倒休....要睡到中午~~~~\n\n好吧，有空出篇技术贴，现在写blog太水了。\n\n\nServer上线还是没有一次成功。又出了各种小问题。这次主要是由于配置文件线上和milestone不同。以后要diff一下milestone的配置文件和online的配置文件。确认后再上线。\n","slug":"2012-05-11-server-1-dot-6-shang-xian","published":1,"updated":"2017-06-05T02:58:02.000Z","photos":[],"link":"","_id":"cj3jjqt62001205mjj7v9ezuv","content":"<p>今天server端上线，自己负责的两个server上线，一个更新了依赖，另外一个FIX了一个稳定性问题。当然变化最大的server很快就会上线。话说本产品的最大竞争对手入住中国，本以为有啥大事发生，后来发现只改了个名字。搞出一个中国公司这事情还要瞒着zzzz</p>\n<p>然后今天晚上发现微博里好多活动的人。都有做server的潜质呀。</p>\n<p>个人感觉还是不要加什么硬类型，什么硬编码，什么字段。map存储是扩展王道。当然弱类型肯定速度慢，但如果这里速度慢不是瓶颈，那不算什么问题。</p>\n<p>这周解决的问题颇多，后来发现是自己遗留下的问题颇多。当初的设计想想都是很奇葩的。现在只能愈加奇葩。下个版本重构一下，遗留的能fix的就fix吧。</p>\n<p>答辩终于结束，心里压力顿时小许多。filter呀filter, 整合入common吧～</p>\n<p>明早倒休….要睡到中午~~~~</p>\n<p>好吧，有空出篇技术贴，现在写blog太水了。</p>\n<p>Server上线还是没有一次成功。又出了各种小问题。这次主要是由于配置文件线上和milestone不同。以后要diff一下milestone的配置文件和online的配置文件。确认后再上线。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>今天server端上线，自己负责的两个server上线，一个更新了依赖，另外一个FIX了一个稳定性问题。当然变化最大的server很快就会上线。话说本产品的最大竞争对手入住中国，本以为有啥大事发生，后来发现只改了个名字。搞出一个中国公司这事情还要瞒着zzzz</p>\n<p>然后今天晚上发现微博里好多活动的人。都有做server的潜质呀。</p>\n<p>个人感觉还是不要加什么硬类型，什么硬编码，什么字段。map存储是扩展王道。当然弱类型肯定速度慢，但如果这里速度慢不是瓶颈，那不算什么问题。</p>\n<p>这周解决的问题颇多，后来发现是自己遗留下的问题颇多。当初的设计想想都是很奇葩的。现在只能愈加奇葩。下个版本重构一下，遗留的能fix的就fix吧。</p>\n<p>答辩终于结束，心里压力顿时小许多。filter呀filter, 整合入common吧～</p>\n<p>明早倒休….要睡到中午~~~~</p>\n<p>好吧，有空出篇技术贴，现在写blog太水了。</p>\n<p>Server上线还是没有一次成功。又出了各种小问题。这次主要是由于配置文件线上和milestone不同。以后要diff一下milestone的配置文件和online的配置文件。确认后再上线。</p>\n"},{"layout":"post","title":"上传大文件","date":"2012-05-16T15:45:00.000Z","comments":1,"_content":"今天解决了上传大文件问题。这个问题对于简单的web程序基本是不用关注的。不过需要考虑http超时和socket超时等情况。对于nginx代理跳转的web程序，需要在nginx中设置client_max_body_size 和 proxy_read_timeout这两个地方。前一个参数是http body size,例如你要上传10M的文件，你这里需要设置11M或者更大，因为http body中不光有文件的二进制信息。后者是设置proxy server与后端server的连接后等待返回的时间。例如后面使用的是JBoss那就是与JBOSS的连接。\n\n确定问题比较容易。如果一个请求发生，但是后端Server没有打印access log.那就说明请求还没有到后端server，需要检查代理服务器的设置。如果请求写入access log,但是没有被server后端的webapp打印出log,一般说明在后端的server处挂掉，需要检查后端server的相应配置。当然也可能是webapp自己直接做了限制，例如设置如下类的参数   \n\n```\norg.springframework.web.multipart.commons.CommonsMultipartResolver\n```\n\n这里设置后会导致在`doFilter()`之后parseRequest时挂掉。如果看到报类似SizeLimit exception或者 max upload file exception,大概就是这里的问题。\n\n最后要检测app代码中是否也有这些限制。以及检查client端socket timeout等情况。以下代码是针对client socket提前超时设置的。    \n```\nHttpParams params = new BasicHttpParams();\nHttpConnectionHttpParams.setConnectionTimeout(params,60000); // 连接超时1分钟\nHttpConnectionHttpParams.setSoTimeout(params, 60000); // socket 读取写入超时\nDefaultHttpClient client = new DefaultHttpClient(params);\n```\n\n\n","source":"_posts/2012-05-16-shang-chuan-da-wen-jian.markdown","raw":"---\nlayout: post\ntitle: \"上传大文件\"\ndate: 2012-05-16 23:45\ncomments: true\ncategories: upload,上传,nginx,resin,apache,spring,文件 \n---\n今天解决了上传大文件问题。这个问题对于简单的web程序基本是不用关注的。不过需要考虑http超时和socket超时等情况。对于nginx代理跳转的web程序，需要在nginx中设置client_max_body_size 和 proxy_read_timeout这两个地方。前一个参数是http body size,例如你要上传10M的文件，你这里需要设置11M或者更大，因为http body中不光有文件的二进制信息。后者是设置proxy server与后端server的连接后等待返回的时间。例如后面使用的是JBoss那就是与JBOSS的连接。\n\n确定问题比较容易。如果一个请求发生，但是后端Server没有打印access log.那就说明请求还没有到后端server，需要检查代理服务器的设置。如果请求写入access log,但是没有被server后端的webapp打印出log,一般说明在后端的server处挂掉，需要检查后端server的相应配置。当然也可能是webapp自己直接做了限制，例如设置如下类的参数   \n\n```\norg.springframework.web.multipart.commons.CommonsMultipartResolver\n```\n\n这里设置后会导致在`doFilter()`之后parseRequest时挂掉。如果看到报类似SizeLimit exception或者 max upload file exception,大概就是这里的问题。\n\n最后要检测app代码中是否也有这些限制。以及检查client端socket timeout等情况。以下代码是针对client socket提前超时设置的。    \n```\nHttpParams params = new BasicHttpParams();\nHttpConnectionHttpParams.setConnectionTimeout(params,60000); // 连接超时1分钟\nHttpConnectionHttpParams.setSoTimeout(params, 60000); // socket 读取写入超时\nDefaultHttpClient client = new DefaultHttpClient(params);\n```\n\n\n","slug":"2012-05-16-shang-chuan-da-wen-jian","published":1,"updated":"2017-06-05T02:58:02.000Z","photos":[],"link":"","_id":"cj3jjqt65001405mj815kp48b","content":"<p>今天解决了上传大文件问题。这个问题对于简单的web程序基本是不用关注的。不过需要考虑http超时和socket超时等情况。对于nginx代理跳转的web程序，需要在nginx中设置client_max_body_size 和 proxy_read_timeout这两个地方。前一个参数是http body size,例如你要上传10M的文件，你这里需要设置11M或者更大，因为http body中不光有文件的二进制信息。后者是设置proxy server与后端server的连接后等待返回的时间。例如后面使用的是JBoss那就是与JBOSS的连接。</p>\n<p>确定问题比较容易。如果一个请求发生，但是后端Server没有打印access log.那就说明请求还没有到后端server，需要检查代理服务器的设置。如果请求写入access log,但是没有被server后端的webapp打印出log,一般说明在后端的server处挂掉，需要检查后端server的相应配置。当然也可能是webapp自己直接做了限制，例如设置如下类的参数   </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">org.springframework.web.multipart.commons.CommonsMultipartResolver</div></pre></td></tr></table></figure>\n<p>这里设置后会导致在<code>doFilter()</code>之后parseRequest时挂掉。如果看到报类似SizeLimit exception或者 max upload file exception,大概就是这里的问题。</p>\n<p>最后要检测app代码中是否也有这些限制。以及检查client端socket timeout等情况。以下代码是针对client socket提前超时设置的。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">HttpParams params = new BasicHttpParams();</div><div class=\"line\">HttpConnectionHttpParams.setConnectionTimeout(params,60000); // 连接超时1分钟</div><div class=\"line\">HttpConnectionHttpParams.setSoTimeout(params, 60000); // socket 读取写入超时</div><div class=\"line\">DefaultHttpClient client = new DefaultHttpClient(params);</div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>今天解决了上传大文件问题。这个问题对于简单的web程序基本是不用关注的。不过需要考虑http超时和socket超时等情况。对于nginx代理跳转的web程序，需要在nginx中设置client_max_body_size 和 proxy_read_timeout这两个地方。前一个参数是http body size,例如你要上传10M的文件，你这里需要设置11M或者更大，因为http body中不光有文件的二进制信息。后者是设置proxy server与后端server的连接后等待返回的时间。例如后面使用的是JBoss那就是与JBOSS的连接。</p>\n<p>确定问题比较容易。如果一个请求发生，但是后端Server没有打印access log.那就说明请求还没有到后端server，需要检查代理服务器的设置。如果请求写入access log,但是没有被server后端的webapp打印出log,一般说明在后端的server处挂掉，需要检查后端server的相应配置。当然也可能是webapp自己直接做了限制，例如设置如下类的参数   </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">org.springframework.web.multipart.commons.CommonsMultipartResolver</div></pre></td></tr></table></figure>\n<p>这里设置后会导致在<code>doFilter()</code>之后parseRequest时挂掉。如果看到报类似SizeLimit exception或者 max upload file exception,大概就是这里的问题。</p>\n<p>最后要检测app代码中是否也有这些限制。以及检查client端socket timeout等情况。以下代码是针对client socket提前超时设置的。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">HttpParams params = new BasicHttpParams();</div><div class=\"line\">HttpConnectionHttpParams.setConnectionTimeout(params,60000); // 连接超时1分钟</div><div class=\"line\">HttpConnectionHttpParams.setSoTimeout(params, 60000); // socket 读取写入超时</div><div class=\"line\">DefaultHttpClient client = new DefaultHttpClient(params);</div></pre></td></tr></table></figure></p>\n"},{"layout":"post","title":"java 正则式","date":"2012-07-08T14:52:00.000Z","comments":1,"_content":"摸索多次终于写出正确的java的关于email匹配的正则式：\n\n```\nimport java.util.regex.Pattern;\nimport java.util.regex.Matcher;\nPattern emailPattern = Pattern.compile(\"^[\\\\w\\\\!#\\\\$%\\'\\\\*\\\\+/=\\\\?{\\\\|}\\\\~\\\\^\\\\.\\\\-_]+@[\\\\w\\\\.\\\\-]+$\");\nMatcher m = emailPattern.matcher(\"xx@xxx.com\");\nif(m.matches()){\n  // if match\n}\n\n```\n\n注意其中的\"-\"，\"+\"等,这个在正则式中有特殊含义，如果\"-\"放在[]的中间，则表示从哪个字符到哪个字符,例如:[A-Z]。如果仅仅想表示\"-\"可能会出现，那么还要进行转移，所以就有\"\\\\-\"这样的形式。 上面正则式的意思是：以字母或者数字\\w或者以!#$'*+/=?{|}~^.-_开头的1...n个字符，1个@字符，以字母或者数字或者.-结尾的字符串.\n","source":"_posts/2012-07-08-java-zheng-ze-shi.markdown","raw":"---\nlayout: post\ntitle: \"java 正则式\"\ndate: 2012-07-08 22:52\ncomments: true\ncategories: java, 正则式, 正则表达式 \n---\n摸索多次终于写出正确的java的关于email匹配的正则式：\n\n```\nimport java.util.regex.Pattern;\nimport java.util.regex.Matcher;\nPattern emailPattern = Pattern.compile(\"^[\\\\w\\\\!#\\\\$%\\'\\\\*\\\\+/=\\\\?{\\\\|}\\\\~\\\\^\\\\.\\\\-_]+@[\\\\w\\\\.\\\\-]+$\");\nMatcher m = emailPattern.matcher(\"xx@xxx.com\");\nif(m.matches()){\n  // if match\n}\n\n```\n\n注意其中的\"-\"，\"+\"等,这个在正则式中有特殊含义，如果\"-\"放在[]的中间，则表示从哪个字符到哪个字符,例如:[A-Z]。如果仅仅想表示\"-\"可能会出现，那么还要进行转移，所以就有\"\\\\-\"这样的形式。 上面正则式的意思是：以字母或者数字\\w或者以!#$'*+/=?{|}~^.-_开头的1...n个字符，1个@字符，以字母或者数字或者.-结尾的字符串.\n","slug":"2012-07-08-java-zheng-ze-shi","published":1,"updated":"2017-06-05T02:58:02.000Z","photos":[],"link":"","_id":"cj3jjqt68001605mj37a6sgs8","content":"<p>摸索多次终于写出正确的java的关于email匹配的正则式：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">import java.util.regex.Pattern;</div><div class=\"line\">import java.util.regex.Matcher;</div><div class=\"line\">Pattern emailPattern = Pattern.compile(&quot;^[\\\\w\\\\!#\\\\$%\\&apos;\\\\*\\\\+/=\\\\?&#123;\\\\|&#125;\\\\~\\\\^\\\\.\\\\-_]+@[\\\\w\\\\.\\\\-]+$&quot;);</div><div class=\"line\">Matcher m = emailPattern.matcher(&quot;xx@xxx.com&quot;);</div><div class=\"line\">if(m.matches())&#123;</div><div class=\"line\">  // if match</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>注意其中的”-“，”+”等,这个在正则式中有特殊含义，如果”-“放在[]的中间，则表示从哪个字符到哪个字符,例如:[A-Z]。如果仅仅想表示”-“可能会出现，那么还要进行转移，所以就有”\\-“这样的形式。 上面正则式的意思是：以字母或者数字\\w或者以!#$’*+/=?{|}~^.-_开头的1…n个字符，1个@字符，以字母或者数字或者.-结尾的字符串.</p>\n","site":{"data":{}},"excerpt":"","more":"<p>摸索多次终于写出正确的java的关于email匹配的正则式：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">import java.util.regex.Pattern;</div><div class=\"line\">import java.util.regex.Matcher;</div><div class=\"line\">Pattern emailPattern = Pattern.compile(&quot;^[\\\\w\\\\!#\\\\$%\\&apos;\\\\*\\\\+/=\\\\?&#123;\\\\|&#125;\\\\~\\\\^\\\\.\\\\-_]+@[\\\\w\\\\.\\\\-]+$&quot;);</div><div class=\"line\">Matcher m = emailPattern.matcher(&quot;xx@xxx.com&quot;);</div><div class=\"line\">if(m.matches())&#123;</div><div class=\"line\">  // if match</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>注意其中的”-“，”+”等,这个在正则式中有特殊含义，如果”-“放在[]的中间，则表示从哪个字符到哪个字符,例如:[A-Z]。如果仅仅想表示”-“可能会出现，那么还要进行转移，所以就有”\\-“这样的形式。 上面正则式的意思是：以字母或者数字\\w或者以!#$’*+/=?{|}~^.-_开头的1…n个字符，1个@字符，以字母或者数字或者.-结尾的字符串.</p>\n"},{"layout":"post","title":"JAVA Mail API problem","date":"2012-07-08T15:07:00.000Z","comments":1,"sumary":"java mail api base64编码不能执行。图片看不到，以及html被当作正文","_content":"\n * text/html mime 没有base64 编码问题\n\njava mail api 使用MimeBodyPart.setDataHandler()不能对text/html进行正常的base64编码而是使用quote-printable编码。 错误的样本：\n\n```\n// add headers 不能在最前面，一定要放在后面，否则可能不能正确编码\nmimeBody.addHeader(\"Content-Type\", \"text/html; charset=utf-8\");\nmimeBody.addHeader(\"Content-Transfer-Encoding\", \"base64\");\nDataHandler textDataHandler = new DataHandler(new ByteArrayDataSource(\n                message.getBytes(\"utf-8\"), \"text/html; charset=utf-8\"));\nmimeBody.setDataHandler(textDataHandler);\n```\n\n正确的样本：\n\n```\nDataHandler textDataHandler = new DataHandler(new ByteArrayDataSource(\n                message.getBytes(\"utf-8\"), \"text/html; charset=utf-8\"));\nmimeBody.setDataHandler(textDataHandler);\n// add headers 一定要放在后面，否则可能不能正确编码\nmimeBody.addHeader(\"Content-Type\", \"text/html; charset=utf-8\");\nmimeBody.addHeader(\"Content-Transfer-Encoding\", \"base64\");\n```\n\n * 发送到新浪等邮箱，图片看不到\n\nrfc2045-2047中并没有规定Content-ID的形式必须是: Content-ID:<cid>的形式。但是新浪的邮箱服务解析得比较严格。所以在JavaMail Api 中使用MimeBodyPart 对其进行setContentID时必须加上\"<>\"。否则图片会看不到。例如:   \n\n```\nMimeBodyPart tmpBodyPart = new MimeBodyPart();\ntmpBodyPart.setContentID(\"<\"+attachment.getFileid()+\">\");\n```\n\n * html格式正文被163等邮箱当作附件，但是某些邮箱解析正常\n\n这是因为html格式的正文并不是MultiPart中的MimeBodyPart，而MultiPart的第一个MimeBodyPart可能是附件。在添加html正文时可以这样写：\n\n```\n//将html正文放入到mimBodyPart中\nString html=\"<html>xxxx</html>\";\nMimeBodyPart mimeBody = new MimeBodyPart();\nmimeBody.setText(html, \"utf-8\");     \nmimeBody.addHeader(\"Content-Type\", \"text/html; charset=utf-8\");\nmimeBody.addHeader(\"Content-Transfer-Encoding, \"base64\");\n\n//创建mixed 和 related两种mime subType\nMultipart mPartRelated = new MimeMultipart(\"related\");\nMultipart mPartMixed = new MimeMultipart(\"mixed\");\nmPartRelated.addBodyPart(mimeBody);\nMimeBodyPart mimeBodyPart = new MimeBodyPart();\nmimeBodyPart.setContent(mPartRelated);\n// 设置为第一个 bodyPart,这样就不会再变为附件。\nmPartMixed.addBodyPart(mimeBodyPart, 0);\n\n// mPartMix就是最后要set到mimeMessage中的内容。\n```\n\n * inline图片当作附件，或者inline图片在某些邮箱中显示了两次\n\n有些是邮箱会将这个作为feature,但是有些不是。这时要使用这些邮箱来发一封类似的邮件来看到底是那个邮箱的独特功能还是你的bug. 如果是你的错误，那应该是你将inline图片和html直接包到mime/mixed中，其实应该放入到mime/related中的。 所以把这个错误改正，应该就ok.\n\n * 邮件中的文本，线上打开乱码\n\n这是因为发送邮件的编码问题。文本的charset不要编码为utf-8，因为这样可能有非utf-8的文本放入到邮件中发送。所以要写二进制编码 Content-Type: application/octet-stream 然后使用base64编码。 这样大部分编码就解决了。但是qq等其他客户端会有问题，这是他们自己的问题.\n\n\n\n","source":"_posts/2012-07-08-java-mail-api-problem.markdown","raw":"---\nlayout: post\ntitle: \"JAVA Mail API problem\"\ndate: 2012-07-08 23:07\ncomments: true\nsumary: java mail api base64编码不能执行。图片看不到，以及html被当作正文\ncategories: java, mail, email, API, problem, base64, mime, picture \n---\n\n * text/html mime 没有base64 编码问题\n\njava mail api 使用MimeBodyPart.setDataHandler()不能对text/html进行正常的base64编码而是使用quote-printable编码。 错误的样本：\n\n```\n// add headers 不能在最前面，一定要放在后面，否则可能不能正确编码\nmimeBody.addHeader(\"Content-Type\", \"text/html; charset=utf-8\");\nmimeBody.addHeader(\"Content-Transfer-Encoding\", \"base64\");\nDataHandler textDataHandler = new DataHandler(new ByteArrayDataSource(\n                message.getBytes(\"utf-8\"), \"text/html; charset=utf-8\"));\nmimeBody.setDataHandler(textDataHandler);\n```\n\n正确的样本：\n\n```\nDataHandler textDataHandler = new DataHandler(new ByteArrayDataSource(\n                message.getBytes(\"utf-8\"), \"text/html; charset=utf-8\"));\nmimeBody.setDataHandler(textDataHandler);\n// add headers 一定要放在后面，否则可能不能正确编码\nmimeBody.addHeader(\"Content-Type\", \"text/html; charset=utf-8\");\nmimeBody.addHeader(\"Content-Transfer-Encoding\", \"base64\");\n```\n\n * 发送到新浪等邮箱，图片看不到\n\nrfc2045-2047中并没有规定Content-ID的形式必须是: Content-ID:<cid>的形式。但是新浪的邮箱服务解析得比较严格。所以在JavaMail Api 中使用MimeBodyPart 对其进行setContentID时必须加上\"<>\"。否则图片会看不到。例如:   \n\n```\nMimeBodyPart tmpBodyPart = new MimeBodyPart();\ntmpBodyPart.setContentID(\"<\"+attachment.getFileid()+\">\");\n```\n\n * html格式正文被163等邮箱当作附件，但是某些邮箱解析正常\n\n这是因为html格式的正文并不是MultiPart中的MimeBodyPart，而MultiPart的第一个MimeBodyPart可能是附件。在添加html正文时可以这样写：\n\n```\n//将html正文放入到mimBodyPart中\nString html=\"<html>xxxx</html>\";\nMimeBodyPart mimeBody = new MimeBodyPart();\nmimeBody.setText(html, \"utf-8\");     \nmimeBody.addHeader(\"Content-Type\", \"text/html; charset=utf-8\");\nmimeBody.addHeader(\"Content-Transfer-Encoding, \"base64\");\n\n//创建mixed 和 related两种mime subType\nMultipart mPartRelated = new MimeMultipart(\"related\");\nMultipart mPartMixed = new MimeMultipart(\"mixed\");\nmPartRelated.addBodyPart(mimeBody);\nMimeBodyPart mimeBodyPart = new MimeBodyPart();\nmimeBodyPart.setContent(mPartRelated);\n// 设置为第一个 bodyPart,这样就不会再变为附件。\nmPartMixed.addBodyPart(mimeBodyPart, 0);\n\n// mPartMix就是最后要set到mimeMessage中的内容。\n```\n\n * inline图片当作附件，或者inline图片在某些邮箱中显示了两次\n\n有些是邮箱会将这个作为feature,但是有些不是。这时要使用这些邮箱来发一封类似的邮件来看到底是那个邮箱的独特功能还是你的bug. 如果是你的错误，那应该是你将inline图片和html直接包到mime/mixed中，其实应该放入到mime/related中的。 所以把这个错误改正，应该就ok.\n\n * 邮件中的文本，线上打开乱码\n\n这是因为发送邮件的编码问题。文本的charset不要编码为utf-8，因为这样可能有非utf-8的文本放入到邮件中发送。所以要写二进制编码 Content-Type: application/octet-stream 然后使用base64编码。 这样大部分编码就解决了。但是qq等其他客户端会有问题，这是他们自己的问题.\n\n\n\n","slug":"2012-07-08-java-mail-api-problem","published":1,"updated":"2017-06-05T02:58:02.000Z","photos":[],"link":"","_id":"cj3jjqt6a001805mjs5qd07na","content":"<ul>\n<li>text/html mime 没有base64 编码问题</li>\n</ul>\n<p>java mail api 使用MimeBodyPart.setDataHandler()不能对text/html进行正常的base64编码而是使用quote-printable编码。 错误的样本：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">// add headers 不能在最前面，一定要放在后面，否则可能不能正确编码</div><div class=\"line\">mimeBody.addHeader(&quot;Content-Type&quot;, &quot;text/html; charset=utf-8&quot;);</div><div class=\"line\">mimeBody.addHeader(&quot;Content-Transfer-Encoding&quot;, &quot;base64&quot;);</div><div class=\"line\">DataHandler textDataHandler = new DataHandler(new ByteArrayDataSource(</div><div class=\"line\">                message.getBytes(&quot;utf-8&quot;), &quot;text/html; charset=utf-8&quot;));</div><div class=\"line\">mimeBody.setDataHandler(textDataHandler);</div></pre></td></tr></table></figure>\n<p>正确的样本：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">DataHandler textDataHandler = new DataHandler(new ByteArrayDataSource(</div><div class=\"line\">                message.getBytes(&quot;utf-8&quot;), &quot;text/html; charset=utf-8&quot;));</div><div class=\"line\">mimeBody.setDataHandler(textDataHandler);</div><div class=\"line\">// add headers 一定要放在后面，否则可能不能正确编码</div><div class=\"line\">mimeBody.addHeader(&quot;Content-Type&quot;, &quot;text/html; charset=utf-8&quot;);</div><div class=\"line\">mimeBody.addHeader(&quot;Content-Transfer-Encoding&quot;, &quot;base64&quot;);</div></pre></td></tr></table></figure>\n<ul>\n<li>发送到新浪等邮箱，图片看不到</li>\n</ul>\n<p>rfc2045-2047中并没有规定Content-ID的形式必须是: Content-ID:<cid>的形式。但是新浪的邮箱服务解析得比较严格。所以在JavaMail Api 中使用MimeBodyPart 对其进行setContentID时必须加上”&lt;&gt;”。否则图片会看不到。例如:   </cid></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">MimeBodyPart tmpBodyPart = new MimeBodyPart();</div><div class=\"line\">tmpBodyPart.setContentID(&quot;&lt;&quot;+attachment.getFileid()+&quot;&gt;&quot;);</div></pre></td></tr></table></figure>\n<ul>\n<li>html格式正文被163等邮箱当作附件，但是某些邮箱解析正常</li>\n</ul>\n<p>这是因为html格式的正文并不是MultiPart中的MimeBodyPart，而MultiPart的第一个MimeBodyPart可能是附件。在添加html正文时可以这样写：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">//将html正文放入到mimBodyPart中</div><div class=\"line\">String html=&quot;&lt;html&gt;xxxx&lt;/html&gt;&quot;;</div><div class=\"line\">MimeBodyPart mimeBody = new MimeBodyPart();</div><div class=\"line\">mimeBody.setText(html, &quot;utf-8&quot;);     </div><div class=\"line\">mimeBody.addHeader(&quot;Content-Type&quot;, &quot;text/html; charset=utf-8&quot;);</div><div class=\"line\">mimeBody.addHeader(&quot;Content-Transfer-Encoding, &quot;base64&quot;);</div><div class=\"line\"></div><div class=\"line\">//创建mixed 和 related两种mime subType</div><div class=\"line\">Multipart mPartRelated = new MimeMultipart(&quot;related&quot;);</div><div class=\"line\">Multipart mPartMixed = new MimeMultipart(&quot;mixed&quot;);</div><div class=\"line\">mPartRelated.addBodyPart(mimeBody);</div><div class=\"line\">MimeBodyPart mimeBodyPart = new MimeBodyPart();</div><div class=\"line\">mimeBodyPart.setContent(mPartRelated);</div><div class=\"line\">// 设置为第一个 bodyPart,这样就不会再变为附件。</div><div class=\"line\">mPartMixed.addBodyPart(mimeBodyPart, 0);</div><div class=\"line\"></div><div class=\"line\">// mPartMix就是最后要set到mimeMessage中的内容。</div></pre></td></tr></table></figure>\n<ul>\n<li>inline图片当作附件，或者inline图片在某些邮箱中显示了两次</li>\n</ul>\n<p>有些是邮箱会将这个作为feature,但是有些不是。这时要使用这些邮箱来发一封类似的邮件来看到底是那个邮箱的独特功能还是你的bug. 如果是你的错误，那应该是你将inline图片和html直接包到mime/mixed中，其实应该放入到mime/related中的。 所以把这个错误改正，应该就ok.</p>\n<ul>\n<li>邮件中的文本，线上打开乱码</li>\n</ul>\n<p>这是因为发送邮件的编码问题。文本的charset不要编码为utf-8，因为这样可能有非utf-8的文本放入到邮件中发送。所以要写二进制编码 Content-Type: application/octet-stream 然后使用base64编码。 这样大部分编码就解决了。但是qq等其他客户端会有问题，这是他们自己的问题.</p>\n","site":{"data":{}},"excerpt":"","more":"<ul>\n<li>text/html mime 没有base64 编码问题</li>\n</ul>\n<p>java mail api 使用MimeBodyPart.setDataHandler()不能对text/html进行正常的base64编码而是使用quote-printable编码。 错误的样本：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">// add headers 不能在最前面，一定要放在后面，否则可能不能正确编码</div><div class=\"line\">mimeBody.addHeader(&quot;Content-Type&quot;, &quot;text/html; charset=utf-8&quot;);</div><div class=\"line\">mimeBody.addHeader(&quot;Content-Transfer-Encoding&quot;, &quot;base64&quot;);</div><div class=\"line\">DataHandler textDataHandler = new DataHandler(new ByteArrayDataSource(</div><div class=\"line\">                message.getBytes(&quot;utf-8&quot;), &quot;text/html; charset=utf-8&quot;));</div><div class=\"line\">mimeBody.setDataHandler(textDataHandler);</div></pre></td></tr></table></figure>\n<p>正确的样本：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">DataHandler textDataHandler = new DataHandler(new ByteArrayDataSource(</div><div class=\"line\">                message.getBytes(&quot;utf-8&quot;), &quot;text/html; charset=utf-8&quot;));</div><div class=\"line\">mimeBody.setDataHandler(textDataHandler);</div><div class=\"line\">// add headers 一定要放在后面，否则可能不能正确编码</div><div class=\"line\">mimeBody.addHeader(&quot;Content-Type&quot;, &quot;text/html; charset=utf-8&quot;);</div><div class=\"line\">mimeBody.addHeader(&quot;Content-Transfer-Encoding&quot;, &quot;base64&quot;);</div></pre></td></tr></table></figure>\n<ul>\n<li>发送到新浪等邮箱，图片看不到</li>\n</ul>\n<p>rfc2045-2047中并没有规定Content-ID的形式必须是: Content-ID:<cid>的形式。但是新浪的邮箱服务解析得比较严格。所以在JavaMail Api 中使用MimeBodyPart 对其进行setContentID时必须加上”&lt;&gt;”。否则图片会看不到。例如:   </cid></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">MimeBodyPart tmpBodyPart = new MimeBodyPart();</div><div class=\"line\">tmpBodyPart.setContentID(&quot;&lt;&quot;+attachment.getFileid()+&quot;&gt;&quot;);</div></pre></td></tr></table></figure>\n<ul>\n<li>html格式正文被163等邮箱当作附件，但是某些邮箱解析正常</li>\n</ul>\n<p>这是因为html格式的正文并不是MultiPart中的MimeBodyPart，而MultiPart的第一个MimeBodyPart可能是附件。在添加html正文时可以这样写：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">//将html正文放入到mimBodyPart中</div><div class=\"line\">String html=&quot;&lt;html&gt;xxxx&lt;/html&gt;&quot;;</div><div class=\"line\">MimeBodyPart mimeBody = new MimeBodyPart();</div><div class=\"line\">mimeBody.setText(html, &quot;utf-8&quot;);     </div><div class=\"line\">mimeBody.addHeader(&quot;Content-Type&quot;, &quot;text/html; charset=utf-8&quot;);</div><div class=\"line\">mimeBody.addHeader(&quot;Content-Transfer-Encoding, &quot;base64&quot;);</div><div class=\"line\"></div><div class=\"line\">//创建mixed 和 related两种mime subType</div><div class=\"line\">Multipart mPartRelated = new MimeMultipart(&quot;related&quot;);</div><div class=\"line\">Multipart mPartMixed = new MimeMultipart(&quot;mixed&quot;);</div><div class=\"line\">mPartRelated.addBodyPart(mimeBody);</div><div class=\"line\">MimeBodyPart mimeBodyPart = new MimeBodyPart();</div><div class=\"line\">mimeBodyPart.setContent(mPartRelated);</div><div class=\"line\">// 设置为第一个 bodyPart,这样就不会再变为附件。</div><div class=\"line\">mPartMixed.addBodyPart(mimeBodyPart, 0);</div><div class=\"line\"></div><div class=\"line\">// mPartMix就是最后要set到mimeMessage中的内容。</div></pre></td></tr></table></figure>\n<ul>\n<li>inline图片当作附件，或者inline图片在某些邮箱中显示了两次</li>\n</ul>\n<p>有些是邮箱会将这个作为feature,但是有些不是。这时要使用这些邮箱来发一封类似的邮件来看到底是那个邮箱的独特功能还是你的bug. 如果是你的错误，那应该是你将inline图片和html直接包到mime/mixed中，其实应该放入到mime/related中的。 所以把这个错误改正，应该就ok.</p>\n<ul>\n<li>邮件中的文本，线上打开乱码</li>\n</ul>\n<p>这是因为发送邮件的编码问题。文本的charset不要编码为utf-8，因为这样可能有非utf-8的文本放入到邮件中发送。所以要写二进制编码 Content-Type: application/octet-stream 然后使用base64编码。 这样大部分编码就解决了。但是qq等其他客户端会有问题，这是他们自己的问题.</p>\n"},{"layout":"post","title":"2013.01.07今日见闻，奖金，年终奖，感谢贵公司","date":"2013-01-06T14:16:00.000Z","comments":1,"_content":"today, 今天发了双薪，本来那一个月的薪水是应该在奖金中一起发的。按照过去的发钱方法交税是比较少的，还能给自己留点余额。今年可好了，一半的工资都被做为税收了...感谢国家，感谢党，感谢贵公司。\n\n\n据说年终奖4万元以上的话，这样发双薪划算。想来贵公司这么的人性化。老婆说没发这么多年终奖的话，就不让我回家...所以我准备从现在开始筹钱。\n\n\n今天贵公司发的二手笔记本电源灯一直闪红色，插电源充电也没有用。解决方法不是换电源、不是换主板、不是换另外一个二手电脑，而是用贴纸把灯贴住。感谢贵公司，我又学会了节省。\n\n\n今天打开了久违的虚拟机，写了blog. 很长时间没有用，都不知道怎么写octopress的blog了。\n\n\n老婆大人边在旁边跳舞，边在旁边讥讽我拿了双薪...我问她为什么跳舞不动手，她说还没有学会手的动作...\n\n\n今天重构了一下RSA,AES模块，发现和c++通信的RSA模块还是不行，这该死的RSA算法,写的非常的通用，就是多个语言之间通常都不用。嗯，\"通用\"新解。\n\n\n另外今天发布blog一直不成功，后来发现需要先验证git.com的邮箱...竟然有这样的事情.\n","source":"_posts/2013-01-06-2013-dot-01-dot-07jin-ri-jian-wen.markdown","raw":"---\nlayout: post\ntitle: \"2013.01.07今日见闻，奖金，年终奖，感谢贵公司\"\ndate: 2013-01-06 22:16\ncomments: true\ncategories: today,见闻,story\n---\ntoday, 今天发了双薪，本来那一个月的薪水是应该在奖金中一起发的。按照过去的发钱方法交税是比较少的，还能给自己留点余额。今年可好了，一半的工资都被做为税收了...感谢国家，感谢党，感谢贵公司。\n\n\n据说年终奖4万元以上的话，这样发双薪划算。想来贵公司这么的人性化。老婆说没发这么多年终奖的话，就不让我回家...所以我准备从现在开始筹钱。\n\n\n今天贵公司发的二手笔记本电源灯一直闪红色，插电源充电也没有用。解决方法不是换电源、不是换主板、不是换另外一个二手电脑，而是用贴纸把灯贴住。感谢贵公司，我又学会了节省。\n\n\n今天打开了久违的虚拟机，写了blog. 很长时间没有用，都不知道怎么写octopress的blog了。\n\n\n老婆大人边在旁边跳舞，边在旁边讥讽我拿了双薪...我问她为什么跳舞不动手，她说还没有学会手的动作...\n\n\n今天重构了一下RSA,AES模块，发现和c++通信的RSA模块还是不行，这该死的RSA算法,写的非常的通用，就是多个语言之间通常都不用。嗯，\"通用\"新解。\n\n\n另外今天发布blog一直不成功，后来发现需要先验证git.com的邮箱...竟然有这样的事情.\n","slug":"2013-01-06-2013-dot-01-dot-07jin-ri-jian-wen","published":1,"updated":"2017-06-05T02:58:20.000Z","photos":[],"link":"","_id":"cj3jjrdtm00000emjdig0hkkg","content":"<p>today, 今天发了双薪，本来那一个月的薪水是应该在奖金中一起发的。按照过去的发钱方法交税是比较少的，还能给自己留点余额。今年可好了，一半的工资都被做为税收了…感谢国家，感谢党，感谢贵公司。</p>\n<p>据说年终奖4万元以上的话，这样发双薪划算。想来贵公司这么的人性化。老婆说没发这么多年终奖的话，就不让我回家…所以我准备从现在开始筹钱。</p>\n<p>今天贵公司发的二手笔记本电源灯一直闪红色，插电源充电也没有用。解决方法不是换电源、不是换主板、不是换另外一个二手电脑，而是用贴纸把灯贴住。感谢贵公司，我又学会了节省。</p>\n<p>今天打开了久违的虚拟机，写了blog. 很长时间没有用，都不知道怎么写octopress的blog了。</p>\n<p>老婆大人边在旁边跳舞，边在旁边讥讽我拿了双薪…我问她为什么跳舞不动手，她说还没有学会手的动作…</p>\n<p>今天重构了一下RSA,AES模块，发现和c++通信的RSA模块还是不行，这该死的RSA算法,写的非常的通用，就是多个语言之间通常都不用。嗯，”通用”新解。</p>\n<p>另外今天发布blog一直不成功，后来发现需要先验证git.com的邮箱…竟然有这样的事情.</p>\n","site":{"data":{}},"excerpt":"","more":"<p>today, 今天发了双薪，本来那一个月的薪水是应该在奖金中一起发的。按照过去的发钱方法交税是比较少的，还能给自己留点余额。今年可好了，一半的工资都被做为税收了…感谢国家，感谢党，感谢贵公司。</p>\n<p>据说年终奖4万元以上的话，这样发双薪划算。想来贵公司这么的人性化。老婆说没发这么多年终奖的话，就不让我回家…所以我准备从现在开始筹钱。</p>\n<p>今天贵公司发的二手笔记本电源灯一直闪红色，插电源充电也没有用。解决方法不是换电源、不是换主板、不是换另外一个二手电脑，而是用贴纸把灯贴住。感谢贵公司，我又学会了节省。</p>\n<p>今天打开了久违的虚拟机，写了blog. 很长时间没有用，都不知道怎么写octopress的blog了。</p>\n<p>老婆大人边在旁边跳舞，边在旁边讥讽我拿了双薪…我问她为什么跳舞不动手，她说还没有学会手的动作…</p>\n<p>今天重构了一下RSA,AES模块，发现和c++通信的RSA模块还是不行，这该死的RSA算法,写的非常的通用，就是多个语言之间通常都不用。嗯，”通用”新解。</p>\n<p>另外今天发布blog一直不成功，后来发现需要先验证git.com的邮箱…竟然有这样的事情.</p>\n"},{"layout":"post","title":"long weibo长微博","date":"2013-01-08T13:15:00.000Z","comments":1,"_content":"今天有人提议在贵公司举行的“黑客马拉松”中搞一个项目\"长微博生成工具\"。开始假设都挺好的，说只需要一个文本，就能重用以前的服务，然后做一个这样工具出来。开始大家真心觉得不错。好做又能功能复用。就在大家热情高涨的时候，我说：“这样的工具已经有了。”\n\n长微博源自于一般微博只有140字，如果希望字数更多，那么就要将这样的文字转换为图片，然后以图片的形式发布出去。这样看到这条微博的人就能看到更多的信息。其实将文字转图片不难，但是将html转图片，就需要考虑展示了。java的能做，c++的也能做到，大家可以调研一下。长微博的站点现在有：\n\n1. [长微博，站点名就叫这个](www.changweibo.com)  这个网站支持富文本编辑，并且支持图片和表格插入。该网站开始的编辑区就是和微博最终图片展示的大小相同，所以不必担心超宽度。\n\n2. [太长了](http://www.taichangle.com/) 这个网站比前一个简陋了很多，只是支持简单的图片插入(头/尾)， 不过支持自己的logo和版权。相比第一个这点好很多。但是实在是太简陋了。\n\n3. [长微博@工具](http://www.cwbgj.com/) 这个网站比前一个还简陋.就不多说了。大概是这两个网站都没有时间做富文本编辑器。\n\n4. [新浪原生的长微博工具](http://control.blog.sina.com.cn/admin/article/changWeiBo.php)  这个是支持富文本了，但是这个东西是和新浪博客合在一起使用的。如果不是新浪微博上自己的文字，是不能被发布的。基本无用。\n\n5. [有道云笔记长微博工具](http://note.youdao.com) 使用方式在PC端中分享微博就可以了。老王卖瓜，我这里就不夸了。说说现在的缺点，对于某些富文本的内容展示的效果还不是太理想。另外字体还是不太好看。正在持续改进中...欢迎使用\n\n话说贵公司发的明信片太多的广告。有人问祝福语应该写在哪里？上面全都是贵公司各个产品做得广告。我说：\"那你就写4个字：欢迎使用。\"\n\n老婆终于学会她年会的舞蹈了，太有喜感了。\n","source":"_posts/2013-01-08-long-weibochang-wei-bo.markdown","raw":"---\nlayout: post\ntitle: \"long weibo长微博\"\ndate: 2013-01-08 21:15\ncomments: true\ncategories: weibo,long,长微博,有道云笔记\n---\n今天有人提议在贵公司举行的“黑客马拉松”中搞一个项目\"长微博生成工具\"。开始假设都挺好的，说只需要一个文本，就能重用以前的服务，然后做一个这样工具出来。开始大家真心觉得不错。好做又能功能复用。就在大家热情高涨的时候，我说：“这样的工具已经有了。”\n\n长微博源自于一般微博只有140字，如果希望字数更多，那么就要将这样的文字转换为图片，然后以图片的形式发布出去。这样看到这条微博的人就能看到更多的信息。其实将文字转图片不难，但是将html转图片，就需要考虑展示了。java的能做，c++的也能做到，大家可以调研一下。长微博的站点现在有：\n\n1. [长微博，站点名就叫这个](www.changweibo.com)  这个网站支持富文本编辑，并且支持图片和表格插入。该网站开始的编辑区就是和微博最终图片展示的大小相同，所以不必担心超宽度。\n\n2. [太长了](http://www.taichangle.com/) 这个网站比前一个简陋了很多，只是支持简单的图片插入(头/尾)， 不过支持自己的logo和版权。相比第一个这点好很多。但是实在是太简陋了。\n\n3. [长微博@工具](http://www.cwbgj.com/) 这个网站比前一个还简陋.就不多说了。大概是这两个网站都没有时间做富文本编辑器。\n\n4. [新浪原生的长微博工具](http://control.blog.sina.com.cn/admin/article/changWeiBo.php)  这个是支持富文本了，但是这个东西是和新浪博客合在一起使用的。如果不是新浪微博上自己的文字，是不能被发布的。基本无用。\n\n5. [有道云笔记长微博工具](http://note.youdao.com) 使用方式在PC端中分享微博就可以了。老王卖瓜，我这里就不夸了。说说现在的缺点，对于某些富文本的内容展示的效果还不是太理想。另外字体还是不太好看。正在持续改进中...欢迎使用\n\n话说贵公司发的明信片太多的广告。有人问祝福语应该写在哪里？上面全都是贵公司各个产品做得广告。我说：\"那你就写4个字：欢迎使用。\"\n\n老婆终于学会她年会的舞蹈了，太有喜感了。\n","slug":"2013-01-08-long-weibochang-wei-bo","published":1,"updated":"2017-06-05T02:58:20.000Z","photos":[],"link":"","_id":"cj3jjrdtv00010emj8k24m5yc","content":"<p>今天有人提议在贵公司举行的“黑客马拉松”中搞一个项目”长微博生成工具”。开始假设都挺好的，说只需要一个文本，就能重用以前的服务，然后做一个这样工具出来。开始大家真心觉得不错。好做又能功能复用。就在大家热情高涨的时候，我说：“这样的工具已经有了。”</p>\n<p>长微博源自于一般微博只有140字，如果希望字数更多，那么就要将这样的文字转换为图片，然后以图片的形式发布出去。这样看到这条微博的人就能看到更多的信息。其实将文字转图片不难，但是将html转图片，就需要考虑展示了。java的能做，c++的也能做到，大家可以调研一下。长微博的站点现在有：</p>\n<ol>\n<li><p><a href=\"www.changweibo.com\">长微博，站点名就叫这个</a>  这个网站支持富文本编辑，并且支持图片和表格插入。该网站开始的编辑区就是和微博最终图片展示的大小相同，所以不必担心超宽度。</p>\n</li>\n<li><p><a href=\"http://www.taichangle.com/\" target=\"_blank\" rel=\"external\">太长了</a> 这个网站比前一个简陋了很多，只是支持简单的图片插入(头/尾)， 不过支持自己的logo和版权。相比第一个这点好很多。但是实在是太简陋了。</p>\n</li>\n<li><p><a href=\"http://www.cwbgj.com/\" target=\"_blank\" rel=\"external\">长微博@工具</a> 这个网站比前一个还简陋.就不多说了。大概是这两个网站都没有时间做富文本编辑器。</p>\n</li>\n<li><p><a href=\"http://control.blog.sina.com.cn/admin/article/changWeiBo.php\" target=\"_blank\" rel=\"external\">新浪原生的长微博工具</a>  这个是支持富文本了，但是这个东西是和新浪博客合在一起使用的。如果不是新浪微博上自己的文字，是不能被发布的。基本无用。</p>\n</li>\n<li><p><a href=\"http://note.youdao.com\" target=\"_blank\" rel=\"external\">有道云笔记长微博工具</a> 使用方式在PC端中分享微博就可以了。老王卖瓜，我这里就不夸了。说说现在的缺点，对于某些富文本的内容展示的效果还不是太理想。另外字体还是不太好看。正在持续改进中…欢迎使用</p>\n</li>\n</ol>\n<p>话说贵公司发的明信片太多的广告。有人问祝福语应该写在哪里？上面全都是贵公司各个产品做得广告。我说：”那你就写4个字：欢迎使用。”</p>\n<p>老婆终于学会她年会的舞蹈了，太有喜感了。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>今天有人提议在贵公司举行的“黑客马拉松”中搞一个项目”长微博生成工具”。开始假设都挺好的，说只需要一个文本，就能重用以前的服务，然后做一个这样工具出来。开始大家真心觉得不错。好做又能功能复用。就在大家热情高涨的时候，我说：“这样的工具已经有了。”</p>\n<p>长微博源自于一般微博只有140字，如果希望字数更多，那么就要将这样的文字转换为图片，然后以图片的形式发布出去。这样看到这条微博的人就能看到更多的信息。其实将文字转图片不难，但是将html转图片，就需要考虑展示了。java的能做，c++的也能做到，大家可以调研一下。长微博的站点现在有：</p>\n<ol>\n<li><p><a href=\"www.changweibo.com\">长微博，站点名就叫这个</a>  这个网站支持富文本编辑，并且支持图片和表格插入。该网站开始的编辑区就是和微博最终图片展示的大小相同，所以不必担心超宽度。</p>\n</li>\n<li><p><a href=\"http://www.taichangle.com/\" target=\"_blank\" rel=\"external\">太长了</a> 这个网站比前一个简陋了很多，只是支持简单的图片插入(头/尾)， 不过支持自己的logo和版权。相比第一个这点好很多。但是实在是太简陋了。</p>\n</li>\n<li><p><a href=\"http://www.cwbgj.com/\" target=\"_blank\" rel=\"external\">长微博@工具</a> 这个网站比前一个还简陋.就不多说了。大概是这两个网站都没有时间做富文本编辑器。</p>\n</li>\n<li><p><a href=\"http://control.blog.sina.com.cn/admin/article/changWeiBo.php\" target=\"_blank\" rel=\"external\">新浪原生的长微博工具</a>  这个是支持富文本了，但是这个东西是和新浪博客合在一起使用的。如果不是新浪微博上自己的文字，是不能被发布的。基本无用。</p>\n</li>\n<li><p><a href=\"http://note.youdao.com\" target=\"_blank\" rel=\"external\">有道云笔记长微博工具</a> 使用方式在PC端中分享微博就可以了。老王卖瓜，我这里就不夸了。说说现在的缺点，对于某些富文本的内容展示的效果还不是太理想。另外字体还是不太好看。正在持续改进中…欢迎使用</p>\n</li>\n</ol>\n<p>话说贵公司发的明信片太多的广告。有人问祝福语应该写在哪里？上面全都是贵公司各个产品做得广告。我说：”那你就写4个字：欢迎使用。”</p>\n<p>老婆终于学会她年会的舞蹈了，太有喜感了。</p>\n"},{"layout":"post","title":"圣诞玫瑰","date":"2013-04-04T17:42:00.000Z","comments":1,"_content":"&nbsp;&nbsp;&nbsp;&nbsp;做影评前，先做下功课：圣诞玫瑰(Christmas Rose) 是1月21日和1月25日的生日花，也是一种草药。别名秋红、圣诞红。花语为‘**犹豫**’。  \n![圣诞玫瑰的图片](/images/christmas_rose.jpg \"圣诞玫瑰\")   \n&nbsp;&nbsp;&nbsp;&nbsp;个人评论：这个花和普通的玫瑰看起来没有什么区别，可能是粉色的.所以情人节那天还是只能送**大红色的玫瑰**    \n&nbsp;&nbsp;&nbsp;&nbsp;这部影片延续了郭富城近几年的风格：压抑的侦探式剧情，虽然他在该剧中饰演律师。在这部影片一直在讲故事，中间有能预料到的转折。所以我个人认为导演怕各位观众智商低看不懂，所以各个转折之前都有铺垫。这样故事转折不是那么突兀，但是丧失意外的悬疑影片讲述的一个很压抑的故事。这样的感觉好像是妈妈对小朋友讲故事，而结局就是皆大欢喜。当然对于没有听过故事的小朋友，估计是引人入胜。而听过一遍的，基本上不想再听第二遍。故事本身的叙事还是不错，一个半小时也没有觉得多长。转折起伏不多，基本上也不费脑细胞，没有大场面，没有意外的结局。  \n&nbsp;&nbsp;&nbsp;&nbsp;从整个表面上把这个影片分析完了。再来看看导演究竟想说什么主题。我和LP的分歧在于该影片在宣扬人间公义，定义律师心中的准则；还是关爱他人，给他们希望和机会；还是其实影片啥也没有说，只是讲述社会的缩影。**公义**这个词在这个影片中多次出现，另外还有一副不知名的油画(导演杨采妮说那叫众生相)，混沌并且表情不一。在混沌中，公义或者说正义是什么？无论如何帮助弱者，因为弱者已经很弱；还是维护所谓的事实公正？这真是两难的抉择。让我想到无责撞人的司机，还有搀扶非自己撞倒的老太，这两者都要赔偿一定的损失。所谓两难，从关系人两面分析，就能知道大概。**给机会和希望**这个主题应该是最后一点时间郭富城所说的那几句话引发的。“假如人人都充满爱”，就没有这样的悲剧发生了。但可惜的是，就是因为当事者都太有爱了，所以才有这件事。另外一个观点：**社会缩影**。这个倒是有点意思，因为该影片反映的太多的是是非非。律师不是侦探。如果心有公正，就不会说星期天一根本就没有罪。而有公正之心的早就推辞不接活了。所以总结为：  \n      不念父母情，小三想上位，\n      世俗偏弱势，舆论贬强人，\n      做人心不悔，是非谁人罪。 \n&nbsp;&nbsp;&nbsp;&nbsp;影片好坏自在人心。都是在讲故事，最主要是要抓住人心，留一丝牵挂之想。或喜悦，或兴奋，或压抑，或悲伤，千言万语总汇成心底的回忆。\n\n\n","source":"_posts/2013-04-05-sheng-dan-mei-gui.markdown","raw":"---\nlayout: post\ntitle: \"圣诞玫瑰\"\ndate: 2013-04-05 01:42\ncomments: true\ncategories: movie,圣诞玫瑰 \n---\n&nbsp;&nbsp;&nbsp;&nbsp;做影评前，先做下功课：圣诞玫瑰(Christmas Rose) 是1月21日和1月25日的生日花，也是一种草药。别名秋红、圣诞红。花语为‘**犹豫**’。  \n![圣诞玫瑰的图片](/images/christmas_rose.jpg \"圣诞玫瑰\")   \n&nbsp;&nbsp;&nbsp;&nbsp;个人评论：这个花和普通的玫瑰看起来没有什么区别，可能是粉色的.所以情人节那天还是只能送**大红色的玫瑰**    \n&nbsp;&nbsp;&nbsp;&nbsp;这部影片延续了郭富城近几年的风格：压抑的侦探式剧情，虽然他在该剧中饰演律师。在这部影片一直在讲故事，中间有能预料到的转折。所以我个人认为导演怕各位观众智商低看不懂，所以各个转折之前都有铺垫。这样故事转折不是那么突兀，但是丧失意外的悬疑影片讲述的一个很压抑的故事。这样的感觉好像是妈妈对小朋友讲故事，而结局就是皆大欢喜。当然对于没有听过故事的小朋友，估计是引人入胜。而听过一遍的，基本上不想再听第二遍。故事本身的叙事还是不错，一个半小时也没有觉得多长。转折起伏不多，基本上也不费脑细胞，没有大场面，没有意外的结局。  \n&nbsp;&nbsp;&nbsp;&nbsp;从整个表面上把这个影片分析完了。再来看看导演究竟想说什么主题。我和LP的分歧在于该影片在宣扬人间公义，定义律师心中的准则；还是关爱他人，给他们希望和机会；还是其实影片啥也没有说，只是讲述社会的缩影。**公义**这个词在这个影片中多次出现，另外还有一副不知名的油画(导演杨采妮说那叫众生相)，混沌并且表情不一。在混沌中，公义或者说正义是什么？无论如何帮助弱者，因为弱者已经很弱；还是维护所谓的事实公正？这真是两难的抉择。让我想到无责撞人的司机，还有搀扶非自己撞倒的老太，这两者都要赔偿一定的损失。所谓两难，从关系人两面分析，就能知道大概。**给机会和希望**这个主题应该是最后一点时间郭富城所说的那几句话引发的。“假如人人都充满爱”，就没有这样的悲剧发生了。但可惜的是，就是因为当事者都太有爱了，所以才有这件事。另外一个观点：**社会缩影**。这个倒是有点意思，因为该影片反映的太多的是是非非。律师不是侦探。如果心有公正，就不会说星期天一根本就没有罪。而有公正之心的早就推辞不接活了。所以总结为：  \n      不念父母情，小三想上位，\n      世俗偏弱势，舆论贬强人，\n      做人心不悔，是非谁人罪。 \n&nbsp;&nbsp;&nbsp;&nbsp;影片好坏自在人心。都是在讲故事，最主要是要抓住人心，留一丝牵挂之想。或喜悦，或兴奋，或压抑，或悲伤，千言万语总汇成心底的回忆。\n\n\n","slug":"2013-04-05-sheng-dan-mei-gui","published":1,"updated":"2017-06-05T02:58:20.000Z","photos":[],"link":"","_id":"cj3jjrdtz00020emjzt2mlqd4","content":"<p>&nbsp;&nbsp;&nbsp;&nbsp;做影评前，先做下功课：圣诞玫瑰(Christmas Rose) 是1月21日和1月25日的生日花，也是一种草药。别名秋红、圣诞红。花语为‘<strong>犹豫</strong>’。<br><img src=\"/images/christmas_rose.jpg\" alt=\"圣诞玫瑰的图片\" title=\"圣诞玫瑰\"><br>&nbsp;&nbsp;&nbsp;&nbsp;个人评论：这个花和普通的玫瑰看起来没有什么区别，可能是粉色的.所以情人节那天还是只能送<strong>大红色的玫瑰</strong><br>&nbsp;&nbsp;&nbsp;&nbsp;这部影片延续了郭富城近几年的风格：压抑的侦探式剧情，虽然他在该剧中饰演律师。在这部影片一直在讲故事，中间有能预料到的转折。所以我个人认为导演怕各位观众智商低看不懂，所以各个转折之前都有铺垫。这样故事转折不是那么突兀，但是丧失意外的悬疑影片讲述的一个很压抑的故事。这样的感觉好像是妈妈对小朋友讲故事，而结局就是皆大欢喜。当然对于没有听过故事的小朋友，估计是引人入胜。而听过一遍的，基本上不想再听第二遍。故事本身的叙事还是不错，一个半小时也没有觉得多长。转折起伏不多，基本上也不费脑细胞，没有大场面，没有意外的结局。<br>&nbsp;&nbsp;&nbsp;&nbsp;从整个表面上把这个影片分析完了。再来看看导演究竟想说什么主题。我和LP的分歧在于该影片在宣扬人间公义，定义律师心中的准则；还是关爱他人，给他们希望和机会；还是其实影片啥也没有说，只是讲述社会的缩影。<strong>公义</strong>这个词在这个影片中多次出现，另外还有一副不知名的油画(导演杨采妮说那叫众生相)，混沌并且表情不一。在混沌中，公义或者说正义是什么？无论如何帮助弱者，因为弱者已经很弱；还是维护所谓的事实公正？这真是两难的抉择。让我想到无责撞人的司机，还有搀扶非自己撞倒的老太，这两者都要赔偿一定的损失。所谓两难，从关系人两面分析，就能知道大概。<strong>给机会和希望</strong>这个主题应该是最后一点时间郭富城所说的那几句话引发的。“假如人人都充满爱”，就没有这样的悲剧发生了。但可惜的是，就是因为当事者都太有爱了，所以才有这件事。另外一个观点：<strong>社会缩影</strong>。这个倒是有点意思，因为该影片反映的太多的是是非非。律师不是侦探。如果心有公正，就不会说星期天一根本就没有罪。而有公正之心的早就推辞不接活了。所以总结为：<br>      不念父母情，小三想上位，<br>      世俗偏弱势，舆论贬强人，<br>      做人心不悔，是非谁人罪。<br>&nbsp;&nbsp;&nbsp;&nbsp;影片好坏自在人心。都是在讲故事，最主要是要抓住人心，留一丝牵挂之想。或喜悦，或兴奋，或压抑，或悲伤，千言万语总汇成心底的回忆。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>&nbsp;&nbsp;&nbsp;&nbsp;做影评前，先做下功课：圣诞玫瑰(Christmas Rose) 是1月21日和1月25日的生日花，也是一种草药。别名秋红、圣诞红。花语为‘<strong>犹豫</strong>’。<br><img src=\"/images/christmas_rose.jpg\" alt=\"圣诞玫瑰的图片\" title=\"圣诞玫瑰\"><br>&nbsp;&nbsp;&nbsp;&nbsp;个人评论：这个花和普通的玫瑰看起来没有什么区别，可能是粉色的.所以情人节那天还是只能送<strong>大红色的玫瑰</strong><br>&nbsp;&nbsp;&nbsp;&nbsp;这部影片延续了郭富城近几年的风格：压抑的侦探式剧情，虽然他在该剧中饰演律师。在这部影片一直在讲故事，中间有能预料到的转折。所以我个人认为导演怕各位观众智商低看不懂，所以各个转折之前都有铺垫。这样故事转折不是那么突兀，但是丧失意外的悬疑影片讲述的一个很压抑的故事。这样的感觉好像是妈妈对小朋友讲故事，而结局就是皆大欢喜。当然对于没有听过故事的小朋友，估计是引人入胜。而听过一遍的，基本上不想再听第二遍。故事本身的叙事还是不错，一个半小时也没有觉得多长。转折起伏不多，基本上也不费脑细胞，没有大场面，没有意外的结局。<br>&nbsp;&nbsp;&nbsp;&nbsp;从整个表面上把这个影片分析完了。再来看看导演究竟想说什么主题。我和LP的分歧在于该影片在宣扬人间公义，定义律师心中的准则；还是关爱他人，给他们希望和机会；还是其实影片啥也没有说，只是讲述社会的缩影。<strong>公义</strong>这个词在这个影片中多次出现，另外还有一副不知名的油画(导演杨采妮说那叫众生相)，混沌并且表情不一。在混沌中，公义或者说正义是什么？无论如何帮助弱者，因为弱者已经很弱；还是维护所谓的事实公正？这真是两难的抉择。让我想到无责撞人的司机，还有搀扶非自己撞倒的老太，这两者都要赔偿一定的损失。所谓两难，从关系人两面分析，就能知道大概。<strong>给机会和希望</strong>这个主题应该是最后一点时间郭富城所说的那几句话引发的。“假如人人都充满爱”，就没有这样的悲剧发生了。但可惜的是，就是因为当事者都太有爱了，所以才有这件事。另外一个观点：<strong>社会缩影</strong>。这个倒是有点意思，因为该影片反映的太多的是是非非。律师不是侦探。如果心有公正，就不会说星期天一根本就没有罪。而有公正之心的早就推辞不接活了。所以总结为：<br>      不念父母情，小三想上位，<br>      世俗偏弱势，舆论贬强人，<br>      做人心不悔，是非谁人罪。<br>&nbsp;&nbsp;&nbsp;&nbsp;影片好坏自在人心。都是在讲故事，最主要是要抓住人心，留一丝牵挂之想。或喜悦，或兴奋，或压抑，或悲伤，千言万语总汇成心底的回忆。</p>\n"},{"layout":"post","title":"借助有道云笔记写blog","date":"2013-07-15T14:12:00.000Z","comments":1,"_content":"## 0. 前言\n &nbsp; &nbsp; &nbsp; &nbsp;下面这个blog介绍一下如何借助有道云笔记来写blog. 这里的blog当然是公开的非私密的。帐前卒 的 blog是借助Octopress搭建在github上，使用的markdown写成。由于github对于免费的成员只提供400MB的空间。对于图文并茂的blog来说，这点空间有点相形见绌。所以急需找到一个能提供图片分享的地方。图片分享的地方很多：  \n\n1.  当然很多图床网站可以提供的(当然也有可能不小心被封了)  \n1.  小bbs站(游客身份也可以查看，同时这个小站提供上传图片功能)可以试试[有道云笔记官方论坛](http://notebbs.youdao.com '有道云笔记论坛')  \n1.  网易云相册啥的  \n1.  各种其他的blog站点，写一篇blog上传，里面加入图片。然后把图片地址放入markdown中  \n1.  本文重点要介绍**使用有道云笔记 分享**方式添加图片。不过这一种不如前面几种简单实用。但是可以分享25M以下的任意图片，并且没有数量限制，空间还在不断增长。  \n\n## 1. 分享你的图片\n  &nbsp; &nbsp; &nbsp; &nbsp;首先打开有道云笔记的客户端，然后创建一篇新的笔记，然后点击**'分享链接'**\n![分享链接 图片](http://note.youdao.com/yws/public/resource/d54e01fec212f37df16b5bcd032a83dd/25FBFC3EADAD4EDEB46F9AD6F147C0D9)\n\n## 2. 获取图片地址\n  &nbsp; &nbsp; &nbsp; &nbsp;打开浏览器(chrome, 火狐,IE均可) 这里只介绍firefox. 点击[分享链接](http://note.youdao.com/share/?id=d54e01fec212f37df16b5bcd032a83dd&type=note)。然后在调出firebug. 使用它，选中你要获取的图片。然后就可以看到下面这段html. 注意其中的src属性。没错，这就是你的图片url了。\n    <img data-inited=\"true\" src=\"http://note.youdao.com/yws/public/resource/d54e01fec212f37df16b5bcd032a83dd/25FBFC3EADAD4EDEB46F9AD6F147C0D9\" data-media-type=\"image\">\n![firebug界面](http://note.youdao.com/yws/public/resource/d54e01fec212f37df16b5bcd032a83dd/AB825A2093E648FC8210B144318EDDFA)\n\n## 3. 在markdown中编辑\n &nbsp; &nbsp; &nbsp; &nbsp; 接下来要做的就是在markdown中插入图片. \n    ![图片名] (刚才从有道云笔记分享获取的url)\n\n## 4. 发布\n &nbsp; &nbsp; &nbsp; &nbsp; 这里就没有什么好说的了。**Deploy it!**  \n 另外编写markdown需要注意的:   \n\n\n1.  段首空格需要加 &amp;nbsp; 另外如果需要多个空格，那么每个&amp;nbsp之间都要有空格。  \n1.  如果写为段落列表那么需要在每个列表后加入一个空行  \n\n>       [空行]\n>       1.  aaa\n>       1.  bbb \n","source":"_posts/2013-07-15-jie-zhu-you-dao-yun-bi-ji-xie-blog.markdown","raw":"---\nlayout: post\ntitle: \"借助有道云笔记写blog\"\ndate: 2013-07-15 22:12\ncomments: true\ncategories: 有道云笔记,blog,图片\n---\n## 0. 前言\n &nbsp; &nbsp; &nbsp; &nbsp;下面这个blog介绍一下如何借助有道云笔记来写blog. 这里的blog当然是公开的非私密的。帐前卒 的 blog是借助Octopress搭建在github上，使用的markdown写成。由于github对于免费的成员只提供400MB的空间。对于图文并茂的blog来说，这点空间有点相形见绌。所以急需找到一个能提供图片分享的地方。图片分享的地方很多：  \n\n1.  当然很多图床网站可以提供的(当然也有可能不小心被封了)  \n1.  小bbs站(游客身份也可以查看，同时这个小站提供上传图片功能)可以试试[有道云笔记官方论坛](http://notebbs.youdao.com '有道云笔记论坛')  \n1.  网易云相册啥的  \n1.  各种其他的blog站点，写一篇blog上传，里面加入图片。然后把图片地址放入markdown中  \n1.  本文重点要介绍**使用有道云笔记 分享**方式添加图片。不过这一种不如前面几种简单实用。但是可以分享25M以下的任意图片，并且没有数量限制，空间还在不断增长。  \n\n## 1. 分享你的图片\n  &nbsp; &nbsp; &nbsp; &nbsp;首先打开有道云笔记的客户端，然后创建一篇新的笔记，然后点击**'分享链接'**\n![分享链接 图片](http://note.youdao.com/yws/public/resource/d54e01fec212f37df16b5bcd032a83dd/25FBFC3EADAD4EDEB46F9AD6F147C0D9)\n\n## 2. 获取图片地址\n  &nbsp; &nbsp; &nbsp; &nbsp;打开浏览器(chrome, 火狐,IE均可) 这里只介绍firefox. 点击[分享链接](http://note.youdao.com/share/?id=d54e01fec212f37df16b5bcd032a83dd&type=note)。然后在调出firebug. 使用它，选中你要获取的图片。然后就可以看到下面这段html. 注意其中的src属性。没错，这就是你的图片url了。\n    <img data-inited=\"true\" src=\"http://note.youdao.com/yws/public/resource/d54e01fec212f37df16b5bcd032a83dd/25FBFC3EADAD4EDEB46F9AD6F147C0D9\" data-media-type=\"image\">\n![firebug界面](http://note.youdao.com/yws/public/resource/d54e01fec212f37df16b5bcd032a83dd/AB825A2093E648FC8210B144318EDDFA)\n\n## 3. 在markdown中编辑\n &nbsp; &nbsp; &nbsp; &nbsp; 接下来要做的就是在markdown中插入图片. \n    ![图片名] (刚才从有道云笔记分享获取的url)\n\n## 4. 发布\n &nbsp; &nbsp; &nbsp; &nbsp; 这里就没有什么好说的了。**Deploy it!**  \n 另外编写markdown需要注意的:   \n\n\n1.  段首空格需要加 &amp;nbsp; 另外如果需要多个空格，那么每个&amp;nbsp之间都要有空格。  \n1.  如果写为段落列表那么需要在每个列表后加入一个空行  \n\n>       [空行]\n>       1.  aaa\n>       1.  bbb \n","slug":"2013-07-15-jie-zhu-you-dao-yun-bi-ji-xie-blog","published":1,"updated":"2017-06-05T02:58:20.000Z","photos":[],"link":"","_id":"cj3jjrdu200040emjpcz0hneq","content":"<h2 id=\"0-前言\"><a href=\"#0-前言\" class=\"headerlink\" title=\"0. 前言\"></a>0. 前言</h2><p> &nbsp; &nbsp; &nbsp; &nbsp;下面这个blog介绍一下如何借助有道云笔记来写blog. 这里的blog当然是公开的非私密的。帐前卒 的 blog是借助Octopress搭建在github上，使用的markdown写成。由于github对于免费的成员只提供400MB的空间。对于图文并茂的blog来说，这点空间有点相形见绌。所以急需找到一个能提供图片分享的地方。图片分享的地方很多：  </p>\n<ol>\n<li>当然很多图床网站可以提供的(当然也有可能不小心被封了)  </li>\n<li>小bbs站(游客身份也可以查看，同时这个小站提供上传图片功能)可以试试<a href=\"http://notebbs.youdao.com\" title=\"有道云笔记论坛\" target=\"_blank\" rel=\"external\">有道云笔记官方论坛</a>  </li>\n<li>网易云相册啥的  </li>\n<li>各种其他的blog站点，写一篇blog上传，里面加入图片。然后把图片地址放入markdown中  </li>\n<li>本文重点要介绍<strong>使用有道云笔记 分享</strong>方式添加图片。不过这一种不如前面几种简单实用。但是可以分享25M以下的任意图片，并且没有数量限制，空间还在不断增长。  </li>\n</ol>\n<h2 id=\"1-分享你的图片\"><a href=\"#1-分享你的图片\" class=\"headerlink\" title=\"1. 分享你的图片\"></a>1. 分享你的图片</h2><p>  &nbsp; &nbsp; &nbsp; &nbsp;首先打开有道云笔记的客户端，然后创建一篇新的笔记，然后点击<strong>‘分享链接’</strong><br><img src=\"http://note.youdao.com/yws/public/resource/d54e01fec212f37df16b5bcd032a83dd/25FBFC3EADAD4EDEB46F9AD6F147C0D9\" alt=\"分享链接 图片\"></p>\n<h2 id=\"2-获取图片地址\"><a href=\"#2-获取图片地址\" class=\"headerlink\" title=\"2. 获取图片地址\"></a>2. 获取图片地址</h2><p>  &nbsp; &nbsp; &nbsp; &nbsp;打开浏览器(chrome, 火狐,IE均可) 这里只介绍firefox. 点击<a href=\"http://note.youdao.com/share/?id=d54e01fec212f37df16b5bcd032a83dd&amp;type=note\" target=\"_blank\" rel=\"external\">分享链接</a>。然后在调出firebug. 使用它，选中你要获取的图片。然后就可以看到下面这段html. 注意其中的src属性。没错，这就是你的图片url了。<br>    <img data-inited=\"true\" src=\"http://note.youdao.com/yws/public/resource/d54e01fec212f37df16b5bcd032a83dd/25FBFC3EADAD4EDEB46F9AD6F147C0D9\" data-media-type=\"image\"><br><img src=\"http://note.youdao.com/yws/public/resource/d54e01fec212f37df16b5bcd032a83dd/AB825A2093E648FC8210B144318EDDFA\" alt=\"firebug界面\"></p>\n<h2 id=\"3-在markdown中编辑\"><a href=\"#3-在markdown中编辑\" class=\"headerlink\" title=\"3. 在markdown中编辑\"></a>3. 在markdown中编辑</h2><p> &nbsp; &nbsp; &nbsp; &nbsp; 接下来要做的就是在markdown中插入图片.<br>    ![图片名] (刚才从有道云笔记分享获取的url)</p>\n<h2 id=\"4-发布\"><a href=\"#4-发布\" class=\"headerlink\" title=\"4. 发布\"></a>4. 发布</h2><p> &nbsp; &nbsp; &nbsp; &nbsp; 这里就没有什么好说的了。<strong>Deploy it!</strong><br> 另外编写markdown需要注意的:   </p>\n<ol>\n<li>段首空格需要加 &amp;nbsp; 另外如果需要多个空格，那么每个&amp;nbsp之间都要有空格。  </li>\n<li>如果写为段落列表那么需要在每个列表后加入一个空行  </li>\n</ol>\n<blockquote>\n<pre><code>[空行]\n1.  aaa\n1.  bbb \n</code></pre></blockquote>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"0-前言\"><a href=\"#0-前言\" class=\"headerlink\" title=\"0. 前言\"></a>0. 前言</h2><p> &nbsp; &nbsp; &nbsp; &nbsp;下面这个blog介绍一下如何借助有道云笔记来写blog. 这里的blog当然是公开的非私密的。帐前卒 的 blog是借助Octopress搭建在github上，使用的markdown写成。由于github对于免费的成员只提供400MB的空间。对于图文并茂的blog来说，这点空间有点相形见绌。所以急需找到一个能提供图片分享的地方。图片分享的地方很多：  </p>\n<ol>\n<li>当然很多图床网站可以提供的(当然也有可能不小心被封了)  </li>\n<li>小bbs站(游客身份也可以查看，同时这个小站提供上传图片功能)可以试试<a href=\"http://notebbs.youdao.com\" title=\"有道云笔记论坛\" target=\"_blank\" rel=\"external\">有道云笔记官方论坛</a>  </li>\n<li>网易云相册啥的  </li>\n<li>各种其他的blog站点，写一篇blog上传，里面加入图片。然后把图片地址放入markdown中  </li>\n<li>本文重点要介绍<strong>使用有道云笔记 分享</strong>方式添加图片。不过这一种不如前面几种简单实用。但是可以分享25M以下的任意图片，并且没有数量限制，空间还在不断增长。  </li>\n</ol>\n<h2 id=\"1-分享你的图片\"><a href=\"#1-分享你的图片\" class=\"headerlink\" title=\"1. 分享你的图片\"></a>1. 分享你的图片</h2><p>  &nbsp; &nbsp; &nbsp; &nbsp;首先打开有道云笔记的客户端，然后创建一篇新的笔记，然后点击<strong>‘分享链接’</strong><br><img src=\"http://note.youdao.com/yws/public/resource/d54e01fec212f37df16b5bcd032a83dd/25FBFC3EADAD4EDEB46F9AD6F147C0D9\" alt=\"分享链接 图片\"></p>\n<h2 id=\"2-获取图片地址\"><a href=\"#2-获取图片地址\" class=\"headerlink\" title=\"2. 获取图片地址\"></a>2. 获取图片地址</h2><p>  &nbsp; &nbsp; &nbsp; &nbsp;打开浏览器(chrome, 火狐,IE均可) 这里只介绍firefox. 点击<a href=\"http://note.youdao.com/share/?id=d54e01fec212f37df16b5bcd032a83dd&amp;type=note\" target=\"_blank\" rel=\"external\">分享链接</a>。然后在调出firebug. 使用它，选中你要获取的图片。然后就可以看到下面这段html. 注意其中的src属性。没错，这就是你的图片url了。<br>    <img data-inited=\"true\" src=\"http://note.youdao.com/yws/public/resource/d54e01fec212f37df16b5bcd032a83dd/25FBFC3EADAD4EDEB46F9AD6F147C0D9\" data-media-type=\"image\"><br><img src=\"http://note.youdao.com/yws/public/resource/d54e01fec212f37df16b5bcd032a83dd/AB825A2093E648FC8210B144318EDDFA\" alt=\"firebug界面\"></p>\n<h2 id=\"3-在markdown中编辑\"><a href=\"#3-在markdown中编辑\" class=\"headerlink\" title=\"3. 在markdown中编辑\"></a>3. 在markdown中编辑</h2><p> &nbsp; &nbsp; &nbsp; &nbsp; 接下来要做的就是在markdown中插入图片.<br>    ![图片名] (刚才从有道云笔记分享获取的url)</p>\n<h2 id=\"4-发布\"><a href=\"#4-发布\" class=\"headerlink\" title=\"4. 发布\"></a>4. 发布</h2><p> &nbsp; &nbsp; &nbsp; &nbsp; 这里就没有什么好说的了。<strong>Deploy it!</strong><br> 另外编写markdown需要注意的:   </p>\n<ol>\n<li>段首空格需要加 &amp;nbsp; 另外如果需要多个空格，那么每个&amp;nbsp之间都要有空格。  </li>\n<li>如果写为段落列表那么需要在每个列表后加入一个空行  </li>\n</ol>\n<blockquote>\n<pre><code>[空行]\n1.  aaa\n1.  bbb \n</code></pre></blockquote>\n"},{"layout":"post","title":"upgrade to octopress 2.0","date":"2013-07-30T07:03:00.000Z","comments":1,"_content":"\n## 0. 前言\n\n &nbsp;&nbsp;&nbsp;&nbsp;最近在看Octopress的代码，然后想想可能Octopress要更新了。于是手贱了一下，把整个Octopress重新更新了一下。然后整个blog乱成一团了。所以说千万别更新，更新之前一定要git push保存一下进度。如果真的更新挂了，就再rollback.\n\n<!-- more -->\n## 1. fix bugs\n\n * Could not find fast-stemmer-1.0.1 in any of the sources   \n   \n &nbsp;&nbsp;首先将 rubygems中的https://rubygems.org修改为 http://rubygems.org/， 这样就可以下载到fast-stemmer-1.0.1.    \n\n * Could not find sass-3.2.9 in any of the sources    \n    \n &nbsp;&nbsp;再将http://rubygems.org修改为 https://rubygems.org/ 发现这个东西被封了。所以需要使用代理：   \n        $ export http_proxy=http://username:password@your-proxy-site.com:[your_proxy_port]\n\n * _Let's Go on._ An error occured while installing rdiscount (2.0.7.3), and Bundler cannot continue. Make sure that `gem install rdiscount -v '2.0.7.3'` succeeds before bundling.   \n\n  &nbsp;&nbsp;这个要用ruby 1.9.3来解决。那么来安装ruby 1.9.3吧。   \n\n        rvm install 1.9.3\n        修改.rvmrc\n        修改.rvmrc使用的ruby版本。 rvm use 1.9.3\n        当然可以退出该目录重新进入一遍。  \n   \n\n * 继续走...发现ruby中的问题    \n\n        /home/chico/.rvm/rubies/ruby-1.9.3-p0/lib/ruby/1.9.1/uri/common.rb:304:in `escape': undefined method `gsub' for 2012:Fixnum (NoMethodError)\n        from /home/chico/.rvm/rubies/ruby-1.9.3-p0/lib/ruby/1.9.1/uri/common.rb:623:in `escape'\n\n  &nbsp;&nbsp;这个问题是之前的markdown脚本，现在解析的有问题。有些不兼容了。解决方法是在plugins/sitemap\\_generator.rb中把post.name打印出来，然后看最后是在哪个文件中卡死了。然后就修改那个文件的markdown文件。   \n\n\n * 然后终于把Octopress启动起来了。内牛满面呀！然后就发现页面全乱了..........   \n  &nbsp;&nbsp;然后借小Y之力修改了css.然后就好了。当然你们没有小Y. 下面是那段修改的css. 修改sass/base/\\_layout.scss\n\n\n          #content {\n             @extend .group;\n        -    overflow: visible;\n        -    margin-right: $sidebar-width-medium;\n        +    overflow: hidden;\n        +    margin-right: 0px!important;\n        +    padding-right: 240px;\n             position: relative;\n            .no-sidebar & { margin-right: 0; border-right: 0; }\n\n## 2. 最终页面\n\n 新的页面是长这样子的：\n![新页面](http://note.youdao.com/yws/public/resource/8a55ddd27d075e71ac8a8d14e6f58a41/FD5A902AD9D743F6BC2AEA01498DD160)\n 旧的页面是这样子的：\n![旧页面](http://note.youdao.com/yws/public/resource/8a55ddd27d075e71ac8a8d14e6f58a41/34849B1E634C41C9AFB779AF43F0A946)\n 因为那个收缩的tab是关联js的。所以该起来还是很困难。\n\n## 3. 结论\n\n  &nbsp;&nbsp;&nbsp;&nbsp;不要因为出了新版本就手贱去更新。否则修改更新问题时，贱手就废掉了。  \n  &nbsp;&nbsp;&nbsp;&nbsp;_最后一句话: F**K Octopress 2.0 !!_\n\n","source":"_posts/2013-07-30-upgrade-to-octopress-2-dot-0.markdown","raw":"---\nlayout: post\ntitle: \"upgrade to octopress 2.0\"\ndate: 2013-07-30 15:03\ncomments: true\ncategories: upgrade, octopress, 2.0, bugs, solution \n---\n\n## 0. 前言\n\n &nbsp;&nbsp;&nbsp;&nbsp;最近在看Octopress的代码，然后想想可能Octopress要更新了。于是手贱了一下，把整个Octopress重新更新了一下。然后整个blog乱成一团了。所以说千万别更新，更新之前一定要git push保存一下进度。如果真的更新挂了，就再rollback.\n\n<!-- more -->\n## 1. fix bugs\n\n * Could not find fast-stemmer-1.0.1 in any of the sources   \n   \n &nbsp;&nbsp;首先将 rubygems中的https://rubygems.org修改为 http://rubygems.org/， 这样就可以下载到fast-stemmer-1.0.1.    \n\n * Could not find sass-3.2.9 in any of the sources    \n    \n &nbsp;&nbsp;再将http://rubygems.org修改为 https://rubygems.org/ 发现这个东西被封了。所以需要使用代理：   \n        $ export http_proxy=http://username:password@your-proxy-site.com:[your_proxy_port]\n\n * _Let's Go on._ An error occured while installing rdiscount (2.0.7.3), and Bundler cannot continue. Make sure that `gem install rdiscount -v '2.0.7.3'` succeeds before bundling.   \n\n  &nbsp;&nbsp;这个要用ruby 1.9.3来解决。那么来安装ruby 1.9.3吧。   \n\n        rvm install 1.9.3\n        修改.rvmrc\n        修改.rvmrc使用的ruby版本。 rvm use 1.9.3\n        当然可以退出该目录重新进入一遍。  \n   \n\n * 继续走...发现ruby中的问题    \n\n        /home/chico/.rvm/rubies/ruby-1.9.3-p0/lib/ruby/1.9.1/uri/common.rb:304:in `escape': undefined method `gsub' for 2012:Fixnum (NoMethodError)\n        from /home/chico/.rvm/rubies/ruby-1.9.3-p0/lib/ruby/1.9.1/uri/common.rb:623:in `escape'\n\n  &nbsp;&nbsp;这个问题是之前的markdown脚本，现在解析的有问题。有些不兼容了。解决方法是在plugins/sitemap\\_generator.rb中把post.name打印出来，然后看最后是在哪个文件中卡死了。然后就修改那个文件的markdown文件。   \n\n\n * 然后终于把Octopress启动起来了。内牛满面呀！然后就发现页面全乱了..........   \n  &nbsp;&nbsp;然后借小Y之力修改了css.然后就好了。当然你们没有小Y. 下面是那段修改的css. 修改sass/base/\\_layout.scss\n\n\n          #content {\n             @extend .group;\n        -    overflow: visible;\n        -    margin-right: $sidebar-width-medium;\n        +    overflow: hidden;\n        +    margin-right: 0px!important;\n        +    padding-right: 240px;\n             position: relative;\n            .no-sidebar & { margin-right: 0; border-right: 0; }\n\n## 2. 最终页面\n\n 新的页面是长这样子的：\n![新页面](http://note.youdao.com/yws/public/resource/8a55ddd27d075e71ac8a8d14e6f58a41/FD5A902AD9D743F6BC2AEA01498DD160)\n 旧的页面是这样子的：\n![旧页面](http://note.youdao.com/yws/public/resource/8a55ddd27d075e71ac8a8d14e6f58a41/34849B1E634C41C9AFB779AF43F0A946)\n 因为那个收缩的tab是关联js的。所以该起来还是很困难。\n\n## 3. 结论\n\n  &nbsp;&nbsp;&nbsp;&nbsp;不要因为出了新版本就手贱去更新。否则修改更新问题时，贱手就废掉了。  \n  &nbsp;&nbsp;&nbsp;&nbsp;_最后一句话: F**K Octopress 2.0 !!_\n\n","slug":"2013-07-30-upgrade-to-octopress-2-dot-0","published":1,"updated":"2017-06-05T02:58:20.000Z","photos":[],"link":"","_id":"cj3jjrdu400060emjrowqxqv5","content":"<h2 id=\"0-前言\"><a href=\"#0-前言\" class=\"headerlink\" title=\"0. 前言\"></a>0. 前言</h2><p> &nbsp;&nbsp;&nbsp;&nbsp;最近在看Octopress的代码，然后想想可能Octopress要更新了。于是手贱了一下，把整个Octopress重新更新了一下。然后整个blog乱成一团了。所以说千万别更新，更新之前一定要git push保存一下进度。如果真的更新挂了，就再rollback.</p>\n<a id=\"more\"></a>\n<h2 id=\"1-fix-bugs\"><a href=\"#1-fix-bugs\" class=\"headerlink\" title=\"1. fix bugs\"></a>1. fix bugs</h2><ul>\n<li><p>Could not find fast-stemmer-1.0.1 in any of the sources   </p>\n<p>&nbsp;&nbsp;首先将 rubygems中的<a href=\"https://rubygems.org修改为\" target=\"_blank\" rel=\"external\">https://rubygems.org修改为</a> <a href=\"http://rubygems.org/，\" target=\"_blank\" rel=\"external\">http://rubygems.org/，</a> 这样就可以下载到fast-stemmer-1.0.1.    </p>\n</li>\n<li><p>Could not find sass-3.2.9 in any of the sources    </p>\n<p>&nbsp;&nbsp;再将<a href=\"http://rubygems.org修改为\" target=\"_blank\" rel=\"external\">http://rubygems.org修改为</a> <a href=\"https://rubygems.org/\" target=\"_blank\" rel=\"external\">https://rubygems.org/</a> 发现这个东西被封了。所以需要使用代理：   </p>\n<pre><code>$ export http_proxy=http://username:password@your-proxy-site.com:[your_proxy_port]\n</code></pre></li>\n<li><p><em>Let’s Go on.</em> An error occured while installing rdiscount (2.0.7.3), and Bundler cannot continue. Make sure that <code>gem install rdiscount -v &#39;2.0.7.3&#39;</code> succeeds before bundling.   </p>\n<p>&nbsp;&nbsp;这个要用ruby 1.9.3来解决。那么来安装ruby 1.9.3吧。   </p>\n<pre><code>rvm install 1.9.3\n修改.rvmrc\n修改.rvmrc使用的ruby版本。 rvm use 1.9.3\n当然可以退出该目录重新进入一遍。  \n</code></pre></li>\n</ul>\n<ul>\n<li><p>继续走…发现ruby中的问题    </p>\n<pre><code>/home/chico/.rvm/rubies/ruby-1.9.3-p0/lib/ruby/1.9.1/uri/common.rb:304:in `escape&apos;: undefined method `gsub&apos; for 2012:Fixnum (NoMethodError)\nfrom /home/chico/.rvm/rubies/ruby-1.9.3-p0/lib/ruby/1.9.1/uri/common.rb:623:in `escape&apos;\n</code></pre><p>&nbsp;&nbsp;这个问题是之前的markdown脚本，现在解析的有问题。有些不兼容了。解决方法是在plugins/sitemap_generator.rb中把post.name打印出来，然后看最后是在哪个文件中卡死了。然后就修改那个文件的markdown文件。   </p>\n</li>\n</ul>\n<ul>\n<li>然后终于把Octopress启动起来了。内牛满面呀！然后就发现页面全乱了……….<br>&nbsp;&nbsp;然后借小Y之力修改了css.然后就好了。当然你们没有小Y. 下面是那段修改的css. 修改sass/base/_layout.scss</li>\n</ul>\n<pre><code>  #content {\n     @extend .group;\n-    overflow: visible;\n-    margin-right: $sidebar-width-medium;\n+    overflow: hidden;\n+    margin-right: 0px!important;\n+    padding-right: 240px;\n     position: relative;\n    .no-sidebar &amp; { margin-right: 0; border-right: 0; }\n</code></pre><h2 id=\"2-最终页面\"><a href=\"#2-最终页面\" class=\"headerlink\" title=\"2. 最终页面\"></a>2. 最终页面</h2><p> 新的页面是长这样子的：<br><img src=\"http://note.youdao.com/yws/public/resource/8a55ddd27d075e71ac8a8d14e6f58a41/FD5A902AD9D743F6BC2AEA01498DD160\" alt=\"新页面\"><br> 旧的页面是这样子的：<br><img src=\"http://note.youdao.com/yws/public/resource/8a55ddd27d075e71ac8a8d14e6f58a41/34849B1E634C41C9AFB779AF43F0A946\" alt=\"旧页面\"><br> 因为那个收缩的tab是关联js的。所以该起来还是很困难。</p>\n<h2 id=\"3-结论\"><a href=\"#3-结论\" class=\"headerlink\" title=\"3. 结论\"></a>3. 结论</h2><p>  &nbsp;&nbsp;&nbsp;&nbsp;不要因为出了新版本就手贱去更新。否则修改更新问题时，贱手就废掉了。<br>  &nbsp;&nbsp;&nbsp;&nbsp;<em>最后一句话: F**K Octopress 2.0 !!</em></p>\n","site":{"data":{}},"excerpt":"<h2 id=\"0-前言\"><a href=\"#0-前言\" class=\"headerlink\" title=\"0. 前言\"></a>0. 前言</h2><p> &nbsp;&nbsp;&nbsp;&nbsp;最近在看Octopress的代码，然后想想可能Octopress要更新了。于是手贱了一下，把整个Octopress重新更新了一下。然后整个blog乱成一团了。所以说千万别更新，更新之前一定要git push保存一下进度。如果真的更新挂了，就再rollback.</p>","more":"<h2 id=\"1-fix-bugs\"><a href=\"#1-fix-bugs\" class=\"headerlink\" title=\"1. fix bugs\"></a>1. fix bugs</h2><ul>\n<li><p>Could not find fast-stemmer-1.0.1 in any of the sources   </p>\n<p>&nbsp;&nbsp;首先将 rubygems中的<a href=\"https://rubygems.org修改为\" target=\"_blank\" rel=\"external\">https://rubygems.org修改为</a> <a href=\"http://rubygems.org/，\" target=\"_blank\" rel=\"external\">http://rubygems.org/，</a> 这样就可以下载到fast-stemmer-1.0.1.    </p>\n</li>\n<li><p>Could not find sass-3.2.9 in any of the sources    </p>\n<p>&nbsp;&nbsp;再将<a href=\"http://rubygems.org修改为\" target=\"_blank\" rel=\"external\">http://rubygems.org修改为</a> <a href=\"https://rubygems.org/\" target=\"_blank\" rel=\"external\">https://rubygems.org/</a> 发现这个东西被封了。所以需要使用代理：   </p>\n<pre><code>$ export http_proxy=http://username:password@your-proxy-site.com:[your_proxy_port]\n</code></pre></li>\n<li><p><em>Let’s Go on.</em> An error occured while installing rdiscount (2.0.7.3), and Bundler cannot continue. Make sure that <code>gem install rdiscount -v &#39;2.0.7.3&#39;</code> succeeds before bundling.   </p>\n<p>&nbsp;&nbsp;这个要用ruby 1.9.3来解决。那么来安装ruby 1.9.3吧。   </p>\n<pre><code>rvm install 1.9.3\n修改.rvmrc\n修改.rvmrc使用的ruby版本。 rvm use 1.9.3\n当然可以退出该目录重新进入一遍。  \n</code></pre></li>\n</ul>\n<ul>\n<li><p>继续走…发现ruby中的问题    </p>\n<pre><code>/home/chico/.rvm/rubies/ruby-1.9.3-p0/lib/ruby/1.9.1/uri/common.rb:304:in `escape&apos;: undefined method `gsub&apos; for 2012:Fixnum (NoMethodError)\nfrom /home/chico/.rvm/rubies/ruby-1.9.3-p0/lib/ruby/1.9.1/uri/common.rb:623:in `escape&apos;\n</code></pre><p>&nbsp;&nbsp;这个问题是之前的markdown脚本，现在解析的有问题。有些不兼容了。解决方法是在plugins/sitemap_generator.rb中把post.name打印出来，然后看最后是在哪个文件中卡死了。然后就修改那个文件的markdown文件。   </p>\n</li>\n</ul>\n<ul>\n<li>然后终于把Octopress启动起来了。内牛满面呀！然后就发现页面全乱了……….<br>&nbsp;&nbsp;然后借小Y之力修改了css.然后就好了。当然你们没有小Y. 下面是那段修改的css. 修改sass/base/_layout.scss</li>\n</ul>\n<pre><code>  #content {\n     @extend .group;\n-    overflow: visible;\n-    margin-right: $sidebar-width-medium;\n+    overflow: hidden;\n+    margin-right: 0px!important;\n+    padding-right: 240px;\n     position: relative;\n    .no-sidebar &amp; { margin-right: 0; border-right: 0; }\n</code></pre><h2 id=\"2-最终页面\"><a href=\"#2-最终页面\" class=\"headerlink\" title=\"2. 最终页面\"></a>2. 最终页面</h2><p> 新的页面是长这样子的：<br><img src=\"http://note.youdao.com/yws/public/resource/8a55ddd27d075e71ac8a8d14e6f58a41/FD5A902AD9D743F6BC2AEA01498DD160\" alt=\"新页面\"><br> 旧的页面是这样子的：<br><img src=\"http://note.youdao.com/yws/public/resource/8a55ddd27d075e71ac8a8d14e6f58a41/34849B1E634C41C9AFB779AF43F0A946\" alt=\"旧页面\"><br> 因为那个收缩的tab是关联js的。所以该起来还是很困难。</p>\n<h2 id=\"3-结论\"><a href=\"#3-结论\" class=\"headerlink\" title=\"3. 结论\"></a>3. 结论</h2><p>  &nbsp;&nbsp;&nbsp;&nbsp;不要因为出了新版本就手贱去更新。否则修改更新问题时，贱手就废掉了。<br>  &nbsp;&nbsp;&nbsp;&nbsp;<em>最后一句话: F**K Octopress 2.0 !!</em></p>"},{"layout":"post","title":"Modify octopress blog","date":"2013-07-20T18:41:00.000Z","comments":1,"_content":" &nbsp;&nbsp;&nbsp;&nbsp;这几天一直在捣鼓blog.因为很久没有用**Octopress**写blog.另外也没有碰HTML相关。所以写markdown或者改Octopress都手生。这里把各种修改方法一一记下。要学习的是**ruby**, **Liquid**.  \n\n<!-- more -->\n\n## 0.开始学习\n\n &nbsp;&nbsp;&nbsp;&nbsp;学习ruby推荐以下这几个网站：  \n\n *  [ruby doc](http://ruby-doc.org/ 'http://ruby-doc.org/')\n *  [ruby中文的官方文档](http://www.ruby-lang.org/zh_cn/documentation/)\n *  [ruby 在线运行环境](http://www.compileonline.com/execute_ruby_online.php) 使用这个可以在线运行ruby. 查看执行结果。对于机器没有装ruby,这个是极好的平台。  \n\n &nbsp;&nbsp;&nbsp;&nbsp;然后是学习Liquid. **Liquid**这个本身是用ruby写的。所以只需要会用就行了。语法很像JSP.   \n![Liquid语法example](http://note.youdao.com/yws/public/resource/8a55ddd27d075e71ac8a8d14e6f58a41/671FD472DEC849C3B7B9F94A6A67DD6B)\n\n &nbsp;&nbsp;&nbsp;&nbsp;YAML. 这个全称是'**YAML Ain't Markup Language。**'。定义看起来和GNU很想。这个鬼东西不希望采用XML的方式。基本是做配置文件使用的。如果想细细学习。[猛击这里](http://zh.wikipedia.org/zh-cn/YAML)。在Octopress中基本上也就是定义了一下全局的某些量的true,false.其他基本上没有用。   \n\n## 1. 开始修改Octopress blog\n\n### 1.1 Octopress 简单介绍\n\n &nbsp;&nbsp;&nbsp;&nbsp;Octopress. 这个是继承了Liquid.然后加了一些plugins.最主要的plugin是plugins/octopress\\_filters.rb. Octopress的工作原理就是使用Liquid对各种文档进行渲染生成html. 只不过比原始的Liquid的功能更多。另外使用Rake对各种命令打包。Octopress最重要的几个目录是: source, plugin. Octopress会先进行渲染，然后将渲染后的文件放入到public目录中，之后再将public目录中的文件移动到\\_deploy目录下。然后通过git上传\\_deploy目录完成发布。所以如果你想加入什么自己新写的html不要放到public或者\\_deploy目录下。要放在source目录完成发布。所以如果你想加入什么自己新写的html不要放到public或者\\_deploy目录下。要放在source目录下。比如我为自己的blog自定义了一个404.html.那么就要放入到source目录下。或者放入其他目录下并且改写Rakefile, 改写 “**multitask :push**”中的命令。   \n\n### 1.2 Octopress source的文件目录结构。   \n\n *  首先是\\_posts这个目录。这个是用来存放你用markdown写的blog的。使用rake new\\_post['xxxx'] 就可有创建一篇名为xxxx.markdown的文件。\n *  \\_includes这个目录。这个目录是引用各种模板html的。例如我的jiathis脚本和google ads脚本.我个人一般会将这些第三方存放在\\_includes/post目录下。引用的时候使用{&#37; include post/xxx.html &#37;}. 如果是在\\_include下的article.html,引用则为{&#37; include article.html &#37;}. 其中最重要的是article.html文件。这个每篇文章的显示。并且对于首页和具体blog都是引用的article.html. article.html中有 **{&#37; if index &#37;}**，如果index为true,则是首页。\n *  \\_layouts这个目录，这个目录是对应着每篇文章的样式(当点进某篇文章后，这个目录下的文件就开始其作用)。其中最重要是post.html这个文件。修改也主要是修改这个。\n *  index.html. 这个就是首页了。页面的排版都在这里。\n \n## 2. 实战  \n\n### 2.1 jiathis 添加\n &nbsp;&nbsp;&nbsp;&nbsp; 下面以jiathis的添加为例。  \n![jiathis 图标](http://note.youdao.com/yws/public/resource/8a55ddd27d075e71ac8a8d14e6f58a41/412D2139E39C487BAA77D2E43A2A442C)   \n &nbsp;&nbsp;&nbsp;&nbsp; 加入jiathis需要修改以下这些文件：  \n\n * 添加 source/\\_include/post/jiathis.html （不用照抄，直接在jiathis.com中找找同样的html即可。）  \n![jiathis.html](http://note.youdao.com/yws/public/resource/8a55ddd27d075e71ac8a8d14e6f58a41/4182C91E8C5F4F7C833C251570D109E4)    \n\n * source/\\_include/article.html 修改为：   \n![jiathis 放入article.html的位置](http://note.youdao.com/yws/public/resource/8a55ddd27d075e71ac8a8d14e6f58a41/25EE2B2EE60D49D5868663E6BD80C2F4)\n  图中修改的位置是点击到详细页面后，jiathis出现。如果希望在首页就出现，一种可以修改 else之前的，或者直接修改source/index.html文件  \n\n### 2.2 修改侧边栏\n  &nbsp;&nbsp;&nbsp;&nbsp; 如果你的blog有侧边栏的需求的话。那么需要改两个地方：一个是post.html,另外一个是index.html. Octopress的页面控制基本就是由这两个文件组成。index.html是控制首页。而post.html是控制详细页。\n\n * source/\\_layouts/post.html 修改最下方，例如下图(不要照抄)：  \n![sidebar](http://note.youdao.com/yws/public/resource/8a55ddd27d075e71ac8a8d14e6f58a41/A5AB8C677BCB45D09CA2ED0D43A359B8)\n\n * source/index.html 也是修改最下方。   \n\n![index sidebar](http://note.youdao.com/yws/public/resource/8a55ddd27d075e71ac8a8d14e6f58a41/B49102887AFD49238793A6D57F3365A6)\n\n## 4. 添加404页面。\n\n &nbsp;&nbsp;&nbsp;&nbsp; github上的404页面可以定制。只需要在index.html那个目录中加入一个404.html即可。例如我的：   \n![404.html](http://note.youdao.com/yws/public/resource/8a55ddd27d075e71ac8a8d14e6f58a41/9518399117EE4D2BB4BD81B1548DC979)\n\n \n## 3. 总结\n\n  &nbsp;&nbsp;&nbsp;&nbsp; 之前觉得这个Octopress很cool,后来才发现上了贼船。这东西定制起来还是比较费劲。另外最费劲的就是Octopress升级。下一章讲如何升级。不过还是劝大家暂时不要升级，下个版本感觉不稳定，有很多诡异的问题产生，而且它的兼容性也没有做好。还有就是在markdown里写Liquid脚本。这才是个渣。因为有时候希望这些脚本被显示的展示给用户，那么就需要将这些脚本转为16进制，否则Liquid就会解析该代码。所以用16进制写{&#37;&#37;}，或者直接使用截图的方法。另外Octopress的双引号解析更渣，都解析反了...所以推荐使用单引号。\n\n\n \n","source":"_posts/2013-07-21-modify-octopress-blog.markdown","raw":"---\nlayout: post\ntitle: \"Modify octopress blog\"\ndate: 2013-07-21 02:41\ncomments: true\ncategories: octopress,blog,修改,结构 \n---\n &nbsp;&nbsp;&nbsp;&nbsp;这几天一直在捣鼓blog.因为很久没有用**Octopress**写blog.另外也没有碰HTML相关。所以写markdown或者改Octopress都手生。这里把各种修改方法一一记下。要学习的是**ruby**, **Liquid**.  \n\n<!-- more -->\n\n## 0.开始学习\n\n &nbsp;&nbsp;&nbsp;&nbsp;学习ruby推荐以下这几个网站：  \n\n *  [ruby doc](http://ruby-doc.org/ 'http://ruby-doc.org/')\n *  [ruby中文的官方文档](http://www.ruby-lang.org/zh_cn/documentation/)\n *  [ruby 在线运行环境](http://www.compileonline.com/execute_ruby_online.php) 使用这个可以在线运行ruby. 查看执行结果。对于机器没有装ruby,这个是极好的平台。  \n\n &nbsp;&nbsp;&nbsp;&nbsp;然后是学习Liquid. **Liquid**这个本身是用ruby写的。所以只需要会用就行了。语法很像JSP.   \n![Liquid语法example](http://note.youdao.com/yws/public/resource/8a55ddd27d075e71ac8a8d14e6f58a41/671FD472DEC849C3B7B9F94A6A67DD6B)\n\n &nbsp;&nbsp;&nbsp;&nbsp;YAML. 这个全称是'**YAML Ain't Markup Language。**'。定义看起来和GNU很想。这个鬼东西不希望采用XML的方式。基本是做配置文件使用的。如果想细细学习。[猛击这里](http://zh.wikipedia.org/zh-cn/YAML)。在Octopress中基本上也就是定义了一下全局的某些量的true,false.其他基本上没有用。   \n\n## 1. 开始修改Octopress blog\n\n### 1.1 Octopress 简单介绍\n\n &nbsp;&nbsp;&nbsp;&nbsp;Octopress. 这个是继承了Liquid.然后加了一些plugins.最主要的plugin是plugins/octopress\\_filters.rb. Octopress的工作原理就是使用Liquid对各种文档进行渲染生成html. 只不过比原始的Liquid的功能更多。另外使用Rake对各种命令打包。Octopress最重要的几个目录是: source, plugin. Octopress会先进行渲染，然后将渲染后的文件放入到public目录中，之后再将public目录中的文件移动到\\_deploy目录下。然后通过git上传\\_deploy目录完成发布。所以如果你想加入什么自己新写的html不要放到public或者\\_deploy目录下。要放在source目录完成发布。所以如果你想加入什么自己新写的html不要放到public或者\\_deploy目录下。要放在source目录下。比如我为自己的blog自定义了一个404.html.那么就要放入到source目录下。或者放入其他目录下并且改写Rakefile, 改写 “**multitask :push**”中的命令。   \n\n### 1.2 Octopress source的文件目录结构。   \n\n *  首先是\\_posts这个目录。这个是用来存放你用markdown写的blog的。使用rake new\\_post['xxxx'] 就可有创建一篇名为xxxx.markdown的文件。\n *  \\_includes这个目录。这个目录是引用各种模板html的。例如我的jiathis脚本和google ads脚本.我个人一般会将这些第三方存放在\\_includes/post目录下。引用的时候使用{&#37; include post/xxx.html &#37;}. 如果是在\\_include下的article.html,引用则为{&#37; include article.html &#37;}. 其中最重要的是article.html文件。这个每篇文章的显示。并且对于首页和具体blog都是引用的article.html. article.html中有 **{&#37; if index &#37;}**，如果index为true,则是首页。\n *  \\_layouts这个目录，这个目录是对应着每篇文章的样式(当点进某篇文章后，这个目录下的文件就开始其作用)。其中最重要是post.html这个文件。修改也主要是修改这个。\n *  index.html. 这个就是首页了。页面的排版都在这里。\n \n## 2. 实战  \n\n### 2.1 jiathis 添加\n &nbsp;&nbsp;&nbsp;&nbsp; 下面以jiathis的添加为例。  \n![jiathis 图标](http://note.youdao.com/yws/public/resource/8a55ddd27d075e71ac8a8d14e6f58a41/412D2139E39C487BAA77D2E43A2A442C)   \n &nbsp;&nbsp;&nbsp;&nbsp; 加入jiathis需要修改以下这些文件：  \n\n * 添加 source/\\_include/post/jiathis.html （不用照抄，直接在jiathis.com中找找同样的html即可。）  \n![jiathis.html](http://note.youdao.com/yws/public/resource/8a55ddd27d075e71ac8a8d14e6f58a41/4182C91E8C5F4F7C833C251570D109E4)    \n\n * source/\\_include/article.html 修改为：   \n![jiathis 放入article.html的位置](http://note.youdao.com/yws/public/resource/8a55ddd27d075e71ac8a8d14e6f58a41/25EE2B2EE60D49D5868663E6BD80C2F4)\n  图中修改的位置是点击到详细页面后，jiathis出现。如果希望在首页就出现，一种可以修改 else之前的，或者直接修改source/index.html文件  \n\n### 2.2 修改侧边栏\n  &nbsp;&nbsp;&nbsp;&nbsp; 如果你的blog有侧边栏的需求的话。那么需要改两个地方：一个是post.html,另外一个是index.html. Octopress的页面控制基本就是由这两个文件组成。index.html是控制首页。而post.html是控制详细页。\n\n * source/\\_layouts/post.html 修改最下方，例如下图(不要照抄)：  \n![sidebar](http://note.youdao.com/yws/public/resource/8a55ddd27d075e71ac8a8d14e6f58a41/A5AB8C677BCB45D09CA2ED0D43A359B8)\n\n * source/index.html 也是修改最下方。   \n\n![index sidebar](http://note.youdao.com/yws/public/resource/8a55ddd27d075e71ac8a8d14e6f58a41/B49102887AFD49238793A6D57F3365A6)\n\n## 4. 添加404页面。\n\n &nbsp;&nbsp;&nbsp;&nbsp; github上的404页面可以定制。只需要在index.html那个目录中加入一个404.html即可。例如我的：   \n![404.html](http://note.youdao.com/yws/public/resource/8a55ddd27d075e71ac8a8d14e6f58a41/9518399117EE4D2BB4BD81B1548DC979)\n\n \n## 3. 总结\n\n  &nbsp;&nbsp;&nbsp;&nbsp; 之前觉得这个Octopress很cool,后来才发现上了贼船。这东西定制起来还是比较费劲。另外最费劲的就是Octopress升级。下一章讲如何升级。不过还是劝大家暂时不要升级，下个版本感觉不稳定，有很多诡异的问题产生，而且它的兼容性也没有做好。还有就是在markdown里写Liquid脚本。这才是个渣。因为有时候希望这些脚本被显示的展示给用户，那么就需要将这些脚本转为16进制，否则Liquid就会解析该代码。所以用16进制写{&#37;&#37;}，或者直接使用截图的方法。另外Octopress的双引号解析更渣，都解析反了...所以推荐使用单引号。\n\n\n \n","slug":"2013-07-21-modify-octopress-blog","published":1,"updated":"2017-06-05T02:58:20.000Z","photos":[],"link":"","_id":"cj3jjrdu700080emj202rs0uo","content":"<p> &nbsp;&nbsp;&nbsp;&nbsp;这几天一直在捣鼓blog.因为很久没有用<strong>Octopress</strong>写blog.另外也没有碰HTML相关。所以写markdown或者改Octopress都手生。这里把各种修改方法一一记下。要学习的是<strong>ruby</strong>, <strong>Liquid</strong>.  </p>\n<a id=\"more\"></a>\n<h2 id=\"0-开始学习\"><a href=\"#0-开始学习\" class=\"headerlink\" title=\"0.开始学习\"></a>0.开始学习</h2><p> &nbsp;&nbsp;&nbsp;&nbsp;学习ruby推荐以下这几个网站：  </p>\n<ul>\n<li><a href=\"http://ruby-doc.org/\" title=\"http://ruby-doc.org/\" target=\"_blank\" rel=\"external\">ruby doc</a></li>\n<li><a href=\"http://www.ruby-lang.org/zh_cn/documentation/\" target=\"_blank\" rel=\"external\">ruby中文的官方文档</a></li>\n<li><p><a href=\"http://www.compileonline.com/execute_ruby_online.php\" target=\"_blank\" rel=\"external\">ruby 在线运行环境</a> 使用这个可以在线运行ruby. 查看执行结果。对于机器没有装ruby,这个是极好的平台。  </p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;然后是学习Liquid. <strong>Liquid</strong>这个本身是用ruby写的。所以只需要会用就行了。语法很像JSP.<br><img src=\"http://note.youdao.com/yws/public/resource/8a55ddd27d075e71ac8a8d14e6f58a41/671FD472DEC849C3B7B9F94A6A67DD6B\" alt=\"Liquid语法example\"></p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;YAML. 这个全称是’<strong>YAML Ain’t Markup Language。</strong>‘。定义看起来和GNU很想。这个鬼东西不希望采用XML的方式。基本是做配置文件使用的。如果想细细学习。<a href=\"http://zh.wikipedia.org/zh-cn/YAML\" target=\"_blank\" rel=\"external\">猛击这里</a>。在Octopress中基本上也就是定义了一下全局的某些量的true,false.其他基本上没有用。   </p>\n</li>\n</ul>\n<h2 id=\"1-开始修改Octopress-blog\"><a href=\"#1-开始修改Octopress-blog\" class=\"headerlink\" title=\"1. 开始修改Octopress blog\"></a>1. 开始修改Octopress blog</h2><h3 id=\"1-1-Octopress-简单介绍\"><a href=\"#1-1-Octopress-简单介绍\" class=\"headerlink\" title=\"1.1 Octopress 简单介绍\"></a>1.1 Octopress 简单介绍</h3><p> &nbsp;&nbsp;&nbsp;&nbsp;Octopress. 这个是继承了Liquid.然后加了一些plugins.最主要的plugin是plugins/octopress_filters.rb. Octopress的工作原理就是使用Liquid对各种文档进行渲染生成html. 只不过比原始的Liquid的功能更多。另外使用Rake对各种命令打包。Octopress最重要的几个目录是: source, plugin. Octopress会先进行渲染，然后将渲染后的文件放入到public目录中，之后再将public目录中的文件移动到_deploy目录下。然后通过git上传_deploy目录完成发布。所以如果你想加入什么自己新写的html不要放到public或者_deploy目录下。要放在source目录完成发布。所以如果你想加入什么自己新写的html不要放到public或者_deploy目录下。要放在source目录下。比如我为自己的blog自定义了一个404.html.那么就要放入到source目录下。或者放入其他目录下并且改写Rakefile, 改写 “<strong>multitask :push</strong>”中的命令。   </p>\n<h3 id=\"1-2-Octopress-source的文件目录结构。\"><a href=\"#1-2-Octopress-source的文件目录结构。\" class=\"headerlink\" title=\"1.2 Octopress source的文件目录结构。\"></a>1.2 Octopress source的文件目录结构。</h3><ul>\n<li>首先是_posts这个目录。这个是用来存放你用markdown写的blog的。使用rake new_post[‘xxxx’] 就可有创建一篇名为xxxx.markdown的文件。</li>\n<li>_includes这个目录。这个目录是引用各种模板html的。例如我的jiathis脚本和google ads脚本.我个人一般会将这些第三方存放在_includes/post目录下。引用的时候使用{&#37; include post/xxx.html &#37;}. 如果是在_include下的article.html,引用则为{&#37; include article.html &#37;}. 其中最重要的是article.html文件。这个每篇文章的显示。并且对于首页和具体blog都是引用的article.html. article.html中有 <strong>{&#37; if index &#37;}</strong>，如果index为true,则是首页。</li>\n<li>_layouts这个目录，这个目录是对应着每篇文章的样式(当点进某篇文章后，这个目录下的文件就开始其作用)。其中最重要是post.html这个文件。修改也主要是修改这个。</li>\n<li>index.html. 这个就是首页了。页面的排版都在这里。</li>\n</ul>\n<h2 id=\"2-实战\"><a href=\"#2-实战\" class=\"headerlink\" title=\"2. 实战\"></a>2. 实战</h2><h3 id=\"2-1-jiathis-添加\"><a href=\"#2-1-jiathis-添加\" class=\"headerlink\" title=\"2.1 jiathis 添加\"></a>2.1 jiathis 添加</h3><p> &nbsp;&nbsp;&nbsp;&nbsp; 下面以jiathis的添加为例。<br><img src=\"http://note.youdao.com/yws/public/resource/8a55ddd27d075e71ac8a8d14e6f58a41/412D2139E39C487BAA77D2E43A2A442C\" alt=\"jiathis 图标\"><br> &nbsp;&nbsp;&nbsp;&nbsp; 加入jiathis需要修改以下这些文件：  </p>\n<ul>\n<li><p>添加 source/_include/post/jiathis.html （不用照抄，直接在jiathis.com中找找同样的html即可。）<br><img src=\"http://note.youdao.com/yws/public/resource/8a55ddd27d075e71ac8a8d14e6f58a41/4182C91E8C5F4F7C833C251570D109E4\" alt=\"jiathis.html\">    </p>\n</li>\n<li><p>source/_include/article.html 修改为：<br><img src=\"http://note.youdao.com/yws/public/resource/8a55ddd27d075e71ac8a8d14e6f58a41/25EE2B2EE60D49D5868663E6BD80C2F4\" alt=\"jiathis 放入article.html的位置\"><br>图中修改的位置是点击到详细页面后，jiathis出现。如果希望在首页就出现，一种可以修改 else之前的，或者直接修改source/index.html文件  </p>\n</li>\n</ul>\n<h3 id=\"2-2-修改侧边栏\"><a href=\"#2-2-修改侧边栏\" class=\"headerlink\" title=\"2.2 修改侧边栏\"></a>2.2 修改侧边栏</h3><p>  &nbsp;&nbsp;&nbsp;&nbsp; 如果你的blog有侧边栏的需求的话。那么需要改两个地方：一个是post.html,另外一个是index.html. Octopress的页面控制基本就是由这两个文件组成。index.html是控制首页。而post.html是控制详细页。</p>\n<ul>\n<li><p>source/_layouts/post.html 修改最下方，例如下图(不要照抄)：<br><img src=\"http://note.youdao.com/yws/public/resource/8a55ddd27d075e71ac8a8d14e6f58a41/A5AB8C677BCB45D09CA2ED0D43A359B8\" alt=\"sidebar\"></p>\n</li>\n<li><p>source/index.html 也是修改最下方。   </p>\n</li>\n</ul>\n<p><img src=\"http://note.youdao.com/yws/public/resource/8a55ddd27d075e71ac8a8d14e6f58a41/B49102887AFD49238793A6D57F3365A6\" alt=\"index sidebar\"></p>\n<h2 id=\"4-添加404页面。\"><a href=\"#4-添加404页面。\" class=\"headerlink\" title=\"4. 添加404页面。\"></a>4. 添加404页面。</h2><p> &nbsp;&nbsp;&nbsp;&nbsp; github上的404页面可以定制。只需要在index.html那个目录中加入一个404.html即可。例如我的：<br><img src=\"http://note.youdao.com/yws/public/resource/8a55ddd27d075e71ac8a8d14e6f58a41/9518399117EE4D2BB4BD81B1548DC979\" alt=\"404.html\"></p>\n<h2 id=\"3-总结\"><a href=\"#3-总结\" class=\"headerlink\" title=\"3. 总结\"></a>3. 总结</h2><p>  &nbsp;&nbsp;&nbsp;&nbsp; 之前觉得这个Octopress很cool,后来才发现上了贼船。这东西定制起来还是比较费劲。另外最费劲的就是Octopress升级。下一章讲如何升级。不过还是劝大家暂时不要升级，下个版本感觉不稳定，有很多诡异的问题产生，而且它的兼容性也没有做好。还有就是在markdown里写Liquid脚本。这才是个渣。因为有时候希望这些脚本被显示的展示给用户，那么就需要将这些脚本转为16进制，否则Liquid就会解析该代码。所以用16进制写{&#37;&#37;}，或者直接使用截图的方法。另外Octopress的双引号解析更渣，都解析反了…所以推荐使用单引号。</p>\n","site":{"data":{}},"excerpt":"<p> &nbsp;&nbsp;&nbsp;&nbsp;这几天一直在捣鼓blog.因为很久没有用<strong>Octopress</strong>写blog.另外也没有碰HTML相关。所以写markdown或者改Octopress都手生。这里把各种修改方法一一记下。要学习的是<strong>ruby</strong>, <strong>Liquid</strong>.  </p>","more":"<h2 id=\"0-开始学习\"><a href=\"#0-开始学习\" class=\"headerlink\" title=\"0.开始学习\"></a>0.开始学习</h2><p> &nbsp;&nbsp;&nbsp;&nbsp;学习ruby推荐以下这几个网站：  </p>\n<ul>\n<li><a href=\"http://ruby-doc.org/\" title=\"http://ruby-doc.org/\" target=\"_blank\" rel=\"external\">ruby doc</a></li>\n<li><a href=\"http://www.ruby-lang.org/zh_cn/documentation/\" target=\"_blank\" rel=\"external\">ruby中文的官方文档</a></li>\n<li><p><a href=\"http://www.compileonline.com/execute_ruby_online.php\" target=\"_blank\" rel=\"external\">ruby 在线运行环境</a> 使用这个可以在线运行ruby. 查看执行结果。对于机器没有装ruby,这个是极好的平台。  </p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;然后是学习Liquid. <strong>Liquid</strong>这个本身是用ruby写的。所以只需要会用就行了。语法很像JSP.<br><img src=\"http://note.youdao.com/yws/public/resource/8a55ddd27d075e71ac8a8d14e6f58a41/671FD472DEC849C3B7B9F94A6A67DD6B\" alt=\"Liquid语法example\"></p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;YAML. 这个全称是’<strong>YAML Ain’t Markup Language。</strong>‘。定义看起来和GNU很想。这个鬼东西不希望采用XML的方式。基本是做配置文件使用的。如果想细细学习。<a href=\"http://zh.wikipedia.org/zh-cn/YAML\" target=\"_blank\" rel=\"external\">猛击这里</a>。在Octopress中基本上也就是定义了一下全局的某些量的true,false.其他基本上没有用。   </p>\n</li>\n</ul>\n<h2 id=\"1-开始修改Octopress-blog\"><a href=\"#1-开始修改Octopress-blog\" class=\"headerlink\" title=\"1. 开始修改Octopress blog\"></a>1. 开始修改Octopress blog</h2><h3 id=\"1-1-Octopress-简单介绍\"><a href=\"#1-1-Octopress-简单介绍\" class=\"headerlink\" title=\"1.1 Octopress 简单介绍\"></a>1.1 Octopress 简单介绍</h3><p> &nbsp;&nbsp;&nbsp;&nbsp;Octopress. 这个是继承了Liquid.然后加了一些plugins.最主要的plugin是plugins/octopress_filters.rb. Octopress的工作原理就是使用Liquid对各种文档进行渲染生成html. 只不过比原始的Liquid的功能更多。另外使用Rake对各种命令打包。Octopress最重要的几个目录是: source, plugin. Octopress会先进行渲染，然后将渲染后的文件放入到public目录中，之后再将public目录中的文件移动到_deploy目录下。然后通过git上传_deploy目录完成发布。所以如果你想加入什么自己新写的html不要放到public或者_deploy目录下。要放在source目录完成发布。所以如果你想加入什么自己新写的html不要放到public或者_deploy目录下。要放在source目录下。比如我为自己的blog自定义了一个404.html.那么就要放入到source目录下。或者放入其他目录下并且改写Rakefile, 改写 “<strong>multitask :push</strong>”中的命令。   </p>\n<h3 id=\"1-2-Octopress-source的文件目录结构。\"><a href=\"#1-2-Octopress-source的文件目录结构。\" class=\"headerlink\" title=\"1.2 Octopress source的文件目录结构。\"></a>1.2 Octopress source的文件目录结构。</h3><ul>\n<li>首先是_posts这个目录。这个是用来存放你用markdown写的blog的。使用rake new_post[‘xxxx’] 就可有创建一篇名为xxxx.markdown的文件。</li>\n<li>_includes这个目录。这个目录是引用各种模板html的。例如我的jiathis脚本和google ads脚本.我个人一般会将这些第三方存放在_includes/post目录下。引用的时候使用{&#37; include post/xxx.html &#37;}. 如果是在_include下的article.html,引用则为{&#37; include article.html &#37;}. 其中最重要的是article.html文件。这个每篇文章的显示。并且对于首页和具体blog都是引用的article.html. article.html中有 <strong>{&#37; if index &#37;}</strong>，如果index为true,则是首页。</li>\n<li>_layouts这个目录，这个目录是对应着每篇文章的样式(当点进某篇文章后，这个目录下的文件就开始其作用)。其中最重要是post.html这个文件。修改也主要是修改这个。</li>\n<li>index.html. 这个就是首页了。页面的排版都在这里。</li>\n</ul>\n<h2 id=\"2-实战\"><a href=\"#2-实战\" class=\"headerlink\" title=\"2. 实战\"></a>2. 实战</h2><h3 id=\"2-1-jiathis-添加\"><a href=\"#2-1-jiathis-添加\" class=\"headerlink\" title=\"2.1 jiathis 添加\"></a>2.1 jiathis 添加</h3><p> &nbsp;&nbsp;&nbsp;&nbsp; 下面以jiathis的添加为例。<br><img src=\"http://note.youdao.com/yws/public/resource/8a55ddd27d075e71ac8a8d14e6f58a41/412D2139E39C487BAA77D2E43A2A442C\" alt=\"jiathis 图标\"><br> &nbsp;&nbsp;&nbsp;&nbsp; 加入jiathis需要修改以下这些文件：  </p>\n<ul>\n<li><p>添加 source/_include/post/jiathis.html （不用照抄，直接在jiathis.com中找找同样的html即可。）<br><img src=\"http://note.youdao.com/yws/public/resource/8a55ddd27d075e71ac8a8d14e6f58a41/4182C91E8C5F4F7C833C251570D109E4\" alt=\"jiathis.html\">    </p>\n</li>\n<li><p>source/_include/article.html 修改为：<br><img src=\"http://note.youdao.com/yws/public/resource/8a55ddd27d075e71ac8a8d14e6f58a41/25EE2B2EE60D49D5868663E6BD80C2F4\" alt=\"jiathis 放入article.html的位置\"><br>图中修改的位置是点击到详细页面后，jiathis出现。如果希望在首页就出现，一种可以修改 else之前的，或者直接修改source/index.html文件  </p>\n</li>\n</ul>\n<h3 id=\"2-2-修改侧边栏\"><a href=\"#2-2-修改侧边栏\" class=\"headerlink\" title=\"2.2 修改侧边栏\"></a>2.2 修改侧边栏</h3><p>  &nbsp;&nbsp;&nbsp;&nbsp; 如果你的blog有侧边栏的需求的话。那么需要改两个地方：一个是post.html,另外一个是index.html. Octopress的页面控制基本就是由这两个文件组成。index.html是控制首页。而post.html是控制详细页。</p>\n<ul>\n<li><p>source/_layouts/post.html 修改最下方，例如下图(不要照抄)：<br><img src=\"http://note.youdao.com/yws/public/resource/8a55ddd27d075e71ac8a8d14e6f58a41/A5AB8C677BCB45D09CA2ED0D43A359B8\" alt=\"sidebar\"></p>\n</li>\n<li><p>source/index.html 也是修改最下方。   </p>\n</li>\n</ul>\n<p><img src=\"http://note.youdao.com/yws/public/resource/8a55ddd27d075e71ac8a8d14e6f58a41/B49102887AFD49238793A6D57F3365A6\" alt=\"index sidebar\"></p>\n<h2 id=\"4-添加404页面。\"><a href=\"#4-添加404页面。\" class=\"headerlink\" title=\"4. 添加404页面。\"></a>4. 添加404页面。</h2><p> &nbsp;&nbsp;&nbsp;&nbsp; github上的404页面可以定制。只需要在index.html那个目录中加入一个404.html即可。例如我的：<br><img src=\"http://note.youdao.com/yws/public/resource/8a55ddd27d075e71ac8a8d14e6f58a41/9518399117EE4D2BB4BD81B1548DC979\" alt=\"404.html\"></p>\n<h2 id=\"3-总结\"><a href=\"#3-总结\" class=\"headerlink\" title=\"3. 总结\"></a>3. 总结</h2><p>  &nbsp;&nbsp;&nbsp;&nbsp; 之前觉得这个Octopress很cool,后来才发现上了贼船。这东西定制起来还是比较费劲。另外最费劲的就是Octopress升级。下一章讲如何升级。不过还是劝大家暂时不要升级，下个版本感觉不稳定，有很多诡异的问题产生，而且它的兼容性也没有做好。还有就是在markdown里写Liquid脚本。这才是个渣。因为有时候希望这些脚本被显示的展示给用户，那么就需要将这些脚本转为16进制，否则Liquid就会解析该代码。所以用16进制写{&#37;&#37;}，或者直接使用截图的方法。另外Octopress的双引号解析更渣，都解析反了…所以推荐使用单引号。</p>"},{"layout":"post","title":"IT Jobs","date":"2010-12-05T16:00:00.000Z","wordpress_id":341,"comments":1,"_content":"<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_description\" content=\"找工作的一些经验教训和总结\" />\n<meta name=\"_su_keywords\" content=\"经验,教训,总结,IT\" />\n<meta name=\"_su_rich_snippet_type\" content=\"none\" />\n<meta name=\"_su_title\" content=\"找工作，IT job,IT工作\" />\n<meta name=\"views\" content=\"475\" />\n工作是定下来了。与之前本科的工作相比，没有什么值得骄傲的。只不过薪水多了一些。不过公司不大，还在成长阶段。福利待遇算是可以。户口问题是要拼人品的。大概就这些。\n\n找工作面试笔试还是很重要的。我往往死在笔试那一环，所以以后的面试自然都没有机会。或者往往笔试成绩不佳，当了别人的备胎，等别人推掉了那个offer，自己才能有点机会。所以工作还是早点找或者晚点找。中间时段和别人抢着找，实在吃力不讨好。主要因为在普通大学读书的小朋友们有更多的时间复习，而自己却还必须在实验室干活。幸好在研究生之前有过大公司的实习经历。否则简历关就会被筛掉。在科苑读研有不用交学费的好处，不过读书阶段不能实习而且需要在实验室干活是一个弊端。不过对于找个稳定工作的人来说，留在科苑也是不错的选择。今天还碰到一位刚拿到实验室offer的小朋友，他还在问这里有没有饭补。\n\n首先呢，要比别人更早的去面试笔试。我的两个offer就是在8月时搞定的。当别人还在看书复习时，offer已经到手。这个时候不要吝惜各种内推的途径以及各个bbs中的工作帖。另外值得注意的一点是：一旦被内推，一定不要参加它的大规模笔试。否则内推就没有用了。\n\n得到offer最重要是看户口，钱什么的都是浮云。因为物价在上涨，通货在膨胀。当然有些hr说的户口，也是很不靠谱的。这个要自己衡量一下。\n\n如果不幸的沦落到需要参加大规模笔试。那就几个人一起准备一下吧。一个人准备是很难搞定所有可能的问题的。不过笔试题大题小题变化不大。大题：无非是链表，排序，动态规划。小题：操作系统，数据库，语言编译加运行。反正变着花样，这个公司的题明年会在另一个公司的题中出现。背诵默写一下总会过笔试的。即使你以前没有写过代码。葵花宝典（程序员面试宝典）等秘笈一定一定要看的...要做好自宫的准备...当然看到最后一页会发现自宫是没有必要的...\n\n面试大都问问项目经历，哪个项目重要，你的贡献，你的优缺点。然后现场技术题。不幸的是我11月初才掌握技术题通用写法，并传授给了我家mm。\n\noffer没有拿很多，有一部分是我说已经有XX offer后，他们觉得自己给不了那么多，索性把我拒掉了。偶太诚实了。\n\n一两个小时的面试，很难面出一个人啥品质。谦虚的人可能被认为自卑，技术大牛被认为傲慢。反正啥情况都会出现。往往在于你能不能让面官看中...这和相亲以及闪婚差不多。当然首先要从hr那里打听：面你的是谁以及性别问题。例如mm面mm,那就不能打扮的太pp,否则面官会有很大压力。依此类推...当然这些都是从我mm的面经中总结出来的。\n\nIT工作的大类一般分三种：项目经理(产品经理)，开发(研发)，测试。当然还有研究员等等。我只面过开发研发，其他一概忽略。主要因为在这个浮躁的大环境下，核心技术的开发是有必要的。测试的氛围不行裁员严重，另外待遇也低。\n\n另外语言相对来说较为重要，虽然行业中有传言：只要懂编程，不用太在意语言。但其实招聘的时候这方面是相当看重的。例如招网站或者做J2EE项目的就不会看中c程序员。而操作系统，数据库，算法开发的招聘鄙视java程序员。所以还是不要轻信传言了。大公司的招聘只看潜力不看重编程能力的年代一去不复返了.\n\n另外发现一个很有趣的现象：就是公司培训。我惊讶于某些逃课的小朋友会看重这个事情。\n\n当然工作最重要的是钱多、清闲、离家近。找工作就像买机器一样，挑个性价比最高的。只不过这个机器也会挑人罢了。\n","source":"_posts/2010-12-06-jobs.markdown","raw":"---\nlayout: post\ntitle: \"IT Jobs\"\ndate: 2010-12-6\nwordpress_id: 341\ncomments: true\ncategories: [\"first\", \"it\", \"rw\", \"see-hear\", \"工作\", \"教训\", \"经验\"]\n---\n<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_description\" content=\"找工作的一些经验教训和总结\" />\n<meta name=\"_su_keywords\" content=\"经验,教训,总结,IT\" />\n<meta name=\"_su_rich_snippet_type\" content=\"none\" />\n<meta name=\"_su_title\" content=\"找工作，IT job,IT工作\" />\n<meta name=\"views\" content=\"475\" />\n工作是定下来了。与之前本科的工作相比，没有什么值得骄傲的。只不过薪水多了一些。不过公司不大，还在成长阶段。福利待遇算是可以。户口问题是要拼人品的。大概就这些。\n\n找工作面试笔试还是很重要的。我往往死在笔试那一环，所以以后的面试自然都没有机会。或者往往笔试成绩不佳，当了别人的备胎，等别人推掉了那个offer，自己才能有点机会。所以工作还是早点找或者晚点找。中间时段和别人抢着找，实在吃力不讨好。主要因为在普通大学读书的小朋友们有更多的时间复习，而自己却还必须在实验室干活。幸好在研究生之前有过大公司的实习经历。否则简历关就会被筛掉。在科苑读研有不用交学费的好处，不过读书阶段不能实习而且需要在实验室干活是一个弊端。不过对于找个稳定工作的人来说，留在科苑也是不错的选择。今天还碰到一位刚拿到实验室offer的小朋友，他还在问这里有没有饭补。\n\n首先呢，要比别人更早的去面试笔试。我的两个offer就是在8月时搞定的。当别人还在看书复习时，offer已经到手。这个时候不要吝惜各种内推的途径以及各个bbs中的工作帖。另外值得注意的一点是：一旦被内推，一定不要参加它的大规模笔试。否则内推就没有用了。\n\n得到offer最重要是看户口，钱什么的都是浮云。因为物价在上涨，通货在膨胀。当然有些hr说的户口，也是很不靠谱的。这个要自己衡量一下。\n\n如果不幸的沦落到需要参加大规模笔试。那就几个人一起准备一下吧。一个人准备是很难搞定所有可能的问题的。不过笔试题大题小题变化不大。大题：无非是链表，排序，动态规划。小题：操作系统，数据库，语言编译加运行。反正变着花样，这个公司的题明年会在另一个公司的题中出现。背诵默写一下总会过笔试的。即使你以前没有写过代码。葵花宝典（程序员面试宝典）等秘笈一定一定要看的...要做好自宫的准备...当然看到最后一页会发现自宫是没有必要的...\n\n面试大都问问项目经历，哪个项目重要，你的贡献，你的优缺点。然后现场技术题。不幸的是我11月初才掌握技术题通用写法，并传授给了我家mm。\n\noffer没有拿很多，有一部分是我说已经有XX offer后，他们觉得自己给不了那么多，索性把我拒掉了。偶太诚实了。\n\n一两个小时的面试，很难面出一个人啥品质。谦虚的人可能被认为自卑，技术大牛被认为傲慢。反正啥情况都会出现。往往在于你能不能让面官看中...这和相亲以及闪婚差不多。当然首先要从hr那里打听：面你的是谁以及性别问题。例如mm面mm,那就不能打扮的太pp,否则面官会有很大压力。依此类推...当然这些都是从我mm的面经中总结出来的。\n\nIT工作的大类一般分三种：项目经理(产品经理)，开发(研发)，测试。当然还有研究员等等。我只面过开发研发，其他一概忽略。主要因为在这个浮躁的大环境下，核心技术的开发是有必要的。测试的氛围不行裁员严重，另外待遇也低。\n\n另外语言相对来说较为重要，虽然行业中有传言：只要懂编程，不用太在意语言。但其实招聘的时候这方面是相当看重的。例如招网站或者做J2EE项目的就不会看中c程序员。而操作系统，数据库，算法开发的招聘鄙视java程序员。所以还是不要轻信传言了。大公司的招聘只看潜力不看重编程能力的年代一去不复返了.\n\n另外发现一个很有趣的现象：就是公司培训。我惊讶于某些逃课的小朋友会看重这个事情。\n\n当然工作最重要的是钱多、清闲、离家近。找工作就像买机器一样，挑个性价比最高的。只不过这个机器也会挑人罢了。\n","slug":"2010-12-06-jobs","published":1,"updated":"2017-06-05T02:59:33.000Z","photos":[],"link":"","_id":"cj3jjssn100000rmjawzkch99","content":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_description\" content=\"找工作的一些经验教训和总结\"></p>\n<p><meta name=\"_su_keywords\" content=\"经验,教训,总结,IT\"></p>\n<p><meta name=\"_su_rich_snippet_type\" content=\"none\"></p>\n<p><meta name=\"_su_title\" content=\"找工作，IT job,IT工作\"></p>\n<p><meta name=\"views\" content=\"475\"><br>工作是定下来了。与之前本科的工作相比，没有什么值得骄傲的。只不过薪水多了一些。不过公司不大，还在成长阶段。福利待遇算是可以。户口问题是要拼人品的。大概就这些。</p>\n<p>找工作面试笔试还是很重要的。我往往死在笔试那一环，所以以后的面试自然都没有机会。或者往往笔试成绩不佳，当了别人的备胎，等别人推掉了那个offer，自己才能有点机会。所以工作还是早点找或者晚点找。中间时段和别人抢着找，实在吃力不讨好。主要因为在普通大学读书的小朋友们有更多的时间复习，而自己却还必须在实验室干活。幸好在研究生之前有过大公司的实习经历。否则简历关就会被筛掉。在科苑读研有不用交学费的好处，不过读书阶段不能实习而且需要在实验室干活是一个弊端。不过对于找个稳定工作的人来说，留在科苑也是不错的选择。今天还碰到一位刚拿到实验室offer的小朋友，他还在问这里有没有饭补。</p>\n<p>首先呢，要比别人更早的去面试笔试。我的两个offer就是在8月时搞定的。当别人还在看书复习时，offer已经到手。这个时候不要吝惜各种内推的途径以及各个bbs中的工作帖。另外值得注意的一点是：一旦被内推，一定不要参加它的大规模笔试。否则内推就没有用了。</p>\n<p>得到offer最重要是看户口，钱什么的都是浮云。因为物价在上涨，通货在膨胀。当然有些hr说的户口，也是很不靠谱的。这个要自己衡量一下。</p>\n<p>如果不幸的沦落到需要参加大规模笔试。那就几个人一起准备一下吧。一个人准备是很难搞定所有可能的问题的。不过笔试题大题小题变化不大。大题：无非是链表，排序，动态规划。小题：操作系统，数据库，语言编译加运行。反正变着花样，这个公司的题明年会在另一个公司的题中出现。背诵默写一下总会过笔试的。即使你以前没有写过代码。葵花宝典（程序员面试宝典）等秘笈一定一定要看的…要做好自宫的准备…当然看到最后一页会发现自宫是没有必要的…</p>\n<p>面试大都问问项目经历，哪个项目重要，你的贡献，你的优缺点。然后现场技术题。不幸的是我11月初才掌握技术题通用写法，并传授给了我家mm。</p>\n<p>offer没有拿很多，有一部分是我说已经有XX offer后，他们觉得自己给不了那么多，索性把我拒掉了。偶太诚实了。</p>\n<p>一两个小时的面试，很难面出一个人啥品质。谦虚的人可能被认为自卑，技术大牛被认为傲慢。反正啥情况都会出现。往往在于你能不能让面官看中…这和相亲以及闪婚差不多。当然首先要从hr那里打听：面你的是谁以及性别问题。例如mm面mm,那就不能打扮的太pp,否则面官会有很大压力。依此类推…当然这些都是从我mm的面经中总结出来的。</p>\n<p>IT工作的大类一般分三种：项目经理(产品经理)，开发(研发)，测试。当然还有研究员等等。我只面过开发研发，其他一概忽略。主要因为在这个浮躁的大环境下，核心技术的开发是有必要的。测试的氛围不行裁员严重，另外待遇也低。</p>\n<p>另外语言相对来说较为重要，虽然行业中有传言：只要懂编程，不用太在意语言。但其实招聘的时候这方面是相当看重的。例如招网站或者做J2EE项目的就不会看中c程序员。而操作系统，数据库，算法开发的招聘鄙视java程序员。所以还是不要轻信传言了。大公司的招聘只看潜力不看重编程能力的年代一去不复返了.</p>\n<p>另外发现一个很有趣的现象：就是公司培训。我惊讶于某些逃课的小朋友会看重这个事情。</p>\n<p>当然工作最重要的是钱多、清闲、离家近。找工作就像买机器一样，挑个性价比最高的。只不过这个机器也会挑人罢了。</p>\n","site":{"data":{}},"excerpt":"","more":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_description\" content=\"找工作的一些经验教训和总结\"></p>\n<p><meta name=\"_su_keywords\" content=\"经验,教训,总结,IT\"></p>\n<p><meta name=\"_su_rich_snippet_type\" content=\"none\"></p>\n<p><meta name=\"_su_title\" content=\"找工作，IT job,IT工作\"></p>\n<p><meta name=\"views\" content=\"475\"><br>工作是定下来了。与之前本科的工作相比，没有什么值得骄傲的。只不过薪水多了一些。不过公司不大，还在成长阶段。福利待遇算是可以。户口问题是要拼人品的。大概就这些。</p>\n<p>找工作面试笔试还是很重要的。我往往死在笔试那一环，所以以后的面试自然都没有机会。或者往往笔试成绩不佳，当了别人的备胎，等别人推掉了那个offer，自己才能有点机会。所以工作还是早点找或者晚点找。中间时段和别人抢着找，实在吃力不讨好。主要因为在普通大学读书的小朋友们有更多的时间复习，而自己却还必须在实验室干活。幸好在研究生之前有过大公司的实习经历。否则简历关就会被筛掉。在科苑读研有不用交学费的好处，不过读书阶段不能实习而且需要在实验室干活是一个弊端。不过对于找个稳定工作的人来说，留在科苑也是不错的选择。今天还碰到一位刚拿到实验室offer的小朋友，他还在问这里有没有饭补。</p>\n<p>首先呢，要比别人更早的去面试笔试。我的两个offer就是在8月时搞定的。当别人还在看书复习时，offer已经到手。这个时候不要吝惜各种内推的途径以及各个bbs中的工作帖。另外值得注意的一点是：一旦被内推，一定不要参加它的大规模笔试。否则内推就没有用了。</p>\n<p>得到offer最重要是看户口，钱什么的都是浮云。因为物价在上涨，通货在膨胀。当然有些hr说的户口，也是很不靠谱的。这个要自己衡量一下。</p>\n<p>如果不幸的沦落到需要参加大规模笔试。那就几个人一起准备一下吧。一个人准备是很难搞定所有可能的问题的。不过笔试题大题小题变化不大。大题：无非是链表，排序，动态规划。小题：操作系统，数据库，语言编译加运行。反正变着花样，这个公司的题明年会在另一个公司的题中出现。背诵默写一下总会过笔试的。即使你以前没有写过代码。葵花宝典（程序员面试宝典）等秘笈一定一定要看的…要做好自宫的准备…当然看到最后一页会发现自宫是没有必要的…</p>\n<p>面试大都问问项目经历，哪个项目重要，你的贡献，你的优缺点。然后现场技术题。不幸的是我11月初才掌握技术题通用写法，并传授给了我家mm。</p>\n<p>offer没有拿很多，有一部分是我说已经有XX offer后，他们觉得自己给不了那么多，索性把我拒掉了。偶太诚实了。</p>\n<p>一两个小时的面试，很难面出一个人啥品质。谦虚的人可能被认为自卑，技术大牛被认为傲慢。反正啥情况都会出现。往往在于你能不能让面官看中…这和相亲以及闪婚差不多。当然首先要从hr那里打听：面你的是谁以及性别问题。例如mm面mm,那就不能打扮的太pp,否则面官会有很大压力。依此类推…当然这些都是从我mm的面经中总结出来的。</p>\n<p>IT工作的大类一般分三种：项目经理(产品经理)，开发(研发)，测试。当然还有研究员等等。我只面过开发研发，其他一概忽略。主要因为在这个浮躁的大环境下，核心技术的开发是有必要的。测试的氛围不行裁员严重，另外待遇也低。</p>\n<p>另外语言相对来说较为重要，虽然行业中有传言：只要懂编程，不用太在意语言。但其实招聘的时候这方面是相当看重的。例如招网站或者做J2EE项目的就不会看中c程序员。而操作系统，数据库，算法开发的招聘鄙视java程序员。所以还是不要轻信传言了。大公司的招聘只看潜力不看重编程能力的年代一去不复返了.</p>\n<p>另外发现一个很有趣的现象：就是公司培训。我惊讶于某些逃课的小朋友会看重这个事情。</p>\n<p>当然工作最重要的是钱多、清闲、离家近。找工作就像买机器一样，挑个性价比最高的。只不过这个机器也会挑人罢了。</p>\n"},{"layout":"post","title":"own timer replace crontab","date":"2010-12-23T16:00:00.000Z","wordpress_id":346,"comments":1,"_content":"<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_description\" content=\"crontab can not execute some program.\nIts environment setting is hard to compare with that of system \" />\n<meta name=\"_su_keywords\" content=\"crontab,execute,environment,timer,code,setting,profile\" />\n<meta name=\"_su_rich_snippet_type\" content=\"none\" />\n<meta name=\"_su_title\" content=\"own timer replace crontab\" />\n<meta name=\"views\" content=\"460\" />\nSometime crontab in Linux or Unix can not run some program. Because the environment of crontab is not as same as that of system. If you want to know the difference between those two environments settings. look up /etc/cron.d/anacron file and ~/.profile and ~/.bashrc and xxxx. I can not remember all of them. /etc/cron.d/anacron file is just for crontab. ~/.profile and ~/.bashrc is for system. If you want to know more, search \"linux environment file\" in Google.\n\nI think to find all difference between two environment is waste time obviously. Another method is write own timer codes. So Here is my solution:\n\n\n{% codeblock %}#include &lt;iostream&gt;\n#include &lt;string&gt;\n#include &lt;stdlib.h&gt;\nusing namespace std;\n/**\n * @author chico chen chillycreator #@@&amp; gmail.com\n */\nvoid usage(){\n\tcout &lt;&lt; \"timer\"&lt;&lt;endl;\n\tcout &lt;&lt; \"input your time point:[minute] [hour] [innerday] [innerweek]\"&lt;&lt;endl;\n\tcout &lt;&lt; \"input your program name:[your program]\"&lt;&lt;endl;\n\tcout &lt;&lt; \"all of input should be more than zero!\"&lt;&lt;endl;\n\tcout &lt;&lt; \"you should run this program earlier than you wanted.\"&lt;&lt;endl;\n\tcout &lt;&lt; \"or else your program will run at next time point.\"&lt;&lt;endl;\n}\n\nint main(){\n\n\t// user input\n\tint min, hour, howday, howweek;\n\tstring program;\n\tcout&lt;&lt; \"input [min] [hour] [innerdays] [innerweeks]\"&lt;&lt;endl;\n\tcin &gt;&gt; min &gt;&gt; hour &gt;&gt; howday &gt;&gt; howweek;\n\tcout &lt;&lt;\"input your program\"&lt;&lt;endl;\n\tcin &gt;&gt; program;\n\tif (program.size() &lt;= 0 || min &lt; 0 || hour &lt; 0 || howday &lt; 0 || howweek &lt; 0){\n\t\tusage();\n\t\treturn 1;\n\t}\n\tcout &lt;&lt; \"your timer will run program at \"&lt;&lt;hour&lt;&lt;\":\"&lt;&lt;min&lt;&lt;endl;\n\tcout &lt;&lt; \"your program is \"&lt;&lt;program&lt;&lt;endl;\n\tif (0 == howday || 1 == howday){\n\t\thowday = 1;\n\t\tcout &lt;&lt; \"run this program in every day\"&lt;&lt;endl;\n\t}\n\telse{\n\t\tcout &lt;&lt; \"run this program at \"&lt;&lt;howday &lt;&lt;\" days intervals.\"&lt;&lt;endl;\n\t}\n\tif (0 == howweek){\n\t\tcout &lt;&lt; \"run this program in every week\"&lt;&lt;endl;\n\t}\n\telse{\n\t\tcout &lt;&lt; \"run this program at \"&lt;&lt;howweek &lt;&lt;\" weeks intervals.\"&lt;&lt;endl;\n\t}\n\t// set sleep time and loop time\n\tint looptime = (howday-1)*3600*24 + howweek * 7 * 3600 * 24;\n\tint sleeptime = 0;\n\tbool bFirst = true;\n\twhile(true){\n\t\ttime_t now;\n\t\ttime(&amp;now);\n\t\tstruct tm * timeinfo = localtime(&amp;now);\n\t\ttimeinfo-&gt;tm_hour = hour;\n\t\ttimeinfo-&gt;tm_min = min;\n\t\ttime_t futuretime = mktime(timeinfo);\n\t\tsleeptime = futuretime - now;\n\t\tsleeptime = sleeptime &gt;= 0 ? sleeptime : 24*3600+sleeptime;\n\t\tif (!bFirst){\n\t\t\tsleeptime += looptime;\n\t\t}\n\t\tbFirst = false;\n\t\tcout &lt;&lt; \"wait time:\"&lt;&lt;sleeptime&lt;&lt;endl;\n\t\tsleep(sleeptime);\n\t\tcout &lt;&lt; \"start to run:\"&lt;&lt;program&lt;&lt;endl;\n\t\tsystem(program.c_str());\n\t\tcout &lt;&lt; \"end program...\"&lt;&lt;endl;\n\t}\n\t// loop end\n\treturn 0;\n}{% endcodeblock %}\n\n\nWrite your own code will bring new bugs in your solution. Another drawback is spending your own time and this timer is not in common. However, you can control it!\n","source":"_posts/2010-12-24-own-timer-replace-crontab.markdown","raw":"---\nlayout: post\ntitle: \"own timer replace crontab\"\ndate: 2010-12-24\nwordpress_id: 346\ncomments: true\ncategories: [\"cc\", \"code\", \"code\", \"crontab\", \"environment\", \"execute\", \"not\", \"program\", \"timer\"]\n---\n<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_description\" content=\"crontab can not execute some program.\nIts environment setting is hard to compare with that of system \" />\n<meta name=\"_su_keywords\" content=\"crontab,execute,environment,timer,code,setting,profile\" />\n<meta name=\"_su_rich_snippet_type\" content=\"none\" />\n<meta name=\"_su_title\" content=\"own timer replace crontab\" />\n<meta name=\"views\" content=\"460\" />\nSometime crontab in Linux or Unix can not run some program. Because the environment of crontab is not as same as that of system. If you want to know the difference between those two environments settings. look up /etc/cron.d/anacron file and ~/.profile and ~/.bashrc and xxxx. I can not remember all of them. /etc/cron.d/anacron file is just for crontab. ~/.profile and ~/.bashrc is for system. If you want to know more, search \"linux environment file\" in Google.\n\nI think to find all difference between two environment is waste time obviously. Another method is write own timer codes. So Here is my solution:\n\n\n{% codeblock %}#include &lt;iostream&gt;\n#include &lt;string&gt;\n#include &lt;stdlib.h&gt;\nusing namespace std;\n/**\n * @author chico chen chillycreator #@@&amp; gmail.com\n */\nvoid usage(){\n\tcout &lt;&lt; \"timer\"&lt;&lt;endl;\n\tcout &lt;&lt; \"input your time point:[minute] [hour] [innerday] [innerweek]\"&lt;&lt;endl;\n\tcout &lt;&lt; \"input your program name:[your program]\"&lt;&lt;endl;\n\tcout &lt;&lt; \"all of input should be more than zero!\"&lt;&lt;endl;\n\tcout &lt;&lt; \"you should run this program earlier than you wanted.\"&lt;&lt;endl;\n\tcout &lt;&lt; \"or else your program will run at next time point.\"&lt;&lt;endl;\n}\n\nint main(){\n\n\t// user input\n\tint min, hour, howday, howweek;\n\tstring program;\n\tcout&lt;&lt; \"input [min] [hour] [innerdays] [innerweeks]\"&lt;&lt;endl;\n\tcin &gt;&gt; min &gt;&gt; hour &gt;&gt; howday &gt;&gt; howweek;\n\tcout &lt;&lt;\"input your program\"&lt;&lt;endl;\n\tcin &gt;&gt; program;\n\tif (program.size() &lt;= 0 || min &lt; 0 || hour &lt; 0 || howday &lt; 0 || howweek &lt; 0){\n\t\tusage();\n\t\treturn 1;\n\t}\n\tcout &lt;&lt; \"your timer will run program at \"&lt;&lt;hour&lt;&lt;\":\"&lt;&lt;min&lt;&lt;endl;\n\tcout &lt;&lt; \"your program is \"&lt;&lt;program&lt;&lt;endl;\n\tif (0 == howday || 1 == howday){\n\t\thowday = 1;\n\t\tcout &lt;&lt; \"run this program in every day\"&lt;&lt;endl;\n\t}\n\telse{\n\t\tcout &lt;&lt; \"run this program at \"&lt;&lt;howday &lt;&lt;\" days intervals.\"&lt;&lt;endl;\n\t}\n\tif (0 == howweek){\n\t\tcout &lt;&lt; \"run this program in every week\"&lt;&lt;endl;\n\t}\n\telse{\n\t\tcout &lt;&lt; \"run this program at \"&lt;&lt;howweek &lt;&lt;\" weeks intervals.\"&lt;&lt;endl;\n\t}\n\t// set sleep time and loop time\n\tint looptime = (howday-1)*3600*24 + howweek * 7 * 3600 * 24;\n\tint sleeptime = 0;\n\tbool bFirst = true;\n\twhile(true){\n\t\ttime_t now;\n\t\ttime(&amp;now);\n\t\tstruct tm * timeinfo = localtime(&amp;now);\n\t\ttimeinfo-&gt;tm_hour = hour;\n\t\ttimeinfo-&gt;tm_min = min;\n\t\ttime_t futuretime = mktime(timeinfo);\n\t\tsleeptime = futuretime - now;\n\t\tsleeptime = sleeptime &gt;= 0 ? sleeptime : 24*3600+sleeptime;\n\t\tif (!bFirst){\n\t\t\tsleeptime += looptime;\n\t\t}\n\t\tbFirst = false;\n\t\tcout &lt;&lt; \"wait time:\"&lt;&lt;sleeptime&lt;&lt;endl;\n\t\tsleep(sleeptime);\n\t\tcout &lt;&lt; \"start to run:\"&lt;&lt;program&lt;&lt;endl;\n\t\tsystem(program.c_str());\n\t\tcout &lt;&lt; \"end program...\"&lt;&lt;endl;\n\t}\n\t// loop end\n\treturn 0;\n}{% endcodeblock %}\n\n\nWrite your own code will bring new bugs in your solution. Another drawback is spending your own time and this timer is not in common. However, you can control it!\n","slug":"2010-12-24-own-timer-replace-crontab","published":1,"updated":"2017-06-05T02:59:33.000Z","photos":[],"link":"","_id":"cj3jjssna00010rmj61o7aoob","content":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_description\" content=\"crontab can not execute some program.\nIts environment setting is hard to compare with that of system \"></p>\n<p><meta name=\"_su_keywords\" content=\"crontab,execute,environment,timer,code,setting,profile\"></p>\n<p><meta name=\"_su_rich_snippet_type\" content=\"none\"></p>\n<p><meta name=\"_su_title\" content=\"own timer replace crontab\"></p>\n<p><meta name=\"views\" content=\"460\"><br>Sometime crontab in Linux or Unix can not run some program. Because the environment of crontab is not as same as that of system. If you want to know the difference between those two environments settings. look up /etc/cron.d/anacron file and ~/.profile and ~/.bashrc and xxxx. I can not remember all of them. /etc/cron.d/anacron file is just for crontab. ~/.profile and ~/.bashrc is for system. If you want to know more, search “linux environment file” in Google.</p>\n<p>I think to find all difference between two environment is waste time obviously. Another method is write own timer codes. So Here is my solution:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include &amp;lt;iostream&amp;gt;</div><div class=\"line\">#include &amp;lt;string&amp;gt;</div><div class=\"line\">#include &amp;lt;stdlib.h&amp;gt;</div><div class=\"line\">using namespace std;</div><div class=\"line\">/**</div><div class=\"line\"> * @author chico chen chillycreator #@@&amp;amp; gmail.com</div><div class=\"line\"> */</div><div class=\"line\">void usage()&#123;</div><div class=\"line\">\tcout &amp;lt;&amp;lt; &quot;timer&quot;&amp;lt;&amp;lt;endl;</div><div class=\"line\">\tcout &amp;lt;&amp;lt; &quot;input your time point:[minute] [hour] [innerday] [innerweek]&quot;&amp;lt;&amp;lt;endl;</div><div class=\"line\">\tcout &amp;lt;&amp;lt; &quot;input your program name:[your program]&quot;&amp;lt;&amp;lt;endl;</div><div class=\"line\">\tcout &amp;lt;&amp;lt; &quot;all of input should be more than zero!&quot;&amp;lt;&amp;lt;endl;</div><div class=\"line\">\tcout &amp;lt;&amp;lt; &quot;you should run this program earlier than you wanted.&quot;&amp;lt;&amp;lt;endl;</div><div class=\"line\">\tcout &amp;lt;&amp;lt; &quot;or else your program will run at next time point.&quot;&amp;lt;&amp;lt;endl;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">int main()&#123;</div><div class=\"line\"></div><div class=\"line\">\t// user input</div><div class=\"line\">\tint min, hour, howday, howweek;</div><div class=\"line\">\tstring program;</div><div class=\"line\">\tcout&amp;lt;&amp;lt; &quot;input [min] [hour] [innerdays] [innerweeks]&quot;&amp;lt;&amp;lt;endl;</div><div class=\"line\">\tcin &amp;gt;&amp;gt; min &amp;gt;&amp;gt; hour &amp;gt;&amp;gt; howday &amp;gt;&amp;gt; howweek;</div><div class=\"line\">\tcout &amp;lt;&amp;lt;&quot;input your program&quot;&amp;lt;&amp;lt;endl;</div><div class=\"line\">\tcin &amp;gt;&amp;gt; program;</div><div class=\"line\">\tif (program.size() &amp;lt;= 0 || min &amp;lt; 0 || hour &amp;lt; 0 || howday &amp;lt; 0 || howweek &amp;lt; 0)&#123;</div><div class=\"line\">\t\tusage();</div><div class=\"line\">\t\treturn 1;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\tcout &amp;lt;&amp;lt; &quot;your timer will run program at &quot;&amp;lt;&amp;lt;hour&amp;lt;&amp;lt;&quot;:&quot;&amp;lt;&amp;lt;min&amp;lt;&amp;lt;endl;</div><div class=\"line\">\tcout &amp;lt;&amp;lt; &quot;your program is &quot;&amp;lt;&amp;lt;program&amp;lt;&amp;lt;endl;</div><div class=\"line\">\tif (0 == howday || 1 == howday)&#123;</div><div class=\"line\">\t\thowday = 1;</div><div class=\"line\">\t\tcout &amp;lt;&amp;lt; &quot;run this program in every day&quot;&amp;lt;&amp;lt;endl;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\telse&#123;</div><div class=\"line\">\t\tcout &amp;lt;&amp;lt; &quot;run this program at &quot;&amp;lt;&amp;lt;howday &amp;lt;&amp;lt;&quot; days intervals.&quot;&amp;lt;&amp;lt;endl;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\tif (0 == howweek)&#123;</div><div class=\"line\">\t\tcout &amp;lt;&amp;lt; &quot;run this program in every week&quot;&amp;lt;&amp;lt;endl;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\telse&#123;</div><div class=\"line\">\t\tcout &amp;lt;&amp;lt; &quot;run this program at &quot;&amp;lt;&amp;lt;howweek &amp;lt;&amp;lt;&quot; weeks intervals.&quot;&amp;lt;&amp;lt;endl;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t// set sleep time and loop time</div><div class=\"line\">\tint looptime = (howday-1)*3600*24 + howweek * 7 * 3600 * 24;</div><div class=\"line\">\tint sleeptime = 0;</div><div class=\"line\">\tbool bFirst = true;</div><div class=\"line\">\twhile(true)&#123;</div><div class=\"line\">\t\ttime_t now;</div><div class=\"line\">\t\ttime(&amp;amp;now);</div><div class=\"line\">\t\tstruct tm * timeinfo = localtime(&amp;amp;now);</div><div class=\"line\">\t\ttimeinfo-&amp;gt;tm_hour = hour;</div><div class=\"line\">\t\ttimeinfo-&amp;gt;tm_min = min;</div><div class=\"line\">\t\ttime_t futuretime = mktime(timeinfo);</div><div class=\"line\">\t\tsleeptime = futuretime - now;</div><div class=\"line\">\t\tsleeptime = sleeptime &amp;gt;= 0 ? sleeptime : 24*3600+sleeptime;</div><div class=\"line\">\t\tif (!bFirst)&#123;</div><div class=\"line\">\t\t\tsleeptime += looptime;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\tbFirst = false;</div><div class=\"line\">\t\tcout &amp;lt;&amp;lt; &quot;wait time:&quot;&amp;lt;&amp;lt;sleeptime&amp;lt;&amp;lt;endl;</div><div class=\"line\">\t\tsleep(sleeptime);</div><div class=\"line\">\t\tcout &amp;lt;&amp;lt; &quot;start to run:&quot;&amp;lt;&amp;lt;program&amp;lt;&amp;lt;endl;</div><div class=\"line\">\t\tsystem(program.c_str());</div><div class=\"line\">\t\tcout &amp;lt;&amp;lt; &quot;end program...&quot;&amp;lt;&amp;lt;endl;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t// loop end</div><div class=\"line\">\treturn 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>Write your own code will bring new bugs in your solution. Another drawback is spending your own time and this timer is not in common. However, you can control it!</p>\n","site":{"data":{}},"excerpt":"","more":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_description\" content=\"crontab can not execute some program.\nIts environment setting is hard to compare with that of system \"></p>\n<p><meta name=\"_su_keywords\" content=\"crontab,execute,environment,timer,code,setting,profile\"></p>\n<p><meta name=\"_su_rich_snippet_type\" content=\"none\"></p>\n<p><meta name=\"_su_title\" content=\"own timer replace crontab\"></p>\n<p><meta name=\"views\" content=\"460\"><br>Sometime crontab in Linux or Unix can not run some program. Because the environment of crontab is not as same as that of system. If you want to know the difference between those two environments settings. look up /etc/cron.d/anacron file and ~/.profile and ~/.bashrc and xxxx. I can not remember all of them. /etc/cron.d/anacron file is just for crontab. ~/.profile and ~/.bashrc is for system. If you want to know more, search “linux environment file” in Google.</p>\n<p>I think to find all difference between two environment is waste time obviously. Another method is write own timer codes. So Here is my solution:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include &amp;lt;iostream&amp;gt;</div><div class=\"line\">#include &amp;lt;string&amp;gt;</div><div class=\"line\">#include &amp;lt;stdlib.h&amp;gt;</div><div class=\"line\">using namespace std;</div><div class=\"line\">/**</div><div class=\"line\"> * @author chico chen chillycreator #@@&amp;amp; gmail.com</div><div class=\"line\"> */</div><div class=\"line\">void usage()&#123;</div><div class=\"line\">\tcout &amp;lt;&amp;lt; &quot;timer&quot;&amp;lt;&amp;lt;endl;</div><div class=\"line\">\tcout &amp;lt;&amp;lt; &quot;input your time point:[minute] [hour] [innerday] [innerweek]&quot;&amp;lt;&amp;lt;endl;</div><div class=\"line\">\tcout &amp;lt;&amp;lt; &quot;input your program name:[your program]&quot;&amp;lt;&amp;lt;endl;</div><div class=\"line\">\tcout &amp;lt;&amp;lt; &quot;all of input should be more than zero!&quot;&amp;lt;&amp;lt;endl;</div><div class=\"line\">\tcout &amp;lt;&amp;lt; &quot;you should run this program earlier than you wanted.&quot;&amp;lt;&amp;lt;endl;</div><div class=\"line\">\tcout &amp;lt;&amp;lt; &quot;or else your program will run at next time point.&quot;&amp;lt;&amp;lt;endl;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">int main()&#123;</div><div class=\"line\"></div><div class=\"line\">\t// user input</div><div class=\"line\">\tint min, hour, howday, howweek;</div><div class=\"line\">\tstring program;</div><div class=\"line\">\tcout&amp;lt;&amp;lt; &quot;input [min] [hour] [innerdays] [innerweeks]&quot;&amp;lt;&amp;lt;endl;</div><div class=\"line\">\tcin &amp;gt;&amp;gt; min &amp;gt;&amp;gt; hour &amp;gt;&amp;gt; howday &amp;gt;&amp;gt; howweek;</div><div class=\"line\">\tcout &amp;lt;&amp;lt;&quot;input your program&quot;&amp;lt;&amp;lt;endl;</div><div class=\"line\">\tcin &amp;gt;&amp;gt; program;</div><div class=\"line\">\tif (program.size() &amp;lt;= 0 || min &amp;lt; 0 || hour &amp;lt; 0 || howday &amp;lt; 0 || howweek &amp;lt; 0)&#123;</div><div class=\"line\">\t\tusage();</div><div class=\"line\">\t\treturn 1;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\tcout &amp;lt;&amp;lt; &quot;your timer will run program at &quot;&amp;lt;&amp;lt;hour&amp;lt;&amp;lt;&quot;:&quot;&amp;lt;&amp;lt;min&amp;lt;&amp;lt;endl;</div><div class=\"line\">\tcout &amp;lt;&amp;lt; &quot;your program is &quot;&amp;lt;&amp;lt;program&amp;lt;&amp;lt;endl;</div><div class=\"line\">\tif (0 == howday || 1 == howday)&#123;</div><div class=\"line\">\t\thowday = 1;</div><div class=\"line\">\t\tcout &amp;lt;&amp;lt; &quot;run this program in every day&quot;&amp;lt;&amp;lt;endl;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\telse&#123;</div><div class=\"line\">\t\tcout &amp;lt;&amp;lt; &quot;run this program at &quot;&amp;lt;&amp;lt;howday &amp;lt;&amp;lt;&quot; days intervals.&quot;&amp;lt;&amp;lt;endl;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\tif (0 == howweek)&#123;</div><div class=\"line\">\t\tcout &amp;lt;&amp;lt; &quot;run this program in every week&quot;&amp;lt;&amp;lt;endl;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\telse&#123;</div><div class=\"line\">\t\tcout &amp;lt;&amp;lt; &quot;run this program at &quot;&amp;lt;&amp;lt;howweek &amp;lt;&amp;lt;&quot; weeks intervals.&quot;&amp;lt;&amp;lt;endl;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t// set sleep time and loop time</div><div class=\"line\">\tint looptime = (howday-1)*3600*24 + howweek * 7 * 3600 * 24;</div><div class=\"line\">\tint sleeptime = 0;</div><div class=\"line\">\tbool bFirst = true;</div><div class=\"line\">\twhile(true)&#123;</div><div class=\"line\">\t\ttime_t now;</div><div class=\"line\">\t\ttime(&amp;amp;now);</div><div class=\"line\">\t\tstruct tm * timeinfo = localtime(&amp;amp;now);</div><div class=\"line\">\t\ttimeinfo-&amp;gt;tm_hour = hour;</div><div class=\"line\">\t\ttimeinfo-&amp;gt;tm_min = min;</div><div class=\"line\">\t\ttime_t futuretime = mktime(timeinfo);</div><div class=\"line\">\t\tsleeptime = futuretime - now;</div><div class=\"line\">\t\tsleeptime = sleeptime &amp;gt;= 0 ? sleeptime : 24*3600+sleeptime;</div><div class=\"line\">\t\tif (!bFirst)&#123;</div><div class=\"line\">\t\t\tsleeptime += looptime;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\tbFirst = false;</div><div class=\"line\">\t\tcout &amp;lt;&amp;lt; &quot;wait time:&quot;&amp;lt;&amp;lt;sleeptime&amp;lt;&amp;lt;endl;</div><div class=\"line\">\t\tsleep(sleeptime);</div><div class=\"line\">\t\tcout &amp;lt;&amp;lt; &quot;start to run:&quot;&amp;lt;&amp;lt;program&amp;lt;&amp;lt;endl;</div><div class=\"line\">\t\tsystem(program.c_str());</div><div class=\"line\">\t\tcout &amp;lt;&amp;lt; &quot;end program...&quot;&amp;lt;&amp;lt;endl;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t// loop end</div><div class=\"line\">\treturn 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>Write your own code will bring new bugs in your solution. Another drawback is spending your own time and this timer is not in common. However, you can control it!</p>\n"},{"layout":"post","title":"trickies and bugs in c","date":"2010-08-12T16:00:00.000Z","wordpress_id":308,"comments":1,"_content":"<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_rich_snippet_type\" content=\"none\" />\n<meta name=\"views\" content=\"542\" />\nthe macro #define is the biggest hidden bug in c. You should always remember macro-function is like code paster. And it will slow down your system in some special situations, such as macro recursion. If you macro define some function use BIG characters.\n\n\n{% codeblock %}#define FUN1(a,b) a*b\n#define FUN2(a) a++;\\\n     a*=a;\n\nint main(){\n\tint a = 2;\n\tint b = 3;\n\tFUN1(a,5+1); // =&gt; 2*5+1\n        if(a&gt;2)FUN2(a); //=&gt; if(a&gt;2) a++;a*=a;\n\n\treturn 0;\n}{% endcodeblock %}\n\n\nstrcpy() will copy \"\\0\", and it is dangerous when you copy two points.\n\n\n{% codeblock %}int main(){\n\tchar str1[] = \"abcd\";\n\tchar str2[] = \"12\";\n\tstrcpy(str1,str2); // ok, str1 equals \"12\"\n\tchar *st1 = \"abcd\";\n\tchar *st2 = \"12\";\n\tstrcpy(st1,st2); //crash!! st1 points to static const string\n}{% endcodeblock %}\n\n\nparam as point or array style. Although they are differnt styles, they are the same.\n\n\n{% codeblock %}int size1(char a[]){\n\tcout &lt;&lt; sizeof(a);\n}\nint size2(char* a){\n\tcout &lt;&lt; sizeof(a);\n}\nint main(){\n\tchar a[] = \"abcdef\";\n\tchar *b = \"abcdef\";\n\tsize1(a); //  =&gt; sizeof(char*)\n\tsize1(b); //  =&gt; sizeof(char*)\n\tsize2(a); //  =&gt; sizeof(char*)\n\tsize2(b);//  =&gt; sizeof(char*)\n\tcout &lt;&lt; sizeof(a)&lt;&lt;endl; // =&gt;strlen(a)+1\n\tcout &lt;&lt; sizeof(b)&lt;&lt;endl; // sizeof(char*)\n\n}{% endcodeblock %}\n\n\n\n{% codeblock %}// There are 5 segments in codes, DATA, BSS, TEXT, heap, stack\n// DATA stores all globel variables, and those variables are defined.\n// BSS stores all globel variables, but those variables are not defined.\n// const variables are in TEXT, and codes are in this segment also.\n// heap store (malloc, calloc,realloc, new) data\n// stack store function params, local variables.\n\nint a; // a is in BSS\nint b = 3; // b is in DATA\nint fun(int c){ // c is in stack, when the function is called.\n\treturn 0; \n}\nint main(){\n\tconst int c = 4; // c is in TEXT\n\ta = 4; // move to DATA\n\tint x = 4; // in stack\n\tint * p = malloc(sizeof(int)); // *p is in heap. but p is in stack.\n\treturn 0;\n}{% endcodeblock %}\n \n","source":"_posts/2010-08-13-trickies-bugs.markdown","raw":"---\nlayout: post\ntitle: \"trickies and bugs in c\"\ndate: 2010-8-13\nwordpress_id: 308\ncomments: true\ncategories: [\"bug\", \"c\", \"cc\", \"code\", \"macro\", \"point\", \"tricky\"]\n---\n<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_rich_snippet_type\" content=\"none\" />\n<meta name=\"views\" content=\"542\" />\nthe macro #define is the biggest hidden bug in c. You should always remember macro-function is like code paster. And it will slow down your system in some special situations, such as macro recursion. If you macro define some function use BIG characters.\n\n\n{% codeblock %}#define FUN1(a,b) a*b\n#define FUN2(a) a++;\\\n     a*=a;\n\nint main(){\n\tint a = 2;\n\tint b = 3;\n\tFUN1(a,5+1); // =&gt; 2*5+1\n        if(a&gt;2)FUN2(a); //=&gt; if(a&gt;2) a++;a*=a;\n\n\treturn 0;\n}{% endcodeblock %}\n\n\nstrcpy() will copy \"\\0\", and it is dangerous when you copy two points.\n\n\n{% codeblock %}int main(){\n\tchar str1[] = \"abcd\";\n\tchar str2[] = \"12\";\n\tstrcpy(str1,str2); // ok, str1 equals \"12\"\n\tchar *st1 = \"abcd\";\n\tchar *st2 = \"12\";\n\tstrcpy(st1,st2); //crash!! st1 points to static const string\n}{% endcodeblock %}\n\n\nparam as point or array style. Although they are differnt styles, they are the same.\n\n\n{% codeblock %}int size1(char a[]){\n\tcout &lt;&lt; sizeof(a);\n}\nint size2(char* a){\n\tcout &lt;&lt; sizeof(a);\n}\nint main(){\n\tchar a[] = \"abcdef\";\n\tchar *b = \"abcdef\";\n\tsize1(a); //  =&gt; sizeof(char*)\n\tsize1(b); //  =&gt; sizeof(char*)\n\tsize2(a); //  =&gt; sizeof(char*)\n\tsize2(b);//  =&gt; sizeof(char*)\n\tcout &lt;&lt; sizeof(a)&lt;&lt;endl; // =&gt;strlen(a)+1\n\tcout &lt;&lt; sizeof(b)&lt;&lt;endl; // sizeof(char*)\n\n}{% endcodeblock %}\n\n\n\n{% codeblock %}// There are 5 segments in codes, DATA, BSS, TEXT, heap, stack\n// DATA stores all globel variables, and those variables are defined.\n// BSS stores all globel variables, but those variables are not defined.\n// const variables are in TEXT, and codes are in this segment also.\n// heap store (malloc, calloc,realloc, new) data\n// stack store function params, local variables.\n\nint a; // a is in BSS\nint b = 3; // b is in DATA\nint fun(int c){ // c is in stack, when the function is called.\n\treturn 0; \n}\nint main(){\n\tconst int c = 4; // c is in TEXT\n\ta = 4; // move to DATA\n\tint x = 4; // in stack\n\tint * p = malloc(sizeof(int)); // *p is in heap. but p is in stack.\n\treturn 0;\n}{% endcodeblock %}\n \n","slug":"2010-08-13-trickies-bugs","published":1,"updated":"2017-06-05T03:00:22.000Z","photos":[],"link":"","_id":"cj3jjtynu000615mjvtm1t2a6","content":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_rich_snippet_type\" content=\"none\"></p>\n<p><meta name=\"views\" content=\"542\"><br>the macro #define is the biggest hidden bug in c. You should always remember macro-function is like code paster. And it will slow down your system in some special situations, such as macro recursion. If you macro define some function use BIG characters.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">#define FUN1(a,b) a*b</div><div class=\"line\">#define FUN2(a) a++;\\</div><div class=\"line\">     a*=a;</div><div class=\"line\"></div><div class=\"line\">int main()&#123;</div><div class=\"line\">\tint a = 2;</div><div class=\"line\">\tint b = 3;</div><div class=\"line\">\tFUN1(a,5+1); // =&amp;gt; 2*5+1</div><div class=\"line\">        if(a&amp;gt;2)FUN2(a); //=&amp;gt; if(a&amp;gt;2) a++;a*=a;</div><div class=\"line\"></div><div class=\"line\">\treturn 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>strcpy() will copy “\\0”, and it is dangerous when you copy two points.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">int main()&#123;</div><div class=\"line\">\tchar str1[] = &quot;abcd&quot;;</div><div class=\"line\">\tchar str2[] = &quot;12&quot;;</div><div class=\"line\">\tstrcpy(str1,str2); // ok, str1 equals &quot;12&quot;</div><div class=\"line\">\tchar *st1 = &quot;abcd&quot;;</div><div class=\"line\">\tchar *st2 = &quot;12&quot;;</div><div class=\"line\">\tstrcpy(st1,st2); //crash!! st1 points to static const string</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>param as point or array style. Although they are differnt styles, they are the same.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">int size1(char a[])&#123;</div><div class=\"line\">\tcout &amp;lt;&amp;lt; sizeof(a);</div><div class=\"line\">&#125;</div><div class=\"line\">int size2(char* a)&#123;</div><div class=\"line\">\tcout &amp;lt;&amp;lt; sizeof(a);</div><div class=\"line\">&#125;</div><div class=\"line\">int main()&#123;</div><div class=\"line\">\tchar a[] = &quot;abcdef&quot;;</div><div class=\"line\">\tchar *b = &quot;abcdef&quot;;</div><div class=\"line\">\tsize1(a); //  =&amp;gt; sizeof(char*)</div><div class=\"line\">\tsize1(b); //  =&amp;gt; sizeof(char*)</div><div class=\"line\">\tsize2(a); //  =&amp;gt; sizeof(char*)</div><div class=\"line\">\tsize2(b);//  =&amp;gt; sizeof(char*)</div><div class=\"line\">\tcout &amp;lt;&amp;lt; sizeof(a)&amp;lt;&amp;lt;endl; // =&amp;gt;strlen(a)+1</div><div class=\"line\">\tcout &amp;lt;&amp;lt; sizeof(b)&amp;lt;&amp;lt;endl; // sizeof(char*)</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\">// There are 5 segments in codes, DATA, BSS, TEXT, heap, stack</div><div class=\"line\">// DATA stores all globel variables, and those variables are defined.</div><div class=\"line\">// BSS stores all globel variables, but those variables are not defined.</div><div class=\"line\">// const variables are in TEXT, and codes are in this segment also.</div><div class=\"line\">// heap store (malloc, calloc,realloc, new) data</div><div class=\"line\">// stack store function params, local variables.</div><div class=\"line\"></div><div class=\"line\">int a; // a is in BSS</div><div class=\"line\">int b = 3; // b is in DATA</div><div class=\"line\">int fun(int c)&#123; // c is in stack, when the function is called.</div><div class=\"line\">\treturn 0; </div><div class=\"line\">&#125;</div><div class=\"line\">int main()&#123;</div><div class=\"line\">\tconst int c = 4; // c is in TEXT</div><div class=\"line\">\ta = 4; // move to DATA</div><div class=\"line\">\tint x = 4; // in stack</div><div class=\"line\">\tint * p = malloc(sizeof(int)); // *p is in heap. but p is in stack.</div><div class=\"line\">\treturn 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_rich_snippet_type\" content=\"none\"></p>\n<p><meta name=\"views\" content=\"542\"><br>the macro #define is the biggest hidden bug in c. You should always remember macro-function is like code paster. And it will slow down your system in some special situations, such as macro recursion. If you macro define some function use BIG characters.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">#define FUN1(a,b) a*b</div><div class=\"line\">#define FUN2(a) a++;\\</div><div class=\"line\">     a*=a;</div><div class=\"line\"></div><div class=\"line\">int main()&#123;</div><div class=\"line\">\tint a = 2;</div><div class=\"line\">\tint b = 3;</div><div class=\"line\">\tFUN1(a,5+1); // =&amp;gt; 2*5+1</div><div class=\"line\">        if(a&amp;gt;2)FUN2(a); //=&amp;gt; if(a&amp;gt;2) a++;a*=a;</div><div class=\"line\"></div><div class=\"line\">\treturn 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>strcpy() will copy “\\0”, and it is dangerous when you copy two points.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">int main()&#123;</div><div class=\"line\">\tchar str1[] = &quot;abcd&quot;;</div><div class=\"line\">\tchar str2[] = &quot;12&quot;;</div><div class=\"line\">\tstrcpy(str1,str2); // ok, str1 equals &quot;12&quot;</div><div class=\"line\">\tchar *st1 = &quot;abcd&quot;;</div><div class=\"line\">\tchar *st2 = &quot;12&quot;;</div><div class=\"line\">\tstrcpy(st1,st2); //crash!! st1 points to static const string</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>param as point or array style. Although they are differnt styles, they are the same.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">int size1(char a[])&#123;</div><div class=\"line\">\tcout &amp;lt;&amp;lt; sizeof(a);</div><div class=\"line\">&#125;</div><div class=\"line\">int size2(char* a)&#123;</div><div class=\"line\">\tcout &amp;lt;&amp;lt; sizeof(a);</div><div class=\"line\">&#125;</div><div class=\"line\">int main()&#123;</div><div class=\"line\">\tchar a[] = &quot;abcdef&quot;;</div><div class=\"line\">\tchar *b = &quot;abcdef&quot;;</div><div class=\"line\">\tsize1(a); //  =&amp;gt; sizeof(char*)</div><div class=\"line\">\tsize1(b); //  =&amp;gt; sizeof(char*)</div><div class=\"line\">\tsize2(a); //  =&amp;gt; sizeof(char*)</div><div class=\"line\">\tsize2(b);//  =&amp;gt; sizeof(char*)</div><div class=\"line\">\tcout &amp;lt;&amp;lt; sizeof(a)&amp;lt;&amp;lt;endl; // =&amp;gt;strlen(a)+1</div><div class=\"line\">\tcout &amp;lt;&amp;lt; sizeof(b)&amp;lt;&amp;lt;endl; // sizeof(char*)</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\">// There are 5 segments in codes, DATA, BSS, TEXT, heap, stack</div><div class=\"line\">// DATA stores all globel variables, and those variables are defined.</div><div class=\"line\">// BSS stores all globel variables, but those variables are not defined.</div><div class=\"line\">// const variables are in TEXT, and codes are in this segment also.</div><div class=\"line\">// heap store (malloc, calloc,realloc, new) data</div><div class=\"line\">// stack store function params, local variables.</div><div class=\"line\"></div><div class=\"line\">int a; // a is in BSS</div><div class=\"line\">int b = 3; // b is in DATA</div><div class=\"line\">int fun(int c)&#123; // c is in stack, when the function is called.</div><div class=\"line\">\treturn 0; </div><div class=\"line\">&#125;</div><div class=\"line\">int main()&#123;</div><div class=\"line\">\tconst int c = 4; // c is in TEXT</div><div class=\"line\">\ta = 4; // move to DATA</div><div class=\"line\">\tint x = 4; // in stack</div><div class=\"line\">\tint * p = malloc(sizeof(int)); // *p is in heap. but p is in stack.</div><div class=\"line\">\treturn 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n"},{"layout":"post","title":"error LNK2019 unresolved external symbol ","date":"2010-09-01T16:00:00.000Z","wordpress_id":316,"comments":1,"_content":"<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_rich_snippet_type\" content=\"none\" />\n<meta name=\"_su_keywords\" content=\"LNK2019\" />\n<meta name=\"views\" content=\"2408\" />\nToday I have found this problem :\n\n<span style=\"color: #800000;\">error LNK2019: unresolved external symbol __imp__gethostname@8 referenced in function _wmain </span>\n\n<span style=\"color: #800000;\">and </span>\n\n<span style=\"color: #800000;\">fatal error LNK1120: 1 unresolved externals </span>\n\ncode fragment is :\n\n\n{% codeblock %}// if this code fragment can be compiled, the result will not be your expected.\n\n#include \"stdafx.h\"\n#include &lt;iostream&gt;\n#include &lt;WinSock2.h&gt;\nusing namespace std;\nint _tmain(int argc, _TCHAR* argv[])\n{\n\tconst int len = 256;\n\tchar buffer[len];\n\tint a = gethostname(buffer,len);\n\tcout &lt;&lt;ａ&lt;&lt;endl; // a will be -1\n\tcout &lt;&lt; buffer&lt;&lt;endl; // buffer will be filled with unreadable code.\n\treturn 0;\n}{% endcodeblock %}\n\n<h3><strong>What's wrong? </strong></h3>\nIf you don't add <span style=\"color: #000080;\">#include &lt;WinSock2.h&gt;</span>, the compiler will report :  <span style=\"color: #800000;\">error C3861: 'gethostname': identifier not found </span>. But after you adding this header, it will report above error again.  First, you should add the header &lt;afxext.h&gt; into stdafx.h, then compile the code again. Code will be compiled without any error. Then run this code fragment, and the result is not my expected. a is -1, and the buffer is filled with messy code. If you use WSAGetLastError() function to see it error code, the error code will be WSANOTINITIALISED. Yes, I have not initialized. So we should call WSAStartup() first and then gethostname. And WSAStartup() will check DLL version. And after having gotten hostname, don't forget to call WSACleanup(). Here is the whole code:\n\n\n{% codeblock %}#include \"stdafx.h\"\n//#include &lt;winsock.h&gt;\n#include &lt;iostream&gt;\n#include &lt;WinSock2.h&gt; // use winsock2.h is ok\nusing namespace std;\nint _tmain(int argc, _TCHAR* argv[])\n{\n\tconst int len = 256;\n\tchar buffer[len];\n\tWORD wVersionRequested;\n\tWSADATA wsaData;\n\twVersionRequested = MAKEWORD(2,2); //version 2.2 \n\tint err = WSAStartup(wVersionRequested,&amp;wsaData);\n\tif (0 != err) return 1;\n\tif ( LOBYTE( wsaData.wVersion ) != 2 ||\n        HIBYTE( wsaData.wVersion ) != 2 ) {\n               // only support version 2.2 of Windows Sockets \n\t\t\tWSACleanup();\n\t\t\treturn 1;\n\t}\n\t// get hostname\n\tint a = gethostname(buffer,len);\n\t/* if there is an error. use WSAGetLastError to find it.\n\tint errcode = WSAGetLastError();\n\tswitch(errcode){\n\t ....\n\t}*/\n\tcout &lt;&lt; buffer&lt;&lt;endl;\n\tWSACleanup();\n\treturn 0;\n}{% endcodeblock %}\n \n","source":"_posts/2010-09-02-error-lnk2019.markdown","raw":"---\nlayout: post\ntitle: \"error LNK2019 unresolved external symbol \"\ndate: 2010-9-2\nwordpress_id: 316\ncomments: true\ncategories: [\"c\", \"cc\", \"code\", \"error\", \"gethostname\", \"lnk2019\", \"winsock\"]\n---\n<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_rich_snippet_type\" content=\"none\" />\n<meta name=\"_su_keywords\" content=\"LNK2019\" />\n<meta name=\"views\" content=\"2408\" />\nToday I have found this problem :\n\n<span style=\"color: #800000;\">error LNK2019: unresolved external symbol __imp__gethostname@8 referenced in function _wmain </span>\n\n<span style=\"color: #800000;\">and </span>\n\n<span style=\"color: #800000;\">fatal error LNK1120: 1 unresolved externals </span>\n\ncode fragment is :\n\n\n{% codeblock %}// if this code fragment can be compiled, the result will not be your expected.\n\n#include \"stdafx.h\"\n#include &lt;iostream&gt;\n#include &lt;WinSock2.h&gt;\nusing namespace std;\nint _tmain(int argc, _TCHAR* argv[])\n{\n\tconst int len = 256;\n\tchar buffer[len];\n\tint a = gethostname(buffer,len);\n\tcout &lt;&lt;ａ&lt;&lt;endl; // a will be -1\n\tcout &lt;&lt; buffer&lt;&lt;endl; // buffer will be filled with unreadable code.\n\treturn 0;\n}{% endcodeblock %}\n\n<h3><strong>What's wrong? </strong></h3>\nIf you don't add <span style=\"color: #000080;\">#include &lt;WinSock2.h&gt;</span>, the compiler will report :  <span style=\"color: #800000;\">error C3861: 'gethostname': identifier not found </span>. But after you adding this header, it will report above error again.  First, you should add the header &lt;afxext.h&gt; into stdafx.h, then compile the code again. Code will be compiled without any error. Then run this code fragment, and the result is not my expected. a is -1, and the buffer is filled with messy code. If you use WSAGetLastError() function to see it error code, the error code will be WSANOTINITIALISED. Yes, I have not initialized. So we should call WSAStartup() first and then gethostname. And WSAStartup() will check DLL version. And after having gotten hostname, don't forget to call WSACleanup(). Here is the whole code:\n\n\n{% codeblock %}#include \"stdafx.h\"\n//#include &lt;winsock.h&gt;\n#include &lt;iostream&gt;\n#include &lt;WinSock2.h&gt; // use winsock2.h is ok\nusing namespace std;\nint _tmain(int argc, _TCHAR* argv[])\n{\n\tconst int len = 256;\n\tchar buffer[len];\n\tWORD wVersionRequested;\n\tWSADATA wsaData;\n\twVersionRequested = MAKEWORD(2,2); //version 2.2 \n\tint err = WSAStartup(wVersionRequested,&amp;wsaData);\n\tif (0 != err) return 1;\n\tif ( LOBYTE( wsaData.wVersion ) != 2 ||\n        HIBYTE( wsaData.wVersion ) != 2 ) {\n               // only support version 2.2 of Windows Sockets \n\t\t\tWSACleanup();\n\t\t\treturn 1;\n\t}\n\t// get hostname\n\tint a = gethostname(buffer,len);\n\t/* if there is an error. use WSAGetLastError to find it.\n\tint errcode = WSAGetLastError();\n\tswitch(errcode){\n\t ....\n\t}*/\n\tcout &lt;&lt; buffer&lt;&lt;endl;\n\tWSACleanup();\n\treturn 0;\n}{% endcodeblock %}\n \n","slug":"2010-09-02-error-lnk2019","published":1,"updated":"2017-06-05T03:00:18.000Z","photos":[],"link":"","_id":"cj3jjtyo0000815mjwc7vnixh","content":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_rich_snippet_type\" content=\"none\"></p>\n<p><meta name=\"_su_keywords\" content=\"LNK2019\"></p>\n<p><meta name=\"views\" content=\"2408\"><br>Today I have found this problem :</p>\n<p><span style=\"color: #800000;\">error LNK2019: unresolved external symbol <strong>imp</strong>gethostname@8 referenced in function _wmain </span></p>\n<p><span style=\"color: #800000;\">and </span></p>\n<p><span style=\"color: #800000;\">fatal error LNK1120: 1 unresolved externals </span></p>\n<p>code fragment is :</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">// if this code fragment can be compiled, the result will not be your expected.</div><div class=\"line\"></div><div class=\"line\">#include &quot;stdafx.h&quot;</div><div class=\"line\">#include &amp;lt;iostream&amp;gt;</div><div class=\"line\">#include &amp;lt;WinSock2.h&amp;gt;</div><div class=\"line\">using namespace std;</div><div class=\"line\">int _tmain(int argc, _TCHAR* argv[])</div><div class=\"line\">&#123;</div><div class=\"line\">\tconst int len = 256;</div><div class=\"line\">\tchar buffer[len];</div><div class=\"line\">\tint a = gethostname(buffer,len);</div><div class=\"line\">\tcout &amp;lt;&amp;lt;ａ&amp;lt;&amp;lt;endl; // a will be -1</div><div class=\"line\">\tcout &amp;lt;&amp;lt; buffer&amp;lt;&amp;lt;endl; // buffer will be filled with unreadable code.</div><div class=\"line\">\treturn 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p></p><h3><strong>What’s wrong? </strong></h3><br>If you don’t add <span style=\"color: #000080;\">#include &lt;WinSock2.h&gt;</span>, the compiler will report :  <span style=\"color: #800000;\">error C3861: ‘gethostname’: identifier not found </span>. But after you adding this header, it will report above error again.  First, you should add the header &lt;afxext.h&gt; into stdafx.h, then compile the code again. Code will be compiled without any error. Then run this code fragment, and the result is not my expected. a is -1, and the buffer is filled with messy code. If you use WSAGetLastError() function to see it error code, the error code will be WSANOTINITIALISED. Yes, I have not initialized. So we should call WSAStartup() first and then gethostname. And WSAStartup() will check DLL version. And after having gotten hostname, don’t forget to call WSACleanup(). Here is the whole code:<p></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include &quot;stdafx.h&quot;</div><div class=\"line\">//#include &amp;lt;winsock.h&amp;gt;</div><div class=\"line\">#include &amp;lt;iostream&amp;gt;</div><div class=\"line\">#include &amp;lt;WinSock2.h&amp;gt; // use winsock2.h is ok</div><div class=\"line\">using namespace std;</div><div class=\"line\">int _tmain(int argc, _TCHAR* argv[])</div><div class=\"line\">&#123;</div><div class=\"line\">\tconst int len = 256;</div><div class=\"line\">\tchar buffer[len];</div><div class=\"line\">\tWORD wVersionRequested;</div><div class=\"line\">\tWSADATA wsaData;</div><div class=\"line\">\twVersionRequested = MAKEWORD(2,2); //version 2.2 </div><div class=\"line\">\tint err = WSAStartup(wVersionRequested,&amp;amp;wsaData);</div><div class=\"line\">\tif (0 != err) return 1;</div><div class=\"line\">\tif ( LOBYTE( wsaData.wVersion ) != 2 ||</div><div class=\"line\">        HIBYTE( wsaData.wVersion ) != 2 ) &#123;</div><div class=\"line\">               // only support version 2.2 of Windows Sockets </div><div class=\"line\">\t\t\tWSACleanup();</div><div class=\"line\">\t\t\treturn 1;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t// get hostname</div><div class=\"line\">\tint a = gethostname(buffer,len);</div><div class=\"line\">\t/* if there is an error. use WSAGetLastError to find it.</div><div class=\"line\">\tint errcode = WSAGetLastError();</div><div class=\"line\">\tswitch(errcode)&#123;</div><div class=\"line\">\t ....</div><div class=\"line\">\t&#125;*/</div><div class=\"line\">\tcout &amp;lt;&amp;lt; buffer&amp;lt;&amp;lt;endl;</div><div class=\"line\">\tWSACleanup();</div><div class=\"line\">\treturn 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_rich_snippet_type\" content=\"none\"></p>\n<p><meta name=\"_su_keywords\" content=\"LNK2019\"></p>\n<p><meta name=\"views\" content=\"2408\"><br>Today I have found this problem :</p>\n<p><span style=\"color: #800000;\">error LNK2019: unresolved external symbol <strong>imp</strong>gethostname@8 referenced in function _wmain </span></p>\n<p><span style=\"color: #800000;\">and </span></p>\n<p><span style=\"color: #800000;\">fatal error LNK1120: 1 unresolved externals </span></p>\n<p>code fragment is :</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">// if this code fragment can be compiled, the result will not be your expected.</div><div class=\"line\"></div><div class=\"line\">#include &quot;stdafx.h&quot;</div><div class=\"line\">#include &amp;lt;iostream&amp;gt;</div><div class=\"line\">#include &amp;lt;WinSock2.h&amp;gt;</div><div class=\"line\">using namespace std;</div><div class=\"line\">int _tmain(int argc, _TCHAR* argv[])</div><div class=\"line\">&#123;</div><div class=\"line\">\tconst int len = 256;</div><div class=\"line\">\tchar buffer[len];</div><div class=\"line\">\tint a = gethostname(buffer,len);</div><div class=\"line\">\tcout &amp;lt;&amp;lt;ａ&amp;lt;&amp;lt;endl; // a will be -1</div><div class=\"line\">\tcout &amp;lt;&amp;lt; buffer&amp;lt;&amp;lt;endl; // buffer will be filled with unreadable code.</div><div class=\"line\">\treturn 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p></p><h3><strong>What’s wrong? </strong></h3><br>If you don’t add <span style=\"color: #000080;\">#include &lt;WinSock2.h&gt;</span>, the compiler will report :  <span style=\"color: #800000;\">error C3861: ‘gethostname’: identifier not found </span>. But after you adding this header, it will report above error again.  First, you should add the header &lt;afxext.h&gt; into stdafx.h, then compile the code again. Code will be compiled without any error. Then run this code fragment, and the result is not my expected. a is -1, and the buffer is filled with messy code. If you use WSAGetLastError() function to see it error code, the error code will be WSANOTINITIALISED. Yes, I have not initialized. So we should call WSAStartup() first and then gethostname. And WSAStartup() will check DLL version. And after having gotten hostname, don’t forget to call WSACleanup(). Here is the whole code:<p></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include &quot;stdafx.h&quot;</div><div class=\"line\">//#include &amp;lt;winsock.h&amp;gt;</div><div class=\"line\">#include &amp;lt;iostream&amp;gt;</div><div class=\"line\">#include &amp;lt;WinSock2.h&amp;gt; // use winsock2.h is ok</div><div class=\"line\">using namespace std;</div><div class=\"line\">int _tmain(int argc, _TCHAR* argv[])</div><div class=\"line\">&#123;</div><div class=\"line\">\tconst int len = 256;</div><div class=\"line\">\tchar buffer[len];</div><div class=\"line\">\tWORD wVersionRequested;</div><div class=\"line\">\tWSADATA wsaData;</div><div class=\"line\">\twVersionRequested = MAKEWORD(2,2); //version 2.2 </div><div class=\"line\">\tint err = WSAStartup(wVersionRequested,&amp;amp;wsaData);</div><div class=\"line\">\tif (0 != err) return 1;</div><div class=\"line\">\tif ( LOBYTE( wsaData.wVersion ) != 2 ||</div><div class=\"line\">        HIBYTE( wsaData.wVersion ) != 2 ) &#123;</div><div class=\"line\">               // only support version 2.2 of Windows Sockets </div><div class=\"line\">\t\t\tWSACleanup();</div><div class=\"line\">\t\t\treturn 1;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t// get hostname</div><div class=\"line\">\tint a = gethostname(buffer,len);</div><div class=\"line\">\t/* if there is an error. use WSAGetLastError to find it.</div><div class=\"line\">\tint errcode = WSAGetLastError();</div><div class=\"line\">\tswitch(errcode)&#123;</div><div class=\"line\">\t ....</div><div class=\"line\">\t&#125;*/</div><div class=\"line\">\tcout &amp;lt;&amp;lt; buffer&amp;lt;&amp;lt;endl;</div><div class=\"line\">\tWSACleanup();</div><div class=\"line\">\treturn 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n"},{"layout":"post","title":"postgresql function define","date":"2010-09-02T16:00:00.000Z","wordpress_id":321,"comments":1,"_content":"<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_rich_snippet_type\" content=\"none\" />\n<meta name=\"views\" content=\"1573\" />\nIn Postgresql, If you want to do something like \"select Hello(a) from A;\". You should define your own function Hello().\n\nFirst, go to postgresql root directory and go into contrib file folder. Create your own directory, and add hello.h , hello.c, Makefile, hello.sql.in and uninstall_Hello.sql.in\n\nMakefile is like the following:\n\n\n{% codeblock %}MODULE_big  = Hello // this is module name\nOBJS = Hello.o // those will be create by execute \"make\"\n\nDATA_built = hello.sql // install your function using this sql file\nDATA = uninstall_Hello.sql\nSHLIB_LINK = $(BE_DLLLIBS)\n\nifdef USE_PGXS // this is a build infrastructure of extentions in postgreSQL\nPGXS = $(shell pg_config --pgxs)\ninclude $(PGXS)\nelse\nsubdir = contrib/Hello // here is your code files\ntop_builddir = ../..\ninclude $(top_builddir)/src/Makefile.global\ninclude $(top_srcdir)/contrib/contrib-global.mk\nendif\n\n// the following code fragment is copying content of *.sql.in into *.sql\n%.sql: %.source\n\trm -f $@; \\\n\tC=`pwd`; \\\n\tsed -e \"s:_OBJWD_:$$C:g\" &lt; $&lt; &gt; $@{% endcodeblock %}\n\n\nAttention!!! In Makefile those command should be with no blank at end.\nHere we can write hello.sql.in:\n\n\n{% codeblock %}SET search_path = public; --you should add this code first.\n--functions\n--take care of those functions, if those functions are used for data input and out, their args or return type must be cstring or varchar\n\n-- arg type is cstring\nCREATE OR REPLACE FUNCTION hello_in(cstring)\n   RETURNS HelloS\n   AS 'MODULE_PATHNAME'\n   LANGUAGE C IMMUTABLE STRICT;\n-- return type is cstring\nCREATE OR REPLACE FUNCTION hello_out(HelloS)\n   RETURNS cstring\n   AS 'MODULE_PATHNAME'\n   LANGUAGE C IMMUTABLE STRICT;\n\n--data type\nCREATE TYPE HelloS (\n   internallength = 52,\n   input = hello_in,\n   output = hello_out,\n   alignment = double\n);\n--size is 52 bytes and alignment is 8 bytes.\n--if you don't know its real size, use internallength = VARIABLE\n--if you want use binary array as its input and out, you should use receive=XXX_function, and send = XXX_function\n\n--outer function\n--this function can use kinds of types\nCREATE OR REPLACE FUNCTION Hello(HelloS)\n   RETURNS cstring\n   AS 'MODULE_PATHNAME'\n   LANGUAGE C IMMUTABLE STRICT;{% endcodeblock %}\n\nHere is the uninstall_Hello.sql.in:\n\n\n{% codeblock %}SET search_path = public;\n\nDROP FUNCTION hello_in(cstring);\nDROP FUNCTION hello_out(HelloS);\nDROP TYPE HelloS;\nDROP FUNCTION Hello(HelloS);{% endcodeblock %}\n\n\nIn hello.h\n\n\n{% codeblock %}#ifndef HELLO_H\n#define HELLO_H\n#include&lt;stdio.h&gt;\n#include&lt;stdlib.h&gt;\n\n#include \"postgres.h\"\n#include \"fmgr.h\"\n#include \"funcapi.h\"\n// you should take care of the order of those head files!!!\n\ntypedef struct{\n\tchar content[52];\n}HelloS;\n\nDatum\t\thello_in(PG_FUNCTION_ARGS);\nDatum\t\thello_out(PG_FUNCTION_ARGS);\nDatum               Hello(PG_FUNCTION_ARGS);\n\n#endif{% endcodeblock %}\n\n\nhello.c\n\n\n{% codeblock %}#include “hello.h”\n\n#ifndef MOD_FOR_PG\nPG_MODULE_MAGIC;\n#endif\n\nPG_FUNCTION_INFO_V1(hello_in);\nDatum\nhello_in(PG_FUNCTION_ARGS)\n{\n\t// get args[0]\n\tchar * str = PG_GETARG_CSTRING(0);\n    HelloS * hs = palloc(sizeof(HelloS));\n    if(NULL != str){\n        strcpy(hs-&gt;content,str);\n        PG_RETURN_POINTER(hs)\n    }\n    PG_RETURN_NULL();\n}{% endcodeblock %}\n{% codeblock %}PG_FUNCTION_INFO_V1(hello_out);\nDatum\nhello_out(PG_FUNCTION_ARGS)\n{\n\t// get args[0]\n    Hello * hs = PG_GETARG_POINTER(0);\n\n    if(NULL != hs){\n        char * content = palloc(sizeof(HelloS));\n        strcpy(content,hs-&gt;content);\n        PG_RETURN_CSTRING(content);\n    }\n    PG_RETURN_CSTRING(\"\");\n}\n\nPG_FUNCTION_INFO_V1(Hello);\nDatum\nHello(PG_FUNCTION_ARGS)\n{\n   HelloS* hs = PG_GETARG_POINTER(0);\n if(NULL != hs){\n    char * res = palloc(sizeof(HelloS));\n    sprintf(res,\"hello %s\",hs-&gt;content);\n    PG_RETURN_CSTRING(res);\n }\n PG_RETURN_CSTRING(\"hello nobody\");\n}{% endcodeblock %}\n\n\nThen cd your folder contrib/Hello, make, and make install\n\nThen start psql to execute :\n\ncreate table A(a HelloS);\n\ninsert into A values('cc');\n\ninsert into A values('ff');\n\nselect Hello(a) from A;\n\nresult:\n\nHello cc\n\nHello ff\n\nselect * from A;\n\nresult:\n\ncc\n\nff\n","source":"_posts/2010-09-03-postgresql-function-define.markdown","raw":"---\nlayout: post\ntitle: \"postgresql function define\"\ndate: 2010-9-3\nwordpress_id: 321\ncomments: true\ncategories: [\"cc\", \"code\", \"database\", \"define\", \"function\", \"own\", \"postgresql\", \"postgresql\", \"self\", \"type\"]\n---\n<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_rich_snippet_type\" content=\"none\" />\n<meta name=\"views\" content=\"1573\" />\nIn Postgresql, If you want to do something like \"select Hello(a) from A;\". You should define your own function Hello().\n\nFirst, go to postgresql root directory and go into contrib file folder. Create your own directory, and add hello.h , hello.c, Makefile, hello.sql.in and uninstall_Hello.sql.in\n\nMakefile is like the following:\n\n\n{% codeblock %}MODULE_big  = Hello // this is module name\nOBJS = Hello.o // those will be create by execute \"make\"\n\nDATA_built = hello.sql // install your function using this sql file\nDATA = uninstall_Hello.sql\nSHLIB_LINK = $(BE_DLLLIBS)\n\nifdef USE_PGXS // this is a build infrastructure of extentions in postgreSQL\nPGXS = $(shell pg_config --pgxs)\ninclude $(PGXS)\nelse\nsubdir = contrib/Hello // here is your code files\ntop_builddir = ../..\ninclude $(top_builddir)/src/Makefile.global\ninclude $(top_srcdir)/contrib/contrib-global.mk\nendif\n\n// the following code fragment is copying content of *.sql.in into *.sql\n%.sql: %.source\n\trm -f $@; \\\n\tC=`pwd`; \\\n\tsed -e \"s:_OBJWD_:$$C:g\" &lt; $&lt; &gt; $@{% endcodeblock %}\n\n\nAttention!!! In Makefile those command should be with no blank at end.\nHere we can write hello.sql.in:\n\n\n{% codeblock %}SET search_path = public; --you should add this code first.\n--functions\n--take care of those functions, if those functions are used for data input and out, their args or return type must be cstring or varchar\n\n-- arg type is cstring\nCREATE OR REPLACE FUNCTION hello_in(cstring)\n   RETURNS HelloS\n   AS 'MODULE_PATHNAME'\n   LANGUAGE C IMMUTABLE STRICT;\n-- return type is cstring\nCREATE OR REPLACE FUNCTION hello_out(HelloS)\n   RETURNS cstring\n   AS 'MODULE_PATHNAME'\n   LANGUAGE C IMMUTABLE STRICT;\n\n--data type\nCREATE TYPE HelloS (\n   internallength = 52,\n   input = hello_in,\n   output = hello_out,\n   alignment = double\n);\n--size is 52 bytes and alignment is 8 bytes.\n--if you don't know its real size, use internallength = VARIABLE\n--if you want use binary array as its input and out, you should use receive=XXX_function, and send = XXX_function\n\n--outer function\n--this function can use kinds of types\nCREATE OR REPLACE FUNCTION Hello(HelloS)\n   RETURNS cstring\n   AS 'MODULE_PATHNAME'\n   LANGUAGE C IMMUTABLE STRICT;{% endcodeblock %}\n\nHere is the uninstall_Hello.sql.in:\n\n\n{% codeblock %}SET search_path = public;\n\nDROP FUNCTION hello_in(cstring);\nDROP FUNCTION hello_out(HelloS);\nDROP TYPE HelloS;\nDROP FUNCTION Hello(HelloS);{% endcodeblock %}\n\n\nIn hello.h\n\n\n{% codeblock %}#ifndef HELLO_H\n#define HELLO_H\n#include&lt;stdio.h&gt;\n#include&lt;stdlib.h&gt;\n\n#include \"postgres.h\"\n#include \"fmgr.h\"\n#include \"funcapi.h\"\n// you should take care of the order of those head files!!!\n\ntypedef struct{\n\tchar content[52];\n}HelloS;\n\nDatum\t\thello_in(PG_FUNCTION_ARGS);\nDatum\t\thello_out(PG_FUNCTION_ARGS);\nDatum               Hello(PG_FUNCTION_ARGS);\n\n#endif{% endcodeblock %}\n\n\nhello.c\n\n\n{% codeblock %}#include “hello.h”\n\n#ifndef MOD_FOR_PG\nPG_MODULE_MAGIC;\n#endif\n\nPG_FUNCTION_INFO_V1(hello_in);\nDatum\nhello_in(PG_FUNCTION_ARGS)\n{\n\t// get args[0]\n\tchar * str = PG_GETARG_CSTRING(0);\n    HelloS * hs = palloc(sizeof(HelloS));\n    if(NULL != str){\n        strcpy(hs-&gt;content,str);\n        PG_RETURN_POINTER(hs)\n    }\n    PG_RETURN_NULL();\n}{% endcodeblock %}\n{% codeblock %}PG_FUNCTION_INFO_V1(hello_out);\nDatum\nhello_out(PG_FUNCTION_ARGS)\n{\n\t// get args[0]\n    Hello * hs = PG_GETARG_POINTER(0);\n\n    if(NULL != hs){\n        char * content = palloc(sizeof(HelloS));\n        strcpy(content,hs-&gt;content);\n        PG_RETURN_CSTRING(content);\n    }\n    PG_RETURN_CSTRING(\"\");\n}\n\nPG_FUNCTION_INFO_V1(Hello);\nDatum\nHello(PG_FUNCTION_ARGS)\n{\n   HelloS* hs = PG_GETARG_POINTER(0);\n if(NULL != hs){\n    char * res = palloc(sizeof(HelloS));\n    sprintf(res,\"hello %s\",hs-&gt;content);\n    PG_RETURN_CSTRING(res);\n }\n PG_RETURN_CSTRING(\"hello nobody\");\n}{% endcodeblock %}\n\n\nThen cd your folder contrib/Hello, make, and make install\n\nThen start psql to execute :\n\ncreate table A(a HelloS);\n\ninsert into A values('cc');\n\ninsert into A values('ff');\n\nselect Hello(a) from A;\n\nresult:\n\nHello cc\n\nHello ff\n\nselect * from A;\n\nresult:\n\ncc\n\nff\n","slug":"2010-09-03-postgresql-function-define","published":1,"updated":"2017-06-05T03:00:18.000Z","photos":[],"link":"","_id":"cj3jjtyo4000a15mju8ko9yer","content":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_rich_snippet_type\" content=\"none\"></p>\n<p><meta name=\"views\" content=\"1573\"><br>In Postgresql, If you want to do something like “select Hello(a) from A;”. You should define your own function Hello().</p>\n<p>First, go to postgresql root directory and go into contrib file folder. Create your own directory, and add hello.h , hello.c, Makefile, hello.sql.in and uninstall_Hello.sql.in</p>\n<p>Makefile is like the following:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\">MODULE_big  = Hello // this is module name</div><div class=\"line\">OBJS = Hello.o // those will be create by execute &quot;make&quot;</div><div class=\"line\"></div><div class=\"line\">DATA_built = hello.sql // install your function using this sql file</div><div class=\"line\">DATA = uninstall_Hello.sql</div><div class=\"line\">SHLIB_LINK = $(BE_DLLLIBS)</div><div class=\"line\"></div><div class=\"line\">ifdef USE_PGXS // this is a build infrastructure of extentions in postgreSQL</div><div class=\"line\">PGXS = $(shell pg_config --pgxs)</div><div class=\"line\">include $(PGXS)</div><div class=\"line\">else</div><div class=\"line\">subdir = contrib/Hello // here is your code files</div><div class=\"line\">top_builddir = ../..</div><div class=\"line\">include $(top_builddir)/src/Makefile.global</div><div class=\"line\">include $(top_srcdir)/contrib/contrib-global.mk</div><div class=\"line\">endif</div><div class=\"line\"></div><div class=\"line\">// the following code fragment is copying content of *.sql.in into *.sql</div><div class=\"line\">%.sql: %.source</div><div class=\"line\">\trm -f $@; \\</div><div class=\"line\">\tC=`pwd`; \\</div><div class=\"line\">\tsed -e &quot;s:_OBJWD_:$$C:g&quot; &amp;lt; $&amp;lt; &amp;gt; $@</div></pre></td></tr></table></figure>\n<p>Attention!!! In Makefile those command should be with no blank at end.<br>Here we can write hello.sql.in:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div></pre></td><td class=\"code\"><pre><div class=\"line\">SET search_path = public; --you should add this code first.</div><div class=\"line\">--functions</div><div class=\"line\">--take care of those functions, if those functions are used for data input and out, their args or return type must be cstring or varchar</div><div class=\"line\"></div><div class=\"line\">-- arg type is cstring</div><div class=\"line\">CREATE OR REPLACE FUNCTION hello_in(cstring)</div><div class=\"line\">   RETURNS HelloS</div><div class=\"line\">   AS &apos;MODULE_PATHNAME&apos;</div><div class=\"line\">   LANGUAGE C IMMUTABLE STRICT;</div><div class=\"line\">-- return type is cstring</div><div class=\"line\">CREATE OR REPLACE FUNCTION hello_out(HelloS)</div><div class=\"line\">   RETURNS cstring</div><div class=\"line\">   AS &apos;MODULE_PATHNAME&apos;</div><div class=\"line\">   LANGUAGE C IMMUTABLE STRICT;</div><div class=\"line\"></div><div class=\"line\">--data type</div><div class=\"line\">CREATE TYPE HelloS (</div><div class=\"line\">   internallength = 52,</div><div class=\"line\">   input = hello_in,</div><div class=\"line\">   output = hello_out,</div><div class=\"line\">   alignment = double</div><div class=\"line\">);</div><div class=\"line\">--size is 52 bytes and alignment is 8 bytes.</div><div class=\"line\">--if you don&apos;t know its real size, use internallength = VARIABLE</div><div class=\"line\">--if you want use binary array as its input and out, you should use receive=XXX_function, and send = XXX_function</div><div class=\"line\"></div><div class=\"line\">--outer function</div><div class=\"line\">--this function can use kinds of types</div><div class=\"line\">CREATE OR REPLACE FUNCTION Hello(HelloS)</div><div class=\"line\">   RETURNS cstring</div><div class=\"line\">   AS &apos;MODULE_PATHNAME&apos;</div><div class=\"line\">   LANGUAGE C IMMUTABLE STRICT;</div></pre></td></tr></table></figure>\n<p>Here is the uninstall_Hello.sql.in:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">SET search_path = public;</div><div class=\"line\"></div><div class=\"line\">DROP FUNCTION hello_in(cstring);</div><div class=\"line\">DROP FUNCTION hello_out(HelloS);</div><div class=\"line\">DROP TYPE HelloS;</div><div class=\"line\">DROP FUNCTION Hello(HelloS);</div></pre></td></tr></table></figure>\n<p>In hello.h</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\">#ifndef HELLO_H</div><div class=\"line\">#define HELLO_H</div><div class=\"line\">#include&amp;lt;stdio.h&amp;gt;</div><div class=\"line\">#include&amp;lt;stdlib.h&amp;gt;</div><div class=\"line\"></div><div class=\"line\">#include &quot;postgres.h&quot;</div><div class=\"line\">#include &quot;fmgr.h&quot;</div><div class=\"line\">#include &quot;funcapi.h&quot;</div><div class=\"line\">// you should take care of the order of those head files!!!</div><div class=\"line\"></div><div class=\"line\">typedef struct&#123;</div><div class=\"line\">\tchar content[52];</div><div class=\"line\">&#125;HelloS;</div><div class=\"line\"></div><div class=\"line\">Datum\t\thello_in(PG_FUNCTION_ARGS);</div><div class=\"line\">Datum\t\thello_out(PG_FUNCTION_ARGS);</div><div class=\"line\">Datum               Hello(PG_FUNCTION_ARGS);</div><div class=\"line\"></div><div class=\"line\">#endif</div></pre></td></tr></table></figure>\n<p>hello.c</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include “hello.h”</div><div class=\"line\"></div><div class=\"line\">#ifndef MOD_FOR_PG</div><div class=\"line\">PG_MODULE_MAGIC;</div><div class=\"line\">#endif</div><div class=\"line\"></div><div class=\"line\">PG_FUNCTION_INFO_V1(hello_in);</div><div class=\"line\">Datum</div><div class=\"line\">hello_in(PG_FUNCTION_ARGS)</div><div class=\"line\">&#123;</div><div class=\"line\">\t// get args[0]</div><div class=\"line\">\tchar * str = PG_GETARG_CSTRING(0);</div><div class=\"line\">    HelloS * hs = palloc(sizeof(HelloS));</div><div class=\"line\">    if(NULL != str)&#123;</div><div class=\"line\">        strcpy(hs-&amp;gt;content,str);</div><div class=\"line\">        PG_RETURN_POINTER(hs)</div><div class=\"line\">    &#125;</div><div class=\"line\">    PG_RETURN_NULL();</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div></pre></td><td class=\"code\"><pre><div class=\"line\">PG_FUNCTION_INFO_V1(hello_out);</div><div class=\"line\">Datum</div><div class=\"line\">hello_out(PG_FUNCTION_ARGS)</div><div class=\"line\">&#123;</div><div class=\"line\">\t// get args[0]</div><div class=\"line\">    Hello * hs = PG_GETARG_POINTER(0);</div><div class=\"line\"></div><div class=\"line\">    if(NULL != hs)&#123;</div><div class=\"line\">        char * content = palloc(sizeof(HelloS));</div><div class=\"line\">        strcpy(content,hs-&amp;gt;content);</div><div class=\"line\">        PG_RETURN_CSTRING(content);</div><div class=\"line\">    &#125;</div><div class=\"line\">    PG_RETURN_CSTRING(&quot;&quot;);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">PG_FUNCTION_INFO_V1(Hello);</div><div class=\"line\">Datum</div><div class=\"line\">Hello(PG_FUNCTION_ARGS)</div><div class=\"line\">&#123;</div><div class=\"line\">   HelloS* hs = PG_GETARG_POINTER(0);</div><div class=\"line\"> if(NULL != hs)&#123;</div><div class=\"line\">    char * res = palloc(sizeof(HelloS));</div><div class=\"line\">    sprintf(res,&quot;hello %s&quot;,hs-&amp;gt;content);</div><div class=\"line\">    PG_RETURN_CSTRING(res);</div><div class=\"line\"> &#125;</div><div class=\"line\"> PG_RETURN_CSTRING(&quot;hello nobody&quot;);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>Then cd your folder contrib/Hello, make, and make install</p>\n<p>Then start psql to execute :</p>\n<p>create table A(a HelloS);</p>\n<p>insert into A values(‘cc’);</p>\n<p>insert into A values(‘ff’);</p>\n<p>select Hello(a) from A;</p>\n<p>result:</p>\n<p>Hello cc</p>\n<p>Hello ff</p>\n<p>select * from A;</p>\n<p>result:</p>\n<p>cc</p>\n<p>ff</p>\n","site":{"data":{}},"excerpt":"","more":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_rich_snippet_type\" content=\"none\"></p>\n<p><meta name=\"views\" content=\"1573\"><br>In Postgresql, If you want to do something like “select Hello(a) from A;”. You should define your own function Hello().</p>\n<p>First, go to postgresql root directory and go into contrib file folder. Create your own directory, and add hello.h , hello.c, Makefile, hello.sql.in and uninstall_Hello.sql.in</p>\n<p>Makefile is like the following:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\">MODULE_big  = Hello // this is module name</div><div class=\"line\">OBJS = Hello.o // those will be create by execute &quot;make&quot;</div><div class=\"line\"></div><div class=\"line\">DATA_built = hello.sql // install your function using this sql file</div><div class=\"line\">DATA = uninstall_Hello.sql</div><div class=\"line\">SHLIB_LINK = $(BE_DLLLIBS)</div><div class=\"line\"></div><div class=\"line\">ifdef USE_PGXS // this is a build infrastructure of extentions in postgreSQL</div><div class=\"line\">PGXS = $(shell pg_config --pgxs)</div><div class=\"line\">include $(PGXS)</div><div class=\"line\">else</div><div class=\"line\">subdir = contrib/Hello // here is your code files</div><div class=\"line\">top_builddir = ../..</div><div class=\"line\">include $(top_builddir)/src/Makefile.global</div><div class=\"line\">include $(top_srcdir)/contrib/contrib-global.mk</div><div class=\"line\">endif</div><div class=\"line\"></div><div class=\"line\">// the following code fragment is copying content of *.sql.in into *.sql</div><div class=\"line\">%.sql: %.source</div><div class=\"line\">\trm -f $@; \\</div><div class=\"line\">\tC=`pwd`; \\</div><div class=\"line\">\tsed -e &quot;s:_OBJWD_:$$C:g&quot; &amp;lt; $&amp;lt; &amp;gt; $@</div></pre></td></tr></table></figure>\n<p>Attention!!! In Makefile those command should be with no blank at end.<br>Here we can write hello.sql.in:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div></pre></td><td class=\"code\"><pre><div class=\"line\">SET search_path = public; --you should add this code first.</div><div class=\"line\">--functions</div><div class=\"line\">--take care of those functions, if those functions are used for data input and out, their args or return type must be cstring or varchar</div><div class=\"line\"></div><div class=\"line\">-- arg type is cstring</div><div class=\"line\">CREATE OR REPLACE FUNCTION hello_in(cstring)</div><div class=\"line\">   RETURNS HelloS</div><div class=\"line\">   AS &apos;MODULE_PATHNAME&apos;</div><div class=\"line\">   LANGUAGE C IMMUTABLE STRICT;</div><div class=\"line\">-- return type is cstring</div><div class=\"line\">CREATE OR REPLACE FUNCTION hello_out(HelloS)</div><div class=\"line\">   RETURNS cstring</div><div class=\"line\">   AS &apos;MODULE_PATHNAME&apos;</div><div class=\"line\">   LANGUAGE C IMMUTABLE STRICT;</div><div class=\"line\"></div><div class=\"line\">--data type</div><div class=\"line\">CREATE TYPE HelloS (</div><div class=\"line\">   internallength = 52,</div><div class=\"line\">   input = hello_in,</div><div class=\"line\">   output = hello_out,</div><div class=\"line\">   alignment = double</div><div class=\"line\">);</div><div class=\"line\">--size is 52 bytes and alignment is 8 bytes.</div><div class=\"line\">--if you don&apos;t know its real size, use internallength = VARIABLE</div><div class=\"line\">--if you want use binary array as its input and out, you should use receive=XXX_function, and send = XXX_function</div><div class=\"line\"></div><div class=\"line\">--outer function</div><div class=\"line\">--this function can use kinds of types</div><div class=\"line\">CREATE OR REPLACE FUNCTION Hello(HelloS)</div><div class=\"line\">   RETURNS cstring</div><div class=\"line\">   AS &apos;MODULE_PATHNAME&apos;</div><div class=\"line\">   LANGUAGE C IMMUTABLE STRICT;</div></pre></td></tr></table></figure>\n<p>Here is the uninstall_Hello.sql.in:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">SET search_path = public;</div><div class=\"line\"></div><div class=\"line\">DROP FUNCTION hello_in(cstring);</div><div class=\"line\">DROP FUNCTION hello_out(HelloS);</div><div class=\"line\">DROP TYPE HelloS;</div><div class=\"line\">DROP FUNCTION Hello(HelloS);</div></pre></td></tr></table></figure>\n<p>In hello.h</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\">#ifndef HELLO_H</div><div class=\"line\">#define HELLO_H</div><div class=\"line\">#include&amp;lt;stdio.h&amp;gt;</div><div class=\"line\">#include&amp;lt;stdlib.h&amp;gt;</div><div class=\"line\"></div><div class=\"line\">#include &quot;postgres.h&quot;</div><div class=\"line\">#include &quot;fmgr.h&quot;</div><div class=\"line\">#include &quot;funcapi.h&quot;</div><div class=\"line\">// you should take care of the order of those head files!!!</div><div class=\"line\"></div><div class=\"line\">typedef struct&#123;</div><div class=\"line\">\tchar content[52];</div><div class=\"line\">&#125;HelloS;</div><div class=\"line\"></div><div class=\"line\">Datum\t\thello_in(PG_FUNCTION_ARGS);</div><div class=\"line\">Datum\t\thello_out(PG_FUNCTION_ARGS);</div><div class=\"line\">Datum               Hello(PG_FUNCTION_ARGS);</div><div class=\"line\"></div><div class=\"line\">#endif</div></pre></td></tr></table></figure>\n<p>hello.c</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include “hello.h”</div><div class=\"line\"></div><div class=\"line\">#ifndef MOD_FOR_PG</div><div class=\"line\">PG_MODULE_MAGIC;</div><div class=\"line\">#endif</div><div class=\"line\"></div><div class=\"line\">PG_FUNCTION_INFO_V1(hello_in);</div><div class=\"line\">Datum</div><div class=\"line\">hello_in(PG_FUNCTION_ARGS)</div><div class=\"line\">&#123;</div><div class=\"line\">\t// get args[0]</div><div class=\"line\">\tchar * str = PG_GETARG_CSTRING(0);</div><div class=\"line\">    HelloS * hs = palloc(sizeof(HelloS));</div><div class=\"line\">    if(NULL != str)&#123;</div><div class=\"line\">        strcpy(hs-&amp;gt;content,str);</div><div class=\"line\">        PG_RETURN_POINTER(hs)</div><div class=\"line\">    &#125;</div><div class=\"line\">    PG_RETURN_NULL();</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div></pre></td><td class=\"code\"><pre><div class=\"line\">PG_FUNCTION_INFO_V1(hello_out);</div><div class=\"line\">Datum</div><div class=\"line\">hello_out(PG_FUNCTION_ARGS)</div><div class=\"line\">&#123;</div><div class=\"line\">\t// get args[0]</div><div class=\"line\">    Hello * hs = PG_GETARG_POINTER(0);</div><div class=\"line\"></div><div class=\"line\">    if(NULL != hs)&#123;</div><div class=\"line\">        char * content = palloc(sizeof(HelloS));</div><div class=\"line\">        strcpy(content,hs-&amp;gt;content);</div><div class=\"line\">        PG_RETURN_CSTRING(content);</div><div class=\"line\">    &#125;</div><div class=\"line\">    PG_RETURN_CSTRING(&quot;&quot;);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">PG_FUNCTION_INFO_V1(Hello);</div><div class=\"line\">Datum</div><div class=\"line\">Hello(PG_FUNCTION_ARGS)</div><div class=\"line\">&#123;</div><div class=\"line\">   HelloS* hs = PG_GETARG_POINTER(0);</div><div class=\"line\"> if(NULL != hs)&#123;</div><div class=\"line\">    char * res = palloc(sizeof(HelloS));</div><div class=\"line\">    sprintf(res,&quot;hello %s&quot;,hs-&amp;gt;content);</div><div class=\"line\">    PG_RETURN_CSTRING(res);</div><div class=\"line\"> &#125;</div><div class=\"line\"> PG_RETURN_CSTRING(&quot;hello nobody&quot;);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>Then cd your folder contrib/Hello, make, and make install</p>\n<p>Then start psql to execute :</p>\n<p>create table A(a HelloS);</p>\n<p>insert into A values(‘cc’);</p>\n<p>insert into A values(‘ff’);</p>\n<p>select Hello(a) from A;</p>\n<p>result:</p>\n<p>Hello cc</p>\n<p>Hello ff</p>\n<p>select * from A;</p>\n<p>result:</p>\n<p>cc</p>\n<p>ff</p>\n"},{"layout":"post","title":"how to create a class , which size is 0?","date":"2010-10-10T16:00:00.000Z","wordpress_id":335,"comments":1,"_content":"<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_rich_snippet_type\" content=\"none\" />\n<meta name=\"views\" content=\"611\" />\n<meta name=\"_wp_old_slug\" content=\"apply-class-size-0\" />\nhow to create a class , which size is 0?\n\nIf you create a class with array [0], you have done it.:D\n\nOnly in gcc compiler....in visual c++6.0, it is still 1.\n\n\n{% codeblock %}#include&lt;iostream&gt;\nusing namespace std;\nclass A\n{\n\tchar a[0];\n};\nint main()\n{\n\tcout &lt;&lt; sizeof(A);\n\treturn 0;\n}{% endcodeblock %}\n \n","source":"_posts/2010-10-11-create-class-size-0.markdown","raw":"---\nlayout: post\ntitle: \"how to create a class , which size is 0?\"\ndate: 2010-10-11\nwordpress_id: 335\ncomments: true\ncategories: [\"c\", \"cc\", \"class\", \"code\", \"sizeof\"]\n---\n<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_rich_snippet_type\" content=\"none\" />\n<meta name=\"views\" content=\"611\" />\n<meta name=\"_wp_old_slug\" content=\"apply-class-size-0\" />\nhow to create a class , which size is 0?\n\nIf you create a class with array [0], you have done it.:D\n\nOnly in gcc compiler....in visual c++6.0, it is still 1.\n\n\n{% codeblock %}#include&lt;iostream&gt;\nusing namespace std;\nclass A\n{\n\tchar a[0];\n};\nint main()\n{\n\tcout &lt;&lt; sizeof(A);\n\treturn 0;\n}{% endcodeblock %}\n \n","slug":"2010-10-11-create-class-size-0","published":1,"updated":"2017-06-05T03:00:12.000Z","photos":[],"link":"","_id":"cj3jjtyo9000c15mjywb0q0qx","content":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_rich_snippet_type\" content=\"none\"></p>\n<p><meta name=\"views\" content=\"611\"></p>\n<p><meta name=\"_wp_old_slug\" content=\"apply-class-size-0\"><br>how to create a class , which size is 0?</p>\n<p>If you create a class with array [0], you have done it.:D</p>\n<p>Only in gcc compiler….in visual c++6.0, it is still 1.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&amp;lt;iostream&amp;gt;</div><div class=\"line\">using namespace std;</div><div class=\"line\">class A</div><div class=\"line\">&#123;</div><div class=\"line\">\tchar a[0];</div><div class=\"line\">&#125;;</div><div class=\"line\">int main()</div><div class=\"line\">&#123;</div><div class=\"line\">\tcout &amp;lt;&amp;lt; sizeof(A);</div><div class=\"line\">\treturn 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_rich_snippet_type\" content=\"none\"></p>\n<p><meta name=\"views\" content=\"611\"></p>\n<p><meta name=\"_wp_old_slug\" content=\"apply-class-size-0\"><br>how to create a class , which size is 0?</p>\n<p>If you create a class with array [0], you have done it.:D</p>\n<p>Only in gcc compiler….in visual c++6.0, it is still 1.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&amp;lt;iostream&amp;gt;</div><div class=\"line\">using namespace std;</div><div class=\"line\">class A</div><div class=\"line\">&#123;</div><div class=\"line\">\tchar a[0];</div><div class=\"line\">&#125;;</div><div class=\"line\">int main()</div><div class=\"line\">&#123;</div><div class=\"line\">\tcout &amp;lt;&amp;lt; sizeof(A);</div><div class=\"line\">\treturn 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n"},{"layout":"post","title":"sizeof in c++","date":"2010-06-16T16:00:00.000Z","wordpress_id":217,"comments":1,"_content":"<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_description\" content=\"the inside of sizeof\nthe inside of memory alignment\" />\n<meta name=\"_su_keywords\" content=\"c++, sizeof, double, int, align,memory\" />\n<meta name=\"_su_title\" content=\"c++, sizeof, double, int, align,memory\" />\n<meta name=\"views\" content=\"1054\" />\nI use c++ in linux which is gcc version 4.4.1 (Ubuntu 4.4.1-4ubuntu9).\n\nI considered that c++ memory alignment is like the following:\n\n\n{% codeblock %}// pseudo-code of memory alignment\nremove_all_static_varibles();\nint max= 0;\nforeach(element in struct)\n    find_the_max_memory_used(element,&amp;max);\nint align = max &gt; default? default: max;\n// if max memory used for element is larger than the default, use default.\nint memory = sum(memory_used(elements));\n\nif(memory%align != 0)\n// here will execute alignment!\n{\n    memory = (memory/align + 1 )*align;\n}\nif(memory == 0)\n    memory = 1;\nreturn memory;{% endcodeblock %}\n\n\nvc++ use #pragma_pack(n) set the default.if there are three char in a struct, like:\n\n\n{% codeblock %}typedef struct{\n\tchar a;\n\tchar b;\n\tchar c;\n}X;\nsizeof(X); // it will be 3{% endcodeblock %}\n\n\n\n{% codeblock %}typedef struct{\n\tchar a;\n\tshort b;\n\n}Y;\nsizeof(Y); // here will be 4\n\ntypedef struct{\n\tchar a;\n\tint b;\n}Z;\n\nsizeof(Z); // here will be 8{% endcodeblock %}\n\n\n\n{% codeblock %}typedef struct{\n\tdouble a;\n\tchar b;\n}W;\nsizeof(W);\n// it will be 12, the align is 4\n// when the max memory used is larger\n// than 4, it will be 4{% endcodeblock %}\n\n\nif the class or struct is empty, sizeof(it) will be 1.\n\nBut if there are static varibles in classes or structs, you can remove it!. like:\n\n\n{% codeblock %}class A{\n\tstatic int a;\n\n};\nsizeof(A); // it will be 1{% endcodeblock %}\n\n\nin class there will be many class functions. But A class is thought as A struct and many functions set. sizeof(A class) will compute the size of struct.\n\n\n{% codeblock %}class ZZ{\n    public:\n        ZZ(){\n            int a = 3;\n            cout &lt;&lt; \"I am ZZ\"&lt;&lt;endl;\n            cout &lt;&lt; a&lt;&lt;endl;\n        }\n        ~ZZ(){\n\n        }\n    int c;\n};\nsizeof(ZZ); // will be 4;\n/* it is like a struct and two member functions.\nstruct ZZ{\n\tint c;\n};\n\nZZ@ZZ() is name mingling\nZZ@ZZ(){\n\tint a = 3;\n        cout &lt;&lt; \"I am ZZ\"&lt;&lt;endl;\n        cout &lt;&lt; a&lt;&lt;endl;\n}\nZZ@~ZZ(){\n\n}\n*/{% endcodeblock %}\n\n\nbut when we meet the virtual member functions and virtual derived class, it will be different.\n","source":"_posts/2010-06-17-sizeof-c.markdown","raw":"---\nlayout: post\ntitle: \"sizeof in c++\"\ndate: 2010-6-17\nwordpress_id: 217\ncomments: true\ncategories: [\"align\", \"c\", \"cc\", \"code\", \"memory\", \"sizeof\"]\n---\n<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_description\" content=\"the inside of sizeof\nthe inside of memory alignment\" />\n<meta name=\"_su_keywords\" content=\"c++, sizeof, double, int, align,memory\" />\n<meta name=\"_su_title\" content=\"c++, sizeof, double, int, align,memory\" />\n<meta name=\"views\" content=\"1054\" />\nI use c++ in linux which is gcc version 4.4.1 (Ubuntu 4.4.1-4ubuntu9).\n\nI considered that c++ memory alignment is like the following:\n\n\n{% codeblock %}// pseudo-code of memory alignment\nremove_all_static_varibles();\nint max= 0;\nforeach(element in struct)\n    find_the_max_memory_used(element,&amp;max);\nint align = max &gt; default? default: max;\n// if max memory used for element is larger than the default, use default.\nint memory = sum(memory_used(elements));\n\nif(memory%align != 0)\n// here will execute alignment!\n{\n    memory = (memory/align + 1 )*align;\n}\nif(memory == 0)\n    memory = 1;\nreturn memory;{% endcodeblock %}\n\n\nvc++ use #pragma_pack(n) set the default.if there are three char in a struct, like:\n\n\n{% codeblock %}typedef struct{\n\tchar a;\n\tchar b;\n\tchar c;\n}X;\nsizeof(X); // it will be 3{% endcodeblock %}\n\n\n\n{% codeblock %}typedef struct{\n\tchar a;\n\tshort b;\n\n}Y;\nsizeof(Y); // here will be 4\n\ntypedef struct{\n\tchar a;\n\tint b;\n}Z;\n\nsizeof(Z); // here will be 8{% endcodeblock %}\n\n\n\n{% codeblock %}typedef struct{\n\tdouble a;\n\tchar b;\n}W;\nsizeof(W);\n// it will be 12, the align is 4\n// when the max memory used is larger\n// than 4, it will be 4{% endcodeblock %}\n\n\nif the class or struct is empty, sizeof(it) will be 1.\n\nBut if there are static varibles in classes or structs, you can remove it!. like:\n\n\n{% codeblock %}class A{\n\tstatic int a;\n\n};\nsizeof(A); // it will be 1{% endcodeblock %}\n\n\nin class there will be many class functions. But A class is thought as A struct and many functions set. sizeof(A class) will compute the size of struct.\n\n\n{% codeblock %}class ZZ{\n    public:\n        ZZ(){\n            int a = 3;\n            cout &lt;&lt; \"I am ZZ\"&lt;&lt;endl;\n            cout &lt;&lt; a&lt;&lt;endl;\n        }\n        ~ZZ(){\n\n        }\n    int c;\n};\nsizeof(ZZ); // will be 4;\n/* it is like a struct and two member functions.\nstruct ZZ{\n\tint c;\n};\n\nZZ@ZZ() is name mingling\nZZ@ZZ(){\n\tint a = 3;\n        cout &lt;&lt; \"I am ZZ\"&lt;&lt;endl;\n        cout &lt;&lt; a&lt;&lt;endl;\n}\nZZ@~ZZ(){\n\n}\n*/{% endcodeblock %}\n\n\nbut when we meet the virtual member functions and virtual derived class, it will be different.\n","slug":"2010-06-17-sizeof-c","published":1,"updated":"2017-06-05T03:00:53.000Z","photos":[],"link":"","_id":"cj3jjugmd00001bmjkiuyws1z","content":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_description\" content=\"the inside of sizeof\nthe inside of memory alignment\"></p>\n<p><meta name=\"_su_keywords\" content=\"c++, sizeof, double, int, align,memory\"></p>\n<p><meta name=\"_su_title\" content=\"c++, sizeof, double, int, align,memory\"></p>\n<p><meta name=\"views\" content=\"1054\"><br>I use c++ in linux which is gcc version 4.4.1 (Ubuntu 4.4.1-4ubuntu9).</p>\n<p>I considered that c++ memory alignment is like the following:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">// pseudo-code of memory alignment</div><div class=\"line\">remove_all_static_varibles();</div><div class=\"line\">int max= 0;</div><div class=\"line\">foreach(element in struct)</div><div class=\"line\">    find_the_max_memory_used(element,&amp;amp;max);</div><div class=\"line\">int align = max &amp;gt; default? default: max;</div><div class=\"line\">// if max memory used for element is larger than the default, use default.</div><div class=\"line\">int memory = sum(memory_used(elements));</div><div class=\"line\"></div><div class=\"line\">if(memory%align != 0)</div><div class=\"line\">// here will execute alignment!</div><div class=\"line\">&#123;</div><div class=\"line\">    memory = (memory/align + 1 )*align;</div><div class=\"line\">&#125;</div><div class=\"line\">if(memory == 0)</div><div class=\"line\">    memory = 1;</div><div class=\"line\">return memory;</div></pre></td></tr></table></figure>\n<p>vc++ use #pragma_pack(n) set the default.if there are three char in a struct, like:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">typedef struct&#123;</div><div class=\"line\">\tchar a;</div><div class=\"line\">\tchar b;</div><div class=\"line\">\tchar c;</div><div class=\"line\">&#125;X;</div><div class=\"line\">sizeof(X); // it will be 3</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">typedef struct&#123;</div><div class=\"line\">\tchar a;</div><div class=\"line\">\tshort b;</div><div class=\"line\"></div><div class=\"line\">&#125;Y;</div><div class=\"line\">sizeof(Y); // here will be 4</div><div class=\"line\"></div><div class=\"line\">typedef struct&#123;</div><div class=\"line\">\tchar a;</div><div class=\"line\">\tint b;</div><div class=\"line\">&#125;Z;</div><div class=\"line\"></div><div class=\"line\">sizeof(Z); // here will be 8</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">typedef struct&#123;</div><div class=\"line\">\tdouble a;</div><div class=\"line\">\tchar b;</div><div class=\"line\">&#125;W;</div><div class=\"line\">sizeof(W);</div><div class=\"line\">// it will be 12, the align is 4</div><div class=\"line\">// when the max memory used is larger</div><div class=\"line\">// than 4, it will be 4</div></pre></td></tr></table></figure>\n<p>if the class or struct is empty, sizeof(it) will be 1.</p>\n<p>But if there are static varibles in classes or structs, you can remove it!. like:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">class A&#123;</div><div class=\"line\">\tstatic int a;</div><div class=\"line\"></div><div class=\"line\">&#125;;</div><div class=\"line\">sizeof(A); // it will be 1</div></pre></td></tr></table></figure>\n<p>in class there will be many class functions. But A class is thought as A struct and many functions set. sizeof(A class) will compute the size of struct.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div></pre></td><td class=\"code\"><pre><div class=\"line\">class ZZ&#123;</div><div class=\"line\">    public:</div><div class=\"line\">        ZZ()&#123;</div><div class=\"line\">            int a = 3;</div><div class=\"line\">            cout &amp;lt;&amp;lt; &quot;I am ZZ&quot;&amp;lt;&amp;lt;endl;</div><div class=\"line\">            cout &amp;lt;&amp;lt; a&amp;lt;&amp;lt;endl;</div><div class=\"line\">        &#125;</div><div class=\"line\">        ~ZZ()&#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\">    int c;</div><div class=\"line\">&#125;;</div><div class=\"line\">sizeof(ZZ); // will be 4;</div><div class=\"line\">/* it is like a struct and two member functions.</div><div class=\"line\">struct ZZ&#123;</div><div class=\"line\">\tint c;</div><div class=\"line\">&#125;;</div><div class=\"line\"></div><div class=\"line\">ZZ@ZZ() is name mingling</div><div class=\"line\">ZZ@ZZ()&#123;</div><div class=\"line\">\tint a = 3;</div><div class=\"line\">        cout &amp;lt;&amp;lt; &quot;I am ZZ&quot;&amp;lt;&amp;lt;endl;</div><div class=\"line\">        cout &amp;lt;&amp;lt; a&amp;lt;&amp;lt;endl;</div><div class=\"line\">&#125;</div><div class=\"line\">ZZ@~ZZ()&#123;</div><div class=\"line\"></div><div class=\"line\">&#125;</div><div class=\"line\">*/</div></pre></td></tr></table></figure>\n<p>but when we meet the virtual member functions and virtual derived class, it will be different.</p>\n","site":{"data":{}},"excerpt":"","more":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_description\" content=\"the inside of sizeof\nthe inside of memory alignment\"></p>\n<p><meta name=\"_su_keywords\" content=\"c++, sizeof, double, int, align,memory\"></p>\n<p><meta name=\"_su_title\" content=\"c++, sizeof, double, int, align,memory\"></p>\n<p><meta name=\"views\" content=\"1054\"><br>I use c++ in linux which is gcc version 4.4.1 (Ubuntu 4.4.1-4ubuntu9).</p>\n<p>I considered that c++ memory alignment is like the following:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">// pseudo-code of memory alignment</div><div class=\"line\">remove_all_static_varibles();</div><div class=\"line\">int max= 0;</div><div class=\"line\">foreach(element in struct)</div><div class=\"line\">    find_the_max_memory_used(element,&amp;amp;max);</div><div class=\"line\">int align = max &amp;gt; default? default: max;</div><div class=\"line\">// if max memory used for element is larger than the default, use default.</div><div class=\"line\">int memory = sum(memory_used(elements));</div><div class=\"line\"></div><div class=\"line\">if(memory%align != 0)</div><div class=\"line\">// here will execute alignment!</div><div class=\"line\">&#123;</div><div class=\"line\">    memory = (memory/align + 1 )*align;</div><div class=\"line\">&#125;</div><div class=\"line\">if(memory == 0)</div><div class=\"line\">    memory = 1;</div><div class=\"line\">return memory;</div></pre></td></tr></table></figure>\n<p>vc++ use #pragma_pack(n) set the default.if there are three char in a struct, like:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">typedef struct&#123;</div><div class=\"line\">\tchar a;</div><div class=\"line\">\tchar b;</div><div class=\"line\">\tchar c;</div><div class=\"line\">&#125;X;</div><div class=\"line\">sizeof(X); // it will be 3</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">typedef struct&#123;</div><div class=\"line\">\tchar a;</div><div class=\"line\">\tshort b;</div><div class=\"line\"></div><div class=\"line\">&#125;Y;</div><div class=\"line\">sizeof(Y); // here will be 4</div><div class=\"line\"></div><div class=\"line\">typedef struct&#123;</div><div class=\"line\">\tchar a;</div><div class=\"line\">\tint b;</div><div class=\"line\">&#125;Z;</div><div class=\"line\"></div><div class=\"line\">sizeof(Z); // here will be 8</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">typedef struct&#123;</div><div class=\"line\">\tdouble a;</div><div class=\"line\">\tchar b;</div><div class=\"line\">&#125;W;</div><div class=\"line\">sizeof(W);</div><div class=\"line\">// it will be 12, the align is 4</div><div class=\"line\">// when the max memory used is larger</div><div class=\"line\">// than 4, it will be 4</div></pre></td></tr></table></figure>\n<p>if the class or struct is empty, sizeof(it) will be 1.</p>\n<p>But if there are static varibles in classes or structs, you can remove it!. like:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">class A&#123;</div><div class=\"line\">\tstatic int a;</div><div class=\"line\"></div><div class=\"line\">&#125;;</div><div class=\"line\">sizeof(A); // it will be 1</div></pre></td></tr></table></figure>\n<p>in class there will be many class functions. But A class is thought as A struct and many functions set. sizeof(A class) will compute the size of struct.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div></pre></td><td class=\"code\"><pre><div class=\"line\">class ZZ&#123;</div><div class=\"line\">    public:</div><div class=\"line\">        ZZ()&#123;</div><div class=\"line\">            int a = 3;</div><div class=\"line\">            cout &amp;lt;&amp;lt; &quot;I am ZZ&quot;&amp;lt;&amp;lt;endl;</div><div class=\"line\">            cout &amp;lt;&amp;lt; a&amp;lt;&amp;lt;endl;</div><div class=\"line\">        &#125;</div><div class=\"line\">        ~ZZ()&#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\">    int c;</div><div class=\"line\">&#125;;</div><div class=\"line\">sizeof(ZZ); // will be 4;</div><div class=\"line\">/* it is like a struct and two member functions.</div><div class=\"line\">struct ZZ&#123;</div><div class=\"line\">\tint c;</div><div class=\"line\">&#125;;</div><div class=\"line\"></div><div class=\"line\">ZZ@ZZ() is name mingling</div><div class=\"line\">ZZ@ZZ()&#123;</div><div class=\"line\">\tint a = 3;</div><div class=\"line\">        cout &amp;lt;&amp;lt; &quot;I am ZZ&quot;&amp;lt;&amp;lt;endl;</div><div class=\"line\">        cout &amp;lt;&amp;lt; a&amp;lt;&amp;lt;endl;</div><div class=\"line\">&#125;</div><div class=\"line\">ZZ@~ZZ()&#123;</div><div class=\"line\"></div><div class=\"line\">&#125;</div><div class=\"line\">*/</div></pre></td></tr></table></figure>\n<p>but when we meet the virtual member functions and virtual derived class, it will be different.</p>\n"},{"layout":"post","title":"What does volatile do?","date":"2010-06-20T16:00:00.000Z","wordpress_id":224,"comments":1,"_content":"<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"views\" content=\"536\" />\n<meta name=\"_wp_old_slug\" content=\"copy\" />\ncopy from http://www.javaperformancetuning.com/news/qotm030.shtml\n\n<strong>What does {% codeblock %}volatile{% endcodeblock %} do?</strong>\n\nThis is probably best explained by comparing the effects that {% codeblock %}volatile{% endcodeblock %} and {% codeblock %}synchronized{% endcodeblock %} have on a method. {% codeblock %}volatile{% endcodeblock %} is a  field modifier, while {% codeblock %}synchronized{% endcodeblock %} modifies code blocks and  methods. So we can specify three variations of a simple accessor using those two  keywords:\n{% codeblock %}         int i1;              int geti1() {return i1;}\nvolatile int i2;              int geti2() {return i2;}\n         int i3; synchronized int geti3() {return i3;}\n{% endcodeblock %}\n{% codeblock %}geti1(){% endcodeblock %} accesses the value currently stored in {% codeblock %}i1{% endcodeblock %} <em>in the current thread</em>. Threads can have local copies of variables, and  the data does not have to be the same as the data held in other threads. In  particular, another thread may have updated {% codeblock %}i1{% endcodeblock %} in it's thread, but the  value in the current thread could be different from that updated value. In  fact Java has the idea of a \"main\" memory, and this is the memory that holds the  current \"correct\" value for variables. Threads can have their own copy of data  for variables, and the thread copy can be different from the \"main\" memory.  So in fact, it is possible for the \"main\" memory  to have a value of 1 for {% codeblock %}i1{% endcodeblock %}, for thread1 to have a value of 2 for {% codeblock %}i1{% endcodeblock %} and for thread2 to  have a value of 3 for {% codeblock %}i1{% endcodeblock %} if thread1 and thread2 have both updated {% codeblock %}i1{% endcodeblock %} but those updated value has not yet been propagated to \"main\" memory or  other threads.\n\nOn the other hand, {% codeblock %}geti2(){% endcodeblock %} effectively accesses the value  of {% codeblock %}i2{% endcodeblock %} from \"main\" memory. A {% codeblock %}volatile{% endcodeblock %} variable is not allowed to  have a local copy of a variable that is different from the value currently held in \"main\"  memory. Effectively, a variable declared {% codeblock %}volatile{% endcodeblock %} must have it's data  synchronized across all threads, so that whenever you access or update the variable in any thread, all  other threads immediately see the same value. Of course, it is likely that {% codeblock %}volatile{% endcodeblock %} variables have a higher access and update overhead than \"plain\"  variables, since the reason threads can have their own copy of data is for better efficiency.\n\nWell if {% codeblock %}volatile{% endcodeblock %} already synchronizes data across threads,  what is {% codeblock %}synchronized{% endcodeblock %} for? Well there are two differences. Firstly {% codeblock %}synchronized{% endcodeblock %} obtains and releases locks on monitors which  can force only one thread at a time to execute a code block, if both threads use  the same monitor (effectively the same object lock). That's the fairly well known  aspect to {% codeblock %}synchronized{% endcodeblock %}. But {% codeblock %}synchronized{% endcodeblock %} also  synchronizes memory. In fact {% codeblock %}synchronized{% endcodeblock %} synchronizes the whole of thread  memory with \"main\" memory. So executing {% codeblock %}geti3(){% endcodeblock %} does the following:\n<ol>\n\t<li>The thread acquires the lock on the monitor for object {% codeblock %}this{% endcodeblock %} (assuming the monitor is unlocked, otherwise the thread waits until the  monitor is unlocked).</li>\n\t<li>The thread memory flushes <em>all</em> its variables, i.e. it  has all of its variables effectively read from \"main\" memory (JVMs can use dirty sets to optimize  this so that only \"dirty\" variables are flushed, but conceptually this is the same. See  section 17.9 of the Java language specification).</li>\n\t<li>The code block is executed (in this case setting the return  value to the current value of {% codeblock %}i3{% endcodeblock %}, which may have just been reset from \"main\"  memory).</li>\n\t<li>(Any changes to variables would normally now be written out to  \"main\" memory, but for {% codeblock %}geti3(){% endcodeblock %} we have no changes.)</li>\n\t<li>The thread releases the lock on the monitor for object {% codeblock %}this{% endcodeblock %}.</li>\n</ol>\nSo where {% codeblock %}volatile{% endcodeblock %} only synchronizes the value of one  variable between thread memory and \"main\" memory, {% codeblock %}synchronized{% endcodeblock %} synchronizes  the value of all variables between thread memory and \"main\" memory, and locks and  releases a monitor to boot. Clearly {% codeblock %}synchronized{% endcodeblock %} is likely to have  more overhead than {% codeblock %}volatile{% endcodeblock %}.\n","source":"_posts/2010-06-21-volatile-do.markdown","raw":"---\nlayout: post\ntitle: \"What does volatile do?\"\ndate: 2010-6-21\nwordpress_id: 224\ncomments: true\ncategories: [\"cc\", \"code\", \"synchronizes\", \"volatile\"]\n---\n<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"views\" content=\"536\" />\n<meta name=\"_wp_old_slug\" content=\"copy\" />\ncopy from http://www.javaperformancetuning.com/news/qotm030.shtml\n\n<strong>What does {% codeblock %}volatile{% endcodeblock %} do?</strong>\n\nThis is probably best explained by comparing the effects that {% codeblock %}volatile{% endcodeblock %} and {% codeblock %}synchronized{% endcodeblock %} have on a method. {% codeblock %}volatile{% endcodeblock %} is a  field modifier, while {% codeblock %}synchronized{% endcodeblock %} modifies code blocks and  methods. So we can specify three variations of a simple accessor using those two  keywords:\n{% codeblock %}         int i1;              int geti1() {return i1;}\nvolatile int i2;              int geti2() {return i2;}\n         int i3; synchronized int geti3() {return i3;}\n{% endcodeblock %}\n{% codeblock %}geti1(){% endcodeblock %} accesses the value currently stored in {% codeblock %}i1{% endcodeblock %} <em>in the current thread</em>. Threads can have local copies of variables, and  the data does not have to be the same as the data held in other threads. In  particular, another thread may have updated {% codeblock %}i1{% endcodeblock %} in it's thread, but the  value in the current thread could be different from that updated value. In  fact Java has the idea of a \"main\" memory, and this is the memory that holds the  current \"correct\" value for variables. Threads can have their own copy of data  for variables, and the thread copy can be different from the \"main\" memory.  So in fact, it is possible for the \"main\" memory  to have a value of 1 for {% codeblock %}i1{% endcodeblock %}, for thread1 to have a value of 2 for {% codeblock %}i1{% endcodeblock %} and for thread2 to  have a value of 3 for {% codeblock %}i1{% endcodeblock %} if thread1 and thread2 have both updated {% codeblock %}i1{% endcodeblock %} but those updated value has not yet been propagated to \"main\" memory or  other threads.\n\nOn the other hand, {% codeblock %}geti2(){% endcodeblock %} effectively accesses the value  of {% codeblock %}i2{% endcodeblock %} from \"main\" memory. A {% codeblock %}volatile{% endcodeblock %} variable is not allowed to  have a local copy of a variable that is different from the value currently held in \"main\"  memory. Effectively, a variable declared {% codeblock %}volatile{% endcodeblock %} must have it's data  synchronized across all threads, so that whenever you access or update the variable in any thread, all  other threads immediately see the same value. Of course, it is likely that {% codeblock %}volatile{% endcodeblock %} variables have a higher access and update overhead than \"plain\"  variables, since the reason threads can have their own copy of data is for better efficiency.\n\nWell if {% codeblock %}volatile{% endcodeblock %} already synchronizes data across threads,  what is {% codeblock %}synchronized{% endcodeblock %} for? Well there are two differences. Firstly {% codeblock %}synchronized{% endcodeblock %} obtains and releases locks on monitors which  can force only one thread at a time to execute a code block, if both threads use  the same monitor (effectively the same object lock). That's the fairly well known  aspect to {% codeblock %}synchronized{% endcodeblock %}. But {% codeblock %}synchronized{% endcodeblock %} also  synchronizes memory. In fact {% codeblock %}synchronized{% endcodeblock %} synchronizes the whole of thread  memory with \"main\" memory. So executing {% codeblock %}geti3(){% endcodeblock %} does the following:\n<ol>\n\t<li>The thread acquires the lock on the monitor for object {% codeblock %}this{% endcodeblock %} (assuming the monitor is unlocked, otherwise the thread waits until the  monitor is unlocked).</li>\n\t<li>The thread memory flushes <em>all</em> its variables, i.e. it  has all of its variables effectively read from \"main\" memory (JVMs can use dirty sets to optimize  this so that only \"dirty\" variables are flushed, but conceptually this is the same. See  section 17.9 of the Java language specification).</li>\n\t<li>The code block is executed (in this case setting the return  value to the current value of {% codeblock %}i3{% endcodeblock %}, which may have just been reset from \"main\"  memory).</li>\n\t<li>(Any changes to variables would normally now be written out to  \"main\" memory, but for {% codeblock %}geti3(){% endcodeblock %} we have no changes.)</li>\n\t<li>The thread releases the lock on the monitor for object {% codeblock %}this{% endcodeblock %}.</li>\n</ol>\nSo where {% codeblock %}volatile{% endcodeblock %} only synchronizes the value of one  variable between thread memory and \"main\" memory, {% codeblock %}synchronized{% endcodeblock %} synchronizes  the value of all variables between thread memory and \"main\" memory, and locks and  releases a monitor to boot. Clearly {% codeblock %}synchronized{% endcodeblock %} is likely to have  more overhead than {% codeblock %}volatile{% endcodeblock %}.\n","slug":"2010-06-21-volatile-do","published":1,"updated":"2017-06-05T03:00:53.000Z","photos":[],"link":"","_id":"cj3jjugmk00011bmjvkceypkg","content":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"views\" content=\"536\"></p>\n<p><meta name=\"_wp_old_slug\" content=\"copy\"><br>copy from <a href=\"http://www.javaperformancetuning.com/news/qotm030.shtml\" target=\"_blank\" rel=\"external\">http://www.javaperformancetuning.com/news/qotm030.shtml</a></p>\n<p><strong>What does <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">volatile</div></pre></td></tr></table></figure> do?</strong></p>\n<p>This is probably best explained by comparing the effects that <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">volatile</div></pre></td></tr></table></figure> and <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">synchronized</div></pre></td></tr></table></figure> have on a method. <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">volatile</div></pre></td></tr></table></figure> is a  field modifier, while <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">synchronized</div></pre></td></tr></table></figure> modifies code blocks and  methods. So we can specify three variations of a simple accessor using those two  keywords:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">         int i1;              int geti1() &#123;return i1;&#125;</div><div class=\"line\">volatile int i2;              int geti2() &#123;return i2;&#125;</div><div class=\"line\">         int i3; synchronized int geti3() &#123;return i3;&#125;</div></pre></td></tr></table></figure><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">geti1()</div></pre></td></tr></table></figure> accesses the value currently stored in <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">i1</div></pre></td></tr></table></figure> <em>in the current thread</em>. Threads can have local copies of variables, and  the data does not have to be the same as the data held in other threads. In  particular, another thread may have updated <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">i1</div></pre></td></tr></table></figure> in it’s thread, but the  value in the current thread could be different from that updated value. In  fact Java has the idea of a “main” memory, and this is the memory that holds the  current “correct” value for variables. Threads can have their own copy of data  for variables, and the thread copy can be different from the “main” memory.  So in fact, it is possible for the “main” memory  to have a value of 1 for <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">i1</div></pre></td></tr></table></figure>, for thread1 to have a value of 2 for <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">i1</div></pre></td></tr></table></figure> and for thread2 to  have a value of 3 for <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">i1</div></pre></td></tr></table></figure> if thread1 and thread2 have both updated <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">i1</div></pre></td></tr></table></figure> but those updated value has not yet been propagated to “main” memory or  other threads.</p>\n<p>On the other hand, <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">geti2()</div></pre></td></tr></table></figure> effectively accesses the value  of <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">i2</div></pre></td></tr></table></figure> from “main” memory. A <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">volatile</div></pre></td></tr></table></figure> variable is not allowed to  have a local copy of a variable that is different from the value currently held in “main”  memory. Effectively, a variable declared <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">volatile</div></pre></td></tr></table></figure> must have it’s data  synchronized across all threads, so that whenever you access or update the variable in any thread, all  other threads immediately see the same value. Of course, it is likely that <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">volatile</div></pre></td></tr></table></figure> variables have a higher access and update overhead than “plain”  variables, since the reason threads can have their own copy of data is for better efficiency.</p>\n<p>Well if <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">volatile</div></pre></td></tr></table></figure> already synchronizes data across threads,  what is <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">synchronized</div></pre></td></tr></table></figure> for? Well there are two differences. Firstly <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">synchronized</div></pre></td></tr></table></figure> obtains and releases locks on monitors which  can force only one thread at a time to execute a code block, if both threads use  the same monitor (effectively the same object lock). That’s the fairly well known  aspect to <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">synchronized</div></pre></td></tr></table></figure>. But <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">synchronized</div></pre></td></tr></table></figure> also  synchronizes memory. In fact <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">synchronized</div></pre></td></tr></table></figure> synchronizes the whole of thread  memory with “main” memory. So executing <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">geti3()</div></pre></td></tr></table></figure> does the following:</p>\n<p><ol><br>    <li>The thread acquires the lock on the monitor for object <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">this</div></pre></td></tr></table></figure> (assuming the monitor is unlocked, otherwise the thread waits until the  monitor is unlocked).</li><br>    <li>The thread memory flushes <em>all</em> its variables, i.e. it  has all of its variables effectively read from “main” memory (JVMs can use dirty sets to optimize  this so that only “dirty” variables are flushed, but conceptually this is the same. See  section 17.9 of the Java language specification).</li><br>    <li>The code block is executed (in this case setting the return  value to the current value of <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">i3</div></pre></td></tr></table></figure>, which may have just been reset from “main”  memory).</li><br>    <li>(Any changes to variables would normally now be written out to  “main” memory, but for <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">geti3()</div></pre></td></tr></table></figure> we have no changes.)</li><br>    <li>The thread releases the lock on the monitor for object <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">this</div></pre></td></tr></table></figure>.</li><br></ol><br>So where <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">volatile</div></pre></td></tr></table></figure> only synchronizes the value of one  variable between thread memory and “main” memory, <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">synchronized</div></pre></td></tr></table></figure> synchronizes  the value of all variables between thread memory and “main” memory, and locks and  releases a monitor to boot. Clearly <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">synchronized</div></pre></td></tr></table></figure> is likely to have  more overhead than <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">volatile</div></pre></td></tr></table></figure>.</p>\n","site":{"data":{}},"excerpt":"","more":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"views\" content=\"536\"></p>\n<p><meta name=\"_wp_old_slug\" content=\"copy\"><br>copy from <a href=\"http://www.javaperformancetuning.com/news/qotm030.shtml\" target=\"_blank\" rel=\"external\">http://www.javaperformancetuning.com/news/qotm030.shtml</a></p>\n<p><strong>What does <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">volatile</div></pre></td></tr></table></figure> do?</strong></p>\n<p>This is probably best explained by comparing the effects that <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">volatile</div></pre></td></tr></table></figure> and <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">synchronized</div></pre></td></tr></table></figure> have on a method. <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">volatile</div></pre></td></tr></table></figure> is a  field modifier, while <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">synchronized</div></pre></td></tr></table></figure> modifies code blocks and  methods. So we can specify three variations of a simple accessor using those two  keywords:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">         int i1;              int geti1() &#123;return i1;&#125;</div><div class=\"line\">volatile int i2;              int geti2() &#123;return i2;&#125;</div><div class=\"line\">         int i3; synchronized int geti3() &#123;return i3;&#125;</div></pre></td></tr></table></figure><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">geti1()</div></pre></td></tr></table></figure> accesses the value currently stored in <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">i1</div></pre></td></tr></table></figure> <em>in the current thread</em>. Threads can have local copies of variables, and  the data does not have to be the same as the data held in other threads. In  particular, another thread may have updated <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">i1</div></pre></td></tr></table></figure> in it’s thread, but the  value in the current thread could be different from that updated value. In  fact Java has the idea of a “main” memory, and this is the memory that holds the  current “correct” value for variables. Threads can have their own copy of data  for variables, and the thread copy can be different from the “main” memory.  So in fact, it is possible for the “main” memory  to have a value of 1 for <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">i1</div></pre></td></tr></table></figure>, for thread1 to have a value of 2 for <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">i1</div></pre></td></tr></table></figure> and for thread2 to  have a value of 3 for <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">i1</div></pre></td></tr></table></figure> if thread1 and thread2 have both updated <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">i1</div></pre></td></tr></table></figure> but those updated value has not yet been propagated to “main” memory or  other threads.</p>\n<p>On the other hand, <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">geti2()</div></pre></td></tr></table></figure> effectively accesses the value  of <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">i2</div></pre></td></tr></table></figure> from “main” memory. A <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">volatile</div></pre></td></tr></table></figure> variable is not allowed to  have a local copy of a variable that is different from the value currently held in “main”  memory. Effectively, a variable declared <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">volatile</div></pre></td></tr></table></figure> must have it’s data  synchronized across all threads, so that whenever you access or update the variable in any thread, all  other threads immediately see the same value. Of course, it is likely that <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">volatile</div></pre></td></tr></table></figure> variables have a higher access and update overhead than “plain”  variables, since the reason threads can have their own copy of data is for better efficiency.</p>\n<p>Well if <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">volatile</div></pre></td></tr></table></figure> already synchronizes data across threads,  what is <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">synchronized</div></pre></td></tr></table></figure> for? Well there are two differences. Firstly <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">synchronized</div></pre></td></tr></table></figure> obtains and releases locks on monitors which  can force only one thread at a time to execute a code block, if both threads use  the same monitor (effectively the same object lock). That’s the fairly well known  aspect to <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">synchronized</div></pre></td></tr></table></figure>. But <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">synchronized</div></pre></td></tr></table></figure> also  synchronizes memory. In fact <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">synchronized</div></pre></td></tr></table></figure> synchronizes the whole of thread  memory with “main” memory. So executing <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">geti3()</div></pre></td></tr></table></figure> does the following:</p>\n<p><ol><br>    <li>The thread acquires the lock on the monitor for object <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">this</div></pre></td></tr></table></figure> (assuming the monitor is unlocked, otherwise the thread waits until the  monitor is unlocked).</li><br>    <li>The thread memory flushes <em>all</em> its variables, i.e. it  has all of its variables effectively read from “main” memory (JVMs can use dirty sets to optimize  this so that only “dirty” variables are flushed, but conceptually this is the same. See  section 17.9 of the Java language specification).</li><br>    <li>The code block is executed (in this case setting the return  value to the current value of <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">i3</div></pre></td></tr></table></figure>, which may have just been reset from “main”  memory).</li><br>    <li>(Any changes to variables would normally now be written out to  “main” memory, but for <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">geti3()</div></pre></td></tr></table></figure> we have no changes.)</li><br>    <li>The thread releases the lock on the monitor for object <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">this</div></pre></td></tr></table></figure>.</li><br></ol><br>So where <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">volatile</div></pre></td></tr></table></figure> only synchronizes the value of one  variable between thread memory and “main” memory, <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">synchronized</div></pre></td></tr></table></figure> synchronizes  the value of all variables between thread memory and “main” memory, and locks and  releases a monitor to boot. Clearly <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">synchronized</div></pre></td></tr></table></figure> is likely to have  more overhead than <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">volatile</div></pre></td></tr></table></figure>.</p>\n"},{"layout":"post","title":"try...catch...exception in c++","date":"2010-06-29T16:00:00.000Z","wordpress_id":230,"comments":1,"_content":"<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_description\" content=\"try...catch...exception in c++, and it describe how to use it.  the philosophy of exceptions.\" />\n<meta name=\"_su_keywords\" content=\"c,c++,exception,throw, catch,try\" />\n<meta name=\"_su_rich_snippet_type\" content=\"none\" />\n<meta name=\"_su_title\" content=\"try...catch...exception in c++\" />\n<meta name=\"views\" content=\"2645\" />\nif you will throw something, you should catch it as the same type. like following:\n\n\n{% codeblock %}int main(){\n    try{\n        throw 20;\n    }catch(int i){\n        cout &lt;&lt; \"Exception Num is NO.\"&lt;&lt;i&lt;&lt;endl;\n    }\n    try{\n        throw 'X';\n    }catch(char c){\n        cout &lt;&lt; \"this exception is a char:\"&lt;&lt;c&lt;&lt;endl;\n    }\n\n    try{\n        throw \"abc\";\n    }catch(const char * e){\n        cout &lt;&lt; \"this is string exception:\"&lt;&lt;e&lt;&lt;endl;\n    }\n\n    try{\n        int *d = new int(65);\n        throw d;\n    }catch(const int * e){\n        cout &lt;&lt; \"this is int point exception:\"&lt;&lt;*e&lt;&lt;endl;\n    }\n    /* ok, catch will handle everything, if you throw correct type.*/\n}{% endcodeblock %}\n\n\nand if you want create classes for exceptions. You should add #include&lt;exception&gt; and inherit exception class, and then override the function \"<strong>what</strong>\".\n\n\n{% codeblock %}#include&lt;iostream&gt;\n#include&lt;exception&gt;\nusing namespace std;\n\n/// this exception class is from #include&lt;exception&gt;\n/// you should override the function what() to generate your exception string\nclass MyException: public exception{\n    virtual const char* what() const throw(){\n        return \"myExceptions!!!!!!!\";\n\n    }\n\n};\n\nclass SubException: public MyException{\n    virtual const char* what()const throw(){\n        return \"sub exception !!!!!!\";\n    }\n\n};\n\nint main(){\n    try{\n        throw MyException();\n    }catch(exception&amp; e){\n        cout &lt;&lt; e.what()&lt;&lt;endl;\n\n    }\n    try{\n        throw SubException();\n    }catch(bad_alloc&amp;){\n        // this will not occur, just test this type.\n        // if it is occured, your computer will be locked.\n        cout &lt;&lt; \"nothing\"&lt;&lt;endl;\n    }catch(exception&amp; e){\n        cout &lt;&lt; e.what()&lt;&lt;endl;\n\n    }\n\n}{% endcodeblock %}\n\n\nThere are some standard exceptions in exception.h. These exceptions are:\n\n<strong>bad_alloc</strong>\n\nA bad_alloc is thrown by new if an allocation failure occurs.\n\n<strong>bad_cast</strong>\n\nA bad_cast is thrown by dynamic_cast when it fails with a referenced  type.\n\n<strong>bad_exception</strong>\n\nA bad_exception is thrown when an exception type doesn’t match any  catch\n\n<strong>bad_typeid</strong>\n\nA bad_typeid is thrown by typeid\n\n<strong>ios_base::failure</strong>\n\nAn ios_base::failure is thrown by functions in the iostream library.\n\nin #include&lt;stdexecpt&gt; can use these exception:\nclass <strong>logic_error</strong>; // :  public exception\nclass <strong>domain_error</strong>; // :  public logic_error\nclass <strong>invalid_argument</strong>; // : public logic_error\nclass<strong> length_error</strong>; // :  public logic_error\nclass <strong>out_of_range</strong>; // :  public logic_error\nclass <strong>runtime_error</strong>; // :  public exception\nclass <strong>range_error</strong>; // :  public runtime_error\nclass <strong>overflow_error</strong>; // :  public runtime_error\nclass <strong>underflow_error</strong>; // :  public runtime_error\n\nIf you don't know which kind of exception will occur. you should use <strong>catch(...)</strong>\n\n\n{% codeblock %}try{\n        srand(time(NULL));\n        int i = rand()%4;\n\n        switch(i){\n            case 0:\n                throw; // terminate called without an active exception\n                       // Aborted, ... will not catch it.\n                break;\n            case 1:\n                throw 'x';\n                break;\n            case 2:\n                throw 50;\n                break;\n            case 3:\n                throw \"my string\";\n                break;\n            default:\n                break;\n\n        }\n\n    }catch(...){\n        cout &lt;&lt; \"I don't know which exception will occur!\"&lt;&lt;endl;\n    }{% endcodeblock %}\n\n\nBut when i == 0, the program will execute throw;, and it will exit and print:\n<blockquote>terminate called without an active exception\n\nAborted</blockquote>\n<strong>You should specify something to throw. throw; is only be used within catch clauses.</strong>\n\n\n{% codeblock %}try{\n        try{\n            throw 2;\n        }catch(int i){\n            throw; // here I use it again!\n        }\n    }catch(...){\n        cout &lt;&lt; \"re-throw it!!!!\"&lt;&lt;endl;\n    }{% endcodeblock %}\n\n\nyou can declare your functions using throw(). But it is just declare!  you can throw everything! But you declare it will throw bad_exception, and use set_unexpected(), it will process some unexpected exceptions.\n\n\n{% codeblock %}void foo() throw(int,bad_exception){\n\n    throw \"abc\";\n}\nvoid myunexpected(){\n    cout &lt;&lt; \"I get unexpected exceptions!\"&lt;&lt;endl;\n    throw;\n}\n\n// in main\n\n    set_unexpected(myunexpected);\n    try{\n        foo();\n    }catch(int){\n        cout &lt;&lt; \"catch a integer\"&lt;&lt;endl;\n    }catch(bad_exception&amp;){\n        cout &lt;&lt; \"bad_exception\"&lt;&lt;endl;\n    }\n    // you can use catch(...){% endcodeblock %}\n\n\noutput is\n<blockquote>I get unexpected exceptions!\nbad_exception</blockquote>\nIf the program or your function can not process some kind of situation. you should throw something out.  Sometime, someone argued that it will reduce the usability. But If you don't stop the processing(program or function), it will create a disaster.  Remember, by all means, throw it! But should we catch those exceptions and how we catch those? e....as your wish. Some bug will not appear, if you use not appropriate catch and process those exceptions in unsuitable way. If your program have some bug, and it is difficult to find, please delete all catches!\n\nIn some languages which have finally clauses. But in c++, it dose not have finally clauses.\n","source":"_posts/2010-06-30-try-catch-exception-c.markdown","raw":"---\nlayout: post\ntitle: \"try...catch...exception in c++\"\ndate: 2010-6-30\nwordpress_id: 230\ncomments: true\ncategories: [\"c\", \"cc\", \"catch\", \"exception\", \"throw\", \"try\"]\n---\n<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_description\" content=\"try...catch...exception in c++, and it describe how to use it.  the philosophy of exceptions.\" />\n<meta name=\"_su_keywords\" content=\"c,c++,exception,throw, catch,try\" />\n<meta name=\"_su_rich_snippet_type\" content=\"none\" />\n<meta name=\"_su_title\" content=\"try...catch...exception in c++\" />\n<meta name=\"views\" content=\"2645\" />\nif you will throw something, you should catch it as the same type. like following:\n\n\n{% codeblock %}int main(){\n    try{\n        throw 20;\n    }catch(int i){\n        cout &lt;&lt; \"Exception Num is NO.\"&lt;&lt;i&lt;&lt;endl;\n    }\n    try{\n        throw 'X';\n    }catch(char c){\n        cout &lt;&lt; \"this exception is a char:\"&lt;&lt;c&lt;&lt;endl;\n    }\n\n    try{\n        throw \"abc\";\n    }catch(const char * e){\n        cout &lt;&lt; \"this is string exception:\"&lt;&lt;e&lt;&lt;endl;\n    }\n\n    try{\n        int *d = new int(65);\n        throw d;\n    }catch(const int * e){\n        cout &lt;&lt; \"this is int point exception:\"&lt;&lt;*e&lt;&lt;endl;\n    }\n    /* ok, catch will handle everything, if you throw correct type.*/\n}{% endcodeblock %}\n\n\nand if you want create classes for exceptions. You should add #include&lt;exception&gt; and inherit exception class, and then override the function \"<strong>what</strong>\".\n\n\n{% codeblock %}#include&lt;iostream&gt;\n#include&lt;exception&gt;\nusing namespace std;\n\n/// this exception class is from #include&lt;exception&gt;\n/// you should override the function what() to generate your exception string\nclass MyException: public exception{\n    virtual const char* what() const throw(){\n        return \"myExceptions!!!!!!!\";\n\n    }\n\n};\n\nclass SubException: public MyException{\n    virtual const char* what()const throw(){\n        return \"sub exception !!!!!!\";\n    }\n\n};\n\nint main(){\n    try{\n        throw MyException();\n    }catch(exception&amp; e){\n        cout &lt;&lt; e.what()&lt;&lt;endl;\n\n    }\n    try{\n        throw SubException();\n    }catch(bad_alloc&amp;){\n        // this will not occur, just test this type.\n        // if it is occured, your computer will be locked.\n        cout &lt;&lt; \"nothing\"&lt;&lt;endl;\n    }catch(exception&amp; e){\n        cout &lt;&lt; e.what()&lt;&lt;endl;\n\n    }\n\n}{% endcodeblock %}\n\n\nThere are some standard exceptions in exception.h. These exceptions are:\n\n<strong>bad_alloc</strong>\n\nA bad_alloc is thrown by new if an allocation failure occurs.\n\n<strong>bad_cast</strong>\n\nA bad_cast is thrown by dynamic_cast when it fails with a referenced  type.\n\n<strong>bad_exception</strong>\n\nA bad_exception is thrown when an exception type doesn’t match any  catch\n\n<strong>bad_typeid</strong>\n\nA bad_typeid is thrown by typeid\n\n<strong>ios_base::failure</strong>\n\nAn ios_base::failure is thrown by functions in the iostream library.\n\nin #include&lt;stdexecpt&gt; can use these exception:\nclass <strong>logic_error</strong>; // :  public exception\nclass <strong>domain_error</strong>; // :  public logic_error\nclass <strong>invalid_argument</strong>; // : public logic_error\nclass<strong> length_error</strong>; // :  public logic_error\nclass <strong>out_of_range</strong>; // :  public logic_error\nclass <strong>runtime_error</strong>; // :  public exception\nclass <strong>range_error</strong>; // :  public runtime_error\nclass <strong>overflow_error</strong>; // :  public runtime_error\nclass <strong>underflow_error</strong>; // :  public runtime_error\n\nIf you don't know which kind of exception will occur. you should use <strong>catch(...)</strong>\n\n\n{% codeblock %}try{\n        srand(time(NULL));\n        int i = rand()%4;\n\n        switch(i){\n            case 0:\n                throw; // terminate called without an active exception\n                       // Aborted, ... will not catch it.\n                break;\n            case 1:\n                throw 'x';\n                break;\n            case 2:\n                throw 50;\n                break;\n            case 3:\n                throw \"my string\";\n                break;\n            default:\n                break;\n\n        }\n\n    }catch(...){\n        cout &lt;&lt; \"I don't know which exception will occur!\"&lt;&lt;endl;\n    }{% endcodeblock %}\n\n\nBut when i == 0, the program will execute throw;, and it will exit and print:\n<blockquote>terminate called without an active exception\n\nAborted</blockquote>\n<strong>You should specify something to throw. throw; is only be used within catch clauses.</strong>\n\n\n{% codeblock %}try{\n        try{\n            throw 2;\n        }catch(int i){\n            throw; // here I use it again!\n        }\n    }catch(...){\n        cout &lt;&lt; \"re-throw it!!!!\"&lt;&lt;endl;\n    }{% endcodeblock %}\n\n\nyou can declare your functions using throw(). But it is just declare!  you can throw everything! But you declare it will throw bad_exception, and use set_unexpected(), it will process some unexpected exceptions.\n\n\n{% codeblock %}void foo() throw(int,bad_exception){\n\n    throw \"abc\";\n}\nvoid myunexpected(){\n    cout &lt;&lt; \"I get unexpected exceptions!\"&lt;&lt;endl;\n    throw;\n}\n\n// in main\n\n    set_unexpected(myunexpected);\n    try{\n        foo();\n    }catch(int){\n        cout &lt;&lt; \"catch a integer\"&lt;&lt;endl;\n    }catch(bad_exception&amp;){\n        cout &lt;&lt; \"bad_exception\"&lt;&lt;endl;\n    }\n    // you can use catch(...){% endcodeblock %}\n\n\noutput is\n<blockquote>I get unexpected exceptions!\nbad_exception</blockquote>\nIf the program or your function can not process some kind of situation. you should throw something out.  Sometime, someone argued that it will reduce the usability. But If you don't stop the processing(program or function), it will create a disaster.  Remember, by all means, throw it! But should we catch those exceptions and how we catch those? e....as your wish. Some bug will not appear, if you use not appropriate catch and process those exceptions in unsuitable way. If your program have some bug, and it is difficult to find, please delete all catches!\n\nIn some languages which have finally clauses. But in c++, it dose not have finally clauses.\n","slug":"2010-06-30-try-catch-exception-c","published":1,"updated":"2017-06-05T03:00:53.000Z","photos":[],"link":"","_id":"cj3jjugmn00021bmj9ojcwq5d","content":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_description\" content=\"try...catch...exception in c++, and it describe how to use it.  the philosophy of exceptions.\"></p>\n<p><meta name=\"_su_keywords\" content=\"c,c++,exception,throw, catch,try\"></p>\n<p><meta name=\"_su_rich_snippet_type\" content=\"none\"></p>\n<p><meta name=\"_su_title\" content=\"try...catch...exception in c++\"></p>\n<p><meta name=\"views\" content=\"2645\"><br>if you will throw something, you should catch it as the same type. like following:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div></pre></td><td class=\"code\"><pre><div class=\"line\">int main()&#123;</div><div class=\"line\">    try&#123;</div><div class=\"line\">        throw 20;</div><div class=\"line\">    &#125;catch(int i)&#123;</div><div class=\"line\">        cout &amp;lt;&amp;lt; &quot;Exception Num is NO.&quot;&amp;lt;&amp;lt;i&amp;lt;&amp;lt;endl;</div><div class=\"line\">    &#125;</div><div class=\"line\">    try&#123;</div><div class=\"line\">        throw &apos;X&apos;;</div><div class=\"line\">    &#125;catch(char c)&#123;</div><div class=\"line\">        cout &amp;lt;&amp;lt; &quot;this exception is a char:&quot;&amp;lt;&amp;lt;c&amp;lt;&amp;lt;endl;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    try&#123;</div><div class=\"line\">        throw &quot;abc&quot;;</div><div class=\"line\">    &#125;catch(const char * e)&#123;</div><div class=\"line\">        cout &amp;lt;&amp;lt; &quot;this is string exception:&quot;&amp;lt;&amp;lt;e&amp;lt;&amp;lt;endl;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    try&#123;</div><div class=\"line\">        int *d = new int(65);</div><div class=\"line\">        throw d;</div><div class=\"line\">    &#125;catch(const int * e)&#123;</div><div class=\"line\">        cout &amp;lt;&amp;lt; &quot;this is int point exception:&quot;&amp;lt;&amp;lt;*e&amp;lt;&amp;lt;endl;</div><div class=\"line\">    &#125;</div><div class=\"line\">    /* ok, catch will handle everything, if you throw correct type.*/</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>and if you want create classes for exceptions. You should add #include&lt;exception&gt; and inherit exception class, and then override the function “<strong>what</strong>“.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&amp;lt;iostream&amp;gt;</div><div class=\"line\">#include&amp;lt;exception&amp;gt;</div><div class=\"line\">using namespace std;</div><div class=\"line\"></div><div class=\"line\">/// this exception class is from #include&amp;lt;exception&amp;gt;</div><div class=\"line\">/// you should override the function what() to generate your exception string</div><div class=\"line\">class MyException: public exception&#123;</div><div class=\"line\">    virtual const char* what() const throw()&#123;</div><div class=\"line\">        return &quot;myExceptions!!!!!!!&quot;;</div><div class=\"line\"></div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;;</div><div class=\"line\"></div><div class=\"line\">class SubException: public MyException&#123;</div><div class=\"line\">    virtual const char* what()const throw()&#123;</div><div class=\"line\">        return &quot;sub exception !!!!!!&quot;;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;;</div><div class=\"line\"></div><div class=\"line\">int main()&#123;</div><div class=\"line\">    try&#123;</div><div class=\"line\">        throw MyException();</div><div class=\"line\">    &#125;catch(exception&amp;amp; e)&#123;</div><div class=\"line\">        cout &amp;lt;&amp;lt; e.what()&amp;lt;&amp;lt;endl;</div><div class=\"line\"></div><div class=\"line\">    &#125;</div><div class=\"line\">    try&#123;</div><div class=\"line\">        throw SubException();</div><div class=\"line\">    &#125;catch(bad_alloc&amp;amp;)&#123;</div><div class=\"line\">        // this will not occur, just test this type.</div><div class=\"line\">        // if it is occured, your computer will be locked.</div><div class=\"line\">        cout &amp;lt;&amp;lt; &quot;nothing&quot;&amp;lt;&amp;lt;endl;</div><div class=\"line\">    &#125;catch(exception&amp;amp; e)&#123;</div><div class=\"line\">        cout &amp;lt;&amp;lt; e.what()&amp;lt;&amp;lt;endl;</div><div class=\"line\"></div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>There are some standard exceptions in exception.h. These exceptions are:</p>\n<p><strong>bad_alloc</strong></p>\n<p>A bad_alloc is thrown by new if an allocation failure occurs.</p>\n<p><strong>bad_cast</strong></p>\n<p>A bad_cast is thrown by dynamic_cast when it fails with a referenced  type.</p>\n<p><strong>bad_exception</strong></p>\n<p>A bad_exception is thrown when an exception type doesn’t match any  catch</p>\n<p><strong>bad_typeid</strong></p>\n<p>A bad_typeid is thrown by typeid</p>\n<p><strong>ios_base::failure</strong></p>\n<p>An ios_base::failure is thrown by functions in the iostream library.</p>\n<p>in #include&lt;stdexecpt&gt; can use these exception:<br>class <strong>logic_error</strong>; // :  public exception<br>class <strong>domain_error</strong>; // :  public logic_error<br>class <strong>invalid_argument</strong>; // : public logic_error<br>class<strong> length_error</strong>; // :  public logic_error<br>class <strong>out_of_range</strong>; // :  public logic_error<br>class <strong>runtime_error</strong>; // :  public exception<br>class <strong>range_error</strong>; // :  public runtime_error<br>class <strong>overflow_error</strong>; // :  public runtime_error<br>class <strong>underflow_error</strong>; // :  public runtime_error</p>\n<p>If you don’t know which kind of exception will occur. you should use <strong>catch(…)</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div></pre></td><td class=\"code\"><pre><div class=\"line\">try&#123;</div><div class=\"line\">        srand(time(NULL));</div><div class=\"line\">        int i = rand()%4;</div><div class=\"line\"></div><div class=\"line\">        switch(i)&#123;</div><div class=\"line\">            case 0:</div><div class=\"line\">                throw; // terminate called without an active exception</div><div class=\"line\">                       // Aborted, ... will not catch it.</div><div class=\"line\">                break;</div><div class=\"line\">            case 1:</div><div class=\"line\">                throw &apos;x&apos;;</div><div class=\"line\">                break;</div><div class=\"line\">            case 2:</div><div class=\"line\">                throw 50;</div><div class=\"line\">                break;</div><div class=\"line\">            case 3:</div><div class=\"line\">                throw &quot;my string&quot;;</div><div class=\"line\">                break;</div><div class=\"line\">            default:</div><div class=\"line\">                break;</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">    &#125;catch(...)&#123;</div><div class=\"line\">        cout &amp;lt;&amp;lt; &quot;I don&apos;t know which exception will occur!&quot;&amp;lt;&amp;lt;endl;</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure>\n<p>But when i == 0, the program will execute throw;, and it will exit and print:</p>\n<p><blockquote>terminate called without an active exception</blockquote></p>\n<p>Aborted<br><strong>You should specify something to throw. throw; is only be used within catch clauses.</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">try&#123;</div><div class=\"line\">        try&#123;</div><div class=\"line\">            throw 2;</div><div class=\"line\">        &#125;catch(int i)&#123;</div><div class=\"line\">            throw; // here I use it again!</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;catch(...)&#123;</div><div class=\"line\">        cout &amp;lt;&amp;lt; &quot;re-throw it!!!!&quot;&amp;lt;&amp;lt;endl;</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure>\n<p>you can declare your functions using throw(). But it is just declare!  you can throw everything! But you declare it will throw bad_exception, and use set_unexpected(), it will process some unexpected exceptions.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\">void foo() throw(int,bad_exception)&#123;</div><div class=\"line\"></div><div class=\"line\">    throw &quot;abc&quot;;</div><div class=\"line\">&#125;</div><div class=\"line\">void myunexpected()&#123;</div><div class=\"line\">    cout &amp;lt;&amp;lt; &quot;I get unexpected exceptions!&quot;&amp;lt;&amp;lt;endl;</div><div class=\"line\">    throw;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">// in main</div><div class=\"line\"></div><div class=\"line\">    set_unexpected(myunexpected);</div><div class=\"line\">    try&#123;</div><div class=\"line\">        foo();</div><div class=\"line\">    &#125;catch(int)&#123;</div><div class=\"line\">        cout &amp;lt;&amp;lt; &quot;catch a integer&quot;&amp;lt;&amp;lt;endl;</div><div class=\"line\">    &#125;catch(bad_exception&amp;amp;)&#123;</div><div class=\"line\">        cout &amp;lt;&amp;lt; &quot;bad_exception&quot;&amp;lt;&amp;lt;endl;</div><div class=\"line\">    &#125;</div><div class=\"line\">    // you can use catch(...)</div></pre></td></tr></table></figure>\n<p>output is</p>\n<p><blockquote>I get unexpected exceptions!<br>bad_exception</blockquote><br>If the program or your function can not process some kind of situation. you should throw something out.  Sometime, someone argued that it will reduce the usability. But If you don’t stop the processing(program or function), it will create a disaster.  Remember, by all means, throw it! But should we catch those exceptions and how we catch those? e….as your wish. Some bug will not appear, if you use not appropriate catch and process those exceptions in unsuitable way. If your program have some bug, and it is difficult to find, please delete all catches!</p>\n<p>In some languages which have finally clauses. But in c++, it dose not have finally clauses.</p>\n","site":{"data":{}},"excerpt":"","more":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_description\" content=\"try...catch...exception in c++, and it describe how to use it.  the philosophy of exceptions.\"></p>\n<p><meta name=\"_su_keywords\" content=\"c,c++,exception,throw, catch,try\"></p>\n<p><meta name=\"_su_rich_snippet_type\" content=\"none\"></p>\n<p><meta name=\"_su_title\" content=\"try...catch...exception in c++\"></p>\n<p><meta name=\"views\" content=\"2645\"><br>if you will throw something, you should catch it as the same type. like following:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div></pre></td><td class=\"code\"><pre><div class=\"line\">int main()&#123;</div><div class=\"line\">    try&#123;</div><div class=\"line\">        throw 20;</div><div class=\"line\">    &#125;catch(int i)&#123;</div><div class=\"line\">        cout &amp;lt;&amp;lt; &quot;Exception Num is NO.&quot;&amp;lt;&amp;lt;i&amp;lt;&amp;lt;endl;</div><div class=\"line\">    &#125;</div><div class=\"line\">    try&#123;</div><div class=\"line\">        throw &apos;X&apos;;</div><div class=\"line\">    &#125;catch(char c)&#123;</div><div class=\"line\">        cout &amp;lt;&amp;lt; &quot;this exception is a char:&quot;&amp;lt;&amp;lt;c&amp;lt;&amp;lt;endl;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    try&#123;</div><div class=\"line\">        throw &quot;abc&quot;;</div><div class=\"line\">    &#125;catch(const char * e)&#123;</div><div class=\"line\">        cout &amp;lt;&amp;lt; &quot;this is string exception:&quot;&amp;lt;&amp;lt;e&amp;lt;&amp;lt;endl;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    try&#123;</div><div class=\"line\">        int *d = new int(65);</div><div class=\"line\">        throw d;</div><div class=\"line\">    &#125;catch(const int * e)&#123;</div><div class=\"line\">        cout &amp;lt;&amp;lt; &quot;this is int point exception:&quot;&amp;lt;&amp;lt;*e&amp;lt;&amp;lt;endl;</div><div class=\"line\">    &#125;</div><div class=\"line\">    /* ok, catch will handle everything, if you throw correct type.*/</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>and if you want create classes for exceptions. You should add #include&lt;exception&gt; and inherit exception class, and then override the function “<strong>what</strong>“.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&amp;lt;iostream&amp;gt;</div><div class=\"line\">#include&amp;lt;exception&amp;gt;</div><div class=\"line\">using namespace std;</div><div class=\"line\"></div><div class=\"line\">/// this exception class is from #include&amp;lt;exception&amp;gt;</div><div class=\"line\">/// you should override the function what() to generate your exception string</div><div class=\"line\">class MyException: public exception&#123;</div><div class=\"line\">    virtual const char* what() const throw()&#123;</div><div class=\"line\">        return &quot;myExceptions!!!!!!!&quot;;</div><div class=\"line\"></div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;;</div><div class=\"line\"></div><div class=\"line\">class SubException: public MyException&#123;</div><div class=\"line\">    virtual const char* what()const throw()&#123;</div><div class=\"line\">        return &quot;sub exception !!!!!!&quot;;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;;</div><div class=\"line\"></div><div class=\"line\">int main()&#123;</div><div class=\"line\">    try&#123;</div><div class=\"line\">        throw MyException();</div><div class=\"line\">    &#125;catch(exception&amp;amp; e)&#123;</div><div class=\"line\">        cout &amp;lt;&amp;lt; e.what()&amp;lt;&amp;lt;endl;</div><div class=\"line\"></div><div class=\"line\">    &#125;</div><div class=\"line\">    try&#123;</div><div class=\"line\">        throw SubException();</div><div class=\"line\">    &#125;catch(bad_alloc&amp;amp;)&#123;</div><div class=\"line\">        // this will not occur, just test this type.</div><div class=\"line\">        // if it is occured, your computer will be locked.</div><div class=\"line\">        cout &amp;lt;&amp;lt; &quot;nothing&quot;&amp;lt;&amp;lt;endl;</div><div class=\"line\">    &#125;catch(exception&amp;amp; e)&#123;</div><div class=\"line\">        cout &amp;lt;&amp;lt; e.what()&amp;lt;&amp;lt;endl;</div><div class=\"line\"></div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>There are some standard exceptions in exception.h. These exceptions are:</p>\n<p><strong>bad_alloc</strong></p>\n<p>A bad_alloc is thrown by new if an allocation failure occurs.</p>\n<p><strong>bad_cast</strong></p>\n<p>A bad_cast is thrown by dynamic_cast when it fails with a referenced  type.</p>\n<p><strong>bad_exception</strong></p>\n<p>A bad_exception is thrown when an exception type doesn’t match any  catch</p>\n<p><strong>bad_typeid</strong></p>\n<p>A bad_typeid is thrown by typeid</p>\n<p><strong>ios_base::failure</strong></p>\n<p>An ios_base::failure is thrown by functions in the iostream library.</p>\n<p>in #include&lt;stdexecpt&gt; can use these exception:<br>class <strong>logic_error</strong>; // :  public exception<br>class <strong>domain_error</strong>; // :  public logic_error<br>class <strong>invalid_argument</strong>; // : public logic_error<br>class<strong> length_error</strong>; // :  public logic_error<br>class <strong>out_of_range</strong>; // :  public logic_error<br>class <strong>runtime_error</strong>; // :  public exception<br>class <strong>range_error</strong>; // :  public runtime_error<br>class <strong>overflow_error</strong>; // :  public runtime_error<br>class <strong>underflow_error</strong>; // :  public runtime_error</p>\n<p>If you don’t know which kind of exception will occur. you should use <strong>catch(…)</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div></pre></td><td class=\"code\"><pre><div class=\"line\">try&#123;</div><div class=\"line\">        srand(time(NULL));</div><div class=\"line\">        int i = rand()%4;</div><div class=\"line\"></div><div class=\"line\">        switch(i)&#123;</div><div class=\"line\">            case 0:</div><div class=\"line\">                throw; // terminate called without an active exception</div><div class=\"line\">                       // Aborted, ... will not catch it.</div><div class=\"line\">                break;</div><div class=\"line\">            case 1:</div><div class=\"line\">                throw &apos;x&apos;;</div><div class=\"line\">                break;</div><div class=\"line\">            case 2:</div><div class=\"line\">                throw 50;</div><div class=\"line\">                break;</div><div class=\"line\">            case 3:</div><div class=\"line\">                throw &quot;my string&quot;;</div><div class=\"line\">                break;</div><div class=\"line\">            default:</div><div class=\"line\">                break;</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">    &#125;catch(...)&#123;</div><div class=\"line\">        cout &amp;lt;&amp;lt; &quot;I don&apos;t know which exception will occur!&quot;&amp;lt;&amp;lt;endl;</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure>\n<p>But when i == 0, the program will execute throw;, and it will exit and print:</p>\n<p><blockquote>terminate called without an active exception</blockquote></p>\n<p>Aborted<br><strong>You should specify something to throw. throw; is only be used within catch clauses.</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">try&#123;</div><div class=\"line\">        try&#123;</div><div class=\"line\">            throw 2;</div><div class=\"line\">        &#125;catch(int i)&#123;</div><div class=\"line\">            throw; // here I use it again!</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;catch(...)&#123;</div><div class=\"line\">        cout &amp;lt;&amp;lt; &quot;re-throw it!!!!&quot;&amp;lt;&amp;lt;endl;</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure>\n<p>you can declare your functions using throw(). But it is just declare!  you can throw everything! But you declare it will throw bad_exception, and use set_unexpected(), it will process some unexpected exceptions.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\">void foo() throw(int,bad_exception)&#123;</div><div class=\"line\"></div><div class=\"line\">    throw &quot;abc&quot;;</div><div class=\"line\">&#125;</div><div class=\"line\">void myunexpected()&#123;</div><div class=\"line\">    cout &amp;lt;&amp;lt; &quot;I get unexpected exceptions!&quot;&amp;lt;&amp;lt;endl;</div><div class=\"line\">    throw;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">// in main</div><div class=\"line\"></div><div class=\"line\">    set_unexpected(myunexpected);</div><div class=\"line\">    try&#123;</div><div class=\"line\">        foo();</div><div class=\"line\">    &#125;catch(int)&#123;</div><div class=\"line\">        cout &amp;lt;&amp;lt; &quot;catch a integer&quot;&amp;lt;&amp;lt;endl;</div><div class=\"line\">    &#125;catch(bad_exception&amp;amp;)&#123;</div><div class=\"line\">        cout &amp;lt;&amp;lt; &quot;bad_exception&quot;&amp;lt;&amp;lt;endl;</div><div class=\"line\">    &#125;</div><div class=\"line\">    // you can use catch(...)</div></pre></td></tr></table></figure>\n<p>output is</p>\n<p><blockquote>I get unexpected exceptions!<br>bad_exception</blockquote><br>If the program or your function can not process some kind of situation. you should throw something out.  Sometime, someone argued that it will reduce the usability. But If you don’t stop the processing(program or function), it will create a disaster.  Remember, by all means, throw it! But should we catch those exceptions and how we catch those? e….as your wish. Some bug will not appear, if you use not appropriate catch and process those exceptions in unsuitable way. If your program have some bug, and it is difficult to find, please delete all catches!</p>\n<p>In some languages which have finally clauses. But in c++, it dose not have finally clauses.</p>\n"},{"layout":"post","title":"Design pattern -- Adapter","date":"2010-05-02T16:00:00.000Z","wordpress_id":191,"comments":1,"_content":"<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_description\" content=\"adapter pattern is used for combining two or more classes,which have the same behaviors but different interfaces.\" />\n<meta name=\"_su_keywords\" content=\"design,pattern,virtual,class,constructor,destory,adapter\" />\n<meta name=\"_su_title\" content=\"design pattern adapter pattern\" />\n<meta name=\"views\" content=\"546\" />\n\n{% codeblock %}// Adapter.cpp : Defines the entry point for the console application.\n// author: chillyc\n// email: chillycreator @t gmail.com\n\n#include&lt;iostream&gt;\n#include&lt;string&gt;\nusing namespace std;\n\n/// adapter pattern is used for combining two or more classes,\n/// which have the same behaviors but different interfaces.\n/// some classes is common used in future, and the other which are special will never used.\n/// common used classes should be public, and the other is private.\n/// some classes which inherit adapter class will never use the special ones. \n/// adapter pattern is divided into two patterns.\n/// one is belong to class structure, and the other is belong to object structure.\n\n#ifndef INTERFACEA_H\n#define INTERFACEA_H\n/// Interface A is a common interface!\nclass Interface_A{\npublic :\n\tvirtual void connect_com();\n};\n#endif\nvoid Interface_A::connect_com(){\n\tcout&lt;&lt;\"connect a\"&lt;&lt;endl;\n}\n\n#ifndef INTERFACEB_H\n#define INTERFACEB_H\n/// Interface B is not a common interface, \n/// it will be used in some special area!\nclass Interface_B{\npublic :\n\tvirtual void connect_B();\n};\n#endif\nvoid Interface_B::connect_B(){\n\tcout&lt;&lt; \"connect b\"&lt;&lt;endl;\n}\n\n#ifndef ADAPTERCLASS_H\n#define ADAPTERCLASS_H\n/// this class uses private inheritance to construct adapter.\n/// and it is a kind of class structure.\nclass Adapter_Class: public Interface_A, private Interface_B{\npublic:\n\tAdapter_Class();\n\t~Adapter_Class();\n\tvirtual void connect();\n};\n\n/// this class uses private member variable to construct adapter.\n/// and it uses object relationship.\nclass Adapter_Object: public Interface_A{\nprivate:\n\tInterface_B * b;\npublic:\n\tAdapter_Object();\n\t~Adapter_Object();\n\n\tvirtual void connect();\n};\n#endif\n\nAdapter_Class::Adapter_Class(){\n\tcout&lt;&lt; \"Adapter_Class construct\"&lt;&lt;endl;\n\n}\nAdapter_Class::~Adapter_Class(){}\nvoid Adapter_Class::connect(){\n\tInterface_A::connect_com();\n\tInterface_B::connect_B();\n}\n\nAdapter_Object::Adapter_Object(){\n\tcout&lt;&lt;\"Adapter_Object construct\"&lt;&lt;endl;\n\tb = new Interface_B();\n\n}\nAdapter_Object::~Adapter_Object(){\n\tdelete b;\n}\nvoid Adapter_Object::connect(){\n\tInterface_A::connect_com();\n\tb-&gt;connect_B();\n}\n\nint main()\n{\n\tAdapter_Class ac;\n\tac.connect();\n\tAdapter_Object ao;\n\tao.connect();\n\treturn 0;\n}{% endcodeblock %}\n \n","source":"_posts/2010-05-03-design-pattern-adapter.markdown","raw":"---\nlayout: post\ntitle: \"Design pattern -- Adapter\"\ndate: 2010-5-3\nwordpress_id: 191\ncomments: true\ncategories: [\"adapter\", \"cc\", \"code\", \"design\", \"pattern\", \"software-architecture-code\", \"virtual\"]\n---\n<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_description\" content=\"adapter pattern is used for combining two or more classes,which have the same behaviors but different interfaces.\" />\n<meta name=\"_su_keywords\" content=\"design,pattern,virtual,class,constructor,destory,adapter\" />\n<meta name=\"_su_title\" content=\"design pattern adapter pattern\" />\n<meta name=\"views\" content=\"546\" />\n\n{% codeblock %}// Adapter.cpp : Defines the entry point for the console application.\n// author: chillyc\n// email: chillycreator @t gmail.com\n\n#include&lt;iostream&gt;\n#include&lt;string&gt;\nusing namespace std;\n\n/// adapter pattern is used for combining two or more classes,\n/// which have the same behaviors but different interfaces.\n/// some classes is common used in future, and the other which are special will never used.\n/// common used classes should be public, and the other is private.\n/// some classes which inherit adapter class will never use the special ones. \n/// adapter pattern is divided into two patterns.\n/// one is belong to class structure, and the other is belong to object structure.\n\n#ifndef INTERFACEA_H\n#define INTERFACEA_H\n/// Interface A is a common interface!\nclass Interface_A{\npublic :\n\tvirtual void connect_com();\n};\n#endif\nvoid Interface_A::connect_com(){\n\tcout&lt;&lt;\"connect a\"&lt;&lt;endl;\n}\n\n#ifndef INTERFACEB_H\n#define INTERFACEB_H\n/// Interface B is not a common interface, \n/// it will be used in some special area!\nclass Interface_B{\npublic :\n\tvirtual void connect_B();\n};\n#endif\nvoid Interface_B::connect_B(){\n\tcout&lt;&lt; \"connect b\"&lt;&lt;endl;\n}\n\n#ifndef ADAPTERCLASS_H\n#define ADAPTERCLASS_H\n/// this class uses private inheritance to construct adapter.\n/// and it is a kind of class structure.\nclass Adapter_Class: public Interface_A, private Interface_B{\npublic:\n\tAdapter_Class();\n\t~Adapter_Class();\n\tvirtual void connect();\n};\n\n/// this class uses private member variable to construct adapter.\n/// and it uses object relationship.\nclass Adapter_Object: public Interface_A{\nprivate:\n\tInterface_B * b;\npublic:\n\tAdapter_Object();\n\t~Adapter_Object();\n\n\tvirtual void connect();\n};\n#endif\n\nAdapter_Class::Adapter_Class(){\n\tcout&lt;&lt; \"Adapter_Class construct\"&lt;&lt;endl;\n\n}\nAdapter_Class::~Adapter_Class(){}\nvoid Adapter_Class::connect(){\n\tInterface_A::connect_com();\n\tInterface_B::connect_B();\n}\n\nAdapter_Object::Adapter_Object(){\n\tcout&lt;&lt;\"Adapter_Object construct\"&lt;&lt;endl;\n\tb = new Interface_B();\n\n}\nAdapter_Object::~Adapter_Object(){\n\tdelete b;\n}\nvoid Adapter_Object::connect(){\n\tInterface_A::connect_com();\n\tb-&gt;connect_B();\n}\n\nint main()\n{\n\tAdapter_Class ac;\n\tac.connect();\n\tAdapter_Object ao;\n\tao.connect();\n\treturn 0;\n}{% endcodeblock %}\n \n","slug":"2010-05-03-design-pattern-adapter","published":1,"updated":"2017-06-05T03:01:00.000Z","photos":[],"link":"","_id":"cj3jjumcb00001emj5j7ibq6c","content":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_description\" content=\"adapter pattern is used for combining two or more classes,which have the same behaviors but different interfaces.\"></p>\n<p><meta name=\"_su_keywords\" content=\"design,pattern,virtual,class,constructor,destory,adapter\"></p>\n<p><meta name=\"_su_title\" content=\"design pattern adapter pattern\"></p>\n<meta name=\"views\" content=\"546\">\n\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div></pre></td><td class=\"code\"><pre><div class=\"line\">// Adapter.cpp : Defines the entry point for the console application.</div><div class=\"line\">// author: chillyc</div><div class=\"line\">// email: chillycreator @t gmail.com</div><div class=\"line\"></div><div class=\"line\">#include&amp;lt;iostream&amp;gt;</div><div class=\"line\">#include&amp;lt;string&amp;gt;</div><div class=\"line\">using namespace std;</div><div class=\"line\"></div><div class=\"line\">/// adapter pattern is used for combining two or more classes,</div><div class=\"line\">/// which have the same behaviors but different interfaces.</div><div class=\"line\">/// some classes is common used in future, and the other which are special will never used.</div><div class=\"line\">/// common used classes should be public, and the other is private.</div><div class=\"line\">/// some classes which inherit adapter class will never use the special ones. </div><div class=\"line\">/// adapter pattern is divided into two patterns.</div><div class=\"line\">/// one is belong to class structure, and the other is belong to object structure.</div><div class=\"line\"></div><div class=\"line\">#ifndef INTERFACEA_H</div><div class=\"line\">#define INTERFACEA_H</div><div class=\"line\">/// Interface A is a common interface!</div><div class=\"line\">class Interface_A&#123;</div><div class=\"line\">public :</div><div class=\"line\">\tvirtual void connect_com();</div><div class=\"line\">&#125;;</div><div class=\"line\">#endif</div><div class=\"line\">void Interface_A::connect_com()&#123;</div><div class=\"line\">\tcout&amp;lt;&amp;lt;&quot;connect a&quot;&amp;lt;&amp;lt;endl;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">#ifndef INTERFACEB_H</div><div class=\"line\">#define INTERFACEB_H</div><div class=\"line\">/// Interface B is not a common interface, </div><div class=\"line\">/// it will be used in some special area!</div><div class=\"line\">class Interface_B&#123;</div><div class=\"line\">public :</div><div class=\"line\">\tvirtual void connect_B();</div><div class=\"line\">&#125;;</div><div class=\"line\">#endif</div><div class=\"line\">void Interface_B::connect_B()&#123;</div><div class=\"line\">\tcout&amp;lt;&amp;lt; &quot;connect b&quot;&amp;lt;&amp;lt;endl;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">#ifndef ADAPTERCLASS_H</div><div class=\"line\">#define ADAPTERCLASS_H</div><div class=\"line\">/// this class uses private inheritance to construct adapter.</div><div class=\"line\">/// and it is a kind of class structure.</div><div class=\"line\">class Adapter_Class: public Interface_A, private Interface_B&#123;</div><div class=\"line\">public:</div><div class=\"line\">\tAdapter_Class();</div><div class=\"line\">\t~Adapter_Class();</div><div class=\"line\">\tvirtual void connect();</div><div class=\"line\">&#125;;</div><div class=\"line\"></div><div class=\"line\">/// this class uses private member variable to construct adapter.</div><div class=\"line\">/// and it uses object relationship.</div><div class=\"line\">class Adapter_Object: public Interface_A&#123;</div><div class=\"line\">private:</div><div class=\"line\">\tInterface_B * b;</div><div class=\"line\">public:</div><div class=\"line\">\tAdapter_Object();</div><div class=\"line\">\t~Adapter_Object();</div><div class=\"line\"></div><div class=\"line\">\tvirtual void connect();</div><div class=\"line\">&#125;;</div><div class=\"line\">#endif</div><div class=\"line\"></div><div class=\"line\">Adapter_Class::Adapter_Class()&#123;</div><div class=\"line\">\tcout&amp;lt;&amp;lt; &quot;Adapter_Class construct&quot;&amp;lt;&amp;lt;endl;</div><div class=\"line\"></div><div class=\"line\">&#125;</div><div class=\"line\">Adapter_Class::~Adapter_Class()&#123;&#125;</div><div class=\"line\">void Adapter_Class::connect()&#123;</div><div class=\"line\">\tInterface_A::connect_com();</div><div class=\"line\">\tInterface_B::connect_B();</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">Adapter_Object::Adapter_Object()&#123;</div><div class=\"line\">\tcout&amp;lt;&amp;lt;&quot;Adapter_Object construct&quot;&amp;lt;&amp;lt;endl;</div><div class=\"line\">\tb = new Interface_B();</div><div class=\"line\"></div><div class=\"line\">&#125;</div><div class=\"line\">Adapter_Object::~Adapter_Object()&#123;</div><div class=\"line\">\tdelete b;</div><div class=\"line\">&#125;</div><div class=\"line\">void Adapter_Object::connect()&#123;</div><div class=\"line\">\tInterface_A::connect_com();</div><div class=\"line\">\tb-&amp;gt;connect_B();</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">int main()</div><div class=\"line\">&#123;</div><div class=\"line\">\tAdapter_Class ac;</div><div class=\"line\">\tac.connect();</div><div class=\"line\">\tAdapter_Object ao;</div><div class=\"line\">\tao.connect();</div><div class=\"line\">\treturn 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_description\" content=\"adapter pattern is used for combining two or more classes,which have the same behaviors but different interfaces.\"></p>\n<p><meta name=\"_su_keywords\" content=\"design,pattern,virtual,class,constructor,destory,adapter\"></p>\n<p><meta name=\"_su_title\" content=\"design pattern adapter pattern\"></p>\n<meta name=\"views\" content=\"546\">\n\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div></pre></td><td class=\"code\"><pre><div class=\"line\">// Adapter.cpp : Defines the entry point for the console application.</div><div class=\"line\">// author: chillyc</div><div class=\"line\">// email: chillycreator @t gmail.com</div><div class=\"line\"></div><div class=\"line\">#include&amp;lt;iostream&amp;gt;</div><div class=\"line\">#include&amp;lt;string&amp;gt;</div><div class=\"line\">using namespace std;</div><div class=\"line\"></div><div class=\"line\">/// adapter pattern is used for combining two or more classes,</div><div class=\"line\">/// which have the same behaviors but different interfaces.</div><div class=\"line\">/// some classes is common used in future, and the other which are special will never used.</div><div class=\"line\">/// common used classes should be public, and the other is private.</div><div class=\"line\">/// some classes which inherit adapter class will never use the special ones. </div><div class=\"line\">/// adapter pattern is divided into two patterns.</div><div class=\"line\">/// one is belong to class structure, and the other is belong to object structure.</div><div class=\"line\"></div><div class=\"line\">#ifndef INTERFACEA_H</div><div class=\"line\">#define INTERFACEA_H</div><div class=\"line\">/// Interface A is a common interface!</div><div class=\"line\">class Interface_A&#123;</div><div class=\"line\">public :</div><div class=\"line\">\tvirtual void connect_com();</div><div class=\"line\">&#125;;</div><div class=\"line\">#endif</div><div class=\"line\">void Interface_A::connect_com()&#123;</div><div class=\"line\">\tcout&amp;lt;&amp;lt;&quot;connect a&quot;&amp;lt;&amp;lt;endl;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">#ifndef INTERFACEB_H</div><div class=\"line\">#define INTERFACEB_H</div><div class=\"line\">/// Interface B is not a common interface, </div><div class=\"line\">/// it will be used in some special area!</div><div class=\"line\">class Interface_B&#123;</div><div class=\"line\">public :</div><div class=\"line\">\tvirtual void connect_B();</div><div class=\"line\">&#125;;</div><div class=\"line\">#endif</div><div class=\"line\">void Interface_B::connect_B()&#123;</div><div class=\"line\">\tcout&amp;lt;&amp;lt; &quot;connect b&quot;&amp;lt;&amp;lt;endl;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">#ifndef ADAPTERCLASS_H</div><div class=\"line\">#define ADAPTERCLASS_H</div><div class=\"line\">/// this class uses private inheritance to construct adapter.</div><div class=\"line\">/// and it is a kind of class structure.</div><div class=\"line\">class Adapter_Class: public Interface_A, private Interface_B&#123;</div><div class=\"line\">public:</div><div class=\"line\">\tAdapter_Class();</div><div class=\"line\">\t~Adapter_Class();</div><div class=\"line\">\tvirtual void connect();</div><div class=\"line\">&#125;;</div><div class=\"line\"></div><div class=\"line\">/// this class uses private member variable to construct adapter.</div><div class=\"line\">/// and it uses object relationship.</div><div class=\"line\">class Adapter_Object: public Interface_A&#123;</div><div class=\"line\">private:</div><div class=\"line\">\tInterface_B * b;</div><div class=\"line\">public:</div><div class=\"line\">\tAdapter_Object();</div><div class=\"line\">\t~Adapter_Object();</div><div class=\"line\"></div><div class=\"line\">\tvirtual void connect();</div><div class=\"line\">&#125;;</div><div class=\"line\">#endif</div><div class=\"line\"></div><div class=\"line\">Adapter_Class::Adapter_Class()&#123;</div><div class=\"line\">\tcout&amp;lt;&amp;lt; &quot;Adapter_Class construct&quot;&amp;lt;&amp;lt;endl;</div><div class=\"line\"></div><div class=\"line\">&#125;</div><div class=\"line\">Adapter_Class::~Adapter_Class()&#123;&#125;</div><div class=\"line\">void Adapter_Class::connect()&#123;</div><div class=\"line\">\tInterface_A::connect_com();</div><div class=\"line\">\tInterface_B::connect_B();</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">Adapter_Object::Adapter_Object()&#123;</div><div class=\"line\">\tcout&amp;lt;&amp;lt;&quot;Adapter_Object construct&quot;&amp;lt;&amp;lt;endl;</div><div class=\"line\">\tb = new Interface_B();</div><div class=\"line\"></div><div class=\"line\">&#125;</div><div class=\"line\">Adapter_Object::~Adapter_Object()&#123;</div><div class=\"line\">\tdelete b;</div><div class=\"line\">&#125;</div><div class=\"line\">void Adapter_Object::connect()&#123;</div><div class=\"line\">\tInterface_A::connect_com();</div><div class=\"line\">\tb-&amp;gt;connect_B();</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">int main()</div><div class=\"line\">&#123;</div><div class=\"line\">\tAdapter_Class ac;</div><div class=\"line\">\tac.connect();</div><div class=\"line\">\tAdapter_Object ao;</div><div class=\"line\">\tao.connect();</div><div class=\"line\">\treturn 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n"},{"layout":"post","title":"design pattern--bridge","date":"2010-05-02T16:00:00.000Z","wordpress_id":193,"comments":1,"_content":"<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_description\" content=\"why use bridge pattern?If the original parent class is not suitable for being inherited by subclass, it will be refactor. And If there are some concepts are common, it will be abstracted as implement interface or abstract class.\" />\n<meta name=\"_su_keywords\" content=\"design,pattern,bridge\" />\n<meta name=\"_su_title\" content=\"design pattern bridge pattern\" />\n<meta name=\"views\" content=\"465\" />\n\n{% codeblock %}// bridge.cpp : Defines the entry point for the console application.\n//\n/// author : chillyc\n/// email : chillycreator @t gmail.com\n/// uml:\n///                   _ \n///                  / \\\n///                 /_ _\\\n\n#include&lt;iostream&gt;\n\nnamespace pattern{\n\n/// why use bridge pattern?\n/// If the original parent class is not suitable for being inherited by subclass, \n/// it will be refactor. And If there are some concepts are common, \n/// it will be abstracted as implement interface or abstract class.\n/// for example: in KFC, there will be some softdrink to be sold, \n/// like coca cola, coff, and so on. And if you wish, you will add some additions like sugar,\n/// or ice into softdrinks. If we design the classes as sugar-cocacola, sugar-coff, ice-cocacola,\n/// and ice-coff. There will be four subclasses here. And in the future, is there add another\n/// additions? If yes, the system will add another two classes! But if use bridge pattern,\n/// it will add only one class called \"another additions\" inherited from addition class. \n/// This is benefits of this pattern.\n\n#ifndef ADDITION_H\n#define ADDITION_H\n\t/// this is the implement class in Bridge pattern.\n\t/// if you want add another additions, \n\t/// inherit this class and the point of your class into Softdrink class.\n\t/// Do you have better implements for just adding class here and not modifying Softdrink class?\n\tclass Addition{\n\tpublic:\n\t\tvirtual void Add()=0;\n\t\tvirtual ~Addition(){};\n\t};\n#endif\n\n#ifndef SUGAR_H\n#define SUGAR_H\n\tclass Sugar:public Addition{\n\tpublic:\n\t\tvirtual void Add();\n\t};\n#endif\n\tvoid Sugar::Add(){\n\t\tstd::cout&lt;&lt;\"add sugar\"&lt;&lt;std::endl;\n\t}\n\n#ifndef ICE_H\n#define ICE_H\n\tclass Ice:public Addition{\n\tpublic:\n\t\tvirtual void Add();\n\t};\n#endif\n\tvoid Ice::Add(){\n\t\tstd::cout&lt;&lt;\"add ice\"&lt;&lt;std::endl;\n\t}\n\n#ifndef SOFTDRINK_H\n#define SOFTDRINK_H\n\t/// this class is the abstract class in Bridge pattern.\n\t/// I consider there will be some other implement methods.\n\t/// I use Addition objects as member variables, \n\t/// and construct and destroy them in Softdrink.\n\t/// But if there is no member variables of Addition, It will be ok.\n\t/// for example: you can send Addition instances as parameters into Softdrink subclass.\n\t/// But in Bridge pattern, the uml is aggregation between implement class and abstract class.\n\tclass Softdrink{\n\tpublic:\n\t\tSoftdrink();\n\t\tvirtual void drink()=0;\n\t\tvirtual ~Softdrink()=0;\n\tprotected:\n\t\tAddition *sugar;\n\t\tAddition *ice;\n\t\t/// another additions add here!\n\t};\n\tSoftdrink::~Softdrink(){\n\t\tif(NULL != sugar){\n\t\t\tdelete sugar;\n\t\t}\n\t\tif(NULL != ice){\n\t\t\tdelete ice;\n\t\t}\n\t}\n\tSoftdrink::Softdrink(){\n\t\tsugar = new Sugar();\n\t\tice = new Ice();\n\t}\n#endif\n\n#ifndef COFF_H\n#define COFF_H\n\n\tclass Coff: public Softdrink{\n\tpublic:\n\n\t\tvirtual void drink();\n\n\t};\n#endif\n\tvoid Coff::drink(){\n\t\tstd::cout&lt;&lt;\"I am drinking coff!\"&lt;&lt;std::endl;\n\t\tsugar-&gt;Add();\n\t}\n\n#ifndef COCA_H\n#define COCA_H\n\tclass Coca: public Softdrink{\n\tpublic:\n\t\tvirtual void drink();\n\t};\n#endif\n\tvoid Coca::drink(){\n\t\tstd::cout&lt;&lt;\"I am drinking coca cola!\"&lt;&lt;std::endl;\n\t\tice-&gt;Add();\n\t}\n\n}\n\nint main()\n{\n\n\tpattern::Coca coca;\n\tcoca.drink();\n\tpattern::Coff coff;\n\tcoff.drink();\n\treturn 0;\n}{% endcodeblock %}\n \n","source":"_posts/2010-05-03-design-pattern-bridge.markdown","raw":"---\nlayout: post\ntitle: \"design pattern--bridge\"\ndate: 2010-5-3\nwordpress_id: 193\ncomments: true\ncategories: [\"bridge\", \"cc\", \"code\", \"design\", \"pattern\", \"software-architecture-code\"]\n---\n<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_description\" content=\"why use bridge pattern?If the original parent class is not suitable for being inherited by subclass, it will be refactor. And If there are some concepts are common, it will be abstracted as implement interface or abstract class.\" />\n<meta name=\"_su_keywords\" content=\"design,pattern,bridge\" />\n<meta name=\"_su_title\" content=\"design pattern bridge pattern\" />\n<meta name=\"views\" content=\"465\" />\n\n{% codeblock %}// bridge.cpp : Defines the entry point for the console application.\n//\n/// author : chillyc\n/// email : chillycreator @t gmail.com\n/// uml:\n///                   _ \n///                  / \\\n///                 /_ _\\\n\n#include&lt;iostream&gt;\n\nnamespace pattern{\n\n/// why use bridge pattern?\n/// If the original parent class is not suitable for being inherited by subclass, \n/// it will be refactor. And If there are some concepts are common, \n/// it will be abstracted as implement interface or abstract class.\n/// for example: in KFC, there will be some softdrink to be sold, \n/// like coca cola, coff, and so on. And if you wish, you will add some additions like sugar,\n/// or ice into softdrinks. If we design the classes as sugar-cocacola, sugar-coff, ice-cocacola,\n/// and ice-coff. There will be four subclasses here. And in the future, is there add another\n/// additions? If yes, the system will add another two classes! But if use bridge pattern,\n/// it will add only one class called \"another additions\" inherited from addition class. \n/// This is benefits of this pattern.\n\n#ifndef ADDITION_H\n#define ADDITION_H\n\t/// this is the implement class in Bridge pattern.\n\t/// if you want add another additions, \n\t/// inherit this class and the point of your class into Softdrink class.\n\t/// Do you have better implements for just adding class here and not modifying Softdrink class?\n\tclass Addition{\n\tpublic:\n\t\tvirtual void Add()=0;\n\t\tvirtual ~Addition(){};\n\t};\n#endif\n\n#ifndef SUGAR_H\n#define SUGAR_H\n\tclass Sugar:public Addition{\n\tpublic:\n\t\tvirtual void Add();\n\t};\n#endif\n\tvoid Sugar::Add(){\n\t\tstd::cout&lt;&lt;\"add sugar\"&lt;&lt;std::endl;\n\t}\n\n#ifndef ICE_H\n#define ICE_H\n\tclass Ice:public Addition{\n\tpublic:\n\t\tvirtual void Add();\n\t};\n#endif\n\tvoid Ice::Add(){\n\t\tstd::cout&lt;&lt;\"add ice\"&lt;&lt;std::endl;\n\t}\n\n#ifndef SOFTDRINK_H\n#define SOFTDRINK_H\n\t/// this class is the abstract class in Bridge pattern.\n\t/// I consider there will be some other implement methods.\n\t/// I use Addition objects as member variables, \n\t/// and construct and destroy them in Softdrink.\n\t/// But if there is no member variables of Addition, It will be ok.\n\t/// for example: you can send Addition instances as parameters into Softdrink subclass.\n\t/// But in Bridge pattern, the uml is aggregation between implement class and abstract class.\n\tclass Softdrink{\n\tpublic:\n\t\tSoftdrink();\n\t\tvirtual void drink()=0;\n\t\tvirtual ~Softdrink()=0;\n\tprotected:\n\t\tAddition *sugar;\n\t\tAddition *ice;\n\t\t/// another additions add here!\n\t};\n\tSoftdrink::~Softdrink(){\n\t\tif(NULL != sugar){\n\t\t\tdelete sugar;\n\t\t}\n\t\tif(NULL != ice){\n\t\t\tdelete ice;\n\t\t}\n\t}\n\tSoftdrink::Softdrink(){\n\t\tsugar = new Sugar();\n\t\tice = new Ice();\n\t}\n#endif\n\n#ifndef COFF_H\n#define COFF_H\n\n\tclass Coff: public Softdrink{\n\tpublic:\n\n\t\tvirtual void drink();\n\n\t};\n#endif\n\tvoid Coff::drink(){\n\t\tstd::cout&lt;&lt;\"I am drinking coff!\"&lt;&lt;std::endl;\n\t\tsugar-&gt;Add();\n\t}\n\n#ifndef COCA_H\n#define COCA_H\n\tclass Coca: public Softdrink{\n\tpublic:\n\t\tvirtual void drink();\n\t};\n#endif\n\tvoid Coca::drink(){\n\t\tstd::cout&lt;&lt;\"I am drinking coca cola!\"&lt;&lt;std::endl;\n\t\tice-&gt;Add();\n\t}\n\n}\n\nint main()\n{\n\n\tpattern::Coca coca;\n\tcoca.drink();\n\tpattern::Coff coff;\n\tcoff.drink();\n\treturn 0;\n}{% endcodeblock %}\n \n","slug":"2010-05-03-design-pattern-bridge","published":1,"updated":"2017-06-05T03:01:00.000Z","photos":[],"link":"","_id":"cj3jjumcm00011emj7ugbkjzn","content":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_description\" content=\"why use bridge pattern?If the original parent class is not suitable for being inherited by subclass, it will be refactor. And If there are some concepts are common, it will be abstracted as implement interface or abstract class.\"></p>\n<p><meta name=\"_su_keywords\" content=\"design,pattern,bridge\"></p>\n<p><meta name=\"_su_title\" content=\"design pattern bridge pattern\"></p>\n<meta name=\"views\" content=\"465\">\n\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div></pre></td><td class=\"code\"><pre><div class=\"line\">// bridge.cpp : Defines the entry point for the console application.</div><div class=\"line\">//</div><div class=\"line\">/// author : chillyc</div><div class=\"line\">/// email : chillycreator @t gmail.com</div><div class=\"line\">/// uml:</div><div class=\"line\">///                   _ </div><div class=\"line\">///                  / \\</div><div class=\"line\">///                 /_ _\\</div><div class=\"line\"></div><div class=\"line\">#include&amp;lt;iostream&amp;gt;</div><div class=\"line\"></div><div class=\"line\">namespace pattern&#123;</div><div class=\"line\"></div><div class=\"line\">/// why use bridge pattern?</div><div class=\"line\">/// If the original parent class is not suitable for being inherited by subclass, </div><div class=\"line\">/// it will be refactor. And If there are some concepts are common, </div><div class=\"line\">/// it will be abstracted as implement interface or abstract class.</div><div class=\"line\">/// for example: in KFC, there will be some softdrink to be sold, </div><div class=\"line\">/// like coca cola, coff, and so on. And if you wish, you will add some additions like sugar,</div><div class=\"line\">/// or ice into softdrinks. If we design the classes as sugar-cocacola, sugar-coff, ice-cocacola,</div><div class=\"line\">/// and ice-coff. There will be four subclasses here. And in the future, is there add another</div><div class=\"line\">/// additions? If yes, the system will add another two classes! But if use bridge pattern,</div><div class=\"line\">/// it will add only one class called &quot;another additions&quot; inherited from addition class. </div><div class=\"line\">/// This is benefits of this pattern.</div><div class=\"line\"></div><div class=\"line\">#ifndef ADDITION_H</div><div class=\"line\">#define ADDITION_H</div><div class=\"line\">\t/// this is the implement class in Bridge pattern.</div><div class=\"line\">\t/// if you want add another additions, </div><div class=\"line\">\t/// inherit this class and the point of your class into Softdrink class.</div><div class=\"line\">\t/// Do you have better implements for just adding class here and not modifying Softdrink class?</div><div class=\"line\">\tclass Addition&#123;</div><div class=\"line\">\tpublic:</div><div class=\"line\">\t\tvirtual void Add()=0;</div><div class=\"line\">\t\tvirtual ~Addition()&#123;&#125;;</div><div class=\"line\">\t&#125;;</div><div class=\"line\">#endif</div><div class=\"line\"></div><div class=\"line\">#ifndef SUGAR_H</div><div class=\"line\">#define SUGAR_H</div><div class=\"line\">\tclass Sugar:public Addition&#123;</div><div class=\"line\">\tpublic:</div><div class=\"line\">\t\tvirtual void Add();</div><div class=\"line\">\t&#125;;</div><div class=\"line\">#endif</div><div class=\"line\">\tvoid Sugar::Add()&#123;</div><div class=\"line\">\t\tstd::cout&amp;lt;&amp;lt;&quot;add sugar&quot;&amp;lt;&amp;lt;std::endl;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">#ifndef ICE_H</div><div class=\"line\">#define ICE_H</div><div class=\"line\">\tclass Ice:public Addition&#123;</div><div class=\"line\">\tpublic:</div><div class=\"line\">\t\tvirtual void Add();</div><div class=\"line\">\t&#125;;</div><div class=\"line\">#endif</div><div class=\"line\">\tvoid Ice::Add()&#123;</div><div class=\"line\">\t\tstd::cout&amp;lt;&amp;lt;&quot;add ice&quot;&amp;lt;&amp;lt;std::endl;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">#ifndef SOFTDRINK_H</div><div class=\"line\">#define SOFTDRINK_H</div><div class=\"line\">\t/// this class is the abstract class in Bridge pattern.</div><div class=\"line\">\t/// I consider there will be some other implement methods.</div><div class=\"line\">\t/// I use Addition objects as member variables, </div><div class=\"line\">\t/// and construct and destroy them in Softdrink.</div><div class=\"line\">\t/// But if there is no member variables of Addition, It will be ok.</div><div class=\"line\">\t/// for example: you can send Addition instances as parameters into Softdrink subclass.</div><div class=\"line\">\t/// But in Bridge pattern, the uml is aggregation between implement class and abstract class.</div><div class=\"line\">\tclass Softdrink&#123;</div><div class=\"line\">\tpublic:</div><div class=\"line\">\t\tSoftdrink();</div><div class=\"line\">\t\tvirtual void drink()=0;</div><div class=\"line\">\t\tvirtual ~Softdrink()=0;</div><div class=\"line\">\tprotected:</div><div class=\"line\">\t\tAddition *sugar;</div><div class=\"line\">\t\tAddition *ice;</div><div class=\"line\">\t\t/// another additions add here!</div><div class=\"line\">\t&#125;;</div><div class=\"line\">\tSoftdrink::~Softdrink()&#123;</div><div class=\"line\">\t\tif(NULL != sugar)&#123;</div><div class=\"line\">\t\t\tdelete sugar;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\tif(NULL != ice)&#123;</div><div class=\"line\">\t\t\tdelete ice;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\tSoftdrink::Softdrink()&#123;</div><div class=\"line\">\t\tsugar = new Sugar();</div><div class=\"line\">\t\tice = new Ice();</div><div class=\"line\">\t&#125;</div><div class=\"line\">#endif</div><div class=\"line\"></div><div class=\"line\">#ifndef COFF_H</div><div class=\"line\">#define COFF_H</div><div class=\"line\"></div><div class=\"line\">\tclass Coff: public Softdrink&#123;</div><div class=\"line\">\tpublic:</div><div class=\"line\"></div><div class=\"line\">\t\tvirtual void drink();</div><div class=\"line\"></div><div class=\"line\">\t&#125;;</div><div class=\"line\">#endif</div><div class=\"line\">\tvoid Coff::drink()&#123;</div><div class=\"line\">\t\tstd::cout&amp;lt;&amp;lt;&quot;I am drinking coff!&quot;&amp;lt;&amp;lt;std::endl;</div><div class=\"line\">\t\tsugar-&amp;gt;Add();</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">#ifndef COCA_H</div><div class=\"line\">#define COCA_H</div><div class=\"line\">\tclass Coca: public Softdrink&#123;</div><div class=\"line\">\tpublic:</div><div class=\"line\">\t\tvirtual void drink();</div><div class=\"line\">\t&#125;;</div><div class=\"line\">#endif</div><div class=\"line\">\tvoid Coca::drink()&#123;</div><div class=\"line\">\t\tstd::cout&amp;lt;&amp;lt;&quot;I am drinking coca cola!&quot;&amp;lt;&amp;lt;std::endl;</div><div class=\"line\">\t\tice-&amp;gt;Add();</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">int main()</div><div class=\"line\">&#123;</div><div class=\"line\"></div><div class=\"line\">\tpattern::Coca coca;</div><div class=\"line\">\tcoca.drink();</div><div class=\"line\">\tpattern::Coff coff;</div><div class=\"line\">\tcoff.drink();</div><div class=\"line\">\treturn 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_description\" content=\"why use bridge pattern?If the original parent class is not suitable for being inherited by subclass, it will be refactor. And If there are some concepts are common, it will be abstracted as implement interface or abstract class.\"></p>\n<p><meta name=\"_su_keywords\" content=\"design,pattern,bridge\"></p>\n<p><meta name=\"_su_title\" content=\"design pattern bridge pattern\"></p>\n<meta name=\"views\" content=\"465\">\n\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div></pre></td><td class=\"code\"><pre><div class=\"line\">// bridge.cpp : Defines the entry point for the console application.</div><div class=\"line\">//</div><div class=\"line\">/// author : chillyc</div><div class=\"line\">/// email : chillycreator @t gmail.com</div><div class=\"line\">/// uml:</div><div class=\"line\">///                   _ </div><div class=\"line\">///                  / \\</div><div class=\"line\">///                 /_ _\\</div><div class=\"line\"></div><div class=\"line\">#include&amp;lt;iostream&amp;gt;</div><div class=\"line\"></div><div class=\"line\">namespace pattern&#123;</div><div class=\"line\"></div><div class=\"line\">/// why use bridge pattern?</div><div class=\"line\">/// If the original parent class is not suitable for being inherited by subclass, </div><div class=\"line\">/// it will be refactor. And If there are some concepts are common, </div><div class=\"line\">/// it will be abstracted as implement interface or abstract class.</div><div class=\"line\">/// for example: in KFC, there will be some softdrink to be sold, </div><div class=\"line\">/// like coca cola, coff, and so on. And if you wish, you will add some additions like sugar,</div><div class=\"line\">/// or ice into softdrinks. If we design the classes as sugar-cocacola, sugar-coff, ice-cocacola,</div><div class=\"line\">/// and ice-coff. There will be four subclasses here. And in the future, is there add another</div><div class=\"line\">/// additions? If yes, the system will add another two classes! But if use bridge pattern,</div><div class=\"line\">/// it will add only one class called &quot;another additions&quot; inherited from addition class. </div><div class=\"line\">/// This is benefits of this pattern.</div><div class=\"line\"></div><div class=\"line\">#ifndef ADDITION_H</div><div class=\"line\">#define ADDITION_H</div><div class=\"line\">\t/// this is the implement class in Bridge pattern.</div><div class=\"line\">\t/// if you want add another additions, </div><div class=\"line\">\t/// inherit this class and the point of your class into Softdrink class.</div><div class=\"line\">\t/// Do you have better implements for just adding class here and not modifying Softdrink class?</div><div class=\"line\">\tclass Addition&#123;</div><div class=\"line\">\tpublic:</div><div class=\"line\">\t\tvirtual void Add()=0;</div><div class=\"line\">\t\tvirtual ~Addition()&#123;&#125;;</div><div class=\"line\">\t&#125;;</div><div class=\"line\">#endif</div><div class=\"line\"></div><div class=\"line\">#ifndef SUGAR_H</div><div class=\"line\">#define SUGAR_H</div><div class=\"line\">\tclass Sugar:public Addition&#123;</div><div class=\"line\">\tpublic:</div><div class=\"line\">\t\tvirtual void Add();</div><div class=\"line\">\t&#125;;</div><div class=\"line\">#endif</div><div class=\"line\">\tvoid Sugar::Add()&#123;</div><div class=\"line\">\t\tstd::cout&amp;lt;&amp;lt;&quot;add sugar&quot;&amp;lt;&amp;lt;std::endl;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">#ifndef ICE_H</div><div class=\"line\">#define ICE_H</div><div class=\"line\">\tclass Ice:public Addition&#123;</div><div class=\"line\">\tpublic:</div><div class=\"line\">\t\tvirtual void Add();</div><div class=\"line\">\t&#125;;</div><div class=\"line\">#endif</div><div class=\"line\">\tvoid Ice::Add()&#123;</div><div class=\"line\">\t\tstd::cout&amp;lt;&amp;lt;&quot;add ice&quot;&amp;lt;&amp;lt;std::endl;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">#ifndef SOFTDRINK_H</div><div class=\"line\">#define SOFTDRINK_H</div><div class=\"line\">\t/// this class is the abstract class in Bridge pattern.</div><div class=\"line\">\t/// I consider there will be some other implement methods.</div><div class=\"line\">\t/// I use Addition objects as member variables, </div><div class=\"line\">\t/// and construct and destroy them in Softdrink.</div><div class=\"line\">\t/// But if there is no member variables of Addition, It will be ok.</div><div class=\"line\">\t/// for example: you can send Addition instances as parameters into Softdrink subclass.</div><div class=\"line\">\t/// But in Bridge pattern, the uml is aggregation between implement class and abstract class.</div><div class=\"line\">\tclass Softdrink&#123;</div><div class=\"line\">\tpublic:</div><div class=\"line\">\t\tSoftdrink();</div><div class=\"line\">\t\tvirtual void drink()=0;</div><div class=\"line\">\t\tvirtual ~Softdrink()=0;</div><div class=\"line\">\tprotected:</div><div class=\"line\">\t\tAddition *sugar;</div><div class=\"line\">\t\tAddition *ice;</div><div class=\"line\">\t\t/// another additions add here!</div><div class=\"line\">\t&#125;;</div><div class=\"line\">\tSoftdrink::~Softdrink()&#123;</div><div class=\"line\">\t\tif(NULL != sugar)&#123;</div><div class=\"line\">\t\t\tdelete sugar;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\tif(NULL != ice)&#123;</div><div class=\"line\">\t\t\tdelete ice;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\tSoftdrink::Softdrink()&#123;</div><div class=\"line\">\t\tsugar = new Sugar();</div><div class=\"line\">\t\tice = new Ice();</div><div class=\"line\">\t&#125;</div><div class=\"line\">#endif</div><div class=\"line\"></div><div class=\"line\">#ifndef COFF_H</div><div class=\"line\">#define COFF_H</div><div class=\"line\"></div><div class=\"line\">\tclass Coff: public Softdrink&#123;</div><div class=\"line\">\tpublic:</div><div class=\"line\"></div><div class=\"line\">\t\tvirtual void drink();</div><div class=\"line\"></div><div class=\"line\">\t&#125;;</div><div class=\"line\">#endif</div><div class=\"line\">\tvoid Coff::drink()&#123;</div><div class=\"line\">\t\tstd::cout&amp;lt;&amp;lt;&quot;I am drinking coff!&quot;&amp;lt;&amp;lt;std::endl;</div><div class=\"line\">\t\tsugar-&amp;gt;Add();</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">#ifndef COCA_H</div><div class=\"line\">#define COCA_H</div><div class=\"line\">\tclass Coca: public Softdrink&#123;</div><div class=\"line\">\tpublic:</div><div class=\"line\">\t\tvirtual void drink();</div><div class=\"line\">\t&#125;;</div><div class=\"line\">#endif</div><div class=\"line\">\tvoid Coca::drink()&#123;</div><div class=\"line\">\t\tstd::cout&amp;lt;&amp;lt;&quot;I am drinking coca cola!&quot;&amp;lt;&amp;lt;std::endl;</div><div class=\"line\">\t\tice-&amp;gt;Add();</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">int main()</div><div class=\"line\">&#123;</div><div class=\"line\"></div><div class=\"line\">\tpattern::Coca coca;</div><div class=\"line\">\tcoca.drink();</div><div class=\"line\">\tpattern::Coff coff;</div><div class=\"line\">\tcoff.drink();</div><div class=\"line\">\treturn 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n"},{"layout":"post","title":"design pattern -- decorator pattern","date":"2010-05-02T16:00:00.000Z","wordpress_id":198,"comments":1,"_content":"<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_keywords\" content=\"design,pattern, decorator,code\" />\n<meta name=\"_su_title\" content=\"design,pattern, decorator,code\" />\n<meta name=\"views\" content=\"426\" />\n\n{% codeblock %}// decorator.cpp : Defines the entry point for the console application.\n// author: chillyc\n// email: chillycreator @t gmail.com\n\n#include&lt;iostream&gt;\nnamespace pattern{\n\t/// this pattern is decorator pattern.\n\t/// In this pattern the super class should have default process functions.\n\t/// for example: \"Read\" has default read word function, and it is useful in the future.\n\t/// Read_Char, Read_Chinese, Decorator inherit Read class.\n\t/// But those three subclass is not powerful to deal with sentences.\n\t/// Then the subclass of Decorator will deal with sentences, but it dose not know every word.\n\t/// So Sentence(Encode) pattern has become.\n\t/// But decorator pattern is not only dealing with this situation but also enhance some classes\n\t/// capacity without adding new classes.\n\t/// is it something like Bridge?\n#ifndef READ_H\n#define READ_H\n\tclass Read{\n\tpublic:\n\t\tRead(){}\n\t\tvirtual ~Read(){}\n\n\t\t/// this is default process function.\n\t\t/// and decorator class will use this function to read\n\t\tvirtual void ReadWord(){std::cout&lt;&lt;\"default read!\"&lt;&lt;std::endl;}\n\t\t/// if the function is a pure virtual function,\n\t\t/// decorator class need not inherit this class and\n\t\t/// it just has an instance of Read as a member varible.\n\t\t// virtual void ReadWord()=0;\n\n\t};\n#endif\n\n#ifndef READCHAR_H\n#define READCHAR_H\n\tclass Read_Char:public Read{\n\tpublic:\n\t\tRead_Char():Read(){}\n\t\t~Read_Char(){}\n\t\tvirtual void ReadWord();\n\t};\n#endif\n\tvoid Read_Char::ReadWord(){\n\t\tstd::cout&lt;&lt; \"read a char\"&lt;&lt;std::endl;\n\n\t}\n\n#ifndef READCHINESE_H\n#define READCHINESE_H\n\tclass Read_Chinese:public Read{\n\tpublic:\n\t\tRead_Chinese():Read(){}\n\t\t~Read_Chinese(){}\n\t\tvirtual void ReadWord();\n\t};\n#endif\n\tvoid Read_Chinese::ReadWord(){\n\t\tstd::cout&lt;&lt;\"read a chinese word\"&lt;&lt;std::endl;\n\t}\n\n#ifndef DECORATOR_H\n#define DECORATOR_H\n\tclass Decorator:public Read{\n\tprotected:\n\t\tRead* r;\n\tpublic:\n\t\tDecorator():Read(){r = NULL;}\n\t\tDecorator(Read* r):Read(),r(r){}\n\t\tvirtual ~Decorator(){if(r!=NULL) delete r;}\n\t\tvirtual void ReadWord();\n\t};\n#endif\n\tvoid Decorator::ReadWord(){\n\t\tif(NULL == r)\n\t\t\tRead::ReadWord();\n\t\telse\n\t\t\tr-&gt;ReadWord();\n\t}\n\n#ifndef READSENTENCE_H\n#define READSENTENCE_H\n\t// this class is real work decorator class\n\tclass Read_Sentence:public Decorator{\n\n\tpublic:\n\t\tRead_Sentence():Decorator(){}\n\t\tRead_Sentence(Read* r):Decorator(r){}\n\t\t~Read_Sentence(){}\n\t\tvirtual void ReadWord();\n\t};\n#endif\n\tvoid Read_Sentence::ReadWord(){\n\t\t/// parent class method is called first!\n\t\tDecorator::ReadWord();\n\t\t/// then your method be called\n\t\tstd::cout&lt;&lt;\"read a sentence\"&lt;&lt;std::endl;\n\t}\n}\n\nint main()\n{\n\tpattern::Read_Sentence rs1(new pattern::Read_Char());// read char\n\tpattern::Read_Sentence rs2(new pattern::Read_Chinese());// read chinese\n\tpattern::Read_Sentence rs3; // default read\n\trs1.ReadWord();\n\trs2.ReadWord();\n\trs3.ReadWord();\n\treturn 0;\n}{% endcodeblock %}\n \n","source":"_posts/2010-05-03-design-pattern-decorator-pattern.markdown","raw":"---\nlayout: post\ntitle: \"design pattern -- decorator pattern\"\ndate: 2010-5-3\nwordpress_id: 198\ncomments: true\ncategories: [\"cc\", \"code\", \"code\", \"decorator\", \"design\", \"pattern\", \"software-architecture-code\"]\n---\n<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_keywords\" content=\"design,pattern, decorator,code\" />\n<meta name=\"_su_title\" content=\"design,pattern, decorator,code\" />\n<meta name=\"views\" content=\"426\" />\n\n{% codeblock %}// decorator.cpp : Defines the entry point for the console application.\n// author: chillyc\n// email: chillycreator @t gmail.com\n\n#include&lt;iostream&gt;\nnamespace pattern{\n\t/// this pattern is decorator pattern.\n\t/// In this pattern the super class should have default process functions.\n\t/// for example: \"Read\" has default read word function, and it is useful in the future.\n\t/// Read_Char, Read_Chinese, Decorator inherit Read class.\n\t/// But those three subclass is not powerful to deal with sentences.\n\t/// Then the subclass of Decorator will deal with sentences, but it dose not know every word.\n\t/// So Sentence(Encode) pattern has become.\n\t/// But decorator pattern is not only dealing with this situation but also enhance some classes\n\t/// capacity without adding new classes.\n\t/// is it something like Bridge?\n#ifndef READ_H\n#define READ_H\n\tclass Read{\n\tpublic:\n\t\tRead(){}\n\t\tvirtual ~Read(){}\n\n\t\t/// this is default process function.\n\t\t/// and decorator class will use this function to read\n\t\tvirtual void ReadWord(){std::cout&lt;&lt;\"default read!\"&lt;&lt;std::endl;}\n\t\t/// if the function is a pure virtual function,\n\t\t/// decorator class need not inherit this class and\n\t\t/// it just has an instance of Read as a member varible.\n\t\t// virtual void ReadWord()=0;\n\n\t};\n#endif\n\n#ifndef READCHAR_H\n#define READCHAR_H\n\tclass Read_Char:public Read{\n\tpublic:\n\t\tRead_Char():Read(){}\n\t\t~Read_Char(){}\n\t\tvirtual void ReadWord();\n\t};\n#endif\n\tvoid Read_Char::ReadWord(){\n\t\tstd::cout&lt;&lt; \"read a char\"&lt;&lt;std::endl;\n\n\t}\n\n#ifndef READCHINESE_H\n#define READCHINESE_H\n\tclass Read_Chinese:public Read{\n\tpublic:\n\t\tRead_Chinese():Read(){}\n\t\t~Read_Chinese(){}\n\t\tvirtual void ReadWord();\n\t};\n#endif\n\tvoid Read_Chinese::ReadWord(){\n\t\tstd::cout&lt;&lt;\"read a chinese word\"&lt;&lt;std::endl;\n\t}\n\n#ifndef DECORATOR_H\n#define DECORATOR_H\n\tclass Decorator:public Read{\n\tprotected:\n\t\tRead* r;\n\tpublic:\n\t\tDecorator():Read(){r = NULL;}\n\t\tDecorator(Read* r):Read(),r(r){}\n\t\tvirtual ~Decorator(){if(r!=NULL) delete r;}\n\t\tvirtual void ReadWord();\n\t};\n#endif\n\tvoid Decorator::ReadWord(){\n\t\tif(NULL == r)\n\t\t\tRead::ReadWord();\n\t\telse\n\t\t\tr-&gt;ReadWord();\n\t}\n\n#ifndef READSENTENCE_H\n#define READSENTENCE_H\n\t// this class is real work decorator class\n\tclass Read_Sentence:public Decorator{\n\n\tpublic:\n\t\tRead_Sentence():Decorator(){}\n\t\tRead_Sentence(Read* r):Decorator(r){}\n\t\t~Read_Sentence(){}\n\t\tvirtual void ReadWord();\n\t};\n#endif\n\tvoid Read_Sentence::ReadWord(){\n\t\t/// parent class method is called first!\n\t\tDecorator::ReadWord();\n\t\t/// then your method be called\n\t\tstd::cout&lt;&lt;\"read a sentence\"&lt;&lt;std::endl;\n\t}\n}\n\nint main()\n{\n\tpattern::Read_Sentence rs1(new pattern::Read_Char());// read char\n\tpattern::Read_Sentence rs2(new pattern::Read_Chinese());// read chinese\n\tpattern::Read_Sentence rs3; // default read\n\trs1.ReadWord();\n\trs2.ReadWord();\n\trs3.ReadWord();\n\treturn 0;\n}{% endcodeblock %}\n \n","slug":"2010-05-03-design-pattern-decorator-pattern","published":1,"updated":"2017-06-05T03:01:00.000Z","photos":[],"link":"","_id":"cj3jjumcq00021emjmh4jiyti","content":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_keywords\" content=\"design,pattern, decorator,code\"></p>\n<p><meta name=\"_su_title\" content=\"design,pattern, decorator,code\"></p>\n<meta name=\"views\" content=\"426\">\n\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div></pre></td><td class=\"code\"><pre><div class=\"line\">// decorator.cpp : Defines the entry point for the console application.</div><div class=\"line\">// author: chillyc</div><div class=\"line\">// email: chillycreator @t gmail.com</div><div class=\"line\"></div><div class=\"line\">#include&amp;lt;iostream&amp;gt;</div><div class=\"line\">namespace pattern&#123;</div><div class=\"line\">\t/// this pattern is decorator pattern.</div><div class=\"line\">\t/// In this pattern the super class should have default process functions.</div><div class=\"line\">\t/// for example: &quot;Read&quot; has default read word function, and it is useful in the future.</div><div class=\"line\">\t/// Read_Char, Read_Chinese, Decorator inherit Read class.</div><div class=\"line\">\t/// But those three subclass is not powerful to deal with sentences.</div><div class=\"line\">\t/// Then the subclass of Decorator will deal with sentences, but it dose not know every word.</div><div class=\"line\">\t/// So Sentence(Encode) pattern has become.</div><div class=\"line\">\t/// But decorator pattern is not only dealing with this situation but also enhance some classes</div><div class=\"line\">\t/// capacity without adding new classes.</div><div class=\"line\">\t/// is it something like Bridge?</div><div class=\"line\">#ifndef READ_H</div><div class=\"line\">#define READ_H</div><div class=\"line\">\tclass Read&#123;</div><div class=\"line\">\tpublic:</div><div class=\"line\">\t\tRead()&#123;&#125;</div><div class=\"line\">\t\tvirtual ~Read()&#123;&#125;</div><div class=\"line\"></div><div class=\"line\">\t\t/// this is default process function.</div><div class=\"line\">\t\t/// and decorator class will use this function to read</div><div class=\"line\">\t\tvirtual void ReadWord()&#123;std::cout&amp;lt;&amp;lt;&quot;default read!&quot;&amp;lt;&amp;lt;std::endl;&#125;</div><div class=\"line\">\t\t/// if the function is a pure virtual function,</div><div class=\"line\">\t\t/// decorator class need not inherit this class and</div><div class=\"line\">\t\t/// it just has an instance of Read as a member varible.</div><div class=\"line\">\t\t// virtual void ReadWord()=0;</div><div class=\"line\"></div><div class=\"line\">\t&#125;;</div><div class=\"line\">#endif</div><div class=\"line\"></div><div class=\"line\">#ifndef READCHAR_H</div><div class=\"line\">#define READCHAR_H</div><div class=\"line\">\tclass Read_Char:public Read&#123;</div><div class=\"line\">\tpublic:</div><div class=\"line\">\t\tRead_Char():Read()&#123;&#125;</div><div class=\"line\">\t\t~Read_Char()&#123;&#125;</div><div class=\"line\">\t\tvirtual void ReadWord();</div><div class=\"line\">\t&#125;;</div><div class=\"line\">#endif</div><div class=\"line\">\tvoid Read_Char::ReadWord()&#123;</div><div class=\"line\">\t\tstd::cout&amp;lt;&amp;lt; &quot;read a char&quot;&amp;lt;&amp;lt;std::endl;</div><div class=\"line\"></div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">#ifndef READCHINESE_H</div><div class=\"line\">#define READCHINESE_H</div><div class=\"line\">\tclass Read_Chinese:public Read&#123;</div><div class=\"line\">\tpublic:</div><div class=\"line\">\t\tRead_Chinese():Read()&#123;&#125;</div><div class=\"line\">\t\t~Read_Chinese()&#123;&#125;</div><div class=\"line\">\t\tvirtual void ReadWord();</div><div class=\"line\">\t&#125;;</div><div class=\"line\">#endif</div><div class=\"line\">\tvoid Read_Chinese::ReadWord()&#123;</div><div class=\"line\">\t\tstd::cout&amp;lt;&amp;lt;&quot;read a chinese word&quot;&amp;lt;&amp;lt;std::endl;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">#ifndef DECORATOR_H</div><div class=\"line\">#define DECORATOR_H</div><div class=\"line\">\tclass Decorator:public Read&#123;</div><div class=\"line\">\tprotected:</div><div class=\"line\">\t\tRead* r;</div><div class=\"line\">\tpublic:</div><div class=\"line\">\t\tDecorator():Read()&#123;r = NULL;&#125;</div><div class=\"line\">\t\tDecorator(Read* r):Read(),r(r)&#123;&#125;</div><div class=\"line\">\t\tvirtual ~Decorator()&#123;if(r!=NULL) delete r;&#125;</div><div class=\"line\">\t\tvirtual void ReadWord();</div><div class=\"line\">\t&#125;;</div><div class=\"line\">#endif</div><div class=\"line\">\tvoid Decorator::ReadWord()&#123;</div><div class=\"line\">\t\tif(NULL == r)</div><div class=\"line\">\t\t\tRead::ReadWord();</div><div class=\"line\">\t\telse</div><div class=\"line\">\t\t\tr-&amp;gt;ReadWord();</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">#ifndef READSENTENCE_H</div><div class=\"line\">#define READSENTENCE_H</div><div class=\"line\">\t// this class is real work decorator class</div><div class=\"line\">\tclass Read_Sentence:public Decorator&#123;</div><div class=\"line\"></div><div class=\"line\">\tpublic:</div><div class=\"line\">\t\tRead_Sentence():Decorator()&#123;&#125;</div><div class=\"line\">\t\tRead_Sentence(Read* r):Decorator(r)&#123;&#125;</div><div class=\"line\">\t\t~Read_Sentence()&#123;&#125;</div><div class=\"line\">\t\tvirtual void ReadWord();</div><div class=\"line\">\t&#125;;</div><div class=\"line\">#endif</div><div class=\"line\">\tvoid Read_Sentence::ReadWord()&#123;</div><div class=\"line\">\t\t/// parent class method is called first!</div><div class=\"line\">\t\tDecorator::ReadWord();</div><div class=\"line\">\t\t/// then your method be called</div><div class=\"line\">\t\tstd::cout&amp;lt;&amp;lt;&quot;read a sentence&quot;&amp;lt;&amp;lt;std::endl;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">int main()</div><div class=\"line\">&#123;</div><div class=\"line\">\tpattern::Read_Sentence rs1(new pattern::Read_Char());// read char</div><div class=\"line\">\tpattern::Read_Sentence rs2(new pattern::Read_Chinese());// read chinese</div><div class=\"line\">\tpattern::Read_Sentence rs3; // default read</div><div class=\"line\">\trs1.ReadWord();</div><div class=\"line\">\trs2.ReadWord();</div><div class=\"line\">\trs3.ReadWord();</div><div class=\"line\">\treturn 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_keywords\" content=\"design,pattern, decorator,code\"></p>\n<p><meta name=\"_su_title\" content=\"design,pattern, decorator,code\"></p>\n<meta name=\"views\" content=\"426\">\n\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div></pre></td><td class=\"code\"><pre><div class=\"line\">// decorator.cpp : Defines the entry point for the console application.</div><div class=\"line\">// author: chillyc</div><div class=\"line\">// email: chillycreator @t gmail.com</div><div class=\"line\"></div><div class=\"line\">#include&amp;lt;iostream&amp;gt;</div><div class=\"line\">namespace pattern&#123;</div><div class=\"line\">\t/// this pattern is decorator pattern.</div><div class=\"line\">\t/// In this pattern the super class should have default process functions.</div><div class=\"line\">\t/// for example: &quot;Read&quot; has default read word function, and it is useful in the future.</div><div class=\"line\">\t/// Read_Char, Read_Chinese, Decorator inherit Read class.</div><div class=\"line\">\t/// But those three subclass is not powerful to deal with sentences.</div><div class=\"line\">\t/// Then the subclass of Decorator will deal with sentences, but it dose not know every word.</div><div class=\"line\">\t/// So Sentence(Encode) pattern has become.</div><div class=\"line\">\t/// But decorator pattern is not only dealing with this situation but also enhance some classes</div><div class=\"line\">\t/// capacity without adding new classes.</div><div class=\"line\">\t/// is it something like Bridge?</div><div class=\"line\">#ifndef READ_H</div><div class=\"line\">#define READ_H</div><div class=\"line\">\tclass Read&#123;</div><div class=\"line\">\tpublic:</div><div class=\"line\">\t\tRead()&#123;&#125;</div><div class=\"line\">\t\tvirtual ~Read()&#123;&#125;</div><div class=\"line\"></div><div class=\"line\">\t\t/// this is default process function.</div><div class=\"line\">\t\t/// and decorator class will use this function to read</div><div class=\"line\">\t\tvirtual void ReadWord()&#123;std::cout&amp;lt;&amp;lt;&quot;default read!&quot;&amp;lt;&amp;lt;std::endl;&#125;</div><div class=\"line\">\t\t/// if the function is a pure virtual function,</div><div class=\"line\">\t\t/// decorator class need not inherit this class and</div><div class=\"line\">\t\t/// it just has an instance of Read as a member varible.</div><div class=\"line\">\t\t// virtual void ReadWord()=0;</div><div class=\"line\"></div><div class=\"line\">\t&#125;;</div><div class=\"line\">#endif</div><div class=\"line\"></div><div class=\"line\">#ifndef READCHAR_H</div><div class=\"line\">#define READCHAR_H</div><div class=\"line\">\tclass Read_Char:public Read&#123;</div><div class=\"line\">\tpublic:</div><div class=\"line\">\t\tRead_Char():Read()&#123;&#125;</div><div class=\"line\">\t\t~Read_Char()&#123;&#125;</div><div class=\"line\">\t\tvirtual void ReadWord();</div><div class=\"line\">\t&#125;;</div><div class=\"line\">#endif</div><div class=\"line\">\tvoid Read_Char::ReadWord()&#123;</div><div class=\"line\">\t\tstd::cout&amp;lt;&amp;lt; &quot;read a char&quot;&amp;lt;&amp;lt;std::endl;</div><div class=\"line\"></div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">#ifndef READCHINESE_H</div><div class=\"line\">#define READCHINESE_H</div><div class=\"line\">\tclass Read_Chinese:public Read&#123;</div><div class=\"line\">\tpublic:</div><div class=\"line\">\t\tRead_Chinese():Read()&#123;&#125;</div><div class=\"line\">\t\t~Read_Chinese()&#123;&#125;</div><div class=\"line\">\t\tvirtual void ReadWord();</div><div class=\"line\">\t&#125;;</div><div class=\"line\">#endif</div><div class=\"line\">\tvoid Read_Chinese::ReadWord()&#123;</div><div class=\"line\">\t\tstd::cout&amp;lt;&amp;lt;&quot;read a chinese word&quot;&amp;lt;&amp;lt;std::endl;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">#ifndef DECORATOR_H</div><div class=\"line\">#define DECORATOR_H</div><div class=\"line\">\tclass Decorator:public Read&#123;</div><div class=\"line\">\tprotected:</div><div class=\"line\">\t\tRead* r;</div><div class=\"line\">\tpublic:</div><div class=\"line\">\t\tDecorator():Read()&#123;r = NULL;&#125;</div><div class=\"line\">\t\tDecorator(Read* r):Read(),r(r)&#123;&#125;</div><div class=\"line\">\t\tvirtual ~Decorator()&#123;if(r!=NULL) delete r;&#125;</div><div class=\"line\">\t\tvirtual void ReadWord();</div><div class=\"line\">\t&#125;;</div><div class=\"line\">#endif</div><div class=\"line\">\tvoid Decorator::ReadWord()&#123;</div><div class=\"line\">\t\tif(NULL == r)</div><div class=\"line\">\t\t\tRead::ReadWord();</div><div class=\"line\">\t\telse</div><div class=\"line\">\t\t\tr-&amp;gt;ReadWord();</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">#ifndef READSENTENCE_H</div><div class=\"line\">#define READSENTENCE_H</div><div class=\"line\">\t// this class is real work decorator class</div><div class=\"line\">\tclass Read_Sentence:public Decorator&#123;</div><div class=\"line\"></div><div class=\"line\">\tpublic:</div><div class=\"line\">\t\tRead_Sentence():Decorator()&#123;&#125;</div><div class=\"line\">\t\tRead_Sentence(Read* r):Decorator(r)&#123;&#125;</div><div class=\"line\">\t\t~Read_Sentence()&#123;&#125;</div><div class=\"line\">\t\tvirtual void ReadWord();</div><div class=\"line\">\t&#125;;</div><div class=\"line\">#endif</div><div class=\"line\">\tvoid Read_Sentence::ReadWord()&#123;</div><div class=\"line\">\t\t/// parent class method is called first!</div><div class=\"line\">\t\tDecorator::ReadWord();</div><div class=\"line\">\t\t/// then your method be called</div><div class=\"line\">\t\tstd::cout&amp;lt;&amp;lt;&quot;read a sentence&quot;&amp;lt;&amp;lt;std::endl;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">int main()</div><div class=\"line\">&#123;</div><div class=\"line\">\tpattern::Read_Sentence rs1(new pattern::Read_Char());// read char</div><div class=\"line\">\tpattern::Read_Sentence rs2(new pattern::Read_Chinese());// read chinese</div><div class=\"line\">\tpattern::Read_Sentence rs3; // default read</div><div class=\"line\">\trs1.ReadWord();</div><div class=\"line\">\trs2.ReadWord();</div><div class=\"line\">\trs3.ReadWord();</div><div class=\"line\">\treturn 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n"},{"layout":"post","title":"design pattern--composite pattern","date":"2010-05-02T16:00:00.000Z","wordpress_id":196,"comments":1,"_content":"<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_description\" content=\"this pattern is composite pattern.in this pattern, it like a tree to call the leaves function.so there is an entry of high level (Graph), and each class has a function called \"Draw\" ,the composite class is \"Picture\".and the leaves are \"Line\" and \"Point\".\" />\n<meta name=\"_su_keywords\" content=\"code,design,pattern,composite\" />\n<meta name=\"_su_title\" content=\"design pattern composite pattern\" />\n<meta name=\"views\" content=\"532\" />\n\n{% codeblock %}// composite.cpp : Defines the entry point for the console application.\n//\n\n#include&lt;iostream&gt;\n#include&lt;string&gt;\n#include&lt;vector&gt;\n\nnamespace pattern{\n\t/// this pattern is composite pattern.\n\t/// in this pattern, it like a tree to call the leaves function.\n\t/// so there is an entry of high level (Graph), and each class has a function called \"Draw\" \n\t/// the composite class is \"Picture\".\n\t/// and the leaves are \"Line\" and \"Point\".\n\t/// This pattern is combine many objects together which have same functions \n\t/// and have level structures .\n\t/// And the composite class is like a manager.\n\t/// It has the same function also. \n\t/// Benefits of this pattern is : outer class will never know the composite relationship;\n\t/// outer class will deal the composite class only, not all of innerclass. and composite class\n\t/// and inner class have same functions or level structures.\n\t/// Do you think the composite class like a facade in facade pattern?\n#ifndef GRAPH_H\n#define GRAPH_H\n\n\tclass Graph{\n\tprotected:\n\t\tstd::string name;\n\n\tpublic:\n\t\tGraph(std::string name):name(name){std::cout&lt;&lt;\"graph \"&lt;&lt;name&lt;&lt;\" construct\"&lt;&lt;std::endl;}\n\n\t\tvirtual void Draw()=0;\n\t\tvirtual ~Graph(){std::cout&lt;&lt; \"graph \"&lt;&lt;name&lt;&lt; \" destroy\"&lt;&lt;std::endl;};\n\t};\n#endif\n\n#ifndef PICTURE_H\n#define PICTURE_H\n\tclass Picture:public Graph{\n\tprivate:\n\t\tstd::vector&lt;Graph*&gt; list;\n\tpublic:\n\t\tPicture(std::string name):Graph(name){std::cout&lt;&lt;\"Picture \"&lt;&lt;name&lt;&lt;\" construct!\"&lt;&lt;std::endl;}\n\t\tvirtual void Add(Graph*);\n\t\tvirtual void Remove(Graph*);\n\t\tvirtual void Draw();\n\t\t~Picture();\n\t};\n\n#endif\n\tPicture::~Picture(){\n\t\tlist.clear();\n\t\tstd::cout&lt;&lt;\"Picture destroy!\"&lt;&lt;std::endl;\n\t}\n\tvoid Picture::Add(pattern::Graph * g){\n\t\tlist.push_back(g);\n\t}\n\tvoid Picture::Remove(pattern::Graph *g){\n\t\tstd::vector&lt;Graph*&gt;::iterator i=list.begin();\n\t\twhile(i!=list.end()){\n\t\t\tif(g==*i){\n\t\t\t\tlist.erase(i);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\ti++;\n\t\t}\n\t}\n\tvoid Picture::Draw(){\n\t\tstd::vector&lt;Graph*&gt;::iterator i=list.begin();\n\t\twhile(i != list.end()){\n\t\t\t(*i)-&gt;Draw();\n\t\t\ti++;\n\t\t}\n\t}\n\n#ifndef SHAPE_H\n#define SHAPE_H\n\t/// Shape class is parent class of \"Line\" and \"Point\"\n\tclass Shape:public Graph{\n\tpublic:\n\t\tvirtual void Draw()=0;\n\t\tShape(std::string name):Graph(name){std::cout&lt;&lt;\"Shape construct!\"&lt;&lt;std::endl;}\n\t\tvirtual ~Shape(){std::cout&lt;&lt;\"Shape destroy!\"&lt;&lt;std::endl;}\n\n\t};\n\n#endif\n\n#ifndef POINT_H\n#define POINT_H\n\tclass Point:public Shape{\n\tpublic:\n\t\tPoint(std::string name):Shape(name){std::cout&lt;&lt;\"Point construct!\"&lt;&lt;std::endl;}\n\t\t~Point(){std::cout&lt;&lt;\"Point destroy!\"&lt;&lt;std::endl;}\n\t\tvirtual void Draw();\n\n\t};\n#endif\n\tvoid Point::Draw(){\n\t\tstd::cout&lt;&lt;\"Draw a point!\"&lt;&lt;std::endl;\n\t}\n\n#ifndef LINE_H\n#define LINE_H\n\tclass Line: public Shape{\n\tpublic:\n\t\tLine(std::string name):Shape(name){std::cout&lt;&lt;\"Line construct!\"&lt;&lt;std::endl;}\n\t\t~Line(){std::cout&lt;&lt;\"Line destroy!\"&lt;&lt;std::endl;}\n\t\tvirtual void Draw();\n\t};\n\n#endif\n\tvoid Line::Draw(){\n\t\tstd::cout&lt;&lt;\"Draw a line!\"&lt;&lt;std::endl;\n\t}\n}\n\nint main()\n{\n\tpattern::Line l (\"line\");\n\tpattern::Point p1 (\"point 1\");\n\tpattern::Point p2(\"point 2\");\n\tpattern::Picture pic(\"Picture\");\n\tpic.Add(&amp;l);\n\tpic.Add(&amp;p1);\n\tpic.Add(&amp;p2);\n\n\tpic.Draw();\n\t// if you want destroy some shape, remove them first.\n\tpic.Remove(&amp;p1);\n\tp1.~Point();\n\tpic.Draw();\n\treturn 0;\n}{% endcodeblock %}\n \n","source":"_posts/2010-05-03-design-pattern-composite-pattern.markdown","raw":"---\nlayout: post\ntitle: \"design pattern--composite pattern\"\ndate: 2010-5-3\nwordpress_id: 196\ncomments: true\ncategories: [\"cc\", \"code\", \"code\", \"composite\", \"design\", \"pattern\", \"software-architecture-code\"]\n---\n<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_description\" content=\"this pattern is composite pattern.in this pattern, it like a tree to call the leaves function.so there is an entry of high level (Graph), and each class has a function called \"Draw\" ,the composite class is \"Picture\".and the leaves are \"Line\" and \"Point\".\" />\n<meta name=\"_su_keywords\" content=\"code,design,pattern,composite\" />\n<meta name=\"_su_title\" content=\"design pattern composite pattern\" />\n<meta name=\"views\" content=\"532\" />\n\n{% codeblock %}// composite.cpp : Defines the entry point for the console application.\n//\n\n#include&lt;iostream&gt;\n#include&lt;string&gt;\n#include&lt;vector&gt;\n\nnamespace pattern{\n\t/// this pattern is composite pattern.\n\t/// in this pattern, it like a tree to call the leaves function.\n\t/// so there is an entry of high level (Graph), and each class has a function called \"Draw\" \n\t/// the composite class is \"Picture\".\n\t/// and the leaves are \"Line\" and \"Point\".\n\t/// This pattern is combine many objects together which have same functions \n\t/// and have level structures .\n\t/// And the composite class is like a manager.\n\t/// It has the same function also. \n\t/// Benefits of this pattern is : outer class will never know the composite relationship;\n\t/// outer class will deal the composite class only, not all of innerclass. and composite class\n\t/// and inner class have same functions or level structures.\n\t/// Do you think the composite class like a facade in facade pattern?\n#ifndef GRAPH_H\n#define GRAPH_H\n\n\tclass Graph{\n\tprotected:\n\t\tstd::string name;\n\n\tpublic:\n\t\tGraph(std::string name):name(name){std::cout&lt;&lt;\"graph \"&lt;&lt;name&lt;&lt;\" construct\"&lt;&lt;std::endl;}\n\n\t\tvirtual void Draw()=0;\n\t\tvirtual ~Graph(){std::cout&lt;&lt; \"graph \"&lt;&lt;name&lt;&lt; \" destroy\"&lt;&lt;std::endl;};\n\t};\n#endif\n\n#ifndef PICTURE_H\n#define PICTURE_H\n\tclass Picture:public Graph{\n\tprivate:\n\t\tstd::vector&lt;Graph*&gt; list;\n\tpublic:\n\t\tPicture(std::string name):Graph(name){std::cout&lt;&lt;\"Picture \"&lt;&lt;name&lt;&lt;\" construct!\"&lt;&lt;std::endl;}\n\t\tvirtual void Add(Graph*);\n\t\tvirtual void Remove(Graph*);\n\t\tvirtual void Draw();\n\t\t~Picture();\n\t};\n\n#endif\n\tPicture::~Picture(){\n\t\tlist.clear();\n\t\tstd::cout&lt;&lt;\"Picture destroy!\"&lt;&lt;std::endl;\n\t}\n\tvoid Picture::Add(pattern::Graph * g){\n\t\tlist.push_back(g);\n\t}\n\tvoid Picture::Remove(pattern::Graph *g){\n\t\tstd::vector&lt;Graph*&gt;::iterator i=list.begin();\n\t\twhile(i!=list.end()){\n\t\t\tif(g==*i){\n\t\t\t\tlist.erase(i);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\ti++;\n\t\t}\n\t}\n\tvoid Picture::Draw(){\n\t\tstd::vector&lt;Graph*&gt;::iterator i=list.begin();\n\t\twhile(i != list.end()){\n\t\t\t(*i)-&gt;Draw();\n\t\t\ti++;\n\t\t}\n\t}\n\n#ifndef SHAPE_H\n#define SHAPE_H\n\t/// Shape class is parent class of \"Line\" and \"Point\"\n\tclass Shape:public Graph{\n\tpublic:\n\t\tvirtual void Draw()=0;\n\t\tShape(std::string name):Graph(name){std::cout&lt;&lt;\"Shape construct!\"&lt;&lt;std::endl;}\n\t\tvirtual ~Shape(){std::cout&lt;&lt;\"Shape destroy!\"&lt;&lt;std::endl;}\n\n\t};\n\n#endif\n\n#ifndef POINT_H\n#define POINT_H\n\tclass Point:public Shape{\n\tpublic:\n\t\tPoint(std::string name):Shape(name){std::cout&lt;&lt;\"Point construct!\"&lt;&lt;std::endl;}\n\t\t~Point(){std::cout&lt;&lt;\"Point destroy!\"&lt;&lt;std::endl;}\n\t\tvirtual void Draw();\n\n\t};\n#endif\n\tvoid Point::Draw(){\n\t\tstd::cout&lt;&lt;\"Draw a point!\"&lt;&lt;std::endl;\n\t}\n\n#ifndef LINE_H\n#define LINE_H\n\tclass Line: public Shape{\n\tpublic:\n\t\tLine(std::string name):Shape(name){std::cout&lt;&lt;\"Line construct!\"&lt;&lt;std::endl;}\n\t\t~Line(){std::cout&lt;&lt;\"Line destroy!\"&lt;&lt;std::endl;}\n\t\tvirtual void Draw();\n\t};\n\n#endif\n\tvoid Line::Draw(){\n\t\tstd::cout&lt;&lt;\"Draw a line!\"&lt;&lt;std::endl;\n\t}\n}\n\nint main()\n{\n\tpattern::Line l (\"line\");\n\tpattern::Point p1 (\"point 1\");\n\tpattern::Point p2(\"point 2\");\n\tpattern::Picture pic(\"Picture\");\n\tpic.Add(&amp;l);\n\tpic.Add(&amp;p1);\n\tpic.Add(&amp;p2);\n\n\tpic.Draw();\n\t// if you want destroy some shape, remove them first.\n\tpic.Remove(&amp;p1);\n\tp1.~Point();\n\tpic.Draw();\n\treturn 0;\n}{% endcodeblock %}\n \n","slug":"2010-05-03-design-pattern-composite-pattern","published":1,"updated":"2017-06-05T03:01:00.000Z","photos":[],"link":"","_id":"cj3jjumcu00031emjdj45suoc","content":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_description\" content=\"this pattern is composite pattern.in this pattern, it like a tree to call the leaves function.so there is an entry of high level (Graph), and each class has a function called \" draw\"=\"\" ,the=\"\" composite=\"\" class=\"\" is=\"\" \"picture\".and=\"\" the=\"\" leaves=\"\" are=\"\" \"line\"=\"\" and=\"\" \"point\".\"=\"\"></p>\n<p><meta name=\"_su_keywords\" content=\"code,design,pattern,composite\"></p>\n<p><meta name=\"_su_title\" content=\"design pattern composite pattern\"></p>\n<meta name=\"views\" content=\"532\">\n\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div></pre></td><td class=\"code\"><pre><div class=\"line\">// composite.cpp : Defines the entry point for the console application.</div><div class=\"line\">//</div><div class=\"line\"></div><div class=\"line\">#include&amp;lt;iostream&amp;gt;</div><div class=\"line\">#include&amp;lt;string&amp;gt;</div><div class=\"line\">#include&amp;lt;vector&amp;gt;</div><div class=\"line\"></div><div class=\"line\">namespace pattern&#123;</div><div class=\"line\">\t/// this pattern is composite pattern.</div><div class=\"line\">\t/// in this pattern, it like a tree to call the leaves function.</div><div class=\"line\">\t/// so there is an entry of high level (Graph), and each class has a function called &quot;Draw&quot; </div><div class=\"line\">\t/// the composite class is &quot;Picture&quot;.</div><div class=\"line\">\t/// and the leaves are &quot;Line&quot; and &quot;Point&quot;.</div><div class=\"line\">\t/// This pattern is combine many objects together which have same functions </div><div class=\"line\">\t/// and have level structures .</div><div class=\"line\">\t/// And the composite class is like a manager.</div><div class=\"line\">\t/// It has the same function also. </div><div class=\"line\">\t/// Benefits of this pattern is : outer class will never know the composite relationship;</div><div class=\"line\">\t/// outer class will deal the composite class only, not all of innerclass. and composite class</div><div class=\"line\">\t/// and inner class have same functions or level structures.</div><div class=\"line\">\t/// Do you think the composite class like a facade in facade pattern?</div><div class=\"line\">#ifndef GRAPH_H</div><div class=\"line\">#define GRAPH_H</div><div class=\"line\"></div><div class=\"line\">\tclass Graph&#123;</div><div class=\"line\">\tprotected:</div><div class=\"line\">\t\tstd::string name;</div><div class=\"line\"></div><div class=\"line\">\tpublic:</div><div class=\"line\">\t\tGraph(std::string name):name(name)&#123;std::cout&amp;lt;&amp;lt;&quot;graph &quot;&amp;lt;&amp;lt;name&amp;lt;&amp;lt;&quot; construct&quot;&amp;lt;&amp;lt;std::endl;&#125;</div><div class=\"line\"></div><div class=\"line\">\t\tvirtual void Draw()=0;</div><div class=\"line\">\t\tvirtual ~Graph()&#123;std::cout&amp;lt;&amp;lt; &quot;graph &quot;&amp;lt;&amp;lt;name&amp;lt;&amp;lt; &quot; destroy&quot;&amp;lt;&amp;lt;std::endl;&#125;;</div><div class=\"line\">\t&#125;;</div><div class=\"line\">#endif</div><div class=\"line\"></div><div class=\"line\">#ifndef PICTURE_H</div><div class=\"line\">#define PICTURE_H</div><div class=\"line\">\tclass Picture:public Graph&#123;</div><div class=\"line\">\tprivate:</div><div class=\"line\">\t\tstd::vector&amp;lt;Graph*&amp;gt; list;</div><div class=\"line\">\tpublic:</div><div class=\"line\">\t\tPicture(std::string name):Graph(name)&#123;std::cout&amp;lt;&amp;lt;&quot;Picture &quot;&amp;lt;&amp;lt;name&amp;lt;&amp;lt;&quot; construct!&quot;&amp;lt;&amp;lt;std::endl;&#125;</div><div class=\"line\">\t\tvirtual void Add(Graph*);</div><div class=\"line\">\t\tvirtual void Remove(Graph*);</div><div class=\"line\">\t\tvirtual void Draw();</div><div class=\"line\">\t\t~Picture();</div><div class=\"line\">\t&#125;;</div><div class=\"line\"></div><div class=\"line\">#endif</div><div class=\"line\">\tPicture::~Picture()&#123;</div><div class=\"line\">\t\tlist.clear();</div><div class=\"line\">\t\tstd::cout&amp;lt;&amp;lt;&quot;Picture destroy!&quot;&amp;lt;&amp;lt;std::endl;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\tvoid Picture::Add(pattern::Graph * g)&#123;</div><div class=\"line\">\t\tlist.push_back(g);</div><div class=\"line\">\t&#125;</div><div class=\"line\">\tvoid Picture::Remove(pattern::Graph *g)&#123;</div><div class=\"line\">\t\tstd::vector&amp;lt;Graph*&amp;gt;::iterator i=list.begin();</div><div class=\"line\">\t\twhile(i!=list.end())&#123;</div><div class=\"line\">\t\t\tif(g==*i)&#123;</div><div class=\"line\">\t\t\t\tlist.erase(i);</div><div class=\"line\">\t\t\t\tbreak;</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\ti++;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\tvoid Picture::Draw()&#123;</div><div class=\"line\">\t\tstd::vector&amp;lt;Graph*&amp;gt;::iterator i=list.begin();</div><div class=\"line\">\t\twhile(i != list.end())&#123;</div><div class=\"line\">\t\t\t(*i)-&amp;gt;Draw();</div><div class=\"line\">\t\t\ti++;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">#ifndef SHAPE_H</div><div class=\"line\">#define SHAPE_H</div><div class=\"line\">\t/// Shape class is parent class of &quot;Line&quot; and &quot;Point&quot;</div><div class=\"line\">\tclass Shape:public Graph&#123;</div><div class=\"line\">\tpublic:</div><div class=\"line\">\t\tvirtual void Draw()=0;</div><div class=\"line\">\t\tShape(std::string name):Graph(name)&#123;std::cout&amp;lt;&amp;lt;&quot;Shape construct!&quot;&amp;lt;&amp;lt;std::endl;&#125;</div><div class=\"line\">\t\tvirtual ~Shape()&#123;std::cout&amp;lt;&amp;lt;&quot;Shape destroy!&quot;&amp;lt;&amp;lt;std::endl;&#125;</div><div class=\"line\"></div><div class=\"line\">\t&#125;;</div><div class=\"line\"></div><div class=\"line\">#endif</div><div class=\"line\"></div><div class=\"line\">#ifndef POINT_H</div><div class=\"line\">#define POINT_H</div><div class=\"line\">\tclass Point:public Shape&#123;</div><div class=\"line\">\tpublic:</div><div class=\"line\">\t\tPoint(std::string name):Shape(name)&#123;std::cout&amp;lt;&amp;lt;&quot;Point construct!&quot;&amp;lt;&amp;lt;std::endl;&#125;</div><div class=\"line\">\t\t~Point()&#123;std::cout&amp;lt;&amp;lt;&quot;Point destroy!&quot;&amp;lt;&amp;lt;std::endl;&#125;</div><div class=\"line\">\t\tvirtual void Draw();</div><div class=\"line\"></div><div class=\"line\">\t&#125;;</div><div class=\"line\">#endif</div><div class=\"line\">\tvoid Point::Draw()&#123;</div><div class=\"line\">\t\tstd::cout&amp;lt;&amp;lt;&quot;Draw a point!&quot;&amp;lt;&amp;lt;std::endl;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">#ifndef LINE_H</div><div class=\"line\">#define LINE_H</div><div class=\"line\">\tclass Line: public Shape&#123;</div><div class=\"line\">\tpublic:</div><div class=\"line\">\t\tLine(std::string name):Shape(name)&#123;std::cout&amp;lt;&amp;lt;&quot;Line construct!&quot;&amp;lt;&amp;lt;std::endl;&#125;</div><div class=\"line\">\t\t~Line()&#123;std::cout&amp;lt;&amp;lt;&quot;Line destroy!&quot;&amp;lt;&amp;lt;std::endl;&#125;</div><div class=\"line\">\t\tvirtual void Draw();</div><div class=\"line\">\t&#125;;</div><div class=\"line\"></div><div class=\"line\">#endif</div><div class=\"line\">\tvoid Line::Draw()&#123;</div><div class=\"line\">\t\tstd::cout&amp;lt;&amp;lt;&quot;Draw a line!&quot;&amp;lt;&amp;lt;std::endl;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">int main()</div><div class=\"line\">&#123;</div><div class=\"line\">\tpattern::Line l (&quot;line&quot;);</div><div class=\"line\">\tpattern::Point p1 (&quot;point 1&quot;);</div><div class=\"line\">\tpattern::Point p2(&quot;point 2&quot;);</div><div class=\"line\">\tpattern::Picture pic(&quot;Picture&quot;);</div><div class=\"line\">\tpic.Add(&amp;amp;l);</div><div class=\"line\">\tpic.Add(&amp;amp;p1);</div><div class=\"line\">\tpic.Add(&amp;amp;p2);</div><div class=\"line\"></div><div class=\"line\">\tpic.Draw();</div><div class=\"line\">\t// if you want destroy some shape, remove them first.</div><div class=\"line\">\tpic.Remove(&amp;amp;p1);</div><div class=\"line\">\tp1.~Point();</div><div class=\"line\">\tpic.Draw();</div><div class=\"line\">\treturn 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_description\" content=\"this pattern is composite pattern.in this pattern, it like a tree to call the leaves function.so there is an entry of high level (Graph), and each class has a function called \" draw\"=\"\" ,the=\"\" composite=\"\" class=\"\" is=\"\" \"picture\".and=\"\" the=\"\" leaves=\"\" are=\"\" \"line\"=\"\" and=\"\" \"point\".\"=\"\"></p>\n<p><meta name=\"_su_keywords\" content=\"code,design,pattern,composite\"></p>\n<p><meta name=\"_su_title\" content=\"design pattern composite pattern\"></p>\n<meta name=\"views\" content=\"532\">\n\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div></pre></td><td class=\"code\"><pre><div class=\"line\">// composite.cpp : Defines the entry point for the console application.</div><div class=\"line\">//</div><div class=\"line\"></div><div class=\"line\">#include&amp;lt;iostream&amp;gt;</div><div class=\"line\">#include&amp;lt;string&amp;gt;</div><div class=\"line\">#include&amp;lt;vector&amp;gt;</div><div class=\"line\"></div><div class=\"line\">namespace pattern&#123;</div><div class=\"line\">\t/// this pattern is composite pattern.</div><div class=\"line\">\t/// in this pattern, it like a tree to call the leaves function.</div><div class=\"line\">\t/// so there is an entry of high level (Graph), and each class has a function called &quot;Draw&quot; </div><div class=\"line\">\t/// the composite class is &quot;Picture&quot;.</div><div class=\"line\">\t/// and the leaves are &quot;Line&quot; and &quot;Point&quot;.</div><div class=\"line\">\t/// This pattern is combine many objects together which have same functions </div><div class=\"line\">\t/// and have level structures .</div><div class=\"line\">\t/// And the composite class is like a manager.</div><div class=\"line\">\t/// It has the same function also. </div><div class=\"line\">\t/// Benefits of this pattern is : outer class will never know the composite relationship;</div><div class=\"line\">\t/// outer class will deal the composite class only, not all of innerclass. and composite class</div><div class=\"line\">\t/// and inner class have same functions or level structures.</div><div class=\"line\">\t/// Do you think the composite class like a facade in facade pattern?</div><div class=\"line\">#ifndef GRAPH_H</div><div class=\"line\">#define GRAPH_H</div><div class=\"line\"></div><div class=\"line\">\tclass Graph&#123;</div><div class=\"line\">\tprotected:</div><div class=\"line\">\t\tstd::string name;</div><div class=\"line\"></div><div class=\"line\">\tpublic:</div><div class=\"line\">\t\tGraph(std::string name):name(name)&#123;std::cout&amp;lt;&amp;lt;&quot;graph &quot;&amp;lt;&amp;lt;name&amp;lt;&amp;lt;&quot; construct&quot;&amp;lt;&amp;lt;std::endl;&#125;</div><div class=\"line\"></div><div class=\"line\">\t\tvirtual void Draw()=0;</div><div class=\"line\">\t\tvirtual ~Graph()&#123;std::cout&amp;lt;&amp;lt; &quot;graph &quot;&amp;lt;&amp;lt;name&amp;lt;&amp;lt; &quot; destroy&quot;&amp;lt;&amp;lt;std::endl;&#125;;</div><div class=\"line\">\t&#125;;</div><div class=\"line\">#endif</div><div class=\"line\"></div><div class=\"line\">#ifndef PICTURE_H</div><div class=\"line\">#define PICTURE_H</div><div class=\"line\">\tclass Picture:public Graph&#123;</div><div class=\"line\">\tprivate:</div><div class=\"line\">\t\tstd::vector&amp;lt;Graph*&amp;gt; list;</div><div class=\"line\">\tpublic:</div><div class=\"line\">\t\tPicture(std::string name):Graph(name)&#123;std::cout&amp;lt;&amp;lt;&quot;Picture &quot;&amp;lt;&amp;lt;name&amp;lt;&amp;lt;&quot; construct!&quot;&amp;lt;&amp;lt;std::endl;&#125;</div><div class=\"line\">\t\tvirtual void Add(Graph*);</div><div class=\"line\">\t\tvirtual void Remove(Graph*);</div><div class=\"line\">\t\tvirtual void Draw();</div><div class=\"line\">\t\t~Picture();</div><div class=\"line\">\t&#125;;</div><div class=\"line\"></div><div class=\"line\">#endif</div><div class=\"line\">\tPicture::~Picture()&#123;</div><div class=\"line\">\t\tlist.clear();</div><div class=\"line\">\t\tstd::cout&amp;lt;&amp;lt;&quot;Picture destroy!&quot;&amp;lt;&amp;lt;std::endl;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\tvoid Picture::Add(pattern::Graph * g)&#123;</div><div class=\"line\">\t\tlist.push_back(g);</div><div class=\"line\">\t&#125;</div><div class=\"line\">\tvoid Picture::Remove(pattern::Graph *g)&#123;</div><div class=\"line\">\t\tstd::vector&amp;lt;Graph*&amp;gt;::iterator i=list.begin();</div><div class=\"line\">\t\twhile(i!=list.end())&#123;</div><div class=\"line\">\t\t\tif(g==*i)&#123;</div><div class=\"line\">\t\t\t\tlist.erase(i);</div><div class=\"line\">\t\t\t\tbreak;</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\ti++;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\tvoid Picture::Draw()&#123;</div><div class=\"line\">\t\tstd::vector&amp;lt;Graph*&amp;gt;::iterator i=list.begin();</div><div class=\"line\">\t\twhile(i != list.end())&#123;</div><div class=\"line\">\t\t\t(*i)-&amp;gt;Draw();</div><div class=\"line\">\t\t\ti++;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">#ifndef SHAPE_H</div><div class=\"line\">#define SHAPE_H</div><div class=\"line\">\t/// Shape class is parent class of &quot;Line&quot; and &quot;Point&quot;</div><div class=\"line\">\tclass Shape:public Graph&#123;</div><div class=\"line\">\tpublic:</div><div class=\"line\">\t\tvirtual void Draw()=0;</div><div class=\"line\">\t\tShape(std::string name):Graph(name)&#123;std::cout&amp;lt;&amp;lt;&quot;Shape construct!&quot;&amp;lt;&amp;lt;std::endl;&#125;</div><div class=\"line\">\t\tvirtual ~Shape()&#123;std::cout&amp;lt;&amp;lt;&quot;Shape destroy!&quot;&amp;lt;&amp;lt;std::endl;&#125;</div><div class=\"line\"></div><div class=\"line\">\t&#125;;</div><div class=\"line\"></div><div class=\"line\">#endif</div><div class=\"line\"></div><div class=\"line\">#ifndef POINT_H</div><div class=\"line\">#define POINT_H</div><div class=\"line\">\tclass Point:public Shape&#123;</div><div class=\"line\">\tpublic:</div><div class=\"line\">\t\tPoint(std::string name):Shape(name)&#123;std::cout&amp;lt;&amp;lt;&quot;Point construct!&quot;&amp;lt;&amp;lt;std::endl;&#125;</div><div class=\"line\">\t\t~Point()&#123;std::cout&amp;lt;&amp;lt;&quot;Point destroy!&quot;&amp;lt;&amp;lt;std::endl;&#125;</div><div class=\"line\">\t\tvirtual void Draw();</div><div class=\"line\"></div><div class=\"line\">\t&#125;;</div><div class=\"line\">#endif</div><div class=\"line\">\tvoid Point::Draw()&#123;</div><div class=\"line\">\t\tstd::cout&amp;lt;&amp;lt;&quot;Draw a point!&quot;&amp;lt;&amp;lt;std::endl;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">#ifndef LINE_H</div><div class=\"line\">#define LINE_H</div><div class=\"line\">\tclass Line: public Shape&#123;</div><div class=\"line\">\tpublic:</div><div class=\"line\">\t\tLine(std::string name):Shape(name)&#123;std::cout&amp;lt;&amp;lt;&quot;Line construct!&quot;&amp;lt;&amp;lt;std::endl;&#125;</div><div class=\"line\">\t\t~Line()&#123;std::cout&amp;lt;&amp;lt;&quot;Line destroy!&quot;&amp;lt;&amp;lt;std::endl;&#125;</div><div class=\"line\">\t\tvirtual void Draw();</div><div class=\"line\">\t&#125;;</div><div class=\"line\"></div><div class=\"line\">#endif</div><div class=\"line\">\tvoid Line::Draw()&#123;</div><div class=\"line\">\t\tstd::cout&amp;lt;&amp;lt;&quot;Draw a line!&quot;&amp;lt;&amp;lt;std::endl;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">int main()</div><div class=\"line\">&#123;</div><div class=\"line\">\tpattern::Line l (&quot;line&quot;);</div><div class=\"line\">\tpattern::Point p1 (&quot;point 1&quot;);</div><div class=\"line\">\tpattern::Point p2(&quot;point 2&quot;);</div><div class=\"line\">\tpattern::Picture pic(&quot;Picture&quot;);</div><div class=\"line\">\tpic.Add(&amp;amp;l);</div><div class=\"line\">\tpic.Add(&amp;amp;p1);</div><div class=\"line\">\tpic.Add(&amp;amp;p2);</div><div class=\"line\"></div><div class=\"line\">\tpic.Draw();</div><div class=\"line\">\t// if you want destroy some shape, remove them first.</div><div class=\"line\">\tpic.Remove(&amp;amp;p1);</div><div class=\"line\">\tp1.~Point();</div><div class=\"line\">\tpic.Draw();</div><div class=\"line\">\treturn 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n"},{"layout":"post","title":"design pattern -- facade pattern","date":"2010-05-02T16:00:00.000Z","wordpress_id":202,"comments":1,"_content":"<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_description\" content=\"software architecture\ndesign pattern of facade\" />\n<meta name=\"_su_keywords\" content=\"facade,pattern,code,design\" />\n<meta name=\"_su_title\" content=\"facade,pattern,code,design\" />\n<meta name=\"views\" content=\"417\" />\n\n{% codeblock %}// Facade.cpp : Defines the entry point for the console application.\n// author: chillyc\n// email: chillycreator @t gmail.com\n\n#include&lt;iostream&gt;\n\nnamespace pattern{\n\t/// this pattern is facade pattern\n\t/// facade pattern is for hiding relationship and behavior of inner classes .\n\t/// client or outer class should only connect with facade class.\n\t/// But it will not forbid accessing inner classes.\n#ifndef INNERA_H\n#define INNERA_H\n\tclass Inner_A{\n\tpublic:\n\t\tvoid Do(){std::cout&lt;&lt;\"A\"&lt;&lt;std::endl;}\n\t};\n#endif\n#ifndef INNERB_H\n#define INNERB_H\n\tclass Inner_B{\n\tpublic:\n\t\tvoid Do(){std::cout&lt;&lt;\"B\"&lt;&lt;std::endl;}\n\t};\n#endif\n\n#ifndef FACADE_H\n#define FACADE_H\n\tclass Facade{\n\tprivate:\n\t\tInner_A* a;\n\t\tInner_B* b;\n\tpublic:\n\t\tFacade(){\n\t\t\ta = new Inner_A();\n\t\t\tb = new Inner_B();\n\n\t\t}\n\t\tvoid Do(){\n\t\t\ta-&gt;Do();\n\t\t\tb-&gt;Do();\n\t\t}\n\t\t~Facade(){\n\t\t\tdelete a;\n\t\t\tdelete b;\n\t\t}\n\t};\n#endif\n}\n\nint main()\n{\n\tpattern::Facade f;\n\tf.Do();\n\treturn 0;\n}{% endcodeblock %}\n \n","source":"_posts/2010-05-03-design-pattern-facade-pattern.markdown","raw":"---\nlayout: post\ntitle: \"design pattern -- facade pattern\"\ndate: 2010-5-3\nwordpress_id: 202\ncomments: true\ncategories: [\"cc\", \"code\", \"code\", \"design\", \"facade\", \"pattern\", \"software-architecture-code\"]\n---\n<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_description\" content=\"software architecture\ndesign pattern of facade\" />\n<meta name=\"_su_keywords\" content=\"facade,pattern,code,design\" />\n<meta name=\"_su_title\" content=\"facade,pattern,code,design\" />\n<meta name=\"views\" content=\"417\" />\n\n{% codeblock %}// Facade.cpp : Defines the entry point for the console application.\n// author: chillyc\n// email: chillycreator @t gmail.com\n\n#include&lt;iostream&gt;\n\nnamespace pattern{\n\t/// this pattern is facade pattern\n\t/// facade pattern is for hiding relationship and behavior of inner classes .\n\t/// client or outer class should only connect with facade class.\n\t/// But it will not forbid accessing inner classes.\n#ifndef INNERA_H\n#define INNERA_H\n\tclass Inner_A{\n\tpublic:\n\t\tvoid Do(){std::cout&lt;&lt;\"A\"&lt;&lt;std::endl;}\n\t};\n#endif\n#ifndef INNERB_H\n#define INNERB_H\n\tclass Inner_B{\n\tpublic:\n\t\tvoid Do(){std::cout&lt;&lt;\"B\"&lt;&lt;std::endl;}\n\t};\n#endif\n\n#ifndef FACADE_H\n#define FACADE_H\n\tclass Facade{\n\tprivate:\n\t\tInner_A* a;\n\t\tInner_B* b;\n\tpublic:\n\t\tFacade(){\n\t\t\ta = new Inner_A();\n\t\t\tb = new Inner_B();\n\n\t\t}\n\t\tvoid Do(){\n\t\t\ta-&gt;Do();\n\t\t\tb-&gt;Do();\n\t\t}\n\t\t~Facade(){\n\t\t\tdelete a;\n\t\t\tdelete b;\n\t\t}\n\t};\n#endif\n}\n\nint main()\n{\n\tpattern::Facade f;\n\tf.Do();\n\treturn 0;\n}{% endcodeblock %}\n \n","slug":"2010-05-03-design-pattern-facade-pattern","published":1,"updated":"2017-06-05T03:01:00.000Z","photos":[],"link":"","_id":"cj3jjumcz00041emj0p1pimfu","content":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_description\" content=\"software architecture\ndesign pattern of facade\"></p>\n<p><meta name=\"_su_keywords\" content=\"facade,pattern,code,design\"></p>\n<p><meta name=\"_su_title\" content=\"facade,pattern,code,design\"></p>\n<meta name=\"views\" content=\"417\">\n\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div></pre></td><td class=\"code\"><pre><div class=\"line\">// Facade.cpp : Defines the entry point for the console application.</div><div class=\"line\">// author: chillyc</div><div class=\"line\">// email: chillycreator @t gmail.com</div><div class=\"line\"></div><div class=\"line\">#include&amp;lt;iostream&amp;gt;</div><div class=\"line\"></div><div class=\"line\">namespace pattern&#123;</div><div class=\"line\">\t/// this pattern is facade pattern</div><div class=\"line\">\t/// facade pattern is for hiding relationship and behavior of inner classes .</div><div class=\"line\">\t/// client or outer class should only connect with facade class.</div><div class=\"line\">\t/// But it will not forbid accessing inner classes.</div><div class=\"line\">#ifndef INNERA_H</div><div class=\"line\">#define INNERA_H</div><div class=\"line\">\tclass Inner_A&#123;</div><div class=\"line\">\tpublic:</div><div class=\"line\">\t\tvoid Do()&#123;std::cout&amp;lt;&amp;lt;&quot;A&quot;&amp;lt;&amp;lt;std::endl;&#125;</div><div class=\"line\">\t&#125;;</div><div class=\"line\">#endif</div><div class=\"line\">#ifndef INNERB_H</div><div class=\"line\">#define INNERB_H</div><div class=\"line\">\tclass Inner_B&#123;</div><div class=\"line\">\tpublic:</div><div class=\"line\">\t\tvoid Do()&#123;std::cout&amp;lt;&amp;lt;&quot;B&quot;&amp;lt;&amp;lt;std::endl;&#125;</div><div class=\"line\">\t&#125;;</div><div class=\"line\">#endif</div><div class=\"line\"></div><div class=\"line\">#ifndef FACADE_H</div><div class=\"line\">#define FACADE_H</div><div class=\"line\">\tclass Facade&#123;</div><div class=\"line\">\tprivate:</div><div class=\"line\">\t\tInner_A* a;</div><div class=\"line\">\t\tInner_B* b;</div><div class=\"line\">\tpublic:</div><div class=\"line\">\t\tFacade()&#123;</div><div class=\"line\">\t\t\ta = new Inner_A();</div><div class=\"line\">\t\t\tb = new Inner_B();</div><div class=\"line\"></div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\tvoid Do()&#123;</div><div class=\"line\">\t\t\ta-&amp;gt;Do();</div><div class=\"line\">\t\t\tb-&amp;gt;Do();</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t~Facade()&#123;</div><div class=\"line\">\t\t\tdelete a;</div><div class=\"line\">\t\t\tdelete b;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;;</div><div class=\"line\">#endif</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">int main()</div><div class=\"line\">&#123;</div><div class=\"line\">\tpattern::Facade f;</div><div class=\"line\">\tf.Do();</div><div class=\"line\">\treturn 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_description\" content=\"software architecture\ndesign pattern of facade\"></p>\n<p><meta name=\"_su_keywords\" content=\"facade,pattern,code,design\"></p>\n<p><meta name=\"_su_title\" content=\"facade,pattern,code,design\"></p>\n<meta name=\"views\" content=\"417\">\n\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div></pre></td><td class=\"code\"><pre><div class=\"line\">// Facade.cpp : Defines the entry point for the console application.</div><div class=\"line\">// author: chillyc</div><div class=\"line\">// email: chillycreator @t gmail.com</div><div class=\"line\"></div><div class=\"line\">#include&amp;lt;iostream&amp;gt;</div><div class=\"line\"></div><div class=\"line\">namespace pattern&#123;</div><div class=\"line\">\t/// this pattern is facade pattern</div><div class=\"line\">\t/// facade pattern is for hiding relationship and behavior of inner classes .</div><div class=\"line\">\t/// client or outer class should only connect with facade class.</div><div class=\"line\">\t/// But it will not forbid accessing inner classes.</div><div class=\"line\">#ifndef INNERA_H</div><div class=\"line\">#define INNERA_H</div><div class=\"line\">\tclass Inner_A&#123;</div><div class=\"line\">\tpublic:</div><div class=\"line\">\t\tvoid Do()&#123;std::cout&amp;lt;&amp;lt;&quot;A&quot;&amp;lt;&amp;lt;std::endl;&#125;</div><div class=\"line\">\t&#125;;</div><div class=\"line\">#endif</div><div class=\"line\">#ifndef INNERB_H</div><div class=\"line\">#define INNERB_H</div><div class=\"line\">\tclass Inner_B&#123;</div><div class=\"line\">\tpublic:</div><div class=\"line\">\t\tvoid Do()&#123;std::cout&amp;lt;&amp;lt;&quot;B&quot;&amp;lt;&amp;lt;std::endl;&#125;</div><div class=\"line\">\t&#125;;</div><div class=\"line\">#endif</div><div class=\"line\"></div><div class=\"line\">#ifndef FACADE_H</div><div class=\"line\">#define FACADE_H</div><div class=\"line\">\tclass Facade&#123;</div><div class=\"line\">\tprivate:</div><div class=\"line\">\t\tInner_A* a;</div><div class=\"line\">\t\tInner_B* b;</div><div class=\"line\">\tpublic:</div><div class=\"line\">\t\tFacade()&#123;</div><div class=\"line\">\t\t\ta = new Inner_A();</div><div class=\"line\">\t\t\tb = new Inner_B();</div><div class=\"line\"></div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\tvoid Do()&#123;</div><div class=\"line\">\t\t\ta-&amp;gt;Do();</div><div class=\"line\">\t\t\tb-&amp;gt;Do();</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t~Facade()&#123;</div><div class=\"line\">\t\t\tdelete a;</div><div class=\"line\">\t\t\tdelete b;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;;</div><div class=\"line\">#endif</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">int main()</div><div class=\"line\">&#123;</div><div class=\"line\">\tpattern::Facade f;</div><div class=\"line\">\tf.Do();</div><div class=\"line\">\treturn 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n"},{"layout":"post","title":"design pattern -- flyweight","date":"2010-05-04T16:00:00.000Z","wordpress_id":205,"comments":1,"_content":"<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_description\" content=\"software architecture\ndesign pattern \" />\n<meta name=\"_su_keywords\" content=\"design,pattern,flyweight,code\" />\n<meta name=\"_su_title\" content=\"flyweight,pattern,code,design\" />\n<meta name=\"views\" content=\"904\" />\n\n{% codeblock %}// flyweight.cpp : Defines the entry point for the console application.\n// author: chillyc\n// email: chillycreator @t gmail.com\n\n#include&lt;iostream&gt;\n#include&lt;map&gt;\nnamespace pattern{\n\n\t/// this is flyweight pattern \n\t/// In text processing, there will be thousands of hundreds of characters.\n\t/// If we construct too many this class instance, and \n\t/// imaging this class will have many member variables, will the system be efficient? \n\t/// So we just record the characters state, and not care about other part of character.\n\t/// we shall save a lot of main memories, shall we?\n\t/// If there are many characters, but  they are only in differnt place, we can reuse characters.\n\t/// So there are Fly_Manager to record the shared objects or states.\n\t/// All objects should be derived from Metadata class.\n\t/// Graphdata is no-shared metadata. And Character is shared metadata.\n\t/// In main function, you will see the difference between two of them.\n\n#ifndef STATE_H\n#define STATE_H\n\tclass State{\n\tprivate:\n\t\tint font_num;\n\t\tint style;\n\n\tpublic:\n\t\tvoid Set_Font_Num(int num){font_num = num;}\n\t\tvoid Set_Style(int style){this-&gt;style = style;}\n\t\tint Get_Font_Num(){return font_num;}\n\t\tint Get_Style(){return style;}\n\t\tState(){}\n\t\tState(int num,int style){\n\t\t\tfont_num = num; \n\t\t\tthis-&gt;style = style;\n\t\t}\n\t\tState(const State&amp; state){\n\t\t\tthis-&gt;font_num = state.font_num; \n\t\t\tthis-&gt;style = state.style;\n\t\t}\n\t\tState* operator = (const State&amp; state){\n\t\t\tthis-&gt;font_num = state.font_num; \n\t\t\tthis-&gt;style = state.style;\n\t\t\treturn this;\n\t\t}\n\t};\n\n#endif\n\n#ifndef METADATA_H\n#define METADATA_H\n\tclass Metadata{\n\tpublic:\n\t\tvirtual void show()=0;\n\t};\n#endif\n\n#ifndef character_H\n#define character_H\n\t// share the basic information\n\t// here you should image character has a huge infomation, \n\t// and state is only a small part of this class\n\tclass character: public Metadata{\n\tprivate:\n\t\tState state;\n\tpublic:\n\t\t// set state to default state\n\t\tcharacter():Metadata(),state(1,1){}\n\t\t~character(){}\n\t\tvoid Set_State(State&amp; state);\n\t\tvirtual void show();\n\n\t};\n\tvoid character::Set_State(pattern::State&amp; state){\n\t\tthis-&gt;state = state;\n\t}\n\n\tvoid character::show(){\n\t\tstd::cout &lt;&lt; \"write a character font is \"&lt;&lt; state.Get_Font_Num()&lt;&lt; \" style is \"\n\t\t\t&lt;&lt; state.Get_Style()&lt;&lt;std::endl; \n\t}\n#endif\n\n#ifndef GRAPHDATA_H\n#define GRAPHDATA_H\n\t// not share \n\tclass Graphdata: public Metadata{\n\tprivate:\n\t\tState state;\n\tpublic:\n\t\tGraphdata(State &amp; state):Metadata(),state(state){}\n\t\t// font num is not used\n\t\tGraphdata(int style):Metadata(),state(-1,style){}\n\t\t~Graphdata(){};\n\t\tvirtual void show();\n\t};\n\n#endif\n\tvoid Graphdata::show(){\n\t\t// only use its own state\n\t\tstd::cout&lt;&lt; \"print a graph! style is \"&lt;&lt;state.Get_Style()&lt;&lt;std::endl;\n\t}\n\n#ifndef FLYMANAGER_H\n#define FLYMANAGER_H\n\tclass Fly_Manager{\n\tpublic:\n\t\t// suggest you should make it as private or protected\n\t\tstd::map&lt;int,State&gt; characters;\n\t\tFly_Manager(){}\n\t\tvoid Set_I(int i, State&amp; state);\n\t\tState&amp; Get_I(int i);\n\t\t~Fly_Manager(){}\n\n\t};\n#endif\n\tvoid Fly_Manager::Set_I(int i, State&amp; state){\n\t\tcharacters[i] = state;\n\t}\n\tState&amp; Fly_Manager::Get_I(int i){\n\t\treturn characters[i];\n\t}\n\n}\nint main()\n{\n\tpattern::Fly_Manager fm;\n\tpattern::character c;\n\tpattern::State s1(1,2);\n\tpattern::State s2(2,3);\n\tpattern::State s3(3,4);\n\tfm.Set_I(0,s1);\n\tfm.Set_I(1,s2);\n\tfm.Set_I(2,s3);\n\tpattern::Graphdata gd1(2);\n\tpattern::Graphdata gd2(9);\n\tfor(int i = 0; i &lt; 3; i++){\n\t\tc.Set_State(fm.Get_I(i));\n\t\tc.show();\n\t}\n\tgd1.show();\n\tgd2.show();\n\treturn 0;\n}{% endcodeblock %}\n \n","source":"_posts/2010-05-05-design-pattern-flyweight.markdown","raw":"---\nlayout: post\ntitle: \"design pattern -- flyweight\"\ndate: 2010-5-5\nwordpress_id: 205\ncomments: true\ncategories: [\"cc\", \"code\", \"code\", \"design\", \"flyweight\", \"pattern\", \"software-architecture-code\"]\n---\n<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_description\" content=\"software architecture\ndesign pattern \" />\n<meta name=\"_su_keywords\" content=\"design,pattern,flyweight,code\" />\n<meta name=\"_su_title\" content=\"flyweight,pattern,code,design\" />\n<meta name=\"views\" content=\"904\" />\n\n{% codeblock %}// flyweight.cpp : Defines the entry point for the console application.\n// author: chillyc\n// email: chillycreator @t gmail.com\n\n#include&lt;iostream&gt;\n#include&lt;map&gt;\nnamespace pattern{\n\n\t/// this is flyweight pattern \n\t/// In text processing, there will be thousands of hundreds of characters.\n\t/// If we construct too many this class instance, and \n\t/// imaging this class will have many member variables, will the system be efficient? \n\t/// So we just record the characters state, and not care about other part of character.\n\t/// we shall save a lot of main memories, shall we?\n\t/// If there are many characters, but  they are only in differnt place, we can reuse characters.\n\t/// So there are Fly_Manager to record the shared objects or states.\n\t/// All objects should be derived from Metadata class.\n\t/// Graphdata is no-shared metadata. And Character is shared metadata.\n\t/// In main function, you will see the difference between two of them.\n\n#ifndef STATE_H\n#define STATE_H\n\tclass State{\n\tprivate:\n\t\tint font_num;\n\t\tint style;\n\n\tpublic:\n\t\tvoid Set_Font_Num(int num){font_num = num;}\n\t\tvoid Set_Style(int style){this-&gt;style = style;}\n\t\tint Get_Font_Num(){return font_num;}\n\t\tint Get_Style(){return style;}\n\t\tState(){}\n\t\tState(int num,int style){\n\t\t\tfont_num = num; \n\t\t\tthis-&gt;style = style;\n\t\t}\n\t\tState(const State&amp; state){\n\t\t\tthis-&gt;font_num = state.font_num; \n\t\t\tthis-&gt;style = state.style;\n\t\t}\n\t\tState* operator = (const State&amp; state){\n\t\t\tthis-&gt;font_num = state.font_num; \n\t\t\tthis-&gt;style = state.style;\n\t\t\treturn this;\n\t\t}\n\t};\n\n#endif\n\n#ifndef METADATA_H\n#define METADATA_H\n\tclass Metadata{\n\tpublic:\n\t\tvirtual void show()=0;\n\t};\n#endif\n\n#ifndef character_H\n#define character_H\n\t// share the basic information\n\t// here you should image character has a huge infomation, \n\t// and state is only a small part of this class\n\tclass character: public Metadata{\n\tprivate:\n\t\tState state;\n\tpublic:\n\t\t// set state to default state\n\t\tcharacter():Metadata(),state(1,1){}\n\t\t~character(){}\n\t\tvoid Set_State(State&amp; state);\n\t\tvirtual void show();\n\n\t};\n\tvoid character::Set_State(pattern::State&amp; state){\n\t\tthis-&gt;state = state;\n\t}\n\n\tvoid character::show(){\n\t\tstd::cout &lt;&lt; \"write a character font is \"&lt;&lt; state.Get_Font_Num()&lt;&lt; \" style is \"\n\t\t\t&lt;&lt; state.Get_Style()&lt;&lt;std::endl; \n\t}\n#endif\n\n#ifndef GRAPHDATA_H\n#define GRAPHDATA_H\n\t// not share \n\tclass Graphdata: public Metadata{\n\tprivate:\n\t\tState state;\n\tpublic:\n\t\tGraphdata(State &amp; state):Metadata(),state(state){}\n\t\t// font num is not used\n\t\tGraphdata(int style):Metadata(),state(-1,style){}\n\t\t~Graphdata(){};\n\t\tvirtual void show();\n\t};\n\n#endif\n\tvoid Graphdata::show(){\n\t\t// only use its own state\n\t\tstd::cout&lt;&lt; \"print a graph! style is \"&lt;&lt;state.Get_Style()&lt;&lt;std::endl;\n\t}\n\n#ifndef FLYMANAGER_H\n#define FLYMANAGER_H\n\tclass Fly_Manager{\n\tpublic:\n\t\t// suggest you should make it as private or protected\n\t\tstd::map&lt;int,State&gt; characters;\n\t\tFly_Manager(){}\n\t\tvoid Set_I(int i, State&amp; state);\n\t\tState&amp; Get_I(int i);\n\t\t~Fly_Manager(){}\n\n\t};\n#endif\n\tvoid Fly_Manager::Set_I(int i, State&amp; state){\n\t\tcharacters[i] = state;\n\t}\n\tState&amp; Fly_Manager::Get_I(int i){\n\t\treturn characters[i];\n\t}\n\n}\nint main()\n{\n\tpattern::Fly_Manager fm;\n\tpattern::character c;\n\tpattern::State s1(1,2);\n\tpattern::State s2(2,3);\n\tpattern::State s3(3,4);\n\tfm.Set_I(0,s1);\n\tfm.Set_I(1,s2);\n\tfm.Set_I(2,s3);\n\tpattern::Graphdata gd1(2);\n\tpattern::Graphdata gd2(9);\n\tfor(int i = 0; i &lt; 3; i++){\n\t\tc.Set_State(fm.Get_I(i));\n\t\tc.show();\n\t}\n\tgd1.show();\n\tgd2.show();\n\treturn 0;\n}{% endcodeblock %}\n \n","slug":"2010-05-05-design-pattern-flyweight","published":1,"updated":"2017-06-05T03:01:00.000Z","photos":[],"link":"","_id":"cj3jjumd400061emjhc1goiow","content":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_description\" content=\"software architecture\ndesign pattern \"></p>\n<p><meta name=\"_su_keywords\" content=\"design,pattern,flyweight,code\"></p>\n<p><meta name=\"_su_title\" content=\"flyweight,pattern,code,design\"></p>\n<meta name=\"views\" content=\"904\">\n\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div><div class=\"line\">145</div></pre></td><td class=\"code\"><pre><div class=\"line\">// flyweight.cpp : Defines the entry point for the console application.</div><div class=\"line\">// author: chillyc</div><div class=\"line\">// email: chillycreator @t gmail.com</div><div class=\"line\"></div><div class=\"line\">#include&amp;lt;iostream&amp;gt;</div><div class=\"line\">#include&amp;lt;map&amp;gt;</div><div class=\"line\">namespace pattern&#123;</div><div class=\"line\"></div><div class=\"line\">\t/// this is flyweight pattern </div><div class=\"line\">\t/// In text processing, there will be thousands of hundreds of characters.</div><div class=\"line\">\t/// If we construct too many this class instance, and </div><div class=\"line\">\t/// imaging this class will have many member variables, will the system be efficient? </div><div class=\"line\">\t/// So we just record the characters state, and not care about other part of character.</div><div class=\"line\">\t/// we shall save a lot of main memories, shall we?</div><div class=\"line\">\t/// If there are many characters, but  they are only in differnt place, we can reuse characters.</div><div class=\"line\">\t/// So there are Fly_Manager to record the shared objects or states.</div><div class=\"line\">\t/// All objects should be derived from Metadata class.</div><div class=\"line\">\t/// Graphdata is no-shared metadata. And Character is shared metadata.</div><div class=\"line\">\t/// In main function, you will see the difference between two of them.</div><div class=\"line\"></div><div class=\"line\">#ifndef STATE_H</div><div class=\"line\">#define STATE_H</div><div class=\"line\">\tclass State&#123;</div><div class=\"line\">\tprivate:</div><div class=\"line\">\t\tint font_num;</div><div class=\"line\">\t\tint style;</div><div class=\"line\"></div><div class=\"line\">\tpublic:</div><div class=\"line\">\t\tvoid Set_Font_Num(int num)&#123;font_num = num;&#125;</div><div class=\"line\">\t\tvoid Set_Style(int style)&#123;this-&amp;gt;style = style;&#125;</div><div class=\"line\">\t\tint Get_Font_Num()&#123;return font_num;&#125;</div><div class=\"line\">\t\tint Get_Style()&#123;return style;&#125;</div><div class=\"line\">\t\tState()&#123;&#125;</div><div class=\"line\">\t\tState(int num,int style)&#123;</div><div class=\"line\">\t\t\tfont_num = num; </div><div class=\"line\">\t\t\tthis-&amp;gt;style = style;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\tState(const State&amp;amp; state)&#123;</div><div class=\"line\">\t\t\tthis-&amp;gt;font_num = state.font_num; </div><div class=\"line\">\t\t\tthis-&amp;gt;style = state.style;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\tState* operator = (const State&amp;amp; state)&#123;</div><div class=\"line\">\t\t\tthis-&amp;gt;font_num = state.font_num; </div><div class=\"line\">\t\t\tthis-&amp;gt;style = state.style;</div><div class=\"line\">\t\t\treturn this;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;;</div><div class=\"line\"></div><div class=\"line\">#endif</div><div class=\"line\"></div><div class=\"line\">#ifndef METADATA_H</div><div class=\"line\">#define METADATA_H</div><div class=\"line\">\tclass Metadata&#123;</div><div class=\"line\">\tpublic:</div><div class=\"line\">\t\tvirtual void show()=0;</div><div class=\"line\">\t&#125;;</div><div class=\"line\">#endif</div><div class=\"line\"></div><div class=\"line\">#ifndef character_H</div><div class=\"line\">#define character_H</div><div class=\"line\">\t// share the basic information</div><div class=\"line\">\t// here you should image character has a huge infomation, </div><div class=\"line\">\t// and state is only a small part of this class</div><div class=\"line\">\tclass character: public Metadata&#123;</div><div class=\"line\">\tprivate:</div><div class=\"line\">\t\tState state;</div><div class=\"line\">\tpublic:</div><div class=\"line\">\t\t// set state to default state</div><div class=\"line\">\t\tcharacter():Metadata(),state(1,1)&#123;&#125;</div><div class=\"line\">\t\t~character()&#123;&#125;</div><div class=\"line\">\t\tvoid Set_State(State&amp;amp; state);</div><div class=\"line\">\t\tvirtual void show();</div><div class=\"line\"></div><div class=\"line\">\t&#125;;</div><div class=\"line\">\tvoid character::Set_State(pattern::State&amp;amp; state)&#123;</div><div class=\"line\">\t\tthis-&amp;gt;state = state;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\tvoid character::show()&#123;</div><div class=\"line\">\t\tstd::cout &amp;lt;&amp;lt; &quot;write a character font is &quot;&amp;lt;&amp;lt; state.Get_Font_Num()&amp;lt;&amp;lt; &quot; style is &quot;</div><div class=\"line\">\t\t\t&amp;lt;&amp;lt; state.Get_Style()&amp;lt;&amp;lt;std::endl; </div><div class=\"line\">\t&#125;</div><div class=\"line\">#endif</div><div class=\"line\"></div><div class=\"line\">#ifndef GRAPHDATA_H</div><div class=\"line\">#define GRAPHDATA_H</div><div class=\"line\">\t// not share </div><div class=\"line\">\tclass Graphdata: public Metadata&#123;</div><div class=\"line\">\tprivate:</div><div class=\"line\">\t\tState state;</div><div class=\"line\">\tpublic:</div><div class=\"line\">\t\tGraphdata(State &amp;amp; state):Metadata(),state(state)&#123;&#125;</div><div class=\"line\">\t\t// font num is not used</div><div class=\"line\">\t\tGraphdata(int style):Metadata(),state(-1,style)&#123;&#125;</div><div class=\"line\">\t\t~Graphdata()&#123;&#125;;</div><div class=\"line\">\t\tvirtual void show();</div><div class=\"line\">\t&#125;;</div><div class=\"line\"></div><div class=\"line\">#endif</div><div class=\"line\">\tvoid Graphdata::show()&#123;</div><div class=\"line\">\t\t// only use its own state</div><div class=\"line\">\t\tstd::cout&amp;lt;&amp;lt; &quot;print a graph! style is &quot;&amp;lt;&amp;lt;state.Get_Style()&amp;lt;&amp;lt;std::endl;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">#ifndef FLYMANAGER_H</div><div class=\"line\">#define FLYMANAGER_H</div><div class=\"line\">\tclass Fly_Manager&#123;</div><div class=\"line\">\tpublic:</div><div class=\"line\">\t\t// suggest you should make it as private or protected</div><div class=\"line\">\t\tstd::map&amp;lt;int,State&amp;gt; characters;</div><div class=\"line\">\t\tFly_Manager()&#123;&#125;</div><div class=\"line\">\t\tvoid Set_I(int i, State&amp;amp; state);</div><div class=\"line\">\t\tState&amp;amp; Get_I(int i);</div><div class=\"line\">\t\t~Fly_Manager()&#123;&#125;</div><div class=\"line\"></div><div class=\"line\">\t&#125;;</div><div class=\"line\">#endif</div><div class=\"line\">\tvoid Fly_Manager::Set_I(int i, State&amp;amp; state)&#123;</div><div class=\"line\">\t\tcharacters[i] = state;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\tState&amp;amp; Fly_Manager::Get_I(int i)&#123;</div><div class=\"line\">\t\treturn characters[i];</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div><div class=\"line\">int main()</div><div class=\"line\">&#123;</div><div class=\"line\">\tpattern::Fly_Manager fm;</div><div class=\"line\">\tpattern::character c;</div><div class=\"line\">\tpattern::State s1(1,2);</div><div class=\"line\">\tpattern::State s2(2,3);</div><div class=\"line\">\tpattern::State s3(3,4);</div><div class=\"line\">\tfm.Set_I(0,s1);</div><div class=\"line\">\tfm.Set_I(1,s2);</div><div class=\"line\">\tfm.Set_I(2,s3);</div><div class=\"line\">\tpattern::Graphdata gd1(2);</div><div class=\"line\">\tpattern::Graphdata gd2(9);</div><div class=\"line\">\tfor(int i = 0; i &amp;lt; 3; i++)&#123;</div><div class=\"line\">\t\tc.Set_State(fm.Get_I(i));</div><div class=\"line\">\t\tc.show();</div><div class=\"line\">\t&#125;</div><div class=\"line\">\tgd1.show();</div><div class=\"line\">\tgd2.show();</div><div class=\"line\">\treturn 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_description\" content=\"software architecture\ndesign pattern \"></p>\n<p><meta name=\"_su_keywords\" content=\"design,pattern,flyweight,code\"></p>\n<p><meta name=\"_su_title\" content=\"flyweight,pattern,code,design\"></p>\n<meta name=\"views\" content=\"904\">\n\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div><div class=\"line\">145</div></pre></td><td class=\"code\"><pre><div class=\"line\">// flyweight.cpp : Defines the entry point for the console application.</div><div class=\"line\">// author: chillyc</div><div class=\"line\">// email: chillycreator @t gmail.com</div><div class=\"line\"></div><div class=\"line\">#include&amp;lt;iostream&amp;gt;</div><div class=\"line\">#include&amp;lt;map&amp;gt;</div><div class=\"line\">namespace pattern&#123;</div><div class=\"line\"></div><div class=\"line\">\t/// this is flyweight pattern </div><div class=\"line\">\t/// In text processing, there will be thousands of hundreds of characters.</div><div class=\"line\">\t/// If we construct too many this class instance, and </div><div class=\"line\">\t/// imaging this class will have many member variables, will the system be efficient? </div><div class=\"line\">\t/// So we just record the characters state, and not care about other part of character.</div><div class=\"line\">\t/// we shall save a lot of main memories, shall we?</div><div class=\"line\">\t/// If there are many characters, but  they are only in differnt place, we can reuse characters.</div><div class=\"line\">\t/// So there are Fly_Manager to record the shared objects or states.</div><div class=\"line\">\t/// All objects should be derived from Metadata class.</div><div class=\"line\">\t/// Graphdata is no-shared metadata. And Character is shared metadata.</div><div class=\"line\">\t/// In main function, you will see the difference between two of them.</div><div class=\"line\"></div><div class=\"line\">#ifndef STATE_H</div><div class=\"line\">#define STATE_H</div><div class=\"line\">\tclass State&#123;</div><div class=\"line\">\tprivate:</div><div class=\"line\">\t\tint font_num;</div><div class=\"line\">\t\tint style;</div><div class=\"line\"></div><div class=\"line\">\tpublic:</div><div class=\"line\">\t\tvoid Set_Font_Num(int num)&#123;font_num = num;&#125;</div><div class=\"line\">\t\tvoid Set_Style(int style)&#123;this-&amp;gt;style = style;&#125;</div><div class=\"line\">\t\tint Get_Font_Num()&#123;return font_num;&#125;</div><div class=\"line\">\t\tint Get_Style()&#123;return style;&#125;</div><div class=\"line\">\t\tState()&#123;&#125;</div><div class=\"line\">\t\tState(int num,int style)&#123;</div><div class=\"line\">\t\t\tfont_num = num; </div><div class=\"line\">\t\t\tthis-&amp;gt;style = style;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\tState(const State&amp;amp; state)&#123;</div><div class=\"line\">\t\t\tthis-&amp;gt;font_num = state.font_num; </div><div class=\"line\">\t\t\tthis-&amp;gt;style = state.style;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\tState* operator = (const State&amp;amp; state)&#123;</div><div class=\"line\">\t\t\tthis-&amp;gt;font_num = state.font_num; </div><div class=\"line\">\t\t\tthis-&amp;gt;style = state.style;</div><div class=\"line\">\t\t\treturn this;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;;</div><div class=\"line\"></div><div class=\"line\">#endif</div><div class=\"line\"></div><div class=\"line\">#ifndef METADATA_H</div><div class=\"line\">#define METADATA_H</div><div class=\"line\">\tclass Metadata&#123;</div><div class=\"line\">\tpublic:</div><div class=\"line\">\t\tvirtual void show()=0;</div><div class=\"line\">\t&#125;;</div><div class=\"line\">#endif</div><div class=\"line\"></div><div class=\"line\">#ifndef character_H</div><div class=\"line\">#define character_H</div><div class=\"line\">\t// share the basic information</div><div class=\"line\">\t// here you should image character has a huge infomation, </div><div class=\"line\">\t// and state is only a small part of this class</div><div class=\"line\">\tclass character: public Metadata&#123;</div><div class=\"line\">\tprivate:</div><div class=\"line\">\t\tState state;</div><div class=\"line\">\tpublic:</div><div class=\"line\">\t\t// set state to default state</div><div class=\"line\">\t\tcharacter():Metadata(),state(1,1)&#123;&#125;</div><div class=\"line\">\t\t~character()&#123;&#125;</div><div class=\"line\">\t\tvoid Set_State(State&amp;amp; state);</div><div class=\"line\">\t\tvirtual void show();</div><div class=\"line\"></div><div class=\"line\">\t&#125;;</div><div class=\"line\">\tvoid character::Set_State(pattern::State&amp;amp; state)&#123;</div><div class=\"line\">\t\tthis-&amp;gt;state = state;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\tvoid character::show()&#123;</div><div class=\"line\">\t\tstd::cout &amp;lt;&amp;lt; &quot;write a character font is &quot;&amp;lt;&amp;lt; state.Get_Font_Num()&amp;lt;&amp;lt; &quot; style is &quot;</div><div class=\"line\">\t\t\t&amp;lt;&amp;lt; state.Get_Style()&amp;lt;&amp;lt;std::endl; </div><div class=\"line\">\t&#125;</div><div class=\"line\">#endif</div><div class=\"line\"></div><div class=\"line\">#ifndef GRAPHDATA_H</div><div class=\"line\">#define GRAPHDATA_H</div><div class=\"line\">\t// not share </div><div class=\"line\">\tclass Graphdata: public Metadata&#123;</div><div class=\"line\">\tprivate:</div><div class=\"line\">\t\tState state;</div><div class=\"line\">\tpublic:</div><div class=\"line\">\t\tGraphdata(State &amp;amp; state):Metadata(),state(state)&#123;&#125;</div><div class=\"line\">\t\t// font num is not used</div><div class=\"line\">\t\tGraphdata(int style):Metadata(),state(-1,style)&#123;&#125;</div><div class=\"line\">\t\t~Graphdata()&#123;&#125;;</div><div class=\"line\">\t\tvirtual void show();</div><div class=\"line\">\t&#125;;</div><div class=\"line\"></div><div class=\"line\">#endif</div><div class=\"line\">\tvoid Graphdata::show()&#123;</div><div class=\"line\">\t\t// only use its own state</div><div class=\"line\">\t\tstd::cout&amp;lt;&amp;lt; &quot;print a graph! style is &quot;&amp;lt;&amp;lt;state.Get_Style()&amp;lt;&amp;lt;std::endl;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">#ifndef FLYMANAGER_H</div><div class=\"line\">#define FLYMANAGER_H</div><div class=\"line\">\tclass Fly_Manager&#123;</div><div class=\"line\">\tpublic:</div><div class=\"line\">\t\t// suggest you should make it as private or protected</div><div class=\"line\">\t\tstd::map&amp;lt;int,State&amp;gt; characters;</div><div class=\"line\">\t\tFly_Manager()&#123;&#125;</div><div class=\"line\">\t\tvoid Set_I(int i, State&amp;amp; state);</div><div class=\"line\">\t\tState&amp;amp; Get_I(int i);</div><div class=\"line\">\t\t~Fly_Manager()&#123;&#125;</div><div class=\"line\"></div><div class=\"line\">\t&#125;;</div><div class=\"line\">#endif</div><div class=\"line\">\tvoid Fly_Manager::Set_I(int i, State&amp;amp; state)&#123;</div><div class=\"line\">\t\tcharacters[i] = state;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\tState&amp;amp; Fly_Manager::Get_I(int i)&#123;</div><div class=\"line\">\t\treturn characters[i];</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div><div class=\"line\">int main()</div><div class=\"line\">&#123;</div><div class=\"line\">\tpattern::Fly_Manager fm;</div><div class=\"line\">\tpattern::character c;</div><div class=\"line\">\tpattern::State s1(1,2);</div><div class=\"line\">\tpattern::State s2(2,3);</div><div class=\"line\">\tpattern::State s3(3,4);</div><div class=\"line\">\tfm.Set_I(0,s1);</div><div class=\"line\">\tfm.Set_I(1,s2);</div><div class=\"line\">\tfm.Set_I(2,s3);</div><div class=\"line\">\tpattern::Graphdata gd1(2);</div><div class=\"line\">\tpattern::Graphdata gd2(9);</div><div class=\"line\">\tfor(int i = 0; i &amp;lt; 3; i++)&#123;</div><div class=\"line\">\t\tc.Set_State(fm.Get_I(i));</div><div class=\"line\">\t\tc.show();</div><div class=\"line\">\t&#125;</div><div class=\"line\">\tgd1.show();</div><div class=\"line\">\tgd2.show();</div><div class=\"line\">\treturn 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n"},{"layout":"post","title":"how to debug PostgreSQL","date":"2010-05-09T16:00:00.000Z","wordpress_id":208,"comments":1,"_content":"<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_description\" content=\"postgresql debug\" />\n<meta name=\"_su_keywords\" content=\"postgresql debug\" />\n<meta name=\"_su_title\" content=\"postgresql debug\" />\n<meta name=\"views\" content=\"1123\" />\nFirst, compile the source code use ./configure --prefix=XXXX --enable-debug &amp;&amp; CFLAGS=-O0\n\nthen make and make install.\n<h2><span style=\"color: #800000;\">IF you want to RESTART PG</span></h2>\nDetected if there is an instance of Postgre server. If there is, kill it. use\n\n\n{% codeblock %}ps -e | grep postgre\n// find id of the process\nkill -9 $processid{% endcodeblock %}\n\n\nto detect the pocess of postgresql and kill it.\n\nthen use:\n\n\n{% codeblock %}gdb postgresqlHomeDIR/bin/postgres -quiet\n// enter gdb then use\nset args -D DATADIR\nrun{% endcodeblock %}\n\n\nhere DATADIR and postgresqlDIR are your own directory.\n<h2><span style=\"color: #800000;\">IF you don't want to RESTART PG</span></h2>\n\n{% codeblock %}// find postgres pid\npid = `ps auxww | \\\n    grep postgres: | \\\n    grep -v -e 'grep postgres:' -e 'postgres: stats' -e 'postgres: writer' -e 'postgres: archiver' -e 'postgres: logger' -e 'postgres: autovacuum' | \\\n    tee /dev/tty | \\\n    awk '{print $2}'`\ngdb pid{% endcodeblock %}\n\n\nthen use\n\n\n{% codeblock %}./psql test{% endcodeblock %}\n\n\nto test. Here test is  your database name.\n\nIF you want to debug contrib\n\nmake &amp;&amp; make install in contrib/yourdir\n\nthen go to gdb to file your shard lib to load symbol. Here XXX.so is your contrib share lib.\n\n\n{% codeblock %}(gdb) file XXX.so{% endcodeblock %}\n\n\nif not, when you use break somefunction, it will report:\n\nNo symbol table is loaded.  Use the \"file\" command.\nMake breakpoint pending on future shared library load? (y or [n])\n","source":"_posts/2010-05-10-debug-postgresql.markdown","raw":"---\nlayout: post\ntitle: \"how to debug PostgreSQL\"\ndate: 2010-5-10\nwordpress_id: 208\ncomments: true\ncategories: [\"code\", \"debug\", \"postgresql\", \"postgresql\", \"symbol\"]\n---\n<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_description\" content=\"postgresql debug\" />\n<meta name=\"_su_keywords\" content=\"postgresql debug\" />\n<meta name=\"_su_title\" content=\"postgresql debug\" />\n<meta name=\"views\" content=\"1123\" />\nFirst, compile the source code use ./configure --prefix=XXXX --enable-debug &amp;&amp; CFLAGS=-O0\n\nthen make and make install.\n<h2><span style=\"color: #800000;\">IF you want to RESTART PG</span></h2>\nDetected if there is an instance of Postgre server. If there is, kill it. use\n\n\n{% codeblock %}ps -e | grep postgre\n// find id of the process\nkill -9 $processid{% endcodeblock %}\n\n\nto detect the pocess of postgresql and kill it.\n\nthen use:\n\n\n{% codeblock %}gdb postgresqlHomeDIR/bin/postgres -quiet\n// enter gdb then use\nset args -D DATADIR\nrun{% endcodeblock %}\n\n\nhere DATADIR and postgresqlDIR are your own directory.\n<h2><span style=\"color: #800000;\">IF you don't want to RESTART PG</span></h2>\n\n{% codeblock %}// find postgres pid\npid = `ps auxww | \\\n    grep postgres: | \\\n    grep -v -e 'grep postgres:' -e 'postgres: stats' -e 'postgres: writer' -e 'postgres: archiver' -e 'postgres: logger' -e 'postgres: autovacuum' | \\\n    tee /dev/tty | \\\n    awk '{print $2}'`\ngdb pid{% endcodeblock %}\n\n\nthen use\n\n\n{% codeblock %}./psql test{% endcodeblock %}\n\n\nto test. Here test is  your database name.\n\nIF you want to debug contrib\n\nmake &amp;&amp; make install in contrib/yourdir\n\nthen go to gdb to file your shard lib to load symbol. Here XXX.so is your contrib share lib.\n\n\n{% codeblock %}(gdb) file XXX.so{% endcodeblock %}\n\n\nif not, when you use break somefunction, it will report:\n\nNo symbol table is loaded.  Use the \"file\" command.\nMake breakpoint pending on future shared library load? (y or [n])\n","slug":"2010-05-10-debug-postgresql","published":1,"updated":"2017-06-05T03:01:00.000Z","photos":[],"link":"","_id":"cj3jjumd900081emjwv15ggm9","content":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_description\" content=\"postgresql debug\"></p>\n<p><meta name=\"_su_keywords\" content=\"postgresql debug\"></p>\n<p><meta name=\"_su_title\" content=\"postgresql debug\"></p>\n<p><meta name=\"views\" content=\"1123\"><br>First, compile the source code use ./configure –prefix=XXXX –enable-debug &amp;&amp; CFLAGS=-O0</p>\n<p>then make and make install.</p>\n<h2><span style=\"color: #800000;\">IF you want to RESTART PG</span></h2><br>Detected if there is an instance of Postgre server. If there is, kill it. use<br><br><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">ps -e | grep postgre</div><div class=\"line\">// find id of the process</div><div class=\"line\">kill -9 $processid</div></pre></td></tr></table></figure><br><br><br>to detect the pocess of postgresql and kill it.<br><br>then use:<br><br><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">gdb postgresqlHomeDIR/bin/postgres -quiet</div><div class=\"line\">// enter gdb then use</div><div class=\"line\">set args -D DATADIR</div><div class=\"line\">run</div></pre></td></tr></table></figure><br><br><br>here DATADIR and postgresqlDIR are your own directory.<br><h2><span style=\"color: #800000;\">IF you don’t want to RESTART PG</span></h2>\n\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">// find postgres pid</div><div class=\"line\">pid = `ps auxww | \\</div><div class=\"line\">    grep postgres: | \\</div><div class=\"line\">    grep -v -e &apos;grep postgres:&apos; -e &apos;postgres: stats&apos; -e &apos;postgres: writer&apos; -e &apos;postgres: archiver&apos; -e &apos;postgres: logger&apos; -e &apos;postgres: autovacuum&apos; | \\</div><div class=\"line\">    tee /dev/tty | \\</div><div class=\"line\">    awk &apos;&#123;print $2&#125;&apos;`</div><div class=\"line\">gdb pid</div></pre></td></tr></table></figure>\n<p>then use</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">./psql test</div></pre></td></tr></table></figure>\n<p>to test. Here test is  your database name.</p>\n<p>IF you want to debug contrib</p>\n<p>make &amp;&amp; make install in contrib/yourdir</p>\n<p>then go to gdb to file your shard lib to load symbol. Here XXX.so is your contrib share lib.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">(gdb) file XXX.so</div></pre></td></tr></table></figure>\n<p>if not, when you use break somefunction, it will report:</p>\n<p>No symbol table is loaded.  Use the “file” command.<br>Make breakpoint pending on future shared library load? (y or [n])</p>\n","site":{"data":{}},"excerpt":"","more":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_description\" content=\"postgresql debug\"></p>\n<p><meta name=\"_su_keywords\" content=\"postgresql debug\"></p>\n<p><meta name=\"_su_title\" content=\"postgresql debug\"></p>\n<p><meta name=\"views\" content=\"1123\"><br>First, compile the source code use ./configure –prefix=XXXX –enable-debug &amp;&amp; CFLAGS=-O0</p>\n<p>then make and make install.</p>\n<h2><span style=\"color: #800000;\">IF you want to RESTART PG</span></h2><br>Detected if there is an instance of Postgre server. If there is, kill it. use<br><br><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">ps -e | grep postgre</div><div class=\"line\">// find id of the process</div><div class=\"line\">kill -9 $processid</div></pre></td></tr></table></figure><br><br><br>to detect the pocess of postgresql and kill it.<br><br>then use:<br><br><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">gdb postgresqlHomeDIR/bin/postgres -quiet</div><div class=\"line\">// enter gdb then use</div><div class=\"line\">set args -D DATADIR</div><div class=\"line\">run</div></pre></td></tr></table></figure><br><br><br>here DATADIR and postgresqlDIR are your own directory.<br><h2><span style=\"color: #800000;\">IF you don’t want to RESTART PG</span></h2>\n\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">// find postgres pid</div><div class=\"line\">pid = `ps auxww | \\</div><div class=\"line\">    grep postgres: | \\</div><div class=\"line\">    grep -v -e &apos;grep postgres:&apos; -e &apos;postgres: stats&apos; -e &apos;postgres: writer&apos; -e &apos;postgres: archiver&apos; -e &apos;postgres: logger&apos; -e &apos;postgres: autovacuum&apos; | \\</div><div class=\"line\">    tee /dev/tty | \\</div><div class=\"line\">    awk &apos;&#123;print $2&#125;&apos;`</div><div class=\"line\">gdb pid</div></pre></td></tr></table></figure>\n<p>then use</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">./psql test</div></pre></td></tr></table></figure>\n<p>to test. Here test is  your database name.</p>\n<p>IF you want to debug contrib</p>\n<p>make &amp;&amp; make install in contrib/yourdir</p>\n<p>then go to gdb to file your shard lib to load symbol. Here XXX.so is your contrib share lib.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">(gdb) file XXX.so</div></pre></td></tr></table></figure>\n<p>if not, when you use break somefunction, it will report:</p>\n<p>No symbol table is loaded.  Use the “file” command.<br>Make breakpoint pending on future shared library load? (y or [n])</p>\n"},{"layout":"post","title":"design pattern CHAIN of reponsibility","date":"2010-05-23T16:00:00.000Z","wordpress_id":213,"comments":1,"_content":"<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_description\" content=\"design pattern CHAIN of reponsibility\" />\n<meta name=\"_su_keywords\" content=\"design pattern CHAIN of reponsibility\" />\n<meta name=\"_su_title\" content=\"design pattern CHAIN of reponsibility\" />\n<meta name=\"views\" content=\"603\" />\n\n{% codeblock %}#include&lt;cstdio&gt;\n\nusing namespace std;\nnamespace pattern{\n\t/// this pattern links all handler as a line, if previous handler can process a request, it wil not be\n\t/// send to next handler. For example, if someone requested changing programming style, \n\t/// this decision will be made by a programmer. \n\t/// He will change his programming style without noticing his lead. \n\t/// But if someone request changing the requirements, the programmer can not make this decision. \n\t/// He will noticing his lead, and make his lead decided.\n\n\t/// this is request class.\n\t#define STYLE 0\n\t#define REQIREMENT 1\n\tclass Request{\n\t\tpublic:\n\t\t\tint type; // changing programming style or changing requirements?\n\n\t};\n\n\t/// this class for processing request.\n\tclass Handler{\n\tprivate:\n\t\tHandler* parent;\n\tpublic:\n\t\tHandler(Handler* p):parent(p){}\n\t\tvirtual bool DoHandle(Request&amp; r)=0;\n\t\tvoid Process(Request&amp; r);\n\t\tvirtual ~Handler(){}\n\t};\n\n\tvoid Handler::Process(Request&amp; r){\n\t\tif(!this-&gt;DoHandle(r) &amp;&amp; NULL != parent){\n\t\t\tparent-&gt;Process(r);\n\t\t}\n\t}\n\n\tclass Programmer: public Handler{\n\t\tpublic:\n\t\tProgrammer(Handler* p):Handler(p){}\n\t\tvirtual bool DoHandle(Request&amp; r);\n\n\t};\n\tbool Programmer::DoHandle(Request&amp; r){\n\t\tif(r.type == STYLE){\n\t\t\tprintf(\"programmer: I can process changing programming style\\n\");\n\t\t\treturn true;\n\t\t}else{\n\t\t\tprintf(\"programmer: I can not process this request. I will report this to my lead!\\n\");\n\t\t\treturn false;\n\t\t}\n\n\t}\n\n\tclass Lead:public Handler{\n\t\tpublic:\n\t\tLead(Handler* p):Handler(p){}\n\t\tvirtual bool DoHandle(Request&amp; r);\n\n\t};\n\tbool Lead::DoHandle(Request&amp; r){\n\t\tif(r.type == REQIREMENT){\n\t\t\tprintf(\"lead: I will process changing reqirements\\n\");\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n}\n\nint main(){\n\tpattern::Lead lead((pattern::Handler*)NULL);\n\tpattern::Programmer programmer(&amp;lead);\n\tpattern::Request r;\n\tr.type = STYLE;\n\tprogrammer.Process(r);\n\tr.type = REQIREMENT;\n\tprogrammer.Process(r);\n\treturn 0;\n\n}{% endcodeblock %}\n \n","source":"_posts/2010-05-24-design-pattern-chain-reponsibility.markdown","raw":"---\nlayout: post\ntitle: \"design pattern CHAIN of reponsibility\"\ndate: 2010-5-24\nwordpress_id: 213\ncomments: true\ncategories: [\"cc\", \"chain\", \"code\", \"design\", \"pattern\", \"reposibility\", \"software-architecture-code\"]\n---\n<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_description\" content=\"design pattern CHAIN of reponsibility\" />\n<meta name=\"_su_keywords\" content=\"design pattern CHAIN of reponsibility\" />\n<meta name=\"_su_title\" content=\"design pattern CHAIN of reponsibility\" />\n<meta name=\"views\" content=\"603\" />\n\n{% codeblock %}#include&lt;cstdio&gt;\n\nusing namespace std;\nnamespace pattern{\n\t/// this pattern links all handler as a line, if previous handler can process a request, it wil not be\n\t/// send to next handler. For example, if someone requested changing programming style, \n\t/// this decision will be made by a programmer. \n\t/// He will change his programming style without noticing his lead. \n\t/// But if someone request changing the requirements, the programmer can not make this decision. \n\t/// He will noticing his lead, and make his lead decided.\n\n\t/// this is request class.\n\t#define STYLE 0\n\t#define REQIREMENT 1\n\tclass Request{\n\t\tpublic:\n\t\t\tint type; // changing programming style or changing requirements?\n\n\t};\n\n\t/// this class for processing request.\n\tclass Handler{\n\tprivate:\n\t\tHandler* parent;\n\tpublic:\n\t\tHandler(Handler* p):parent(p){}\n\t\tvirtual bool DoHandle(Request&amp; r)=0;\n\t\tvoid Process(Request&amp; r);\n\t\tvirtual ~Handler(){}\n\t};\n\n\tvoid Handler::Process(Request&amp; r){\n\t\tif(!this-&gt;DoHandle(r) &amp;&amp; NULL != parent){\n\t\t\tparent-&gt;Process(r);\n\t\t}\n\t}\n\n\tclass Programmer: public Handler{\n\t\tpublic:\n\t\tProgrammer(Handler* p):Handler(p){}\n\t\tvirtual bool DoHandle(Request&amp; r);\n\n\t};\n\tbool Programmer::DoHandle(Request&amp; r){\n\t\tif(r.type == STYLE){\n\t\t\tprintf(\"programmer: I can process changing programming style\\n\");\n\t\t\treturn true;\n\t\t}else{\n\t\t\tprintf(\"programmer: I can not process this request. I will report this to my lead!\\n\");\n\t\t\treturn false;\n\t\t}\n\n\t}\n\n\tclass Lead:public Handler{\n\t\tpublic:\n\t\tLead(Handler* p):Handler(p){}\n\t\tvirtual bool DoHandle(Request&amp; r);\n\n\t};\n\tbool Lead::DoHandle(Request&amp; r){\n\t\tif(r.type == REQIREMENT){\n\t\t\tprintf(\"lead: I will process changing reqirements\\n\");\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n}\n\nint main(){\n\tpattern::Lead lead((pattern::Handler*)NULL);\n\tpattern::Programmer programmer(&amp;lead);\n\tpattern::Request r;\n\tr.type = STYLE;\n\tprogrammer.Process(r);\n\tr.type = REQIREMENT;\n\tprogrammer.Process(r);\n\treturn 0;\n\n}{% endcodeblock %}\n \n","slug":"2010-05-24-design-pattern-chain-reponsibility","published":1,"updated":"2017-06-05T03:01:00.000Z","photos":[],"link":"","_id":"cj3jjumde000a1emjexegbovl","content":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_description\" content=\"design pattern CHAIN of reponsibility\"></p>\n<p><meta name=\"_su_keywords\" content=\"design pattern CHAIN of reponsibility\"></p>\n<p><meta name=\"_su_title\" content=\"design pattern CHAIN of reponsibility\"></p>\n<meta name=\"views\" content=\"603\">\n\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&amp;lt;cstdio&amp;gt;</div><div class=\"line\"></div><div class=\"line\">using namespace std;</div><div class=\"line\">namespace pattern&#123;</div><div class=\"line\">\t/// this pattern links all handler as a line, if previous handler can process a request, it wil not be</div><div class=\"line\">\t/// send to next handler. For example, if someone requested changing programming style, </div><div class=\"line\">\t/// this decision will be made by a programmer. </div><div class=\"line\">\t/// He will change his programming style without noticing his lead. </div><div class=\"line\">\t/// But if someone request changing the requirements, the programmer can not make this decision. </div><div class=\"line\">\t/// He will noticing his lead, and make his lead decided.</div><div class=\"line\"></div><div class=\"line\">\t/// this is request class.</div><div class=\"line\">\t#define STYLE 0</div><div class=\"line\">\t#define REQIREMENT 1</div><div class=\"line\">\tclass Request&#123;</div><div class=\"line\">\t\tpublic:</div><div class=\"line\">\t\t\tint type; // changing programming style or changing requirements?</div><div class=\"line\"></div><div class=\"line\">\t&#125;;</div><div class=\"line\"></div><div class=\"line\">\t/// this class for processing request.</div><div class=\"line\">\tclass Handler&#123;</div><div class=\"line\">\tprivate:</div><div class=\"line\">\t\tHandler* parent;</div><div class=\"line\">\tpublic:</div><div class=\"line\">\t\tHandler(Handler* p):parent(p)&#123;&#125;</div><div class=\"line\">\t\tvirtual bool DoHandle(Request&amp;amp; r)=0;</div><div class=\"line\">\t\tvoid Process(Request&amp;amp; r);</div><div class=\"line\">\t\tvirtual ~Handler()&#123;&#125;</div><div class=\"line\">\t&#125;;</div><div class=\"line\"></div><div class=\"line\">\tvoid Handler::Process(Request&amp;amp; r)&#123;</div><div class=\"line\">\t\tif(!this-&amp;gt;DoHandle(r) &amp;amp;&amp;amp; NULL != parent)&#123;</div><div class=\"line\">\t\t\tparent-&amp;gt;Process(r);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\tclass Programmer: public Handler&#123;</div><div class=\"line\">\t\tpublic:</div><div class=\"line\">\t\tProgrammer(Handler* p):Handler(p)&#123;&#125;</div><div class=\"line\">\t\tvirtual bool DoHandle(Request&amp;amp; r);</div><div class=\"line\"></div><div class=\"line\">\t&#125;;</div><div class=\"line\">\tbool Programmer::DoHandle(Request&amp;amp; r)&#123;</div><div class=\"line\">\t\tif(r.type == STYLE)&#123;</div><div class=\"line\">\t\t\tprintf(&quot;programmer: I can process changing programming style\\n&quot;);</div><div class=\"line\">\t\t\treturn true;</div><div class=\"line\">\t\t&#125;else&#123;</div><div class=\"line\">\t\t\tprintf(&quot;programmer: I can not process this request. I will report this to my lead!\\n&quot;);</div><div class=\"line\">\t\t\treturn false;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\tclass Lead:public Handler&#123;</div><div class=\"line\">\t\tpublic:</div><div class=\"line\">\t\tLead(Handler* p):Handler(p)&#123;&#125;</div><div class=\"line\">\t\tvirtual bool DoHandle(Request&amp;amp; r);</div><div class=\"line\"></div><div class=\"line\">\t&#125;;</div><div class=\"line\">\tbool Lead::DoHandle(Request&amp;amp; r)&#123;</div><div class=\"line\">\t\tif(r.type == REQIREMENT)&#123;</div><div class=\"line\">\t\t\tprintf(&quot;lead: I will process changing reqirements\\n&quot;);</div><div class=\"line\">\t\t\treturn true;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\treturn false;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">int main()&#123;</div><div class=\"line\">\tpattern::Lead lead((pattern::Handler*)NULL);</div><div class=\"line\">\tpattern::Programmer programmer(&amp;amp;lead);</div><div class=\"line\">\tpattern::Request r;</div><div class=\"line\">\tr.type = STYLE;</div><div class=\"line\">\tprogrammer.Process(r);</div><div class=\"line\">\tr.type = REQIREMENT;</div><div class=\"line\">\tprogrammer.Process(r);</div><div class=\"line\">\treturn 0;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_description\" content=\"design pattern CHAIN of reponsibility\"></p>\n<p><meta name=\"_su_keywords\" content=\"design pattern CHAIN of reponsibility\"></p>\n<p><meta name=\"_su_title\" content=\"design pattern CHAIN of reponsibility\"></p>\n<meta name=\"views\" content=\"603\">\n\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&amp;lt;cstdio&amp;gt;</div><div class=\"line\"></div><div class=\"line\">using namespace std;</div><div class=\"line\">namespace pattern&#123;</div><div class=\"line\">\t/// this pattern links all handler as a line, if previous handler can process a request, it wil not be</div><div class=\"line\">\t/// send to next handler. For example, if someone requested changing programming style, </div><div class=\"line\">\t/// this decision will be made by a programmer. </div><div class=\"line\">\t/// He will change his programming style without noticing his lead. </div><div class=\"line\">\t/// But if someone request changing the requirements, the programmer can not make this decision. </div><div class=\"line\">\t/// He will noticing his lead, and make his lead decided.</div><div class=\"line\"></div><div class=\"line\">\t/// this is request class.</div><div class=\"line\">\t#define STYLE 0</div><div class=\"line\">\t#define REQIREMENT 1</div><div class=\"line\">\tclass Request&#123;</div><div class=\"line\">\t\tpublic:</div><div class=\"line\">\t\t\tint type; // changing programming style or changing requirements?</div><div class=\"line\"></div><div class=\"line\">\t&#125;;</div><div class=\"line\"></div><div class=\"line\">\t/// this class for processing request.</div><div class=\"line\">\tclass Handler&#123;</div><div class=\"line\">\tprivate:</div><div class=\"line\">\t\tHandler* parent;</div><div class=\"line\">\tpublic:</div><div class=\"line\">\t\tHandler(Handler* p):parent(p)&#123;&#125;</div><div class=\"line\">\t\tvirtual bool DoHandle(Request&amp;amp; r)=0;</div><div class=\"line\">\t\tvoid Process(Request&amp;amp; r);</div><div class=\"line\">\t\tvirtual ~Handler()&#123;&#125;</div><div class=\"line\">\t&#125;;</div><div class=\"line\"></div><div class=\"line\">\tvoid Handler::Process(Request&amp;amp; r)&#123;</div><div class=\"line\">\t\tif(!this-&amp;gt;DoHandle(r) &amp;amp;&amp;amp; NULL != parent)&#123;</div><div class=\"line\">\t\t\tparent-&amp;gt;Process(r);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\tclass Programmer: public Handler&#123;</div><div class=\"line\">\t\tpublic:</div><div class=\"line\">\t\tProgrammer(Handler* p):Handler(p)&#123;&#125;</div><div class=\"line\">\t\tvirtual bool DoHandle(Request&amp;amp; r);</div><div class=\"line\"></div><div class=\"line\">\t&#125;;</div><div class=\"line\">\tbool Programmer::DoHandle(Request&amp;amp; r)&#123;</div><div class=\"line\">\t\tif(r.type == STYLE)&#123;</div><div class=\"line\">\t\t\tprintf(&quot;programmer: I can process changing programming style\\n&quot;);</div><div class=\"line\">\t\t\treturn true;</div><div class=\"line\">\t\t&#125;else&#123;</div><div class=\"line\">\t\t\tprintf(&quot;programmer: I can not process this request. I will report this to my lead!\\n&quot;);</div><div class=\"line\">\t\t\treturn false;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\tclass Lead:public Handler&#123;</div><div class=\"line\">\t\tpublic:</div><div class=\"line\">\t\tLead(Handler* p):Handler(p)&#123;&#125;</div><div class=\"line\">\t\tvirtual bool DoHandle(Request&amp;amp; r);</div><div class=\"line\"></div><div class=\"line\">\t&#125;;</div><div class=\"line\">\tbool Lead::DoHandle(Request&amp;amp; r)&#123;</div><div class=\"line\">\t\tif(r.type == REQIREMENT)&#123;</div><div class=\"line\">\t\t\tprintf(&quot;lead: I will process changing reqirements\\n&quot;);</div><div class=\"line\">\t\t\treturn true;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\treturn false;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">int main()&#123;</div><div class=\"line\">\tpattern::Lead lead((pattern::Handler*)NULL);</div><div class=\"line\">\tpattern::Programmer programmer(&amp;amp;lead);</div><div class=\"line\">\tpattern::Request r;</div><div class=\"line\">\tr.type = STYLE;</div><div class=\"line\">\tprogrammer.Process(r);</div><div class=\"line\">\tr.type = REQIREMENT;</div><div class=\"line\">\tprogrammer.Process(r);</div><div class=\"line\">\treturn 0;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n"},{"layout":"post","title":"climbing wall?","date":"2010-05-25T16:00:00.000Z","wordpress_id":175,"comments":1,"_content":"<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_rich_snippet_type\" content=\"none\" />\n<meta name=\"views\" content=\"495\" />\n<meta name=\"_wp_old_slug\" content=\"\" />\n#!/bin/sh\nplink -ssh -D 7070 -P 22 -pw \"$1\" freessh@a.freessh.us\n","source":"_posts/2010-05-26-climbing-wall.markdown","raw":"---\nlayout: post\ntitle: \"climbing wall?\"\ndate: 2010-5-26\nwordpress_id: 175\ncomments: true\ncategories: [\"uncategorized\"]\n---\n<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_rich_snippet_type\" content=\"none\" />\n<meta name=\"views\" content=\"495\" />\n<meta name=\"_wp_old_slug\" content=\"\" />\n#!/bin/sh\nplink -ssh -D 7070 -P 22 -pw \"$1\" freessh@a.freessh.us\n","slug":"2010-05-26-climbing-wall","published":1,"updated":"2017-06-05T03:01:00.000Z","photos":[],"link":"","_id":"cj3jjumdi000c1emjic0b4pva","content":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_rich_snippet_type\" content=\"none\"></p>\n<p><meta name=\"views\" content=\"495\"></p>\n<p><meta name=\"_wp_old_slug\" content=\"\"></p>\n<p>#!/bin/sh<br>plink -ssh -D 7070 -P 22 -pw “$1” freessh@a.freessh.us</p>\n","site":{"data":{}},"excerpt":"","more":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_rich_snippet_type\" content=\"none\"></p>\n<p><meta name=\"views\" content=\"495\"></p>\n<p><meta name=\"_wp_old_slug\" content=\"\"></p>\n<p>#!/bin/sh<br>plink -ssh -D 7070 -P 22 -pw “$1” freessh@a.freessh.us</p>\n"},{"layout":"post","title":"Software Architecture--Singleton","date":"2010-04-04T16:00:00.000Z","wordpress_id":144,"comments":1,"_content":"<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"views\" content=\"530\" />\nSingleton is a pattern in Software Architecture. It is used to create a instance and there will be only one instance in system at any time. If you want to write this pattern in a file, it will be like that:\n\n[codesyntax lang=\"cpp\" tab_width=\"2\"]\n{% codeblock %}#include &lt;iostream&gt;\nusing namespace std;\n/* ==========================\n * Program name:\n * Author: chico chen\n * Email:  chillycreator @t gmail.com\n * Purpose: this class is testing singleton pattern in\n *          Software Architecture.\n * ========================== */\n\nclass Singleton {\n\tprivate:\n\tstatic Singleton* _instance;\n\tSingleton(){}\n\tpublic:\n\t\tstatic Singleton* Instance();\n};\nSingleton* Singleton::_instance = NULL;\nSingleton* Singleton::Instance() {\n    if (_instance == NULL) {\n        _instance = new Singleton();\n        cout &lt;&lt;\"new Singleton\"&lt;&lt;endl;\n    }\n    return _instance;\n}\n\nint main() {\n    cout &lt;&lt; \"Hello world!\" &lt;&lt; endl;\n    Singleton *s1 = Singleton::Instance();\n    Singleton *s2 = Singleton::Instance();\n    Singleton *s3 = Singleton::Instance();\n    Singleton *s4 = Singleton::Instance();\n    return 0;\n}{% endcodeblock %}\n\n\nIf you want write this pattern into different files, it will has Singleton.h Singleton.cpp and other files like that:\n\n<!--more-->Singleton.h\n\n[codesyntax lang=\"cpp\" tab_width=\"2\"]\n{% codeblock %}/* ==========================\n * Program name:\n * Author: chico chen\n * Email:  chillycreator @t gmail.com\n * Purpose: this class is testing singleton pattern in\n *          Software Architecture.\n * ========================== */\n\nclass Singleton {\n\tprivate:\n\tstatic Singleton* _instance;\n\tSingleton();\n\tpublic:\n\t\tstatic Singleton* Instance();\n};{% endcodeblock %}\n\n\nSingleton.cpp\n\n[codesyntax lang=\"cpp\" tab_width=\"2\"]\n{% codeblock %}#include \"Singleton.h\"\nSingleton::Singleton(){}\nSingleton* Singleton::_instance = NULL;\nSingleton* Singleton::Instance() {\n    if (_instance == NULL) {\n        _instance = new Singleton();\n        cout&lt;&lt;\"new Singleton\"&lt;&lt;endl;\n    }\n    return _instance;\n}{% endcodeblock %}\n\n\nmain.cpp\n\n[codesyntax lang=\"cpp\" tab_width=\"2\"]\n{% codeblock %}#include &lt;iostream&gt;\n#include \"Singleton.h\"\nusing namespace std;\nint main() {\n    cout &lt;&lt; \"Hello world!\" &lt;&lt; endl;\n    Singleton *s1 = Singleton::Instance();\n    Singleton *s2 = Singleton::Instance();\n    Singleton *s3 = Singleton::Instance();\n    Singleton *s4 = Singleton::Instance();\n    return 0;\n}{% endcodeblock %}\n\n\nBut it dose not ensure this instance is only the same in the system. Because it will be destroyed and recreated.\n","source":"_posts/2010-04-05-software-architecture-singleton.markdown","raw":"---\nlayout: post\ntitle: \"Software Architecture--Singleton\"\ndate: 2010-4-5\nwordpress_id: 144\ncomments: true\ncategories: [\"architecture\", \"single\", \"singleton\", \"software-architecture-code\", \"software-architecture\"]\n---\n<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"views\" content=\"530\" />\nSingleton is a pattern in Software Architecture. It is used to create a instance and there will be only one instance in system at any time. If you want to write this pattern in a file, it will be like that:\n\n[codesyntax lang=\"cpp\" tab_width=\"2\"]\n{% codeblock %}#include &lt;iostream&gt;\nusing namespace std;\n/* ==========================\n * Program name:\n * Author: chico chen\n * Email:  chillycreator @t gmail.com\n * Purpose: this class is testing singleton pattern in\n *          Software Architecture.\n * ========================== */\n\nclass Singleton {\n\tprivate:\n\tstatic Singleton* _instance;\n\tSingleton(){}\n\tpublic:\n\t\tstatic Singleton* Instance();\n};\nSingleton* Singleton::_instance = NULL;\nSingleton* Singleton::Instance() {\n    if (_instance == NULL) {\n        _instance = new Singleton();\n        cout &lt;&lt;\"new Singleton\"&lt;&lt;endl;\n    }\n    return _instance;\n}\n\nint main() {\n    cout &lt;&lt; \"Hello world!\" &lt;&lt; endl;\n    Singleton *s1 = Singleton::Instance();\n    Singleton *s2 = Singleton::Instance();\n    Singleton *s3 = Singleton::Instance();\n    Singleton *s4 = Singleton::Instance();\n    return 0;\n}{% endcodeblock %}\n\n\nIf you want write this pattern into different files, it will has Singleton.h Singleton.cpp and other files like that:\n\n<!--more-->Singleton.h\n\n[codesyntax lang=\"cpp\" tab_width=\"2\"]\n{% codeblock %}/* ==========================\n * Program name:\n * Author: chico chen\n * Email:  chillycreator @t gmail.com\n * Purpose: this class is testing singleton pattern in\n *          Software Architecture.\n * ========================== */\n\nclass Singleton {\n\tprivate:\n\tstatic Singleton* _instance;\n\tSingleton();\n\tpublic:\n\t\tstatic Singleton* Instance();\n};{% endcodeblock %}\n\n\nSingleton.cpp\n\n[codesyntax lang=\"cpp\" tab_width=\"2\"]\n{% codeblock %}#include \"Singleton.h\"\nSingleton::Singleton(){}\nSingleton* Singleton::_instance = NULL;\nSingleton* Singleton::Instance() {\n    if (_instance == NULL) {\n        _instance = new Singleton();\n        cout&lt;&lt;\"new Singleton\"&lt;&lt;endl;\n    }\n    return _instance;\n}{% endcodeblock %}\n\n\nmain.cpp\n\n[codesyntax lang=\"cpp\" tab_width=\"2\"]\n{% codeblock %}#include &lt;iostream&gt;\n#include \"Singleton.h\"\nusing namespace std;\nint main() {\n    cout &lt;&lt; \"Hello world!\" &lt;&lt; endl;\n    Singleton *s1 = Singleton::Instance();\n    Singleton *s2 = Singleton::Instance();\n    Singleton *s3 = Singleton::Instance();\n    Singleton *s4 = Singleton::Instance();\n    return 0;\n}{% endcodeblock %}\n\n\nBut it dose not ensure this instance is only the same in the system. Because it will be destroyed and recreated.\n","slug":"2010-04-05-software-architecture-singleton","published":1,"updated":"2017-06-05T03:01:07.000Z","photos":[],"link":"","_id":"cj3jjuse100001hmjw0jl4afw","content":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"views\" content=\"530\"><br>Singleton is a pattern in Software Architecture. It is used to create a instance and there will be only one instance in system at any time. If you want to write this pattern in a file, it will be like that:</p>\n<p>[codesyntax lang=”cpp” tab_width=”2”]<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include &amp;lt;iostream&amp;gt;</div><div class=\"line\">using namespace std;</div><div class=\"line\">/* ==========================</div><div class=\"line\"> * Program name:</div><div class=\"line\"> * Author: chico chen</div><div class=\"line\"> * Email:  chillycreator @t gmail.com</div><div class=\"line\"> * Purpose: this class is testing singleton pattern in</div><div class=\"line\"> *          Software Architecture.</div><div class=\"line\"> * ========================== */</div><div class=\"line\"></div><div class=\"line\">class Singleton &#123;</div><div class=\"line\">\tprivate:</div><div class=\"line\">\tstatic Singleton* _instance;</div><div class=\"line\">\tSingleton()&#123;&#125;</div><div class=\"line\">\tpublic:</div><div class=\"line\">\t\tstatic Singleton* Instance();</div><div class=\"line\">&#125;;</div><div class=\"line\">Singleton* Singleton::_instance = NULL;</div><div class=\"line\">Singleton* Singleton::Instance() &#123;</div><div class=\"line\">    if (_instance == NULL) &#123;</div><div class=\"line\">        _instance = new Singleton();</div><div class=\"line\">        cout &amp;lt;&amp;lt;&quot;new Singleton&quot;&amp;lt;&amp;lt;endl;</div><div class=\"line\">    &#125;</div><div class=\"line\">    return _instance;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">int main() &#123;</div><div class=\"line\">    cout &amp;lt;&amp;lt; &quot;Hello world!&quot; &amp;lt;&amp;lt; endl;</div><div class=\"line\">    Singleton *s1 = Singleton::Instance();</div><div class=\"line\">    Singleton *s2 = Singleton::Instance();</div><div class=\"line\">    Singleton *s3 = Singleton::Instance();</div><div class=\"line\">    Singleton *s4 = Singleton::Instance();</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>If you want write this pattern into different files, it will has Singleton.h Singleton.cpp and other files like that:</p>\n<a id=\"more\"></a>Singleton.h<br><br>[codesyntax lang=”cpp” tab_width=”2”]<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">/* ==========================</div><div class=\"line\"> * Program name:</div><div class=\"line\"> * Author: chico chen</div><div class=\"line\"> * Email:  chillycreator @t gmail.com</div><div class=\"line\"> * Purpose: this class is testing singleton pattern in</div><div class=\"line\"> *          Software Architecture.</div><div class=\"line\"> * ========================== */</div><div class=\"line\"></div><div class=\"line\">class Singleton &#123;</div><div class=\"line\">\tprivate:</div><div class=\"line\">\tstatic Singleton* _instance;</div><div class=\"line\">\tSingleton();</div><div class=\"line\">\tpublic:</div><div class=\"line\">\t\tstatic Singleton* Instance();</div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure>\n<p>Singleton.cpp</p>\n<p>[codesyntax lang=”cpp” tab_width=”2”]<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include &quot;Singleton.h&quot;</div><div class=\"line\">Singleton::Singleton()&#123;&#125;</div><div class=\"line\">Singleton* Singleton::_instance = NULL;</div><div class=\"line\">Singleton* Singleton::Instance() &#123;</div><div class=\"line\">    if (_instance == NULL) &#123;</div><div class=\"line\">        _instance = new Singleton();</div><div class=\"line\">        cout&amp;lt;&amp;lt;&quot;new Singleton&quot;&amp;lt;&amp;lt;endl;</div><div class=\"line\">    &#125;</div><div class=\"line\">    return _instance;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>main.cpp</p>\n<p>[codesyntax lang=”cpp” tab_width=”2”]<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include &amp;lt;iostream&amp;gt;</div><div class=\"line\">#include &quot;Singleton.h&quot;</div><div class=\"line\">using namespace std;</div><div class=\"line\">int main() &#123;</div><div class=\"line\">    cout &amp;lt;&amp;lt; &quot;Hello world!&quot; &amp;lt;&amp;lt; endl;</div><div class=\"line\">    Singleton *s1 = Singleton::Instance();</div><div class=\"line\">    Singleton *s2 = Singleton::Instance();</div><div class=\"line\">    Singleton *s3 = Singleton::Instance();</div><div class=\"line\">    Singleton *s4 = Singleton::Instance();</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>But it dose not ensure this instance is only the same in the system. Because it will be destroyed and recreated.</p>\n","site":{"data":{}},"excerpt":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"views\" content=\"530\"><br>Singleton is a pattern in Software Architecture. It is used to create a instance and there will be only one instance in system at any time. If you want to write this pattern in a file, it will be like that:</p>\n<p>[codesyntax lang=”cpp” tab_width=”2”]<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include &amp;lt;iostream&amp;gt;</div><div class=\"line\">using namespace std;</div><div class=\"line\">/* ==========================</div><div class=\"line\"> * Program name:</div><div class=\"line\"> * Author: chico chen</div><div class=\"line\"> * Email:  chillycreator @t gmail.com</div><div class=\"line\"> * Purpose: this class is testing singleton pattern in</div><div class=\"line\"> *          Software Architecture.</div><div class=\"line\"> * ========================== */</div><div class=\"line\"></div><div class=\"line\">class Singleton &#123;</div><div class=\"line\">\tprivate:</div><div class=\"line\">\tstatic Singleton* _instance;</div><div class=\"line\">\tSingleton()&#123;&#125;</div><div class=\"line\">\tpublic:</div><div class=\"line\">\t\tstatic Singleton* Instance();</div><div class=\"line\">&#125;;</div><div class=\"line\">Singleton* Singleton::_instance = NULL;</div><div class=\"line\">Singleton* Singleton::Instance() &#123;</div><div class=\"line\">    if (_instance == NULL) &#123;</div><div class=\"line\">        _instance = new Singleton();</div><div class=\"line\">        cout &amp;lt;&amp;lt;&quot;new Singleton&quot;&amp;lt;&amp;lt;endl;</div><div class=\"line\">    &#125;</div><div class=\"line\">    return _instance;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">int main() &#123;</div><div class=\"line\">    cout &amp;lt;&amp;lt; &quot;Hello world!&quot; &amp;lt;&amp;lt; endl;</div><div class=\"line\">    Singleton *s1 = Singleton::Instance();</div><div class=\"line\">    Singleton *s2 = Singleton::Instance();</div><div class=\"line\">    Singleton *s3 = Singleton::Instance();</div><div class=\"line\">    Singleton *s4 = Singleton::Instance();</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>If you want write this pattern into different files, it will has Singleton.h Singleton.cpp and other files like that:</p>","more":"Singleton.h<br><br>[codesyntax lang=”cpp” tab_width=”2”]<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">/* ==========================</div><div class=\"line\"> * Program name:</div><div class=\"line\"> * Author: chico chen</div><div class=\"line\"> * Email:  chillycreator @t gmail.com</div><div class=\"line\"> * Purpose: this class is testing singleton pattern in</div><div class=\"line\"> *          Software Architecture.</div><div class=\"line\"> * ========================== */</div><div class=\"line\"></div><div class=\"line\">class Singleton &#123;</div><div class=\"line\">\tprivate:</div><div class=\"line\">\tstatic Singleton* _instance;</div><div class=\"line\">\tSingleton();</div><div class=\"line\">\tpublic:</div><div class=\"line\">\t\tstatic Singleton* Instance();</div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure>\n<p>Singleton.cpp</p>\n<p>[codesyntax lang=”cpp” tab_width=”2”]<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include &quot;Singleton.h&quot;</div><div class=\"line\">Singleton::Singleton()&#123;&#125;</div><div class=\"line\">Singleton* Singleton::_instance = NULL;</div><div class=\"line\">Singleton* Singleton::Instance() &#123;</div><div class=\"line\">    if (_instance == NULL) &#123;</div><div class=\"line\">        _instance = new Singleton();</div><div class=\"line\">        cout&amp;lt;&amp;lt;&quot;new Singleton&quot;&amp;lt;&amp;lt;endl;</div><div class=\"line\">    &#125;</div><div class=\"line\">    return _instance;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>main.cpp</p>\n<p>[codesyntax lang=”cpp” tab_width=”2”]<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include &amp;lt;iostream&amp;gt;</div><div class=\"line\">#include &quot;Singleton.h&quot;</div><div class=\"line\">using namespace std;</div><div class=\"line\">int main() &#123;</div><div class=\"line\">    cout &amp;lt;&amp;lt; &quot;Hello world!&quot; &amp;lt;&amp;lt; endl;</div><div class=\"line\">    Singleton *s1 = Singleton::Instance();</div><div class=\"line\">    Singleton *s2 = Singleton::Instance();</div><div class=\"line\">    Singleton *s3 = Singleton::Instance();</div><div class=\"line\">    Singleton *s4 = Singleton::Instance();</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>But it dose not ensure this instance is only the same in the system. Because it will be destroyed and recreated.</p>"},{"layout":"post","title":"some bugs in programing","date":"2010-04-08T16:00:00.000Z","wordpress_id":146,"comments":1,"_content":"<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"views\" content=\"459\" />\nwhen you use double type to count, it will be dangerous. see like that\n\n[codesyntax lang=\"c\" tab_width=\"2\"]\n{% codeblock %}#include&lt;stdio.h&gt;\nint main(){\n  double i;\n  for(i=0; i != 5; i++){\n    printf(\"%lf \",i);\n  }\n  return 0;\n}{% endcodeblock %}\n\n\nit will never stop, because the condition of i != 5 will never satisfied. If you want to count, using int type. When you compare two double type number, you should use fabs(a-b) &lt; 0.001, 0.001 is threshold. Sometimes, double is not precision. macro is a great tool, but it is also dangerous. I often forget the language of define. The correct language is :\n\n#define\n\n#if defined\n\n#if !defined\n\n#ifndef\n\n#ifdef\n\n#endif\n\ncompile .c file with math lib in linux. It will be like that: cc test.c -o test <span style=\"color: rgb(255, 102, 0);\">-lm</span>\n\nstdio redirect to file use freopen() function. like that:\n\n\n{% codeblock %}#include&lt;stdio.h&gt;\n// don't write freopen here, it will be some compile error.\n//freopen(\"test.in\",\"r\",stdin);\n//freopen(\"test.out\",\"w\",stdout);\nint main(){\n\tint n,i;\n\t#if defined REDIRECT\n\tfreopen(\"test.in\",\"r\",stdin);\n\tfreopen(\"test.out\",\"w\",stdout);\n\t#endif\n\tscanf(\"%d\",&amp;n);\n\tfor(i = 0; i &lt; n; i++){\n\t\tprintf(\"%d \",i);\n\t}\n\treturn 0;\n}{% endcodeblock %}\n\n\nif you want redirect to file, use the code and compile it with -D REDIRECT. cc test.c -o test -D REDIRECT\n\nIf you want to use struct FILE to do the same thing:\n\n[codesyntax lang=\"c\" tab_width=\"2\"]\n{% codeblock %}#include&lt;stdio.h&gt;\n#include&lt;math.h&gt;\nint main(){\n  FILE * fin, *fout;\n  fin = fopen(\"z.in\",\"rb\");\n  fout = fopen(\"z.out\",\"wb\");\n  int n;\n  #ifdef REDIRECT\n  #define fin stdin\n  #define fout stdout\n  #endif\n\n  fscanf(fin,\"%d\",&amp;n);\n  fprintf(fout,\"%d,%lf\",n,sqrt(n));\n  fclose(fin);\n  fclose(fout);\n  return 0;\n}{% endcodeblock %}\n\n\ntry cc t3.c -o t3 -lm -D REDIRECT and cc t3.c -o t3 -lm\n","source":"_posts/2010-04-09-some-bugs-in-programing.markdown","raw":"---\nlayout: post\ntitle: \"some bugs in programing\"\ndate: 2010-4-9\nwordpress_id: 146\ncomments: true\ncategories: [\"bug\", \"c\", \"cc\", \"code\", \"define\", \"freopen\", \"macro\", \"math\", \"programming\", \"redirect\"]\n---\n<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"views\" content=\"459\" />\nwhen you use double type to count, it will be dangerous. see like that\n\n[codesyntax lang=\"c\" tab_width=\"2\"]\n{% codeblock %}#include&lt;stdio.h&gt;\nint main(){\n  double i;\n  for(i=0; i != 5; i++){\n    printf(\"%lf \",i);\n  }\n  return 0;\n}{% endcodeblock %}\n\n\nit will never stop, because the condition of i != 5 will never satisfied. If you want to count, using int type. When you compare two double type number, you should use fabs(a-b) &lt; 0.001, 0.001 is threshold. Sometimes, double is not precision. macro is a great tool, but it is also dangerous. I often forget the language of define. The correct language is :\n\n#define\n\n#if defined\n\n#if !defined\n\n#ifndef\n\n#ifdef\n\n#endif\n\ncompile .c file with math lib in linux. It will be like that: cc test.c -o test <span style=\"color: rgb(255, 102, 0);\">-lm</span>\n\nstdio redirect to file use freopen() function. like that:\n\n\n{% codeblock %}#include&lt;stdio.h&gt;\n// don't write freopen here, it will be some compile error.\n//freopen(\"test.in\",\"r\",stdin);\n//freopen(\"test.out\",\"w\",stdout);\nint main(){\n\tint n,i;\n\t#if defined REDIRECT\n\tfreopen(\"test.in\",\"r\",stdin);\n\tfreopen(\"test.out\",\"w\",stdout);\n\t#endif\n\tscanf(\"%d\",&amp;n);\n\tfor(i = 0; i &lt; n; i++){\n\t\tprintf(\"%d \",i);\n\t}\n\treturn 0;\n}{% endcodeblock %}\n\n\nif you want redirect to file, use the code and compile it with -D REDIRECT. cc test.c -o test -D REDIRECT\n\nIf you want to use struct FILE to do the same thing:\n\n[codesyntax lang=\"c\" tab_width=\"2\"]\n{% codeblock %}#include&lt;stdio.h&gt;\n#include&lt;math.h&gt;\nint main(){\n  FILE * fin, *fout;\n  fin = fopen(\"z.in\",\"rb\");\n  fout = fopen(\"z.out\",\"wb\");\n  int n;\n  #ifdef REDIRECT\n  #define fin stdin\n  #define fout stdout\n  #endif\n\n  fscanf(fin,\"%d\",&amp;n);\n  fprintf(fout,\"%d,%lf\",n,sqrt(n));\n  fclose(fin);\n  fclose(fout);\n  return 0;\n}{% endcodeblock %}\n\n\ntry cc t3.c -o t3 -lm -D REDIRECT and cc t3.c -o t3 -lm\n","slug":"2010-04-09-some-bugs-in-programing","published":1,"updated":"2017-06-05T03:01:07.000Z","photos":[],"link":"","_id":"cj3jjusec00011hmjmic16nal","content":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"views\" content=\"459\"><br>when you use double type to count, it will be dangerous. see like that</p>\n<p>[codesyntax lang=”c” tab_width=”2”]<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&amp;lt;stdio.h&amp;gt;</div><div class=\"line\">int main()&#123;</div><div class=\"line\">  double i;</div><div class=\"line\">  for(i=0; i != 5; i++)&#123;</div><div class=\"line\">    printf(&quot;%lf &quot;,i);</div><div class=\"line\">  &#125;</div><div class=\"line\">  return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>it will never stop, because the condition of i != 5 will never satisfied. If you want to count, using int type. When you compare two double type number, you should use fabs(a-b) &lt; 0.001, 0.001 is threshold. Sometimes, double is not precision. macro is a great tool, but it is also dangerous. I often forget the language of define. The correct language is :</p>\n<p>#define</p>\n<p>#if defined</p>\n<p>#if !defined</p>\n<p>#ifndef</p>\n<p>#ifdef</p>\n<p>#endif</p>\n<p>compile .c file with math lib in linux. It will be like that: cc test.c -o test <span style=\"color: rgb(255, 102, 0);\">-lm</span></p>\n<p>stdio redirect to file use freopen() function. like that:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&amp;lt;stdio.h&amp;gt;</div><div class=\"line\">// don&apos;t write freopen here, it will be some compile error.</div><div class=\"line\">//freopen(&quot;test.in&quot;,&quot;r&quot;,stdin);</div><div class=\"line\">//freopen(&quot;test.out&quot;,&quot;w&quot;,stdout);</div><div class=\"line\">int main()&#123;</div><div class=\"line\">\tint n,i;</div><div class=\"line\">\t#if defined REDIRECT</div><div class=\"line\">\tfreopen(&quot;test.in&quot;,&quot;r&quot;,stdin);</div><div class=\"line\">\tfreopen(&quot;test.out&quot;,&quot;w&quot;,stdout);</div><div class=\"line\">\t#endif</div><div class=\"line\">\tscanf(&quot;%d&quot;,&amp;amp;n);</div><div class=\"line\">\tfor(i = 0; i &amp;lt; n; i++)&#123;</div><div class=\"line\">\t\tprintf(&quot;%d &quot;,i);</div><div class=\"line\">\t&#125;</div><div class=\"line\">\treturn 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>if you want redirect to file, use the code and compile it with -D REDIRECT. cc test.c -o test -D REDIRECT</p>\n<p>If you want to use struct FILE to do the same thing:</p>\n<p>[codesyntax lang=”c” tab_width=”2”]<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&amp;lt;stdio.h&amp;gt;</div><div class=\"line\">#include&amp;lt;math.h&amp;gt;</div><div class=\"line\">int main()&#123;</div><div class=\"line\">  FILE * fin, *fout;</div><div class=\"line\">  fin = fopen(&quot;z.in&quot;,&quot;rb&quot;);</div><div class=\"line\">  fout = fopen(&quot;z.out&quot;,&quot;wb&quot;);</div><div class=\"line\">  int n;</div><div class=\"line\">  #ifdef REDIRECT</div><div class=\"line\">  #define fin stdin</div><div class=\"line\">  #define fout stdout</div><div class=\"line\">  #endif</div><div class=\"line\"></div><div class=\"line\">  fscanf(fin,&quot;%d&quot;,&amp;amp;n);</div><div class=\"line\">  fprintf(fout,&quot;%d,%lf&quot;,n,sqrt(n));</div><div class=\"line\">  fclose(fin);</div><div class=\"line\">  fclose(fout);</div><div class=\"line\">  return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>try cc t3.c -o t3 -lm -D REDIRECT and cc t3.c -o t3 -lm</p>\n","site":{"data":{}},"excerpt":"","more":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"views\" content=\"459\"><br>when you use double type to count, it will be dangerous. see like that</p>\n<p>[codesyntax lang=”c” tab_width=”2”]<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&amp;lt;stdio.h&amp;gt;</div><div class=\"line\">int main()&#123;</div><div class=\"line\">  double i;</div><div class=\"line\">  for(i=0; i != 5; i++)&#123;</div><div class=\"line\">    printf(&quot;%lf &quot;,i);</div><div class=\"line\">  &#125;</div><div class=\"line\">  return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>it will never stop, because the condition of i != 5 will never satisfied. If you want to count, using int type. When you compare two double type number, you should use fabs(a-b) &lt; 0.001, 0.001 is threshold. Sometimes, double is not precision. macro is a great tool, but it is also dangerous. I often forget the language of define. The correct language is :</p>\n<p>#define</p>\n<p>#if defined</p>\n<p>#if !defined</p>\n<p>#ifndef</p>\n<p>#ifdef</p>\n<p>#endif</p>\n<p>compile .c file with math lib in linux. It will be like that: cc test.c -o test <span style=\"color: rgb(255, 102, 0);\">-lm</span></p>\n<p>stdio redirect to file use freopen() function. like that:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&amp;lt;stdio.h&amp;gt;</div><div class=\"line\">// don&apos;t write freopen here, it will be some compile error.</div><div class=\"line\">//freopen(&quot;test.in&quot;,&quot;r&quot;,stdin);</div><div class=\"line\">//freopen(&quot;test.out&quot;,&quot;w&quot;,stdout);</div><div class=\"line\">int main()&#123;</div><div class=\"line\">\tint n,i;</div><div class=\"line\">\t#if defined REDIRECT</div><div class=\"line\">\tfreopen(&quot;test.in&quot;,&quot;r&quot;,stdin);</div><div class=\"line\">\tfreopen(&quot;test.out&quot;,&quot;w&quot;,stdout);</div><div class=\"line\">\t#endif</div><div class=\"line\">\tscanf(&quot;%d&quot;,&amp;amp;n);</div><div class=\"line\">\tfor(i = 0; i &amp;lt; n; i++)&#123;</div><div class=\"line\">\t\tprintf(&quot;%d &quot;,i);</div><div class=\"line\">\t&#125;</div><div class=\"line\">\treturn 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>if you want redirect to file, use the code and compile it with -D REDIRECT. cc test.c -o test -D REDIRECT</p>\n<p>If you want to use struct FILE to do the same thing:</p>\n<p>[codesyntax lang=”c” tab_width=”2”]<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&amp;lt;stdio.h&amp;gt;</div><div class=\"line\">#include&amp;lt;math.h&amp;gt;</div><div class=\"line\">int main()&#123;</div><div class=\"line\">  FILE * fin, *fout;</div><div class=\"line\">  fin = fopen(&quot;z.in&quot;,&quot;rb&quot;);</div><div class=\"line\">  fout = fopen(&quot;z.out&quot;,&quot;wb&quot;);</div><div class=\"line\">  int n;</div><div class=\"line\">  #ifdef REDIRECT</div><div class=\"line\">  #define fin stdin</div><div class=\"line\">  #define fout stdout</div><div class=\"line\">  #endif</div><div class=\"line\"></div><div class=\"line\">  fscanf(fin,&quot;%d&quot;,&amp;amp;n);</div><div class=\"line\">  fprintf(fout,&quot;%d,%lf&quot;,n,sqrt(n));</div><div class=\"line\">  fclose(fin);</div><div class=\"line\">  fclose(fout);</div><div class=\"line\">  return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>try cc t3.c -o t3 -lm -D REDIRECT and cc t3.c -o t3 -lm</p>\n"},{"layout":"post","title":"ascii table and ascii conversion tool","date":"2010-04-11T16:00:00.000Z","wordpress_id":155,"comments":1,"_content":"<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"views\" content=\"1256\" />\n<meta name=\"_oembed_1182a4049c943374b18ea1ce87e40b3c\" content=\"{{unknown}}\" />\n<meta name=\"_oembed_979ac7989e73a0be6ed3dcf372aa92ad\" content=\"{{unknown}}\" />\n<meta name=\"_oembed_fcf398842b787ae9fd78decf2181807e\" content=\"{{unknown}}\" />\n<meta name=\"_oembed_923c502f893a81beba9034f3ab2af40d\" content=\"{{unknown}}\" />\n<a href=\"http://chillyc.info/wp-content/uploads/2010/04/12/ascii/asciifull.gif\"><img class=\"aligncenter size-full wp-image-156\" title=\"asciifull\" src=\"http://chillyc.info/wp-content/uploads/2010/04/12/ascii/asciifull.gif\" alt=\"\" width=\"715\" height=\"488\"></a>\n\nMy signature:\n\n<a href=\"http://chillyc.info/wp-content/uploads/2010/04/12/ascii/chillyc.png\"><img class=\"aligncenter size-medium wp-image-166\" title=\"chillyc\" src=\"http://chillyc.info/wp-content/uploads/2010/04/12/ascii/chillyc-300x240.png\" alt=\"\" width=\"300\" height=\"240\"></a>\n\nhttp://en.wikipedia.org/wiki/Wikipedia:ASCII_art_conversion_tool\n\nthere is a good tool for converting bitmap to ascii.\n\n[codesyntax lang=\"c\" tab_width=\"2\"]\n{% codeblock %}/*\n\nascii art conversion utility\nCopyright 2001 Damian Yerrick\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\n\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\nBE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN\nAN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF\nOR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\nIN THE SOFTWARE.\n\n*/\n/*\n\nascii.c converts a bitmap (in .bmp or .pcx format) to ASCII art.\nIt treats the least significant bitplane as a monochrome image,\nmaking 0 dark and 1 light.  Each character sent to stdout represents\na 2x2 cell in the bitmap.\n\nIt uses the Allegro library to read the bitmap.  Allegro is a\nmultimedia library that has been ported to POSIX+X11, DOS, Windows,\nBeOS, and Mac OS.  There are library extensions that allow Allegro\nto handle other file formats such as PNG.\n  http://alleg.sourceforge.net/allegro/\n\nBecause of the simple design of the program, it is also extremely\neasy to port to other imaging APIs.\n\nCompilation on DOS:\n  gcc -Wall -O ascii.c -lalleg -o ascii.exe\nCompilation on Linux:\n  gcc -Wall -O ascii.c `allegro-config --libs` -o ascii\n\n*/\n\n#include &lt;allegro.h&gt;\n#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\n/* the following characters' glyphs represent 2x2 pixel tiles */\nconst char tiles[16] = {\n  'M', 'P', 'V', '\"',\n  'b', ')', '\\\\','\\'',\n  'd', '/', '(', '`',\n  'a', '.', ',', ' '\n};\n\nint main(int argc, char **argv)\n{\n  BITMAP *bmp;\n  int y;\n\n  install_allegro(SYSTEM_NONE, &amp;errno, atexit);\n\n  if(argc != 2)\n  {\n    allegro_message(\"usage: ascii foo.bmp\\n\");\n    return EXIT_FAILURE;\n  }\n\n  /* if you've installed Allegro library extensions for\n     other bitmap formats, register their functions here */\n\n  bmp = load_bitmap(argv[1], NULL);\n  if(bmp == NULL)\n  {\n    allegro_exit();\n\n    fprintf(stderr, \"ascii Error: could not load bitmap `%s'\\n\", argv[1]);\n    return EXIT_FAILURE;\n  }\n\n  for(y = 0; y &lt; bmp-&gt;h; y += 2)\n  {\n    int x;\n    for(x = 0; x &lt; bmp-&gt;w; x += 2)\n    {\n      int c = 0;\n      if(getpixel(bmp, x,   y  ) &amp; 1)\n        c |= 8;\n      if(getpixel(bmp, x+1, y  ) &amp; 1)\n        c |= 4;\n      if(getpixel(bmp, x,   y+1) &amp; 1)\n        c |= 2;\n      if(getpixel(bmp, x+1, y+1) &amp; 1)\n        c |= 1;\n      putchar(tiles[c]);\n    }\n    putchar('\\n');\n  }\n  destroy_bitmap(bmp);\n\n  return EXIT_SUCCESS;\n} END_OF_MAIN();{% endcodeblock %}\n\n\nThe ASCII art is the art of using characters to create a \"picture\". like:\n\n<a href=\"http://chillyc.info/wp-content/uploads/2010/04/12/ascii/Redwingblackbird1.jpg\"><img class=\"aligncenter size-full wp-image-159\" title=\"Redwingblackbird\" src=\"http://chillyc.info/wp-content/uploads/2010/04/12/ascii/Redwingblackbird1.jpg\" alt=\"\" width=\"250\" height=\"212\"></a>the ASCII is:\n\n<a href=\"http://chillyc.info/wp-content/uploads/2010/04/12/ascii/Screenshot.png\"><img class=\"aligncenter size-medium wp-image-164\" title=\"Screenshot\" src=\"http://chillyc.info/wp-content/uploads/2010/04/12/ascii/Screenshot-300x240.png\" alt=\"\" width=\"300\" height=\"240\"></a>\n","source":"_posts/2010-04-12-ascii.markdown","raw":"---\nlayout: post\ntitle: \"ascii table and ascii conversion tool\"\ndate: 2010-4-12\nwordpress_id: 155\ncomments: true\ncategories: [\"art\", \"ascii\", \"char\", \"character\", \"code\", \"conversion\", \"see-hear\", \"tool\", \"word\"]\n---\n<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"views\" content=\"1256\" />\n<meta name=\"_oembed_1182a4049c943374b18ea1ce87e40b3c\" content=\"{{unknown}}\" />\n<meta name=\"_oembed_979ac7989e73a0be6ed3dcf372aa92ad\" content=\"{{unknown}}\" />\n<meta name=\"_oembed_fcf398842b787ae9fd78decf2181807e\" content=\"{{unknown}}\" />\n<meta name=\"_oembed_923c502f893a81beba9034f3ab2af40d\" content=\"{{unknown}}\" />\n<a href=\"http://chillyc.info/wp-content/uploads/2010/04/12/ascii/asciifull.gif\"><img class=\"aligncenter size-full wp-image-156\" title=\"asciifull\" src=\"http://chillyc.info/wp-content/uploads/2010/04/12/ascii/asciifull.gif\" alt=\"\" width=\"715\" height=\"488\"></a>\n\nMy signature:\n\n<a href=\"http://chillyc.info/wp-content/uploads/2010/04/12/ascii/chillyc.png\"><img class=\"aligncenter size-medium wp-image-166\" title=\"chillyc\" src=\"http://chillyc.info/wp-content/uploads/2010/04/12/ascii/chillyc-300x240.png\" alt=\"\" width=\"300\" height=\"240\"></a>\n\nhttp://en.wikipedia.org/wiki/Wikipedia:ASCII_art_conversion_tool\n\nthere is a good tool for converting bitmap to ascii.\n\n[codesyntax lang=\"c\" tab_width=\"2\"]\n{% codeblock %}/*\n\nascii art conversion utility\nCopyright 2001 Damian Yerrick\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\n\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\nBE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN\nAN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF\nOR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\nIN THE SOFTWARE.\n\n*/\n/*\n\nascii.c converts a bitmap (in .bmp or .pcx format) to ASCII art.\nIt treats the least significant bitplane as a monochrome image,\nmaking 0 dark and 1 light.  Each character sent to stdout represents\na 2x2 cell in the bitmap.\n\nIt uses the Allegro library to read the bitmap.  Allegro is a\nmultimedia library that has been ported to POSIX+X11, DOS, Windows,\nBeOS, and Mac OS.  There are library extensions that allow Allegro\nto handle other file formats such as PNG.\n  http://alleg.sourceforge.net/allegro/\n\nBecause of the simple design of the program, it is also extremely\neasy to port to other imaging APIs.\n\nCompilation on DOS:\n  gcc -Wall -O ascii.c -lalleg -o ascii.exe\nCompilation on Linux:\n  gcc -Wall -O ascii.c `allegro-config --libs` -o ascii\n\n*/\n\n#include &lt;allegro.h&gt;\n#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\n/* the following characters' glyphs represent 2x2 pixel tiles */\nconst char tiles[16] = {\n  'M', 'P', 'V', '\"',\n  'b', ')', '\\\\','\\'',\n  'd', '/', '(', '`',\n  'a', '.', ',', ' '\n};\n\nint main(int argc, char **argv)\n{\n  BITMAP *bmp;\n  int y;\n\n  install_allegro(SYSTEM_NONE, &amp;errno, atexit);\n\n  if(argc != 2)\n  {\n    allegro_message(\"usage: ascii foo.bmp\\n\");\n    return EXIT_FAILURE;\n  }\n\n  /* if you've installed Allegro library extensions for\n     other bitmap formats, register their functions here */\n\n  bmp = load_bitmap(argv[1], NULL);\n  if(bmp == NULL)\n  {\n    allegro_exit();\n\n    fprintf(stderr, \"ascii Error: could not load bitmap `%s'\\n\", argv[1]);\n    return EXIT_FAILURE;\n  }\n\n  for(y = 0; y &lt; bmp-&gt;h; y += 2)\n  {\n    int x;\n    for(x = 0; x &lt; bmp-&gt;w; x += 2)\n    {\n      int c = 0;\n      if(getpixel(bmp, x,   y  ) &amp; 1)\n        c |= 8;\n      if(getpixel(bmp, x+1, y  ) &amp; 1)\n        c |= 4;\n      if(getpixel(bmp, x,   y+1) &amp; 1)\n        c |= 2;\n      if(getpixel(bmp, x+1, y+1) &amp; 1)\n        c |= 1;\n      putchar(tiles[c]);\n    }\n    putchar('\\n');\n  }\n  destroy_bitmap(bmp);\n\n  return EXIT_SUCCESS;\n} END_OF_MAIN();{% endcodeblock %}\n\n\nThe ASCII art is the art of using characters to create a \"picture\". like:\n\n<a href=\"http://chillyc.info/wp-content/uploads/2010/04/12/ascii/Redwingblackbird1.jpg\"><img class=\"aligncenter size-full wp-image-159\" title=\"Redwingblackbird\" src=\"http://chillyc.info/wp-content/uploads/2010/04/12/ascii/Redwingblackbird1.jpg\" alt=\"\" width=\"250\" height=\"212\"></a>the ASCII is:\n\n<a href=\"http://chillyc.info/wp-content/uploads/2010/04/12/ascii/Screenshot.png\"><img class=\"aligncenter size-medium wp-image-164\" title=\"Screenshot\" src=\"http://chillyc.info/wp-content/uploads/2010/04/12/ascii/Screenshot-300x240.png\" alt=\"\" width=\"300\" height=\"240\"></a>\n","slug":"2010-04-12-ascii","published":1,"updated":"2017-06-05T03:01:07.000Z","photos":[],"link":"","_id":"cj3jjuseg00021hmj2phk3i8n","content":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"views\" content=\"1256\"></p>\n<p><meta name=\"_oembed_1182a4049c943374b18ea1ce87e40b3c\" content=\"\"></p>\n<p><meta name=\"_oembed_979ac7989e73a0be6ed3dcf372aa92ad\" content=\"\"></p>\n<p><meta name=\"_oembed_fcf398842b787ae9fd78decf2181807e\" content=\"\"></p>\n<p><meta name=\"_oembed_923c502f893a81beba9034f3ab2af40d\" content=\"\"><br><a href=\"http://chillyc.info/wp-content/uploads/2010/04/12/ascii/asciifull.gif\"><img class=\"aligncenter size-full wp-image-156\" title=\"asciifull\" src=\"http://chillyc.info/wp-content/uploads/2010/04/12/ascii/asciifull.gif\" alt=\"\" width=\"715\" height=\"488\"></a></p>\n<p>My signature:</p>\n<p><a href=\"http://chillyc.info/wp-content/uploads/2010/04/12/ascii/chillyc.png\"><img class=\"aligncenter size-medium wp-image-166\" title=\"chillyc\" src=\"http://chillyc.info/wp-content/uploads/2010/04/12/ascii/chillyc-300x240.png\" alt=\"\" width=\"300\" height=\"240\"></a></p>\n<p><a href=\"http://en.wikipedia.org/wiki/Wikipedia:ASCII_art_conversion_tool\" target=\"_blank\" rel=\"external\">http://en.wikipedia.org/wiki/Wikipedia:ASCII_art_conversion_tool</a></p>\n<p>there is a good tool for converting bitmap to ascii.</p>\n<p>[codesyntax lang=”c” tab_width=”2”]<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div></pre></td><td class=\"code\"><pre><div class=\"line\">/*</div><div class=\"line\"></div><div class=\"line\">ascii art conversion utility</div><div class=\"line\">Copyright 2001 Damian Yerrick</div><div class=\"line\"></div><div class=\"line\">Permission is hereby granted, free of charge, to any person obtaining</div><div class=\"line\">a copy of this software and associated documentation files (the</div><div class=\"line\">&quot;Software&quot;), to deal in the Software without restriction, including</div><div class=\"line\"></div><div class=\"line\">without limitation the rights to use, copy, modify, merge, publish,</div><div class=\"line\">distribute, sublicense, and/or sell copies of the Software, and to</div><div class=\"line\">permit persons to whom the Software is furnished to do so, subject to</div><div class=\"line\">the following conditions:</div><div class=\"line\"></div><div class=\"line\">The above copyright notice and this permission notice shall be</div><div class=\"line\">included in all copies or substantial portions of the Software.</div><div class=\"line\"></div><div class=\"line\">THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND,</div><div class=\"line\">EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES</div><div class=\"line\">OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND</div><div class=\"line\">NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS</div><div class=\"line\">BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN</div><div class=\"line\">AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF</div><div class=\"line\">OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS</div><div class=\"line\">IN THE SOFTWARE.</div><div class=\"line\"></div><div class=\"line\">*/</div><div class=\"line\">/*</div><div class=\"line\"></div><div class=\"line\">ascii.c converts a bitmap (in .bmp or .pcx format) to ASCII art.</div><div class=\"line\">It treats the least significant bitplane as a monochrome image,</div><div class=\"line\">making 0 dark and 1 light.  Each character sent to stdout represents</div><div class=\"line\">a 2x2 cell in the bitmap.</div><div class=\"line\"></div><div class=\"line\">It uses the Allegro library to read the bitmap.  Allegro is a</div><div class=\"line\">multimedia library that has been ported to POSIX+X11, DOS, Windows,</div><div class=\"line\">BeOS, and Mac OS.  There are library extensions that allow Allegro</div><div class=\"line\">to handle other file formats such as PNG.</div><div class=\"line\">  http://alleg.sourceforge.net/allegro/</div><div class=\"line\"></div><div class=\"line\">Because of the simple design of the program, it is also extremely</div><div class=\"line\">easy to port to other imaging APIs.</div><div class=\"line\"></div><div class=\"line\">Compilation on DOS:</div><div class=\"line\">  gcc -Wall -O ascii.c -lalleg -o ascii.exe</div><div class=\"line\">Compilation on Linux:</div><div class=\"line\">  gcc -Wall -O ascii.c `allegro-config --libs` -o ascii</div><div class=\"line\"></div><div class=\"line\">*/</div><div class=\"line\"></div><div class=\"line\">#include &amp;lt;allegro.h&amp;gt;</div><div class=\"line\">#include &amp;lt;stdio.h&amp;gt;</div><div class=\"line\">#include &amp;lt;stdlib.h&amp;gt;</div><div class=\"line\"></div><div class=\"line\">/* the following characters&apos; glyphs represent 2x2 pixel tiles */</div><div class=\"line\">const char tiles[16] = &#123;</div><div class=\"line\">  &apos;M&apos;, &apos;P&apos;, &apos;V&apos;, &apos;&quot;&apos;,</div><div class=\"line\">  &apos;b&apos;, &apos;)&apos;, &apos;\\\\&apos;,&apos;\\&apos;&apos;,</div><div class=\"line\">  &apos;d&apos;, &apos;/&apos;, &apos;(&apos;, &apos;`&apos;,</div><div class=\"line\">  &apos;a&apos;, &apos;.&apos;, &apos;,&apos;, &apos; &apos;</div><div class=\"line\">&#125;;</div><div class=\"line\"></div><div class=\"line\">int main(int argc, char **argv)</div><div class=\"line\">&#123;</div><div class=\"line\">  BITMAP *bmp;</div><div class=\"line\">  int y;</div><div class=\"line\"></div><div class=\"line\">  install_allegro(SYSTEM_NONE, &amp;amp;errno, atexit);</div><div class=\"line\"></div><div class=\"line\">  if(argc != 2)</div><div class=\"line\">  &#123;</div><div class=\"line\">    allegro_message(&quot;usage: ascii foo.bmp\\n&quot;);</div><div class=\"line\">    return EXIT_FAILURE;</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">  /* if you&apos;ve installed Allegro library extensions for</div><div class=\"line\">     other bitmap formats, register their functions here */</div><div class=\"line\"></div><div class=\"line\">  bmp = load_bitmap(argv[1], NULL);</div><div class=\"line\">  if(bmp == NULL)</div><div class=\"line\">  &#123;</div><div class=\"line\">    allegro_exit();</div><div class=\"line\"></div><div class=\"line\">    fprintf(stderr, &quot;ascii Error: could not load bitmap `%s&apos;\\n&quot;, argv[1]);</div><div class=\"line\">    return EXIT_FAILURE;</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">  for(y = 0; y &amp;lt; bmp-&amp;gt;h; y += 2)</div><div class=\"line\">  &#123;</div><div class=\"line\">    int x;</div><div class=\"line\">    for(x = 0; x &amp;lt; bmp-&amp;gt;w; x += 2)</div><div class=\"line\">    &#123;</div><div class=\"line\">      int c = 0;</div><div class=\"line\">      if(getpixel(bmp, x,   y  ) &amp;amp; 1)</div><div class=\"line\">        c |= 8;</div><div class=\"line\">      if(getpixel(bmp, x+1, y  ) &amp;amp; 1)</div><div class=\"line\">        c |= 4;</div><div class=\"line\">      if(getpixel(bmp, x,   y+1) &amp;amp; 1)</div><div class=\"line\">        c |= 2;</div><div class=\"line\">      if(getpixel(bmp, x+1, y+1) &amp;amp; 1)</div><div class=\"line\">        c |= 1;</div><div class=\"line\">      putchar(tiles[c]);</div><div class=\"line\">    &#125;</div><div class=\"line\">    putchar(&apos;\\n&apos;);</div><div class=\"line\">  &#125;</div><div class=\"line\">  destroy_bitmap(bmp);</div><div class=\"line\"></div><div class=\"line\">  return EXIT_SUCCESS;</div><div class=\"line\">&#125; END_OF_MAIN();</div></pre></td></tr></table></figure></p>\n<p>The ASCII art is the art of using characters to create a “picture”. like:</p>\n<p><a href=\"http://chillyc.info/wp-content/uploads/2010/04/12/ascii/Redwingblackbird1.jpg\"><img class=\"aligncenter size-full wp-image-159\" title=\"Redwingblackbird\" src=\"http://chillyc.info/wp-content/uploads/2010/04/12/ascii/Redwingblackbird1.jpg\" alt=\"\" width=\"250\" height=\"212\"></a>the ASCII is:</p>\n<p><a href=\"http://chillyc.info/wp-content/uploads/2010/04/12/ascii/Screenshot.png\"><img class=\"aligncenter size-medium wp-image-164\" title=\"Screenshot\" src=\"http://chillyc.info/wp-content/uploads/2010/04/12/ascii/Screenshot-300x240.png\" alt=\"\" width=\"300\" height=\"240\"></a></p>\n","site":{"data":{}},"excerpt":"","more":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"views\" content=\"1256\"></p>\n<p><meta name=\"_oembed_1182a4049c943374b18ea1ce87e40b3c\" content=\"\"></p>\n<p><meta name=\"_oembed_979ac7989e73a0be6ed3dcf372aa92ad\" content=\"\"></p>\n<p><meta name=\"_oembed_fcf398842b787ae9fd78decf2181807e\" content=\"\"></p>\n<p><meta name=\"_oembed_923c502f893a81beba9034f3ab2af40d\" content=\"\"><br><a href=\"http://chillyc.info/wp-content/uploads/2010/04/12/ascii/asciifull.gif\"><img class=\"aligncenter size-full wp-image-156\" title=\"asciifull\" src=\"http://chillyc.info/wp-content/uploads/2010/04/12/ascii/asciifull.gif\" alt=\"\" width=\"715\" height=\"488\"></a></p>\n<p>My signature:</p>\n<p><a href=\"http://chillyc.info/wp-content/uploads/2010/04/12/ascii/chillyc.png\"><img class=\"aligncenter size-medium wp-image-166\" title=\"chillyc\" src=\"http://chillyc.info/wp-content/uploads/2010/04/12/ascii/chillyc-300x240.png\" alt=\"\" width=\"300\" height=\"240\"></a></p>\n<p><a href=\"http://en.wikipedia.org/wiki/Wikipedia:ASCII_art_conversion_tool\" target=\"_blank\" rel=\"external\">http://en.wikipedia.org/wiki/Wikipedia:ASCII_art_conversion_tool</a></p>\n<p>there is a good tool for converting bitmap to ascii.</p>\n<p>[codesyntax lang=”c” tab_width=”2”]<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div></pre></td><td class=\"code\"><pre><div class=\"line\">/*</div><div class=\"line\"></div><div class=\"line\">ascii art conversion utility</div><div class=\"line\">Copyright 2001 Damian Yerrick</div><div class=\"line\"></div><div class=\"line\">Permission is hereby granted, free of charge, to any person obtaining</div><div class=\"line\">a copy of this software and associated documentation files (the</div><div class=\"line\">&quot;Software&quot;), to deal in the Software without restriction, including</div><div class=\"line\"></div><div class=\"line\">without limitation the rights to use, copy, modify, merge, publish,</div><div class=\"line\">distribute, sublicense, and/or sell copies of the Software, and to</div><div class=\"line\">permit persons to whom the Software is furnished to do so, subject to</div><div class=\"line\">the following conditions:</div><div class=\"line\"></div><div class=\"line\">The above copyright notice and this permission notice shall be</div><div class=\"line\">included in all copies or substantial portions of the Software.</div><div class=\"line\"></div><div class=\"line\">THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND,</div><div class=\"line\">EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES</div><div class=\"line\">OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND</div><div class=\"line\">NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS</div><div class=\"line\">BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN</div><div class=\"line\">AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF</div><div class=\"line\">OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS</div><div class=\"line\">IN THE SOFTWARE.</div><div class=\"line\"></div><div class=\"line\">*/</div><div class=\"line\">/*</div><div class=\"line\"></div><div class=\"line\">ascii.c converts a bitmap (in .bmp or .pcx format) to ASCII art.</div><div class=\"line\">It treats the least significant bitplane as a monochrome image,</div><div class=\"line\">making 0 dark and 1 light.  Each character sent to stdout represents</div><div class=\"line\">a 2x2 cell in the bitmap.</div><div class=\"line\"></div><div class=\"line\">It uses the Allegro library to read the bitmap.  Allegro is a</div><div class=\"line\">multimedia library that has been ported to POSIX+X11, DOS, Windows,</div><div class=\"line\">BeOS, and Mac OS.  There are library extensions that allow Allegro</div><div class=\"line\">to handle other file formats such as PNG.</div><div class=\"line\">  http://alleg.sourceforge.net/allegro/</div><div class=\"line\"></div><div class=\"line\">Because of the simple design of the program, it is also extremely</div><div class=\"line\">easy to port to other imaging APIs.</div><div class=\"line\"></div><div class=\"line\">Compilation on DOS:</div><div class=\"line\">  gcc -Wall -O ascii.c -lalleg -o ascii.exe</div><div class=\"line\">Compilation on Linux:</div><div class=\"line\">  gcc -Wall -O ascii.c `allegro-config --libs` -o ascii</div><div class=\"line\"></div><div class=\"line\">*/</div><div class=\"line\"></div><div class=\"line\">#include &amp;lt;allegro.h&amp;gt;</div><div class=\"line\">#include &amp;lt;stdio.h&amp;gt;</div><div class=\"line\">#include &amp;lt;stdlib.h&amp;gt;</div><div class=\"line\"></div><div class=\"line\">/* the following characters&apos; glyphs represent 2x2 pixel tiles */</div><div class=\"line\">const char tiles[16] = &#123;</div><div class=\"line\">  &apos;M&apos;, &apos;P&apos;, &apos;V&apos;, &apos;&quot;&apos;,</div><div class=\"line\">  &apos;b&apos;, &apos;)&apos;, &apos;\\\\&apos;,&apos;\\&apos;&apos;,</div><div class=\"line\">  &apos;d&apos;, &apos;/&apos;, &apos;(&apos;, &apos;`&apos;,</div><div class=\"line\">  &apos;a&apos;, &apos;.&apos;, &apos;,&apos;, &apos; &apos;</div><div class=\"line\">&#125;;</div><div class=\"line\"></div><div class=\"line\">int main(int argc, char **argv)</div><div class=\"line\">&#123;</div><div class=\"line\">  BITMAP *bmp;</div><div class=\"line\">  int y;</div><div class=\"line\"></div><div class=\"line\">  install_allegro(SYSTEM_NONE, &amp;amp;errno, atexit);</div><div class=\"line\"></div><div class=\"line\">  if(argc != 2)</div><div class=\"line\">  &#123;</div><div class=\"line\">    allegro_message(&quot;usage: ascii foo.bmp\\n&quot;);</div><div class=\"line\">    return EXIT_FAILURE;</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">  /* if you&apos;ve installed Allegro library extensions for</div><div class=\"line\">     other bitmap formats, register their functions here */</div><div class=\"line\"></div><div class=\"line\">  bmp = load_bitmap(argv[1], NULL);</div><div class=\"line\">  if(bmp == NULL)</div><div class=\"line\">  &#123;</div><div class=\"line\">    allegro_exit();</div><div class=\"line\"></div><div class=\"line\">    fprintf(stderr, &quot;ascii Error: could not load bitmap `%s&apos;\\n&quot;, argv[1]);</div><div class=\"line\">    return EXIT_FAILURE;</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">  for(y = 0; y &amp;lt; bmp-&amp;gt;h; y += 2)</div><div class=\"line\">  &#123;</div><div class=\"line\">    int x;</div><div class=\"line\">    for(x = 0; x &amp;lt; bmp-&amp;gt;w; x += 2)</div><div class=\"line\">    &#123;</div><div class=\"line\">      int c = 0;</div><div class=\"line\">      if(getpixel(bmp, x,   y  ) &amp;amp; 1)</div><div class=\"line\">        c |= 8;</div><div class=\"line\">      if(getpixel(bmp, x+1, y  ) &amp;amp; 1)</div><div class=\"line\">        c |= 4;</div><div class=\"line\">      if(getpixel(bmp, x,   y+1) &amp;amp; 1)</div><div class=\"line\">        c |= 2;</div><div class=\"line\">      if(getpixel(bmp, x+1, y+1) &amp;amp; 1)</div><div class=\"line\">        c |= 1;</div><div class=\"line\">      putchar(tiles[c]);</div><div class=\"line\">    &#125;</div><div class=\"line\">    putchar(&apos;\\n&apos;);</div><div class=\"line\">  &#125;</div><div class=\"line\">  destroy_bitmap(bmp);</div><div class=\"line\"></div><div class=\"line\">  return EXIT_SUCCESS;</div><div class=\"line\">&#125; END_OF_MAIN();</div></pre></td></tr></table></figure></p>\n<p>The ASCII art is the art of using characters to create a “picture”. like:</p>\n<p><a href=\"http://chillyc.info/wp-content/uploads/2010/04/12/ascii/Redwingblackbird1.jpg\"><img class=\"aligncenter size-full wp-image-159\" title=\"Redwingblackbird\" src=\"http://chillyc.info/wp-content/uploads/2010/04/12/ascii/Redwingblackbird1.jpg\" alt=\"\" width=\"250\" height=\"212\"></a>the ASCII is:</p>\n<p><a href=\"http://chillyc.info/wp-content/uploads/2010/04/12/ascii/Screenshot.png\"><img class=\"aligncenter size-medium wp-image-164\" title=\"Screenshot\" src=\"http://chillyc.info/wp-content/uploads/2010/04/12/ascii/Screenshot-300x240.png\" alt=\"\" width=\"300\" height=\"240\"></a></p>\n"},{"layout":"post","title":"the scale of types","date":"2010-04-11T16:00:00.000Z","wordpress_id":152,"comments":1,"_content":"<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"views\" content=\"328\" />\nThe scale of type int is$latex -2^{31}~2^{31}-1$, and it is a little more than $latex -2*10^{9}~2*10^{9}$. and the scale of long long type is $latex -2^{63}~2^{63}-1$, and it is a little less than $latex -10^{19}~10^{19}$\n\nint i = $latex 10^{6}* 10^{6}$; // this is wrong!!!!\n\nlong long j = $latex 10^{9}* 10^{9}$ ; // this is correct!\n\nprintf(\"%d\",i);\n\nprintf(\"%lld\",j);\n\nint some platform or some compiler, long type is equal to int type. They are 32 bits. But long long type is 64 bits in linux.\n\nuse #define to declare a const, like this( if the number is too big):\n\n#define BIG (9000000000000000000)ULL // this is unsigned long long\n","source":"_posts/2010-04-12-the-scale-of-types.markdown","raw":"---\nlayout: post\ntitle: \"the scale of types\"\ndate: 2010-4-12\nwordpress_id: 152\ncomments: true\ncategories: [\"cc\", \"code\", \"int\", \"long-long\", \"scale\", \"type\"]\n---\n<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"views\" content=\"328\" />\nThe scale of type int is$latex -2^{31}~2^{31}-1$, and it is a little more than $latex -2*10^{9}~2*10^{9}$. and the scale of long long type is $latex -2^{63}~2^{63}-1$, and it is a little less than $latex -10^{19}~10^{19}$\n\nint i = $latex 10^{6}* 10^{6}$; // this is wrong!!!!\n\nlong long j = $latex 10^{9}* 10^{9}$ ; // this is correct!\n\nprintf(\"%d\",i);\n\nprintf(\"%lld\",j);\n\nint some platform or some compiler, long type is equal to int type. They are 32 bits. But long long type is 64 bits in linux.\n\nuse #define to declare a const, like this( if the number is too big):\n\n#define BIG (9000000000000000000)ULL // this is unsigned long long\n","slug":"2010-04-12-the-scale-of-types","published":1,"updated":"2017-06-05T03:01:07.000Z","photos":[],"link":"","_id":"cj3jjusel00031hmj33cixgvu","content":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"views\" content=\"328\"><br>The scale of type int is$latex -2^{31}~2^{31}-1$, and it is a little more than $latex -2<em>10^{9}~2</em>10^{9}$. and the scale of long long type is $latex -2^{63}~2^{63}-1$, and it is a little less than $latex -10^{19}~10^{19}$</p>\n<p>int i = $latex 10^{6}* 10^{6}$; // this is wrong!!!!</p>\n<p>long long j = $latex 10^{9}* 10^{9}$ ; // this is correct!</p>\n<p>printf(“%d”,i);</p>\n<p>printf(“%lld”,j);</p>\n<p>int some platform or some compiler, long type is equal to int type. They are 32 bits. But long long type is 64 bits in linux.</p>\n<p>use #define to declare a const, like this( if the number is too big):</p>\n<p>#define BIG (9000000000000000000)ULL // this is unsigned long long</p>\n","site":{"data":{}},"excerpt":"","more":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"views\" content=\"328\"><br>The scale of type int is$latex -2^{31}~2^{31}-1$, and it is a little more than $latex -2<em>10^{9}~2</em>10^{9}$. and the scale of long long type is $latex -2^{63}~2^{63}-1$, and it is a little less than $latex -10^{19}~10^{19}$</p>\n<p>int i = $latex 10^{6}* 10^{6}$; // this is wrong!!!!</p>\n<p>long long j = $latex 10^{9}* 10^{9}$ ; // this is correct!</p>\n<p>printf(“%d”,i);</p>\n<p>printf(“%lld”,j);</p>\n<p>int some platform or some compiler, long type is equal to int type. They are 32 bits. But long long type is 64 bits in linux.</p>\n<p>use #define to declare a const, like this( if the number is too big):</p>\n<p>#define BIG (9000000000000000000)ULL // this is unsigned long long</p>\n"},{"layout":"post","title":"gcc error","date":"2010-04-13T16:00:00.000Z","wordpress_id":168,"comments":1,"_content":"<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"views\" content=\"890\" />\nif you use const variable to define an array out of main, like that:\n\n\n{% codeblock %}#include&lt;stdio.h&gt;\n\nconst int MAX= 100010;\nchar s[MAX];\nint main(){\n\n    while(fgets(s,MAX,stdin) != NULL){\n        puts(s);\n    }\n    return 0;\n\n}{% endcodeblock %}\n\n\ngcc will report : Error: variably modified ‘s’ at file scope. But if you use #define, it will be ok. like that:\n\n\n{% codeblock %}#include&lt;stdio.h&gt;\n\n#define MAX 100010\nchar s[MAX];\nint main(){\n\n    while(fgets(s,MAX,stdin) != NULL){\n        puts(s);\n    }\n    return 0;\n\n}{% endcodeblock %}\n\n\nIf you do not want to use #define macro, and you will use a small array, you can use a const variable to define the array size, like that:\n\n\n{% codeblock %}#include&lt;stdio.h&gt;\n\n//#define MAX 100010\n//char s[MAX];\nint main(){\n    const int MAX= 30;\n    char s[MAX];\n    while(fgets(s,MAX,stdin) != NULL){\n        puts(s);\n    }\n    return 0;\n\n}{% endcodeblock %}\n\n\nBut if you will allocate a big array in main function, gcc will report a warning :warning: overflow in implicit constant conversion\n","source":"_posts/2010-04-14-gcc-error.markdown","raw":"---\nlayout: post\ntitle: \"gcc error\"\ndate: 2010-4-14\nwordpress_id: 168\ncomments: true\ncategories: [\"allocate\", \"array\", \"big\", \"cc\", \"code\", \"const\", \"define\", \"error\", \"gcc\", \"see-hear\", \"warning\"]\n---\n<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"views\" content=\"890\" />\nif you use const variable to define an array out of main, like that:\n\n\n{% codeblock %}#include&lt;stdio.h&gt;\n\nconst int MAX= 100010;\nchar s[MAX];\nint main(){\n\n    while(fgets(s,MAX,stdin) != NULL){\n        puts(s);\n    }\n    return 0;\n\n}{% endcodeblock %}\n\n\ngcc will report : Error: variably modified ‘s’ at file scope. But if you use #define, it will be ok. like that:\n\n\n{% codeblock %}#include&lt;stdio.h&gt;\n\n#define MAX 100010\nchar s[MAX];\nint main(){\n\n    while(fgets(s,MAX,stdin) != NULL){\n        puts(s);\n    }\n    return 0;\n\n}{% endcodeblock %}\n\n\nIf you do not want to use #define macro, and you will use a small array, you can use a const variable to define the array size, like that:\n\n\n{% codeblock %}#include&lt;stdio.h&gt;\n\n//#define MAX 100010\n//char s[MAX];\nint main(){\n    const int MAX= 30;\n    char s[MAX];\n    while(fgets(s,MAX,stdin) != NULL){\n        puts(s);\n    }\n    return 0;\n\n}{% endcodeblock %}\n\n\nBut if you will allocate a big array in main function, gcc will report a warning :warning: overflow in implicit constant conversion\n","slug":"2010-04-14-gcc-error","published":1,"updated":"2017-06-05T03:01:07.000Z","photos":[],"link":"","_id":"cj3jjuseq00051hmjbj17yf8d","content":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"views\" content=\"890\"><br>if you use const variable to define an array out of main, like that:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&amp;lt;stdio.h&amp;gt;</div><div class=\"line\"></div><div class=\"line\">const int MAX= 100010;</div><div class=\"line\">char s[MAX];</div><div class=\"line\">int main()&#123;</div><div class=\"line\"></div><div class=\"line\">    while(fgets(s,MAX,stdin) != NULL)&#123;</div><div class=\"line\">        puts(s);</div><div class=\"line\">    &#125;</div><div class=\"line\">    return 0;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>gcc will report : Error: variably modified ‘s’ at file scope. But if you use #define, it will be ok. like that:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&amp;lt;stdio.h&amp;gt;</div><div class=\"line\"></div><div class=\"line\">#define MAX 100010</div><div class=\"line\">char s[MAX];</div><div class=\"line\">int main()&#123;</div><div class=\"line\"></div><div class=\"line\">    while(fgets(s,MAX,stdin) != NULL)&#123;</div><div class=\"line\">        puts(s);</div><div class=\"line\">    &#125;</div><div class=\"line\">    return 0;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>If you do not want to use #define macro, and you will use a small array, you can use a const variable to define the array size, like that:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&amp;lt;stdio.h&amp;gt;</div><div class=\"line\"></div><div class=\"line\">//#define MAX 100010</div><div class=\"line\">//char s[MAX];</div><div class=\"line\">int main()&#123;</div><div class=\"line\">    const int MAX= 30;</div><div class=\"line\">    char s[MAX];</div><div class=\"line\">    while(fgets(s,MAX,stdin) != NULL)&#123;</div><div class=\"line\">        puts(s);</div><div class=\"line\">    &#125;</div><div class=\"line\">    return 0;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>But if you will allocate a big array in main function, gcc will report a warning :warning: overflow in implicit constant conversion</p>\n","site":{"data":{}},"excerpt":"","more":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"views\" content=\"890\"><br>if you use const variable to define an array out of main, like that:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&amp;lt;stdio.h&amp;gt;</div><div class=\"line\"></div><div class=\"line\">const int MAX= 100010;</div><div class=\"line\">char s[MAX];</div><div class=\"line\">int main()&#123;</div><div class=\"line\"></div><div class=\"line\">    while(fgets(s,MAX,stdin) != NULL)&#123;</div><div class=\"line\">        puts(s);</div><div class=\"line\">    &#125;</div><div class=\"line\">    return 0;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>gcc will report : Error: variably modified ‘s’ at file scope. But if you use #define, it will be ok. like that:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&amp;lt;stdio.h&amp;gt;</div><div class=\"line\"></div><div class=\"line\">#define MAX 100010</div><div class=\"line\">char s[MAX];</div><div class=\"line\">int main()&#123;</div><div class=\"line\"></div><div class=\"line\">    while(fgets(s,MAX,stdin) != NULL)&#123;</div><div class=\"line\">        puts(s);</div><div class=\"line\">    &#125;</div><div class=\"line\">    return 0;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>If you do not want to use #define macro, and you will use a small array, you can use a const variable to define the array size, like that:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&amp;lt;stdio.h&amp;gt;</div><div class=\"line\"></div><div class=\"line\">//#define MAX 100010</div><div class=\"line\">//char s[MAX];</div><div class=\"line\">int main()&#123;</div><div class=\"line\">    const int MAX= 30;</div><div class=\"line\">    char s[MAX];</div><div class=\"line\">    while(fgets(s,MAX,stdin) != NULL)&#123;</div><div class=\"line\">        puts(s);</div><div class=\"line\">    &#125;</div><div class=\"line\">    return 0;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>But if you will allocate a big array in main function, gcc will report a warning :warning: overflow in implicit constant conversion</p>\n"},{"layout":"post","title":"compare double numbers in c/c++ language","date":"2010-04-14T16:00:00.000Z","wordpress_id":172,"comments":1,"_content":"<meta name=\"views\" content=\"1686\" />\n<meta name=\"_edit_last\" content=\"1\" />\ndouble type is a strange type. And all in this type is not precision. If you want to compare two double numbers a and b are equal or not using: fabs(a-b) &lt; threshold. And threshold may be 0.000001 or even smaller. If you want to compare two numbers a and b are equal or not correcting to 2 decimal place. you can use fabs(a-b) &lt; 0.002, but you should not use fabs(a-b)&lt;0.01. if a is 99.99, it will store in computer as 99.9899999, and 99.98 may be 99.97999999 or 99.98000000, so fabs(a-b) will be 0.009999, this number will be equal to 0.01. So be careful.\n","source":"_posts/2010-04-15-compare-double-numbers-in-cc-language.markdown","raw":"---\nlayout: post\ntitle: \"compare double numbers in c/c++ language\"\ndate: 2010-4-15\nwordpress_id: 172\ncomments: true\ncategories: [\"c\", \"cc\", \"code\", \"double\"]\n---\n<meta name=\"views\" content=\"1686\" />\n<meta name=\"_edit_last\" content=\"1\" />\ndouble type is a strange type. And all in this type is not precision. If you want to compare two double numbers a and b are equal or not using: fabs(a-b) &lt; threshold. And threshold may be 0.000001 or even smaller. If you want to compare two numbers a and b are equal or not correcting to 2 decimal place. you can use fabs(a-b) &lt; 0.002, but you should not use fabs(a-b)&lt;0.01. if a is 99.99, it will store in computer as 99.9899999, and 99.98 may be 99.97999999 or 99.98000000, so fabs(a-b) will be 0.009999, this number will be equal to 0.01. So be careful.\n","slug":"2010-04-15-compare-double-numbers-in-cc-language","published":1,"updated":"2017-06-05T03:01:07.000Z","photos":[],"link":"","_id":"cj3jjusew00071hmjkqf9hdb4","content":"<p><meta name=\"views\" content=\"1686\"></p>\n<p><meta name=\"_edit_last\" content=\"1\"><br>double type is a strange type. And all in this type is not precision. If you want to compare two double numbers a and b are equal or not using: fabs(a-b) &lt; threshold. And threshold may be 0.000001 or even smaller. If you want to compare two numbers a and b are equal or not correcting to 2 decimal place. you can use fabs(a-b) &lt; 0.002, but you should not use fabs(a-b)&lt;0.01. if a is 99.99, it will store in computer as 99.9899999, and 99.98 may be 99.97999999 or 99.98000000, so fabs(a-b) will be 0.009999, this number will be equal to 0.01. So be careful.</p>\n","site":{"data":{}},"excerpt":"","more":"<p><meta name=\"views\" content=\"1686\"></p>\n<p><meta name=\"_edit_last\" content=\"1\"><br>double type is a strange type. And all in this type is not precision. If you want to compare two double numbers a and b are equal or not using: fabs(a-b) &lt; threshold. And threshold may be 0.000001 or even smaller. If you want to compare two numbers a and b are equal or not correcting to 2 decimal place. you can use fabs(a-b) &lt; 0.002, but you should not use fabs(a-b)&lt;0.01. if a is 99.99, it will store in computer as 99.9899999, and 99.98 may be 99.97999999 or 99.98000000, so fabs(a-b) will be 0.009999, this number will be equal to 0.01. So be careful.</p>\n"},{"layout":"post","title":"use doxygen","date":"2010-04-15T16:00:00.000Z","wordpress_id":176,"comments":1,"_content":"<meta name=\"views\" content=\"677\" />\n<meta name=\"_edit_last\" content=\"1\" />\n<span><span style=\"font-family: Verdana,Arial,Helvetica;\"><a id=\"step2\">doxygen is  a tool to generate documents. So you don't worry about writing mountainous documents of codes.  It can generate pdf, html, latex and also doc. But it will abstract the comment and keyword to generate documents. If your comments is not suitable for doxygen, it  will generate into documents.  First , get doxygen tool from Internet or use \"<strong>sudo apt-get install doxygen</strong>\" from ubuntu. Then cd to your project root, and type: \"<strong>doxygen -g</strong>\" to the configure file of generating document. Open New \"Doxyfile\" with vim or gedit. There are some labels in this configure file. label format is:\n</a></span></span>\n\n# All text after a hash (#) is considered a comment and will be ignored\n# The format is:\n#       <strong>TAG = value [value, ...]</strong>\n# For lists items can also be appended using:\n#       <strong>TAG += value [value, ...]</strong>\n# Values that contain spaces should be placed between quotes (\" \")\n\nThere are some useful label for cpp or c project.\n\n# this label will let you to use /// or //! comments to generate documents.\n\n<strong>MULTILINE_CPP_IS_BRIEF = YES</strong>\n\n# what's the size of tab in your code documents?\n\n<strong>TAB_SIZE               = 4</strong>\n\n# what's the name of project?\n\n<strong>PROJECT_NAME           = CNODE</strong>\n\n# If you use chinese or some other non-English language...\n\n<strong>DOXYFILE_ENCODING      = UTF-8</strong>\n\n# which patter you want to generate documents? If you left blank, doxygen will parse to kinds of files. But here, I just use two kinds files.\n\n<strong>FILE_PATTERNS          = *.h\nFILE_PATTERNS          += *.c</strong>\n\n# will you want recursive the code paths?\n\n<strong>RECURSIVE              = YES</strong>\n\nSave \"Doxyfile\" and run command: \"<strong>doxygen</strong>\"<strong>\n</strong>\n","source":"_posts/2010-04-16-use-doxygen.markdown","raw":"---\nlayout: post\ntitle: \"use doxygen\"\ndate: 2010-4-16\nwordpress_id: 176\ncomments: true\ncategories: [\"auto\", \"code\", \"document\", \"doxygen\", \"generate\", \"how-to\", \"open-source\", \"project\", \"see-hear\"]\n---\n<meta name=\"views\" content=\"677\" />\n<meta name=\"_edit_last\" content=\"1\" />\n<span><span style=\"font-family: Verdana,Arial,Helvetica;\"><a id=\"step2\">doxygen is  a tool to generate documents. So you don't worry about writing mountainous documents of codes.  It can generate pdf, html, latex and also doc. But it will abstract the comment and keyword to generate documents. If your comments is not suitable for doxygen, it  will generate into documents.  First , get doxygen tool from Internet or use \"<strong>sudo apt-get install doxygen</strong>\" from ubuntu. Then cd to your project root, and type: \"<strong>doxygen -g</strong>\" to the configure file of generating document. Open New \"Doxyfile\" with vim or gedit. There are some labels in this configure file. label format is:\n</a></span></span>\n\n# All text after a hash (#) is considered a comment and will be ignored\n# The format is:\n#       <strong>TAG = value [value, ...]</strong>\n# For lists items can also be appended using:\n#       <strong>TAG += value [value, ...]</strong>\n# Values that contain spaces should be placed between quotes (\" \")\n\nThere are some useful label for cpp or c project.\n\n# this label will let you to use /// or //! comments to generate documents.\n\n<strong>MULTILINE_CPP_IS_BRIEF = YES</strong>\n\n# what's the size of tab in your code documents?\n\n<strong>TAB_SIZE               = 4</strong>\n\n# what's the name of project?\n\n<strong>PROJECT_NAME           = CNODE</strong>\n\n# If you use chinese or some other non-English language...\n\n<strong>DOXYFILE_ENCODING      = UTF-8</strong>\n\n# which patter you want to generate documents? If you left blank, doxygen will parse to kinds of files. But here, I just use two kinds files.\n\n<strong>FILE_PATTERNS          = *.h\nFILE_PATTERNS          += *.c</strong>\n\n# will you want recursive the code paths?\n\n<strong>RECURSIVE              = YES</strong>\n\nSave \"Doxyfile\" and run command: \"<strong>doxygen</strong>\"<strong>\n</strong>\n","slug":"2010-04-16-use-doxygen","published":1,"updated":"2017-06-05T03:01:07.000Z","photos":[],"link":"","_id":"cj3jjusf300091hmjww2dqgjv","content":"<p><meta name=\"views\" content=\"677\"></p>\n<p><meta name=\"_edit_last\" content=\"1\"><br><span><span style=\"font-family: Verdana,Arial,Helvetica;\"><a id=\"step2\">doxygen is  a tool to generate documents. So you don’t worry about writing mountainous documents of codes.  It can generate pdf, html, latex and also doc. But it will abstract the comment and keyword to generate documents. If your comments is not suitable for doxygen, it  will generate into documents.  First , get doxygen tool from Internet or use “<strong>sudo apt-get install doxygen</strong>“ from ubuntu. Then cd to your project root, and type: “<strong>doxygen -g</strong>“ to the configure file of generating document. Open New “Doxyfile” with vim or gedit. There are some labels in this configure file. label format is:<br></a></span></span></p>\n<h1 id=\"All-text-after-a-hash-is-considered-a-comment-and-will-be-ignored\"><a href=\"#All-text-after-a-hash-is-considered-a-comment-and-will-be-ignored\" class=\"headerlink\" title=\"All text after a hash (#) is considered a comment and will be ignored\"></a>All text after a hash (#) is considered a comment and will be ignored</h1><h1 id=\"The-format-is\"><a href=\"#The-format-is\" class=\"headerlink\" title=\"The format is:\"></a>The format is:</h1><h1 id=\"TAG-value-value-…\"><a href=\"#TAG-value-value-…\" class=\"headerlink\" title=\"TAG = value [value, …]\"></a><strong>TAG = value [value, …]</strong></h1><h1 id=\"For-lists-items-can-also-be-appended-using\"><a href=\"#For-lists-items-can-also-be-appended-using\" class=\"headerlink\" title=\"For lists items can also be appended using:\"></a>For lists items can also be appended using:</h1><h1 id=\"TAG-value-value-…-1\"><a href=\"#TAG-value-value-…-1\" class=\"headerlink\" title=\"TAG += value [value, …]\"></a><strong>TAG += value [value, …]</strong></h1><h1 id=\"Values-that-contain-spaces-should-be-placed-between-quotes-“-“\"><a href=\"#Values-that-contain-spaces-should-be-placed-between-quotes-“-“\" class=\"headerlink\" title=\"Values that contain spaces should be placed between quotes (“ “)\"></a>Values that contain spaces should be placed between quotes (“ “)</h1><p>There are some useful label for cpp or c project.</p>\n<h1 id=\"this-label-will-let-you-to-use-or-comments-to-generate-documents\"><a href=\"#this-label-will-let-you-to-use-or-comments-to-generate-documents\" class=\"headerlink\" title=\"this label will let you to use /// or //! comments to generate documents.\"></a>this label will let you to use /// or //! comments to generate documents.</h1><p><strong>MULTILINE_CPP_IS_BRIEF = YES</strong></p>\n<h1 id=\"what’s-the-size-of-tab-in-your-code-documents\"><a href=\"#what’s-the-size-of-tab-in-your-code-documents\" class=\"headerlink\" title=\"what’s the size of tab in your code documents?\"></a>what’s the size of tab in your code documents?</h1><p><strong>TAB_SIZE               = 4</strong></p>\n<h1 id=\"what’s-the-name-of-project\"><a href=\"#what’s-the-name-of-project\" class=\"headerlink\" title=\"what’s the name of project?\"></a>what’s the name of project?</h1><p><strong>PROJECT_NAME           = CNODE</strong></p>\n<h1 id=\"If-you-use-chinese-or-some-other-non-English-language…\"><a href=\"#If-you-use-chinese-or-some-other-non-English-language…\" class=\"headerlink\" title=\"If you use chinese or some other non-English language…\"></a>If you use chinese or some other non-English language…</h1><p><strong>DOXYFILE_ENCODING      = UTF-8</strong></p>\n<h1 id=\"which-patter-you-want-to-generate-documents-If-you-left-blank-doxygen-will-parse-to-kinds-of-files-But-here-I-just-use-two-kinds-files\"><a href=\"#which-patter-you-want-to-generate-documents-If-you-left-blank-doxygen-will-parse-to-kinds-of-files-But-here-I-just-use-two-kinds-files\" class=\"headerlink\" title=\"which patter you want to generate documents? If you left blank, doxygen will parse to kinds of files. But here, I just use two kinds files.\"></a>which patter you want to generate documents? If you left blank, doxygen will parse to kinds of files. But here, I just use two kinds files.</h1><p><strong>FILE_PATTERNS          = <em>.h<br>FILE_PATTERNS          += </em>.c</strong></p>\n<h1 id=\"will-you-want-recursive-the-code-paths\"><a href=\"#will-you-want-recursive-the-code-paths\" class=\"headerlink\" title=\"will you want recursive the code paths?\"></a>will you want recursive the code paths?</h1><p><strong>RECURSIVE              = YES</strong></p>\n<p>Save “Doxyfile” and run command: “<strong>doxygen</strong>“<strong><br></strong></p>\n","site":{"data":{}},"excerpt":"","more":"<p><meta name=\"views\" content=\"677\"></p>\n<p><meta name=\"_edit_last\" content=\"1\"><br><span><span style=\"font-family: Verdana,Arial,Helvetica;\"><a id=\"step2\">doxygen is  a tool to generate documents. So you don’t worry about writing mountainous documents of codes.  It can generate pdf, html, latex and also doc. But it will abstract the comment and keyword to generate documents. If your comments is not suitable for doxygen, it  will generate into documents.  First , get doxygen tool from Internet or use “<strong>sudo apt-get install doxygen</strong>“ from ubuntu. Then cd to your project root, and type: “<strong>doxygen -g</strong>“ to the configure file of generating document. Open New “Doxyfile” with vim or gedit. There are some labels in this configure file. label format is:<br></a></span></span></p>\n<h1 id=\"All-text-after-a-hash-is-considered-a-comment-and-will-be-ignored\"><a href=\"#All-text-after-a-hash-is-considered-a-comment-and-will-be-ignored\" class=\"headerlink\" title=\"All text after a hash (#) is considered a comment and will be ignored\"></a>All text after a hash (#) is considered a comment and will be ignored</h1><h1 id=\"The-format-is\"><a href=\"#The-format-is\" class=\"headerlink\" title=\"The format is:\"></a>The format is:</h1><h1 id=\"TAG-value-value-…\"><a href=\"#TAG-value-value-…\" class=\"headerlink\" title=\"TAG = value [value, …]\"></a><strong>TAG = value [value, …]</strong></h1><h1 id=\"For-lists-items-can-also-be-appended-using\"><a href=\"#For-lists-items-can-also-be-appended-using\" class=\"headerlink\" title=\"For lists items can also be appended using:\"></a>For lists items can also be appended using:</h1><h1 id=\"TAG-value-value-…-1\"><a href=\"#TAG-value-value-…-1\" class=\"headerlink\" title=\"TAG += value [value, …]\"></a><strong>TAG += value [value, …]</strong></h1><h1 id=\"Values-that-contain-spaces-should-be-placed-between-quotes-“-“\"><a href=\"#Values-that-contain-spaces-should-be-placed-between-quotes-“-“\" class=\"headerlink\" title=\"Values that contain spaces should be placed between quotes (“ “)\"></a>Values that contain spaces should be placed between quotes (“ “)</h1><p>There are some useful label for cpp or c project.</p>\n<h1 id=\"this-label-will-let-you-to-use-or-comments-to-generate-documents\"><a href=\"#this-label-will-let-you-to-use-or-comments-to-generate-documents\" class=\"headerlink\" title=\"this label will let you to use /// or //! comments to generate documents.\"></a>this label will let you to use /// or //! comments to generate documents.</h1><p><strong>MULTILINE_CPP_IS_BRIEF = YES</strong></p>\n<h1 id=\"what’s-the-size-of-tab-in-your-code-documents\"><a href=\"#what’s-the-size-of-tab-in-your-code-documents\" class=\"headerlink\" title=\"what’s the size of tab in your code documents?\"></a>what’s the size of tab in your code documents?</h1><p><strong>TAB_SIZE               = 4</strong></p>\n<h1 id=\"what’s-the-name-of-project\"><a href=\"#what’s-the-name-of-project\" class=\"headerlink\" title=\"what’s the name of project?\"></a>what’s the name of project?</h1><p><strong>PROJECT_NAME           = CNODE</strong></p>\n<h1 id=\"If-you-use-chinese-or-some-other-non-English-language…\"><a href=\"#If-you-use-chinese-or-some-other-non-English-language…\" class=\"headerlink\" title=\"If you use chinese or some other non-English language…\"></a>If you use chinese or some other non-English language…</h1><p><strong>DOXYFILE_ENCODING      = UTF-8</strong></p>\n<h1 id=\"which-patter-you-want-to-generate-documents-If-you-left-blank-doxygen-will-parse-to-kinds-of-files-But-here-I-just-use-two-kinds-files\"><a href=\"#which-patter-you-want-to-generate-documents-If-you-left-blank-doxygen-will-parse-to-kinds-of-files-But-here-I-just-use-two-kinds-files\" class=\"headerlink\" title=\"which patter you want to generate documents? If you left blank, doxygen will parse to kinds of files. But here, I just use two kinds files.\"></a>which patter you want to generate documents? If you left blank, doxygen will parse to kinds of files. But here, I just use two kinds files.</h1><p><strong>FILE_PATTERNS          = <em>.h<br>FILE_PATTERNS          += </em>.c</strong></p>\n<h1 id=\"will-you-want-recursive-the-code-paths\"><a href=\"#will-you-want-recursive-the-code-paths\" class=\"headerlink\" title=\"will you want recursive the code paths?\"></a>will you want recursive the code paths?</h1><p><strong>RECURSIVE              = YES</strong></p>\n<p>Save “Doxyfile” and run command: “<strong>doxygen</strong>“<strong><br></strong></p>\n"},{"layout":"post","title":"quicksort in linux or Unix","date":"2010-04-18T16:00:00.000Z","wordpress_id":182,"comments":1,"_content":"<meta name=\"views\" content=\"1142\" />\n<meta name=\"_edit_last\" content=\"1\" />\nqsort is quicksort function in linux or Unix. The function prototype is\n\n\n{% codeblock %}void qsort(const void* array, const int number, const size_t sizeof_element,int (*cmp_fun)(const void*,const void*));{% endcodeblock %}\n\n\nmaybe I write too many const here:) I will write some examples to sort numbers below:\n\n\n{% codeblock %}#include&lt;stdlib.h&gt;\n// in c++ use cstdlib\nint cmp(const void * a, const void * b){\n\tconst int *tmp_a = (const int*)a;\n\tconst int *tmp_b = (const int *)b;\n\treturn *tmp_a-*tmp_b; // this is ASCE\n} // this is function for comparing two Int type\n\nint main(){\n\tint array[100],i,flag = 0;\n\tfor(i =0; i &lt;100; i++){\n\t\tscanf(\"%d\",&amp;array[i]);\t\n\t}\n\tqsort(array,100, sizeof(array[0]), cmp);\n\t// here you can use sizeof(int) instead\n\tfor(i = 0; i &lt; 100; i++){\n\t\tif(!flag){\n\t\t\tprintf(\"%d\", array[i]);\n\t\t\tflag = 1;\n\t\t}\n\t\telse{\n\t\t\tprintf(\" %d\", array[i]);\n\t\t}\n\t}\n\tprintf(\"\\n\");\n\treturn 0;\n}{% endcodeblock %}\n\n\nqsort function will change the content of array. If you want use complex object in qsort. You should just convert const void* to object*. If you will use point in array, you should compare with objects use **tmp_a-**tmp_b. If you want to compare double or float type, you should have a look at my another article: <a title=\"Permanent Link: compare double numbers in c/c++ language\" rel=\"bookmark\" href=\"../archives/172\">compare  double numbers in c/c++ language.</a>\n\nIf you want a stable compare function, you can use qsort also. First you should construct a class or struct, then and index or other information into struct. And compare when two values are equal.\n\n\n{% codeblock %}int cmp(const void * a, const void * b){\n\tconst Object *tmp_a = (const Object*)a;\n\tconst Object *tmp_b = (const Object *)b;\n\tif(tmp_a-&gt;value == tmp_b-&gt;value){\n\t\tif(tmp_a-&gt;index &lt; tmp_b-&gt;index){\n\t\t\treturn -1;\n\t\t}\n\t\telse{\n\t\t\treturn 1;\n\t\t}\n\t}\n\treturn tmp_a-&gt;value-tmp_b-&gt;value; // this is ASCE\n} // this is function for comparing two Int type{% endcodeblock %}\n \n","source":"_posts/2010-04-19-quicksort-in-linux-or-unix.markdown","raw":"---\nlayout: post\ntitle: \"quicksort in linux or Unix\"\ndate: 2010-4-19\nwordpress_id: 182\ncomments: true\ncategories: [\"asce\", \"cc\", \"code\", \"linux\", \"qsort\", \"quicksort\", \"sort\", \"stable\", \"unix\"]\n---\n<meta name=\"views\" content=\"1142\" />\n<meta name=\"_edit_last\" content=\"1\" />\nqsort is quicksort function in linux or Unix. The function prototype is\n\n\n{% codeblock %}void qsort(const void* array, const int number, const size_t sizeof_element,int (*cmp_fun)(const void*,const void*));{% endcodeblock %}\n\n\nmaybe I write too many const here:) I will write some examples to sort numbers below:\n\n\n{% codeblock %}#include&lt;stdlib.h&gt;\n// in c++ use cstdlib\nint cmp(const void * a, const void * b){\n\tconst int *tmp_a = (const int*)a;\n\tconst int *tmp_b = (const int *)b;\n\treturn *tmp_a-*tmp_b; // this is ASCE\n} // this is function for comparing two Int type\n\nint main(){\n\tint array[100],i,flag = 0;\n\tfor(i =0; i &lt;100; i++){\n\t\tscanf(\"%d\",&amp;array[i]);\t\n\t}\n\tqsort(array,100, sizeof(array[0]), cmp);\n\t// here you can use sizeof(int) instead\n\tfor(i = 0; i &lt; 100; i++){\n\t\tif(!flag){\n\t\t\tprintf(\"%d\", array[i]);\n\t\t\tflag = 1;\n\t\t}\n\t\telse{\n\t\t\tprintf(\" %d\", array[i]);\n\t\t}\n\t}\n\tprintf(\"\\n\");\n\treturn 0;\n}{% endcodeblock %}\n\n\nqsort function will change the content of array. If you want use complex object in qsort. You should just convert const void* to object*. If you will use point in array, you should compare with objects use **tmp_a-**tmp_b. If you want to compare double or float type, you should have a look at my another article: <a title=\"Permanent Link: compare double numbers in c/c++ language\" rel=\"bookmark\" href=\"../archives/172\">compare  double numbers in c/c++ language.</a>\n\nIf you want a stable compare function, you can use qsort also. First you should construct a class or struct, then and index or other information into struct. And compare when two values are equal.\n\n\n{% codeblock %}int cmp(const void * a, const void * b){\n\tconst Object *tmp_a = (const Object*)a;\n\tconst Object *tmp_b = (const Object *)b;\n\tif(tmp_a-&gt;value == tmp_b-&gt;value){\n\t\tif(tmp_a-&gt;index &lt; tmp_b-&gt;index){\n\t\t\treturn -1;\n\t\t}\n\t\telse{\n\t\t\treturn 1;\n\t\t}\n\t}\n\treturn tmp_a-&gt;value-tmp_b-&gt;value; // this is ASCE\n} // this is function for comparing two Int type{% endcodeblock %}\n \n","slug":"2010-04-19-quicksort-in-linux-or-unix","published":1,"updated":"2017-06-05T03:01:07.000Z","photos":[],"link":"","_id":"cj3jjusf9000b1hmjlie1edwg","content":"<p><meta name=\"views\" content=\"1142\"></p>\n<p><meta name=\"_edit_last\" content=\"1\"><br>qsort is quicksort function in linux or Unix. The function prototype is</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">void qsort(const void* array, const int number, const size_t sizeof_element,int (*cmp_fun)(const void*,const void*));</div></pre></td></tr></table></figure>\n<p>maybe I write too many const here:) I will write some examples to sort numbers below:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&amp;lt;stdlib.h&amp;gt;</div><div class=\"line\">// in c++ use cstdlib</div><div class=\"line\">int cmp(const void * a, const void * b)&#123;</div><div class=\"line\">\tconst int *tmp_a = (const int*)a;</div><div class=\"line\">\tconst int *tmp_b = (const int *)b;</div><div class=\"line\">\treturn *tmp_a-*tmp_b; // this is ASCE</div><div class=\"line\">&#125; // this is function for comparing two Int type</div><div class=\"line\"></div><div class=\"line\">int main()&#123;</div><div class=\"line\">\tint array[100],i,flag = 0;</div><div class=\"line\">\tfor(i =0; i &amp;lt;100; i++)&#123;</div><div class=\"line\">\t\tscanf(&quot;%d&quot;,&amp;amp;array[i]);\t</div><div class=\"line\">\t&#125;</div><div class=\"line\">\tqsort(array,100, sizeof(array[0]), cmp);</div><div class=\"line\">\t// here you can use sizeof(int) instead</div><div class=\"line\">\tfor(i = 0; i &amp;lt; 100; i++)&#123;</div><div class=\"line\">\t\tif(!flag)&#123;</div><div class=\"line\">\t\t\tprintf(&quot;%d&quot;, array[i]);</div><div class=\"line\">\t\t\tflag = 1;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\telse&#123;</div><div class=\"line\">\t\t\tprintf(&quot; %d&quot;, array[i]);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\tprintf(&quot;\\n&quot;);</div><div class=\"line\">\treturn 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>qsort function will change the content of array. If you want use complex object in qsort. You should just convert const void<em> to object</em>. If you will use point in array, you should compare with objects use <strong>tmp_a-</strong>tmp_b. If you want to compare double or float type, you should have a look at my another article: <a title=\"Permanent Link: compare double numbers in c/c++ language\" rel=\"bookmark\" href=\"../archives/172\">compare  double numbers in c/c++ language.</a></p>\n<p>If you want a stable compare function, you can use qsort also. First you should construct a class or struct, then and index or other information into struct. And compare when two values are equal.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">int cmp(const void * a, const void * b)&#123;</div><div class=\"line\">\tconst Object *tmp_a = (const Object*)a;</div><div class=\"line\">\tconst Object *tmp_b = (const Object *)b;</div><div class=\"line\">\tif(tmp_a-&amp;gt;value == tmp_b-&amp;gt;value)&#123;</div><div class=\"line\">\t\tif(tmp_a-&amp;gt;index &amp;lt; tmp_b-&amp;gt;index)&#123;</div><div class=\"line\">\t\t\treturn -1;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\telse&#123;</div><div class=\"line\">\t\t\treturn 1;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\treturn tmp_a-&amp;gt;value-tmp_b-&amp;gt;value; // this is ASCE</div><div class=\"line\">&#125; // this is function for comparing two Int type</div></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p><meta name=\"views\" content=\"1142\"></p>\n<p><meta name=\"_edit_last\" content=\"1\"><br>qsort is quicksort function in linux or Unix. The function prototype is</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">void qsort(const void* array, const int number, const size_t sizeof_element,int (*cmp_fun)(const void*,const void*));</div></pre></td></tr></table></figure>\n<p>maybe I write too many const here:) I will write some examples to sort numbers below:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&amp;lt;stdlib.h&amp;gt;</div><div class=\"line\">// in c++ use cstdlib</div><div class=\"line\">int cmp(const void * a, const void * b)&#123;</div><div class=\"line\">\tconst int *tmp_a = (const int*)a;</div><div class=\"line\">\tconst int *tmp_b = (const int *)b;</div><div class=\"line\">\treturn *tmp_a-*tmp_b; // this is ASCE</div><div class=\"line\">&#125; // this is function for comparing two Int type</div><div class=\"line\"></div><div class=\"line\">int main()&#123;</div><div class=\"line\">\tint array[100],i,flag = 0;</div><div class=\"line\">\tfor(i =0; i &amp;lt;100; i++)&#123;</div><div class=\"line\">\t\tscanf(&quot;%d&quot;,&amp;amp;array[i]);\t</div><div class=\"line\">\t&#125;</div><div class=\"line\">\tqsort(array,100, sizeof(array[0]), cmp);</div><div class=\"line\">\t// here you can use sizeof(int) instead</div><div class=\"line\">\tfor(i = 0; i &amp;lt; 100; i++)&#123;</div><div class=\"line\">\t\tif(!flag)&#123;</div><div class=\"line\">\t\t\tprintf(&quot;%d&quot;, array[i]);</div><div class=\"line\">\t\t\tflag = 1;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\telse&#123;</div><div class=\"line\">\t\t\tprintf(&quot; %d&quot;, array[i]);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\tprintf(&quot;\\n&quot;);</div><div class=\"line\">\treturn 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>qsort function will change the content of array. If you want use complex object in qsort. You should just convert const void<em> to object</em>. If you will use point in array, you should compare with objects use <strong>tmp_a-</strong>tmp_b. If you want to compare double or float type, you should have a look at my another article: <a title=\"Permanent Link: compare double numbers in c/c++ language\" rel=\"bookmark\" href=\"../archives/172\">compare  double numbers in c/c++ language.</a></p>\n<p>If you want a stable compare function, you can use qsort also. First you should construct a class or struct, then and index or other information into struct. And compare when two values are equal.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">int cmp(const void * a, const void * b)&#123;</div><div class=\"line\">\tconst Object *tmp_a = (const Object*)a;</div><div class=\"line\">\tconst Object *tmp_b = (const Object *)b;</div><div class=\"line\">\tif(tmp_a-&amp;gt;value == tmp_b-&amp;gt;value)&#123;</div><div class=\"line\">\t\tif(tmp_a-&amp;gt;index &amp;lt; tmp_b-&amp;gt;index)&#123;</div><div class=\"line\">\t\t\treturn -1;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\telse&#123;</div><div class=\"line\">\t\t\treturn 1;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\treturn tmp_a-&amp;gt;value-tmp_b-&amp;gt;value; // this is ASCE</div><div class=\"line\">&#125; // this is function for comparing two Int type</div></pre></td></tr></table></figure>\n"},{"layout":"post","title":"Build SQLite in Code::blocks","date":"2010-04-21T16:00:00.000Z","wordpress_id":185,"comments":1,"_content":"<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"views\" content=\"1356\" />\nfirst download <a href=\"http://www.sqlite.org/sqlite-3.6.23.1.tar.gz\">a source tarball</a>, then add all *.h and *.c into code::blocks. and remove tclsqlite.c file. Then copy tcl.h, tclDecls.h, and tclPlatDecls.h from /usr/include/tclXXX/ to your project forld and add them into your project. Then choose your project name in the left Projects browser. and right click, then choose build options. like following:\n\n<a href=\"http://chillyc.info/wp-content/uploads/2010/04/22/install-sqlite-in-codeblocks/Screenshot-fts3_tokenizer.c-SQLite-CodeBlocks-8.02.png\"><img class=\"aligncenter size-medium wp-image-186\" title=\"Screenshot-fts3_tokenizer.c [SQLite] - Code::Blocks 8.02\" src=\"http://chillyc.info/wp-content/uploads/2010/04/22/install-sqlite-in-codeblocks/Screenshot-fts3_tokenizer.c-SQLite-CodeBlocks-8.02-300x218.png\" alt=\"\" width=\"300\" height=\"218\" /></a>In the opening window, choose other option tab and add some options:\n\n<a href=\"http://chillyc.info/wp-content/uploads/2010/04/22/install-sqlite-in-codeblocks/Screenshot-Project-build-options-1.png\"><img class=\"aligncenter size-medium wp-image-187\" title=\"Screenshot-Project build options-1\" src=\"http://chillyc.info/wp-content/uploads/2010/04/22/install-sqlite-in-codeblocks/Screenshot-Project-build-options-1-300x218.png\" alt=\"\" width=\"300\" height=\"218\" /></a>then choose #define tab:\n\n<a href=\"http://chillyc.info/wp-content/uploads/2010/04/22/install-sqlite-in-codeblocks/Screenshot-Project-build-options.png\"><img class=\"aligncenter size-medium wp-image-188\" title=\"Screenshot-Project build options\" src=\"http://chillyc.info/wp-content/uploads/2010/04/22/install-sqlite-in-codeblocks/Screenshot-Project-build-options-300x218.png\" alt=\"\" width=\"300\" height=\"218\" /></a>ok, done. go back and build the project. If you have sqlite3api multiply defined error, you may don't use SQLITE_CORE macro. If you have realine function dose not have prototype, you may don't have \"libreadline\", or you not use -lreadline and -lcurses option links. If the compiler tells you:\"can not find \"tcl.h\" head file\", you can copy tcl.h, tclDecls.h, and tclPlatDecls.h into your project, or change tcl.h to &lt;tcl.h&gt;. If you have some error with tcl, you may leave the tclsqlit.c file from building. If you persist in compile tclsqlit.c, you should merge its all codes into main.c.\n","source":"_posts/2010-04-22-build-sqlite-in-codeblocks.markdown","raw":"---\nlayout: post\ntitle: \"Build SQLite in Code::blocks\"\ndate: 2010-4-22\nwordpress_id: 185\ncomments: true\ncategories: [\"blocks\", \"build\", \"cc\", \"code\", \"database\", \"error\", \"open-source\", \"project\", \"readline\", \"sqlite\", \"sqlite3api\", \"tcl\"]\n---\n<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"views\" content=\"1356\" />\nfirst download <a href=\"http://www.sqlite.org/sqlite-3.6.23.1.tar.gz\">a source tarball</a>, then add all *.h and *.c into code::blocks. and remove tclsqlite.c file. Then copy tcl.h, tclDecls.h, and tclPlatDecls.h from /usr/include/tclXXX/ to your project forld and add them into your project. Then choose your project name in the left Projects browser. and right click, then choose build options. like following:\n\n<a href=\"http://chillyc.info/wp-content/uploads/2010/04/22/install-sqlite-in-codeblocks/Screenshot-fts3_tokenizer.c-SQLite-CodeBlocks-8.02.png\"><img class=\"aligncenter size-medium wp-image-186\" title=\"Screenshot-fts3_tokenizer.c [SQLite] - Code::Blocks 8.02\" src=\"http://chillyc.info/wp-content/uploads/2010/04/22/install-sqlite-in-codeblocks/Screenshot-fts3_tokenizer.c-SQLite-CodeBlocks-8.02-300x218.png\" alt=\"\" width=\"300\" height=\"218\" /></a>In the opening window, choose other option tab and add some options:\n\n<a href=\"http://chillyc.info/wp-content/uploads/2010/04/22/install-sqlite-in-codeblocks/Screenshot-Project-build-options-1.png\"><img class=\"aligncenter size-medium wp-image-187\" title=\"Screenshot-Project build options-1\" src=\"http://chillyc.info/wp-content/uploads/2010/04/22/install-sqlite-in-codeblocks/Screenshot-Project-build-options-1-300x218.png\" alt=\"\" width=\"300\" height=\"218\" /></a>then choose #define tab:\n\n<a href=\"http://chillyc.info/wp-content/uploads/2010/04/22/install-sqlite-in-codeblocks/Screenshot-Project-build-options.png\"><img class=\"aligncenter size-medium wp-image-188\" title=\"Screenshot-Project build options\" src=\"http://chillyc.info/wp-content/uploads/2010/04/22/install-sqlite-in-codeblocks/Screenshot-Project-build-options-300x218.png\" alt=\"\" width=\"300\" height=\"218\" /></a>ok, done. go back and build the project. If you have sqlite3api multiply defined error, you may don't use SQLITE_CORE macro. If you have realine function dose not have prototype, you may don't have \"libreadline\", or you not use -lreadline and -lcurses option links. If the compiler tells you:\"can not find \"tcl.h\" head file\", you can copy tcl.h, tclDecls.h, and tclPlatDecls.h into your project, or change tcl.h to &lt;tcl.h&gt;. If you have some error with tcl, you may leave the tclsqlit.c file from building. If you persist in compile tclsqlit.c, you should merge its all codes into main.c.\n","slug":"2010-04-22-build-sqlite-in-codeblocks","published":1,"updated":"2017-06-05T03:01:07.000Z","photos":[],"link":"","_id":"cj3jjusfc000d1hmjvbnu0hpu","content":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"views\" content=\"1356\"><br>first download <a href=\"http://www.sqlite.org/sqlite-3.6.23.1.tar.gz\" target=\"_blank\" rel=\"external\">a source tarball</a>, then add all <em>.h and </em>.c into code::blocks. and remove tclsqlite.c file. Then copy tcl.h, tclDecls.h, and tclPlatDecls.h from /usr/include/tclXXX/ to your project forld and add them into your project. Then choose your project name in the left Projects browser. and right click, then choose build options. like following:</p>\n<p><a href=\"http://chillyc.info/wp-content/uploads/2010/04/22/install-sqlite-in-codeblocks/Screenshot-fts3_tokenizer.c-SQLite-CodeBlocks-8.02.png\"><img class=\"aligncenter size-medium wp-image-186\" title=\"Screenshot-fts3_tokenizer.c [SQLite] - Code::Blocks 8.02\" src=\"http://chillyc.info/wp-content/uploads/2010/04/22/install-sqlite-in-codeblocks/Screenshot-fts3_tokenizer.c-SQLite-CodeBlocks-8.02-300x218.png\" alt=\"\" width=\"300\" height=\"218\"></a>In the opening window, choose other option tab and add some options:</p>\n<p><a href=\"http://chillyc.info/wp-content/uploads/2010/04/22/install-sqlite-in-codeblocks/Screenshot-Project-build-options-1.png\"><img class=\"aligncenter size-medium wp-image-187\" title=\"Screenshot-Project build options-1\" src=\"http://chillyc.info/wp-content/uploads/2010/04/22/install-sqlite-in-codeblocks/Screenshot-Project-build-options-1-300x218.png\" alt=\"\" width=\"300\" height=\"218\"></a>then choose #define tab:</p>\n<p><a href=\"http://chillyc.info/wp-content/uploads/2010/04/22/install-sqlite-in-codeblocks/Screenshot-Project-build-options.png\"><img class=\"aligncenter size-medium wp-image-188\" title=\"Screenshot-Project build options\" src=\"http://chillyc.info/wp-content/uploads/2010/04/22/install-sqlite-in-codeblocks/Screenshot-Project-build-options-300x218.png\" alt=\"\" width=\"300\" height=\"218\"></a>ok, done. go back and build the project. If you have sqlite3api multiply defined error, you may don’t use SQLITE_CORE macro. If you have realine function dose not have prototype, you may don’t have “libreadline”, or you not use -lreadline and -lcurses option links. If the compiler tells you:”can not find “tcl.h” head file”, you can copy tcl.h, tclDecls.h, and tclPlatDecls.h into your project, or change tcl.h to &lt;tcl.h&gt;. If you have some error with tcl, you may leave the tclsqlit.c file from building. If you persist in compile tclsqlit.c, you should merge its all codes into main.c.</p>\n","site":{"data":{}},"excerpt":"","more":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"views\" content=\"1356\"><br>first download <a href=\"http://www.sqlite.org/sqlite-3.6.23.1.tar.gz\" target=\"_blank\" rel=\"external\">a source tarball</a>, then add all <em>.h and </em>.c into code::blocks. and remove tclsqlite.c file. Then copy tcl.h, tclDecls.h, and tclPlatDecls.h from /usr/include/tclXXX/ to your project forld and add them into your project. Then choose your project name in the left Projects browser. and right click, then choose build options. like following:</p>\n<p><a href=\"http://chillyc.info/wp-content/uploads/2010/04/22/install-sqlite-in-codeblocks/Screenshot-fts3_tokenizer.c-SQLite-CodeBlocks-8.02.png\"><img class=\"aligncenter size-medium wp-image-186\" title=\"Screenshot-fts3_tokenizer.c [SQLite] - Code::Blocks 8.02\" src=\"http://chillyc.info/wp-content/uploads/2010/04/22/install-sqlite-in-codeblocks/Screenshot-fts3_tokenizer.c-SQLite-CodeBlocks-8.02-300x218.png\" alt=\"\" width=\"300\" height=\"218\"></a>In the opening window, choose other option tab and add some options:</p>\n<p><a href=\"http://chillyc.info/wp-content/uploads/2010/04/22/install-sqlite-in-codeblocks/Screenshot-Project-build-options-1.png\"><img class=\"aligncenter size-medium wp-image-187\" title=\"Screenshot-Project build options-1\" src=\"http://chillyc.info/wp-content/uploads/2010/04/22/install-sqlite-in-codeblocks/Screenshot-Project-build-options-1-300x218.png\" alt=\"\" width=\"300\" height=\"218\"></a>then choose #define tab:</p>\n<p><a href=\"http://chillyc.info/wp-content/uploads/2010/04/22/install-sqlite-in-codeblocks/Screenshot-Project-build-options.png\"><img class=\"aligncenter size-medium wp-image-188\" title=\"Screenshot-Project build options\" src=\"http://chillyc.info/wp-content/uploads/2010/04/22/install-sqlite-in-codeblocks/Screenshot-Project-build-options-300x218.png\" alt=\"\" width=\"300\" height=\"218\"></a>ok, done. go back and build the project. If you have sqlite3api multiply defined error, you may don’t use SQLITE_CORE macro. If you have realine function dose not have prototype, you may don’t have “libreadline”, or you not use -lreadline and -lcurses option links. If the compiler tells you:”can not find “tcl.h” head file”, you can copy tcl.h, tclDecls.h, and tclPlatDecls.h into your project, or change tcl.h to &lt;tcl.h&gt;. If you have some error with tcl, you may leave the tclsqlit.c file from building. If you persist in compile tclsqlit.c, you should merge its all codes into main.c.</p>\n"},{"layout":"post","title":"Facebook API","date":"2010-03-07T16:00:00.000Z","wordpress_id":97,"comments":1,"_content":"<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"views\" content=\"887\" />\nNow I should do some work in investgate Facebook API. The Facebook API can be called as the following format( I use php as an example):\n\n\n{% codeblock %}&lt;?php\n/**\n* Set the configuration settings for Facebook\n*/\n$facebook_config['debug'] = false;\n$facebook_config['api_key'] = '&lt;your_api_key&gt;';\n$facebook_config['secret_key'] = '&lt;your_secret_key&gt;';\n/**\n* include the Facebook client library\n*/\nrequire_once('&lt;path_to_client_library&gt;/facebook.php');\n/**\n* Set up the facebook object\n*/\n$facebook = new Facebook($facebook_config['api_key'],\n$facebook_config['secret']);\n/**\n* Ensure the user has logged on to Facebook\n*/\n$user = $facebook-&gt;require_login();\n/**\n* Make an API call to call get a user's friends using the PHP library's\n* library\n*/\n$friends = $facebook-&gt;api_client-&gt;friends_get();\necho \"&lt;pre&gt;Friends:\" . print_r($friends, true). \"&lt;/pre&gt;\";\n?&gt;{% endcodeblock %}\n\n\nThe structure of the above codes is:\n<ul>\n\t<li>set api_key and secret_key by your own</li>\n\t<li>send facebook_config to Facebook class and create an object of Facebook.</li>\n\t<li>call some method of this object and get some data of facebook which you want</li>\n\t<li>using those data to create an application</li>\n</ul>\nIn technology, facebook uses RESTful technology, such as web services. facebook api transform data in JSON or XML format. And FBML( facebook Markup Language ) is used to combine and present data coming from developers' application servers. There are some technologic points: first, APIs should be packet into web services. Second, developers' application data should be presented in web pages. But I don't think there is new technology here.\n\nThe flow diagram of calling facebook api is:\n\n<a href=\"http://chillyc.info/wp-content/uploads/2010/03/08/facebook-api/the-flow-diagram-of-calling-facebook-api.jpg\"><img class=\"aligncenter size-medium wp-image-98\" title=\"the flow diagram of calling facebook api\" src=\"http://chillyc.info/wp-content/uploads/2010/03/08/facebook-api/the-flow-diagram-of-calling-facebook-api-290x300.jpg\" alt=\"\" width=\"290\" height=\"300\" /></a>\n\nChinese version is here:\n\n<strong><strong><a href=\"../wp-content/uploads/2010/03/Facebook_API.doc\" target=\"newUpload\">Facebook_API.doc</a></strong></strong>\n","source":"_posts/2010-03-08-facebook-api.markdown","raw":"---\nlayout: post\ntitle: \"Facebook API\"\ndate: 2010-3-8\nwordpress_id: 97\ncomments: true\ncategories: [\"api\", \"facebook\", \"php\", \"see-hear\", \"structure\"]\n---\n<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"views\" content=\"887\" />\nNow I should do some work in investgate Facebook API. The Facebook API can be called as the following format( I use php as an example):\n\n\n{% codeblock %}&lt;?php\n/**\n* Set the configuration settings for Facebook\n*/\n$facebook_config['debug'] = false;\n$facebook_config['api_key'] = '&lt;your_api_key&gt;';\n$facebook_config['secret_key'] = '&lt;your_secret_key&gt;';\n/**\n* include the Facebook client library\n*/\nrequire_once('&lt;path_to_client_library&gt;/facebook.php');\n/**\n* Set up the facebook object\n*/\n$facebook = new Facebook($facebook_config['api_key'],\n$facebook_config['secret']);\n/**\n* Ensure the user has logged on to Facebook\n*/\n$user = $facebook-&gt;require_login();\n/**\n* Make an API call to call get a user's friends using the PHP library's\n* library\n*/\n$friends = $facebook-&gt;api_client-&gt;friends_get();\necho \"&lt;pre&gt;Friends:\" . print_r($friends, true). \"&lt;/pre&gt;\";\n?&gt;{% endcodeblock %}\n\n\nThe structure of the above codes is:\n<ul>\n\t<li>set api_key and secret_key by your own</li>\n\t<li>send facebook_config to Facebook class and create an object of Facebook.</li>\n\t<li>call some method of this object and get some data of facebook which you want</li>\n\t<li>using those data to create an application</li>\n</ul>\nIn technology, facebook uses RESTful technology, such as web services. facebook api transform data in JSON or XML format. And FBML( facebook Markup Language ) is used to combine and present data coming from developers' application servers. There are some technologic points: first, APIs should be packet into web services. Second, developers' application data should be presented in web pages. But I don't think there is new technology here.\n\nThe flow diagram of calling facebook api is:\n\n<a href=\"http://chillyc.info/wp-content/uploads/2010/03/08/facebook-api/the-flow-diagram-of-calling-facebook-api.jpg\"><img class=\"aligncenter size-medium wp-image-98\" title=\"the flow diagram of calling facebook api\" src=\"http://chillyc.info/wp-content/uploads/2010/03/08/facebook-api/the-flow-diagram-of-calling-facebook-api-290x300.jpg\" alt=\"\" width=\"290\" height=\"300\" /></a>\n\nChinese version is here:\n\n<strong><strong><a href=\"../wp-content/uploads/2010/03/Facebook_API.doc\" target=\"newUpload\">Facebook_API.doc</a></strong></strong>\n","slug":"2010-03-08-facebook-api","published":1,"updated":"2017-06-05T03:01:15.000Z","photos":[],"link":"","_id":"cj3jjuyzp00001jmjjjovzq0t","content":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"views\" content=\"887\"><br>Now I should do some work in investgate Facebook API. The Facebook API can be called as the following format( I use php as an example):</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div></pre></td><td class=\"code\"><pre><div class=\"line\">&amp;lt;?php</div><div class=\"line\">/**</div><div class=\"line\">* Set the configuration settings for Facebook</div><div class=\"line\">*/</div><div class=\"line\">$facebook_config[&apos;debug&apos;] = false;</div><div class=\"line\">$facebook_config[&apos;api_key&apos;] = &apos;&amp;lt;your_api_key&amp;gt;&apos;;</div><div class=\"line\">$facebook_config[&apos;secret_key&apos;] = &apos;&amp;lt;your_secret_key&amp;gt;&apos;;</div><div class=\"line\">/**</div><div class=\"line\">* include the Facebook client library</div><div class=\"line\">*/</div><div class=\"line\">require_once(&apos;&amp;lt;path_to_client_library&amp;gt;/facebook.php&apos;);</div><div class=\"line\">/**</div><div class=\"line\">* Set up the facebook object</div><div class=\"line\">*/</div><div class=\"line\">$facebook = new Facebook($facebook_config[&apos;api_key&apos;],</div><div class=\"line\">$facebook_config[&apos;secret&apos;]);</div><div class=\"line\">/**</div><div class=\"line\">* Ensure the user has logged on to Facebook</div><div class=\"line\">*/</div><div class=\"line\">$user = $facebook-&amp;gt;require_login();</div><div class=\"line\">/**</div><div class=\"line\">* Make an API call to call get a user&apos;s friends using the PHP library&apos;s</div><div class=\"line\">* library</div><div class=\"line\">*/</div><div class=\"line\">$friends = $facebook-&amp;gt;api_client-&amp;gt;friends_get();</div><div class=\"line\">echo &quot;&amp;lt;pre&amp;gt;Friends:&quot; . print_r($friends, true). &quot;&amp;lt;/pre&amp;gt;&quot;;</div><div class=\"line\">?&amp;gt;</div></pre></td></tr></table></figure>\n<p>The structure of the above codes is:</p>\n<p><ul><br>    <li>set api_key and secret_key by your own</li><br>    <li>send facebook_config to Facebook class and create an object of Facebook.</li><br>    <li>call some method of this object and get some data of facebook which you want</li><br>    <li>using those data to create an application</li><br></ul><br>In technology, facebook uses RESTful technology, such as web services. facebook api transform data in JSON or XML format. And FBML( facebook Markup Language ) is used to combine and present data coming from developers’ application servers. There are some technologic points: first, APIs should be packet into web services. Second, developers’ application data should be presented in web pages. But I don’t think there is new technology here.</p>\n<p>The flow diagram of calling facebook api is:</p>\n<p><a href=\"http://chillyc.info/wp-content/uploads/2010/03/08/facebook-api/the-flow-diagram-of-calling-facebook-api.jpg\"><img class=\"aligncenter size-medium wp-image-98\" title=\"the flow diagram of calling facebook api\" src=\"http://chillyc.info/wp-content/uploads/2010/03/08/facebook-api/the-flow-diagram-of-calling-facebook-api-290x300.jpg\" alt=\"\" width=\"290\" height=\"300\"></a></p>\n<p>Chinese version is here:</p>\n<p><strong><strong><a href=\"../wp-content/uploads/2010/03/Facebook_API.doc\" target=\"newUpload\">Facebook_API.doc</a></strong></strong></p>\n","site":{"data":{}},"excerpt":"","more":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"views\" content=\"887\"><br>Now I should do some work in investgate Facebook API. The Facebook API can be called as the following format( I use php as an example):</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div></pre></td><td class=\"code\"><pre><div class=\"line\">&amp;lt;?php</div><div class=\"line\">/**</div><div class=\"line\">* Set the configuration settings for Facebook</div><div class=\"line\">*/</div><div class=\"line\">$facebook_config[&apos;debug&apos;] = false;</div><div class=\"line\">$facebook_config[&apos;api_key&apos;] = &apos;&amp;lt;your_api_key&amp;gt;&apos;;</div><div class=\"line\">$facebook_config[&apos;secret_key&apos;] = &apos;&amp;lt;your_secret_key&amp;gt;&apos;;</div><div class=\"line\">/**</div><div class=\"line\">* include the Facebook client library</div><div class=\"line\">*/</div><div class=\"line\">require_once(&apos;&amp;lt;path_to_client_library&amp;gt;/facebook.php&apos;);</div><div class=\"line\">/**</div><div class=\"line\">* Set up the facebook object</div><div class=\"line\">*/</div><div class=\"line\">$facebook = new Facebook($facebook_config[&apos;api_key&apos;],</div><div class=\"line\">$facebook_config[&apos;secret&apos;]);</div><div class=\"line\">/**</div><div class=\"line\">* Ensure the user has logged on to Facebook</div><div class=\"line\">*/</div><div class=\"line\">$user = $facebook-&amp;gt;require_login();</div><div class=\"line\">/**</div><div class=\"line\">* Make an API call to call get a user&apos;s friends using the PHP library&apos;s</div><div class=\"line\">* library</div><div class=\"line\">*/</div><div class=\"line\">$friends = $facebook-&amp;gt;api_client-&amp;gt;friends_get();</div><div class=\"line\">echo &quot;&amp;lt;pre&amp;gt;Friends:&quot; . print_r($friends, true). &quot;&amp;lt;/pre&amp;gt;&quot;;</div><div class=\"line\">?&amp;gt;</div></pre></td></tr></table></figure>\n<p>The structure of the above codes is:</p>\n<p><ul><br>    <li>set api_key and secret_key by your own</li><br>    <li>send facebook_config to Facebook class and create an object of Facebook.</li><br>    <li>call some method of this object and get some data of facebook which you want</li><br>    <li>using those data to create an application</li><br></ul><br>In technology, facebook uses RESTful technology, such as web services. facebook api transform data in JSON or XML format. And FBML( facebook Markup Language ) is used to combine and present data coming from developers’ application servers. There are some technologic points: first, APIs should be packet into web services. Second, developers’ application data should be presented in web pages. But I don’t think there is new technology here.</p>\n<p>The flow diagram of calling facebook api is:</p>\n<p><a href=\"http://chillyc.info/wp-content/uploads/2010/03/08/facebook-api/the-flow-diagram-of-calling-facebook-api.jpg\"><img class=\"aligncenter size-medium wp-image-98\" title=\"the flow diagram of calling facebook api\" src=\"http://chillyc.info/wp-content/uploads/2010/03/08/facebook-api/the-flow-diagram-of-calling-facebook-api-290x300.jpg\" alt=\"\" width=\"290\" height=\"300\"></a></p>\n<p>Chinese version is here:</p>\n<p><strong><strong><a href=\"../wp-content/uploads/2010/03/Facebook_API.doc\" target=\"newUpload\">Facebook_API.doc</a></strong></strong></p>\n"},{"layout":"post","title":"International Women's Day!","date":"2010-03-07T16:00:00.000Z","wordpress_id":91,"comments":1,"_content":"<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"views\" content=\"750\" />\nthe price of borrowing a boy-friend in international women's day.\n\n[gallery] \n","source":"_posts/2010-03-08-international-womens-day.markdown","raw":"---\nlayout: post\ntitle: \"International Women's Day!\"\ndate: 2010-3-8\nwordpress_id: 91\ncomments: true\ncategories: [\"see-hear\"]\n---\n<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"views\" content=\"750\" />\nthe price of borrowing a boy-friend in international women's day.\n\n[gallery] \n","slug":"2010-03-08-international-womens-day","published":1,"updated":"2017-06-05T03:01:15.000Z","photos":[],"link":"","_id":"cj3jjuyzz00011jmj7roo8klk","content":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"views\" content=\"750\"><br>the price of borrowing a boy-friend in international women’s day.</p>\n<p>[gallery] </p>\n","site":{"data":{}},"excerpt":"","more":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"views\" content=\"750\"><br>the price of borrowing a boy-friend in international women’s day.</p>\n<p>[gallery] </p>\n"},{"layout":"post","title":"Math symbol","date":"2010-03-09T16:00:00.000Z","wordpress_id":102,"comments":1,"_content":"<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"views\" content=\"629\" />\n<div>\n\n# copy from http://blog.sina.com.cn/s/blog_598529cd0100ecv9.html\n\n<span style=\"font-size: small;\">大写 小写 英文注音 国际音标注音 中文注音\nΑ           α       alpha              alfa                 阿耳法\nΒ           β       beta                beta                贝塔\nΓ           γ       gamma            gamma           伽马\nΔ           δ       deta                delta               德耳塔\nΕ           ε       epsilon            epsilon           艾普西隆\nΖ           ζ        zeta                zeta                截塔\nΗ           η       eta                  eta                 艾塔\nΘ           θ      theta               θita                 西塔\nΙ             ι       iota                  iota                约塔\nΚ           κ      kappa              kappa            卡帕\n∧          λ      lambda            lambda           兰姆达\nΜ          μ        mu                    miu                 缪\nΝ           ν        nu                    niu                 纽\nΞ           ξ         xi                     ksi               可塞\nΟ           ο      omicron           omikron       奥密可戎\n∏           π      pi                     pai                   派\nΡ            ρ      rho                   rou                   柔\n∑           σ      sigma              sigma            西格马\nΤ            τ        tau                  tau                  套\nΥ            υ      upsilon             jupsilon     衣普西隆\nΦ           φ       phi                    fai               斐\nΧ            χ       chi                  khai               喜\nΨ           ψ       psi                  psai            普西\nΩ           ω      omega            omiga         欧米伽</span>\n<table summary=\"See table caption for summary.\"><caption>符号表</caption>\n<thead>\n<tr>\n<th scope=\"col\">符号</th>\n<th scope=\"col\">含义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><span style=\"font-size: small;\">i</span></td>\n<td><span style=\"font-size: small;\">-1的平方根</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">f(x)</span></td>\n<td><span style=\"font-size: small;\">函数f在自变量x处的值</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">sin(x)</span></td>\n<td><span style=\"font-size: small;\">在自变量x处的正弦函数值</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">exp(x)</span></td>\n<td><span style=\"font-size: small;\">在自变量x处的指数函数值，常被写作e<sup>x</sup></span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">a^x</span></td>\n<td><span style=\"font-size: small;\">a的x次方；有理数x由反函数定义</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">ln x</span></td>\n<td><span style=\"font-size: small;\">exp x 的反函数</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">a<sup>x</sup></span></td>\n<td><span style=\"font-size: small;\">同 a^x</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">log<sub>b</sub>a</span></td>\n<td><span style=\"font-size: small;\">以b为底a的对数； b<sup><sup>log<sub>b</sub>a</sup></sup> = a</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">cos x</span></td>\n<td><span style=\"font-size: small;\">在自变量x处余弦函数的值</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">tan x</span></td>\n<td><span style=\"font-size: small;\">其值等于 sin x/cos x</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">cot x</span></td>\n<td><span style=\"font-size: small;\">余切函数的值或 cos x/sin x</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">sec x</span></td>\n<td><span style=\"font-size: small;\">正割含数的值，其值等于 1/cos x</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">csc x</span></td>\n<td><span style=\"font-size: small;\">余割函数的值，其值等于 1/sin x</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">asin x</span></td>\n<td><span style=\"font-size: small;\">y，正弦函数反函数在x处的值，即 x = sin y</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">acos x</span></td>\n<td><span style=\"font-size: small;\">y，余弦函数反函数在x处的值，即 x = cos y</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">atan x</span></td>\n<td><span style=\"font-size: small;\">y，正切函数反函数在x处的值，即 x = tan y</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">acot x</span></td>\n<td><span style=\"font-size: small;\">y，余切函数反函数在x处的值，即 x = cot y</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">asec x</span></td>\n<td><span style=\"font-size: small;\">y，正割函数反函数在x处的值，即 x = sec y</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">acsc x</span></td>\n<td><span style=\"font-size: small;\">y，余割函数反函数在x处的值，即 x = csc y</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">θ</span></td>\n<td><span style=\"font-size: small;\">角度的一个标准符号，不注明均指弧度，尤其用于表示atan x/y，当x、y、z用于表示空间中的点时</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">i, j, k</span></td>\n<td><span style=\"font-size: small;\">分别表示x、y、z方向上的单位向量</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">(a, b, c)</span></td>\n<td><span style=\"font-size: small;\">以a、b、c为元素的向量</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">(a, b)</span></td>\n<td><span style=\"font-size: small;\">以a、b为元素的向量</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">(a, b)</span></td>\n<td><span style=\"font-size: small;\">a、b向量的点积</span></td>\n</tr>\n<tr>\n<td height=\"17\"><span style=\"font-size: small;\">a•b</span></td>\n<td><span style=\"font-size: small;\">a、b向量的点积</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">(a•b)</span></td>\n<td><span style=\"font-size: small;\">a、b向量的点积</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">|v|</span></td>\n<td><span style=\"font-size: small;\">向量v的模</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">|x|</span></td>\n<td><span style=\"font-size: small;\">数x的绝对值</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">Σ</span></td>\n<td><span style=\"font-size: small;\">表示求和，通常是某项指数。下边界值写在其下部，上边界值写在其上部。如j从1到100的和可以表示成：<img src=\"http://www.core.org.cn/NR/rdonlyres/Mathematics/18-013ASpring-2005/08B23D50-1CCF-4A12-A58D-72F2036534F8/0/glossary_eqn1.jpg\" border=\"0\" alt=\"\" align=\"middle\" />。这表示 1 + 2 + … + n</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">M</span></td>\n<td><span style=\"font-size: small;\">表示一个矩阵或数列或其它</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">|v&gt;</span></td>\n<td><span style=\"font-size: small;\">列向量，即元素被写成列或可被看成k×1阶矩阵的向量</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">&lt;v|</span></td>\n<td><span style=\"font-size: small;\">被写成行或可被看成从1×k阶矩阵的向量</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">dx</span></td>\n<td><span style=\"font-size: small;\">变量x的一个无穷小变化，dy, dz, dr等类似</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">ds</span></td>\n<td><span style=\"font-size: small;\">长度的微小变化</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">ρ</span></td>\n<td><span style=\"font-size: small;\">变量 (x<sup>2</sup> + y<sup>2</sup> + z<sup>2</sup>)<sup>1/2</sup> 或球面坐标系中到原点的距离</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">r</span></td>\n<td><span style=\"font-size: small;\">变量 (x<sup>2</sup> + y<sup>2</sup>)<sup>1/2</sup> 或三维空间或极坐标中到z轴的距离</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">|M|</span></td>\n<td><span style=\"font-size: small;\">矩阵M的行列式，其值是矩阵的行和列决定的平行区域的面积或体积</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">||M||</span></td>\n<td><span style=\"font-size: small;\">矩阵M的行列式的值，为一个面积、体积或超体积</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">det M</span></td>\n<td><span style=\"font-size: small;\">M的行列式</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">M<sup>-1</sup></span></td>\n<td><span style=\"font-size: small;\">矩阵M的逆矩阵</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">v×w</span></td>\n<td><span style=\"font-size: small;\">向量v和w的向量积或叉积</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">θ<sub>vw</sub></span></td>\n<td><span style=\"font-size: small;\">向量v和w之间的夹角</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">A•B×C</span></td>\n<td><span style=\"font-size: small;\">标量三重积，以A、B、C为列的矩阵的行列式</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">u<sub>w</sub></span></td>\n<td><span style=\"font-size: small;\">在向量w方向上的单位向量，即 w/|w|</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">df</span></td>\n<td><span style=\"font-size: small;\">函数f的微小变化，足够小以至适合于所有相关函数的线性近似</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">df/dx</span></td>\n<td><span style=\"font-size: small;\">f关于x的导数，同时也是f的线性近似斜率</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">f '</span></td>\n<td><span style=\"font-size: small;\">函数f关于相应自变量的导数，自变量通常为x</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">∂f/∂x</span></td>\n<td><span style=\"font-size: small;\">y、z固定时f关于x的偏导数。通常f关于某变量q的偏导数为当其它几个变量固定时df与dq的比值。任何可能导致变量混淆的地方都应明确地表述</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">(∂f/∂x)|<sub>r,z</sub></span></td>\n<td><span style=\"font-size: small;\">保持r和z不变时，f关于x的偏导数</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">grad f</span></td>\n<td><span style=\"font-size: small;\">元素分别为f关于x、y、z偏导数 [(∂f/∂x), (∂f/∂y), (∂f/∂z)] 或 (∂f/∂x)i + (∂f/∂y)j + (∂f/∂z)k; 的向量场，称为f的梯度</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">∇</span></td>\n<td><span style=\"font-size: small;\">向量算子(∂/∂x)i + (∂/∂x)j + (∂/∂x)k, 读作 \"del\"</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">∇f</span></td>\n<td><span style=\"font-size: small;\">f的梯度；它和 u<sub>w</sub> 的点积为f在w方向上的方向导数</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">∇•w</span></td>\n<td><span style=\"font-size: small;\">向量场w的散度，为向量算子∇ 同向量 w的点积, 或 (∂w<sub>x</sub> /∂x) + (∂w<sub>y</sub> /∂y) + (∂w<sub>z</sub> /∂z)</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">curl w</span></td>\n<td><span style=\"font-size: small;\">向量算子 ∇ 同向量 w 的叉积</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">∇×w</span></td>\n<td><span style=\"font-size: small;\">w的旋度，其元素为[(∂f<sub>z</sub> /∂y) - (∂f<sub>y</sub> /∂z), (∂f<sub>x</sub> /∂z) - (∂f<sub>z</sub> /∂x), (∂f<sub>y</sub> /∂x) - (∂f<sub>x</sub> /∂y)]</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">∇•∇</span></td>\n<td><span style=\"font-size: small;\">拉普拉斯微分算子： (∂<sup>2</sup>/∂x<sup>2</sup>) + (∂/∂y<sup>2</sup>) + (∂/∂z<sup>2</sup>)</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">f \"(x)</span></td>\n<td><span style=\"font-size: small;\">f关于x的二阶导数，f '(x)的导数</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">d<sup>2</sup>f/dx<sup>2</sup></span></td>\n<td><span style=\"font-size: small;\">f关于x的二阶导数</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">f<sup>(2)</sup>(x)</span></td>\n<td><span style=\"font-size: small;\">同样也是f关于x的二阶导数</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">f<sup>(k)</sup>(x)</span></td>\n<td><span style=\"font-size: small;\">f关于x的第k阶导数，f<sup>(k-1)</sup> (x)的导数</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">T</span></td>\n<td><span style=\"font-size: small;\">曲线切线方向上的单位向量，如果曲线可以描述成 r(t), 则T = (dr/dt)/|dr/dt|</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">ds</span></td>\n<td><span style=\"font-size: small;\">沿曲线方向距离的导数</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">κ</span></td>\n<td><span style=\"font-size: small;\">曲线的曲率，单位切线向量相对曲线距离的导数的值：|dT/ds|</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">N</span></td>\n<td><span style=\"font-size: small;\">dT/ds投影方向单位向量，垂直于T</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">B</span></td>\n<td><span style=\"font-size: small;\">平面T和N的单位法向量，即曲率的平面</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">τ</span></td>\n<td><span style=\"font-size: small;\">曲线的扭率： |dB/ds|</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">g</span></td>\n<td><span style=\"font-size: small;\">重力常数</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">F</span></td>\n<td><span style=\"font-size: small;\">力学中力的标准符号</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">k</span></td>\n<td><span style=\"font-size: small;\">弹簧的弹簧常数</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">p<sub>i</sub></span></td>\n<td><span style=\"font-size: small;\">第i个物体的动量</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">H</span></td>\n<td><span style=\"font-size: small;\">物理系统的哈密尔敦函数，即位置和动量表示的能量</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">{Q, H}</span></td>\n<td><span style=\"font-size: small;\">Q, H的泊松括号</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\"><img src=\"http://www.core.org.cn/NR/rdonlyres/Mathematics/18-013ASpring-2005/B0800DBE-F064-435C-872D-9D834F4FF8D4/0/glossary_eqn2.jpg\" border=\"0\" alt=\"\" align=\"middle\" /></span></td>\n<td><span style=\"font-size: small;\">以一个关于x的函数的形式表达的f(x)的积分</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\"><img src=\"http://www.core.org.cn/NR/rdonlyres/Mathematics/18-013ASpring-2005/9C981D5B-8A84-4DFC-8224-2F7E4B7DE4ED/0/glossary_eqn3.jpg\" border=\"0\" alt=\"\" align=\"middle\" /></span></td>\n<td><span style=\"font-size: small;\">函数f 从a到b的定积分。当f是正的且 a &lt; b 时表示由x轴和直线y = a, y = b 及在这些直线之间的函数曲线所围起来图形的面积</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">L(d)</span></td>\n<td><span style=\"font-size: small;\">相等子区间大小为d，每个子区间左端点的值为 f的黎曼和</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">R(d)</span></td>\n<td><span style=\"font-size: small;\">相等子区间大小为d，每个子区间右端点的值为 f的黎曼和</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">M(d)</span></td>\n<td><span style=\"font-size: small;\">相等子区间大小为d，每个子区间上的最大值为 f的黎曼和</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">m(d)</span></td>\n<td><span style=\"font-size: small;\">相等子区间大小为d，每个子区间上的最小值为 f的黎曼和</span></td>\n</tr>\n</tbody>\n</table>\n<span style=\"font-size: small;\">+:plus(positive正的)\n-：minus（negative负的）\n*：multiplied by\n÷：divided by\n=:be equal to\n≈:be approximately equal to\n():round brackets(parenthess)\n[]:square brackets\n{}:braces\n∵:because\n∴:therefore\n≤:less than or equal to\n≥：greater than or equal to\n∞：infinity\nLOGnX:logx to the base n\nxn:the nth power of x\nf(x):the function of x\ndx:diffrencial of x\nx+y:x plus y\n(a+b):bracket a plus b bracket closed\na=b:a equals b\na≠b：a isn't equal to b\na&gt;b:a is greater than b\na&gt;&gt;b:a is much greater than b\na≥b: a is greater than or equal to b\nx→∞：x approches infinity\nx2:x square\nx3:x cube\n√￣x:the square root of x\n3√￣x:the cube root of x\n3‰：three peimill\nn∑i=1xi:the summation of x where x goes from 1to n\nn∏i=1xi:the product of x sub i where igoes from 1to n\n∫ab:integral betweens a and b</span>\n\n</div>\n","source":"_posts/2010-03-10-math-symbol.markdown","raw":"---\nlayout: post\ntitle: \"Math symbol\"\ndate: 2010-3-10\nwordpress_id: 102\ncomments: true\ncategories: [\"math\", \"math\", \"symbol\"]\n---\n<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"views\" content=\"629\" />\n<div>\n\n# copy from http://blog.sina.com.cn/s/blog_598529cd0100ecv9.html\n\n<span style=\"font-size: small;\">大写 小写 英文注音 国际音标注音 中文注音\nΑ           α       alpha              alfa                 阿耳法\nΒ           β       beta                beta                贝塔\nΓ           γ       gamma            gamma           伽马\nΔ           δ       deta                delta               德耳塔\nΕ           ε       epsilon            epsilon           艾普西隆\nΖ           ζ        zeta                zeta                截塔\nΗ           η       eta                  eta                 艾塔\nΘ           θ      theta               θita                 西塔\nΙ             ι       iota                  iota                约塔\nΚ           κ      kappa              kappa            卡帕\n∧          λ      lambda            lambda           兰姆达\nΜ          μ        mu                    miu                 缪\nΝ           ν        nu                    niu                 纽\nΞ           ξ         xi                     ksi               可塞\nΟ           ο      omicron           omikron       奥密可戎\n∏           π      pi                     pai                   派\nΡ            ρ      rho                   rou                   柔\n∑           σ      sigma              sigma            西格马\nΤ            τ        tau                  tau                  套\nΥ            υ      upsilon             jupsilon     衣普西隆\nΦ           φ       phi                    fai               斐\nΧ            χ       chi                  khai               喜\nΨ           ψ       psi                  psai            普西\nΩ           ω      omega            omiga         欧米伽</span>\n<table summary=\"See table caption for summary.\"><caption>符号表</caption>\n<thead>\n<tr>\n<th scope=\"col\">符号</th>\n<th scope=\"col\">含义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><span style=\"font-size: small;\">i</span></td>\n<td><span style=\"font-size: small;\">-1的平方根</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">f(x)</span></td>\n<td><span style=\"font-size: small;\">函数f在自变量x处的值</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">sin(x)</span></td>\n<td><span style=\"font-size: small;\">在自变量x处的正弦函数值</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">exp(x)</span></td>\n<td><span style=\"font-size: small;\">在自变量x处的指数函数值，常被写作e<sup>x</sup></span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">a^x</span></td>\n<td><span style=\"font-size: small;\">a的x次方；有理数x由反函数定义</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">ln x</span></td>\n<td><span style=\"font-size: small;\">exp x 的反函数</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">a<sup>x</sup></span></td>\n<td><span style=\"font-size: small;\">同 a^x</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">log<sub>b</sub>a</span></td>\n<td><span style=\"font-size: small;\">以b为底a的对数； b<sup><sup>log<sub>b</sub>a</sup></sup> = a</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">cos x</span></td>\n<td><span style=\"font-size: small;\">在自变量x处余弦函数的值</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">tan x</span></td>\n<td><span style=\"font-size: small;\">其值等于 sin x/cos x</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">cot x</span></td>\n<td><span style=\"font-size: small;\">余切函数的值或 cos x/sin x</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">sec x</span></td>\n<td><span style=\"font-size: small;\">正割含数的值，其值等于 1/cos x</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">csc x</span></td>\n<td><span style=\"font-size: small;\">余割函数的值，其值等于 1/sin x</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">asin x</span></td>\n<td><span style=\"font-size: small;\">y，正弦函数反函数在x处的值，即 x = sin y</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">acos x</span></td>\n<td><span style=\"font-size: small;\">y，余弦函数反函数在x处的值，即 x = cos y</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">atan x</span></td>\n<td><span style=\"font-size: small;\">y，正切函数反函数在x处的值，即 x = tan y</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">acot x</span></td>\n<td><span style=\"font-size: small;\">y，余切函数反函数在x处的值，即 x = cot y</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">asec x</span></td>\n<td><span style=\"font-size: small;\">y，正割函数反函数在x处的值，即 x = sec y</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">acsc x</span></td>\n<td><span style=\"font-size: small;\">y，余割函数反函数在x处的值，即 x = csc y</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">θ</span></td>\n<td><span style=\"font-size: small;\">角度的一个标准符号，不注明均指弧度，尤其用于表示atan x/y，当x、y、z用于表示空间中的点时</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">i, j, k</span></td>\n<td><span style=\"font-size: small;\">分别表示x、y、z方向上的单位向量</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">(a, b, c)</span></td>\n<td><span style=\"font-size: small;\">以a、b、c为元素的向量</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">(a, b)</span></td>\n<td><span style=\"font-size: small;\">以a、b为元素的向量</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">(a, b)</span></td>\n<td><span style=\"font-size: small;\">a、b向量的点积</span></td>\n</tr>\n<tr>\n<td height=\"17\"><span style=\"font-size: small;\">a•b</span></td>\n<td><span style=\"font-size: small;\">a、b向量的点积</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">(a•b)</span></td>\n<td><span style=\"font-size: small;\">a、b向量的点积</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">|v|</span></td>\n<td><span style=\"font-size: small;\">向量v的模</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">|x|</span></td>\n<td><span style=\"font-size: small;\">数x的绝对值</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">Σ</span></td>\n<td><span style=\"font-size: small;\">表示求和，通常是某项指数。下边界值写在其下部，上边界值写在其上部。如j从1到100的和可以表示成：<img src=\"http://www.core.org.cn/NR/rdonlyres/Mathematics/18-013ASpring-2005/08B23D50-1CCF-4A12-A58D-72F2036534F8/0/glossary_eqn1.jpg\" border=\"0\" alt=\"\" align=\"middle\" />。这表示 1 + 2 + … + n</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">M</span></td>\n<td><span style=\"font-size: small;\">表示一个矩阵或数列或其它</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">|v&gt;</span></td>\n<td><span style=\"font-size: small;\">列向量，即元素被写成列或可被看成k×1阶矩阵的向量</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">&lt;v|</span></td>\n<td><span style=\"font-size: small;\">被写成行或可被看成从1×k阶矩阵的向量</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">dx</span></td>\n<td><span style=\"font-size: small;\">变量x的一个无穷小变化，dy, dz, dr等类似</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">ds</span></td>\n<td><span style=\"font-size: small;\">长度的微小变化</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">ρ</span></td>\n<td><span style=\"font-size: small;\">变量 (x<sup>2</sup> + y<sup>2</sup> + z<sup>2</sup>)<sup>1/2</sup> 或球面坐标系中到原点的距离</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">r</span></td>\n<td><span style=\"font-size: small;\">变量 (x<sup>2</sup> + y<sup>2</sup>)<sup>1/2</sup> 或三维空间或极坐标中到z轴的距离</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">|M|</span></td>\n<td><span style=\"font-size: small;\">矩阵M的行列式，其值是矩阵的行和列决定的平行区域的面积或体积</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">||M||</span></td>\n<td><span style=\"font-size: small;\">矩阵M的行列式的值，为一个面积、体积或超体积</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">det M</span></td>\n<td><span style=\"font-size: small;\">M的行列式</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">M<sup>-1</sup></span></td>\n<td><span style=\"font-size: small;\">矩阵M的逆矩阵</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">v×w</span></td>\n<td><span style=\"font-size: small;\">向量v和w的向量积或叉积</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">θ<sub>vw</sub></span></td>\n<td><span style=\"font-size: small;\">向量v和w之间的夹角</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">A•B×C</span></td>\n<td><span style=\"font-size: small;\">标量三重积，以A、B、C为列的矩阵的行列式</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">u<sub>w</sub></span></td>\n<td><span style=\"font-size: small;\">在向量w方向上的单位向量，即 w/|w|</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">df</span></td>\n<td><span style=\"font-size: small;\">函数f的微小变化，足够小以至适合于所有相关函数的线性近似</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">df/dx</span></td>\n<td><span style=\"font-size: small;\">f关于x的导数，同时也是f的线性近似斜率</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">f '</span></td>\n<td><span style=\"font-size: small;\">函数f关于相应自变量的导数，自变量通常为x</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">∂f/∂x</span></td>\n<td><span style=\"font-size: small;\">y、z固定时f关于x的偏导数。通常f关于某变量q的偏导数为当其它几个变量固定时df与dq的比值。任何可能导致变量混淆的地方都应明确地表述</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">(∂f/∂x)|<sub>r,z</sub></span></td>\n<td><span style=\"font-size: small;\">保持r和z不变时，f关于x的偏导数</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">grad f</span></td>\n<td><span style=\"font-size: small;\">元素分别为f关于x、y、z偏导数 [(∂f/∂x), (∂f/∂y), (∂f/∂z)] 或 (∂f/∂x)i + (∂f/∂y)j + (∂f/∂z)k; 的向量场，称为f的梯度</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">∇</span></td>\n<td><span style=\"font-size: small;\">向量算子(∂/∂x)i + (∂/∂x)j + (∂/∂x)k, 读作 \"del\"</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">∇f</span></td>\n<td><span style=\"font-size: small;\">f的梯度；它和 u<sub>w</sub> 的点积为f在w方向上的方向导数</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">∇•w</span></td>\n<td><span style=\"font-size: small;\">向量场w的散度，为向量算子∇ 同向量 w的点积, 或 (∂w<sub>x</sub> /∂x) + (∂w<sub>y</sub> /∂y) + (∂w<sub>z</sub> /∂z)</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">curl w</span></td>\n<td><span style=\"font-size: small;\">向量算子 ∇ 同向量 w 的叉积</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">∇×w</span></td>\n<td><span style=\"font-size: small;\">w的旋度，其元素为[(∂f<sub>z</sub> /∂y) - (∂f<sub>y</sub> /∂z), (∂f<sub>x</sub> /∂z) - (∂f<sub>z</sub> /∂x), (∂f<sub>y</sub> /∂x) - (∂f<sub>x</sub> /∂y)]</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">∇•∇</span></td>\n<td><span style=\"font-size: small;\">拉普拉斯微分算子： (∂<sup>2</sup>/∂x<sup>2</sup>) + (∂/∂y<sup>2</sup>) + (∂/∂z<sup>2</sup>)</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">f \"(x)</span></td>\n<td><span style=\"font-size: small;\">f关于x的二阶导数，f '(x)的导数</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">d<sup>2</sup>f/dx<sup>2</sup></span></td>\n<td><span style=\"font-size: small;\">f关于x的二阶导数</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">f<sup>(2)</sup>(x)</span></td>\n<td><span style=\"font-size: small;\">同样也是f关于x的二阶导数</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">f<sup>(k)</sup>(x)</span></td>\n<td><span style=\"font-size: small;\">f关于x的第k阶导数，f<sup>(k-1)</sup> (x)的导数</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">T</span></td>\n<td><span style=\"font-size: small;\">曲线切线方向上的单位向量，如果曲线可以描述成 r(t), 则T = (dr/dt)/|dr/dt|</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">ds</span></td>\n<td><span style=\"font-size: small;\">沿曲线方向距离的导数</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">κ</span></td>\n<td><span style=\"font-size: small;\">曲线的曲率，单位切线向量相对曲线距离的导数的值：|dT/ds|</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">N</span></td>\n<td><span style=\"font-size: small;\">dT/ds投影方向单位向量，垂直于T</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">B</span></td>\n<td><span style=\"font-size: small;\">平面T和N的单位法向量，即曲率的平面</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">τ</span></td>\n<td><span style=\"font-size: small;\">曲线的扭率： |dB/ds|</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">g</span></td>\n<td><span style=\"font-size: small;\">重力常数</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">F</span></td>\n<td><span style=\"font-size: small;\">力学中力的标准符号</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">k</span></td>\n<td><span style=\"font-size: small;\">弹簧的弹簧常数</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">p<sub>i</sub></span></td>\n<td><span style=\"font-size: small;\">第i个物体的动量</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">H</span></td>\n<td><span style=\"font-size: small;\">物理系统的哈密尔敦函数，即位置和动量表示的能量</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">{Q, H}</span></td>\n<td><span style=\"font-size: small;\">Q, H的泊松括号</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\"><img src=\"http://www.core.org.cn/NR/rdonlyres/Mathematics/18-013ASpring-2005/B0800DBE-F064-435C-872D-9D834F4FF8D4/0/glossary_eqn2.jpg\" border=\"0\" alt=\"\" align=\"middle\" /></span></td>\n<td><span style=\"font-size: small;\">以一个关于x的函数的形式表达的f(x)的积分</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\"><img src=\"http://www.core.org.cn/NR/rdonlyres/Mathematics/18-013ASpring-2005/9C981D5B-8A84-4DFC-8224-2F7E4B7DE4ED/0/glossary_eqn3.jpg\" border=\"0\" alt=\"\" align=\"middle\" /></span></td>\n<td><span style=\"font-size: small;\">函数f 从a到b的定积分。当f是正的且 a &lt; b 时表示由x轴和直线y = a, y = b 及在这些直线之间的函数曲线所围起来图形的面积</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">L(d)</span></td>\n<td><span style=\"font-size: small;\">相等子区间大小为d，每个子区间左端点的值为 f的黎曼和</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">R(d)</span></td>\n<td><span style=\"font-size: small;\">相等子区间大小为d，每个子区间右端点的值为 f的黎曼和</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">M(d)</span></td>\n<td><span style=\"font-size: small;\">相等子区间大小为d，每个子区间上的最大值为 f的黎曼和</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: small;\">m(d)</span></td>\n<td><span style=\"font-size: small;\">相等子区间大小为d，每个子区间上的最小值为 f的黎曼和</span></td>\n</tr>\n</tbody>\n</table>\n<span style=\"font-size: small;\">+:plus(positive正的)\n-：minus（negative负的）\n*：multiplied by\n÷：divided by\n=:be equal to\n≈:be approximately equal to\n():round brackets(parenthess)\n[]:square brackets\n{}:braces\n∵:because\n∴:therefore\n≤:less than or equal to\n≥：greater than or equal to\n∞：infinity\nLOGnX:logx to the base n\nxn:the nth power of x\nf(x):the function of x\ndx:diffrencial of x\nx+y:x plus y\n(a+b):bracket a plus b bracket closed\na=b:a equals b\na≠b：a isn't equal to b\na&gt;b:a is greater than b\na&gt;&gt;b:a is much greater than b\na≥b: a is greater than or equal to b\nx→∞：x approches infinity\nx2:x square\nx3:x cube\n√￣x:the square root of x\n3√￣x:the cube root of x\n3‰：three peimill\nn∑i=1xi:the summation of x where x goes from 1to n\nn∏i=1xi:the product of x sub i where igoes from 1to n\n∫ab:integral betweens a and b</span>\n\n</div>\n","slug":"2010-03-10-math-symbol","published":1,"updated":"2017-06-05T03:01:15.000Z","photos":[],"link":"","_id":"cj3jjuz0400021jmj8sa3ztqs","content":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"views\" content=\"629\"></p>\n<div><br><br># copy from <a href=\"http://blog.sina.com.cn/s/blog_598529cd0100ecv9.html\" target=\"_blank\" rel=\"external\">http://blog.sina.com.cn/s/blog_598529cd0100ecv9.html</a><br><br><span style=\"font-size: small;\">大写 小写 英文注音 国际音标注音 中文注音<br>Α           α       alpha              alfa                 阿耳法<br>Β           β       beta                beta                贝塔<br>Γ           γ       gamma            gamma           伽马<br>Δ           δ       deta                delta               德耳塔<br>Ε           ε       epsilon            epsilon           艾普西隆<br>Ζ           ζ        zeta                zeta                截塔<br>Η           η       eta                  eta                 艾塔<br>Θ           θ      theta               θita                 西塔<br>Ι             ι       iota                  iota                约塔<br>Κ           κ      kappa              kappa            卡帕<br>∧          λ      lambda            lambda           兰姆达<br>Μ          μ        mu                    miu                 缪<br>Ν           ν        nu                    niu                 纽<br>Ξ           ξ         xi                     ksi               可塞<br>Ο           ο      omicron           omikron       奥密可戎<br>∏           π      pi                     pai                   派<br>Ρ            ρ      rho                   rou                   柔<br>∑           σ      sigma              sigma            西格马<br>Τ            τ        tau                  tau                  套<br>Υ            υ      upsilon             jupsilon     衣普西隆<br>Φ           φ       phi                    fai               斐<br>Χ            χ       chi                  khai               喜<br>Ψ           ψ       psi                  psai            普西<br>Ω           ω      omega            omiga         欧米伽</span><br><table summary=\"See table caption for summary.\"><caption>符号表</caption><br><thead><br><tr><br><th scope=\"col\">符号</th><br><th scope=\"col\">含义</th><br></tr><br></thead><br><tbody><br><tr><br><td><span style=\"font-size: small;\">i</span></td><br><td><span style=\"font-size: small;\">-1的平方根</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">f(x)</span></td><br><td><span style=\"font-size: small;\">函数f在自变量x处的值</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">sin(x)</span></td><br><td><span style=\"font-size: small;\">在自变量x处的正弦函数值</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">exp(x)</span></td><br><td><span style=\"font-size: small;\">在自变量x处的指数函数值，常被写作e<sup>x</sup></span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">a^x</span></td><br><td><span style=\"font-size: small;\">a的x次方；有理数x由反函数定义</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">ln x</span></td><br><td><span style=\"font-size: small;\">exp x 的反函数</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">a<sup>x</sup></span></td><br><td><span style=\"font-size: small;\">同 a^x</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">log<sub>b</sub>a</span></td><br><td><span style=\"font-size: small;\">以b为底a的对数； b<sup><sup>log<sub>b</sub>a</sup></sup> = a</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">cos x</span></td><br><td><span style=\"font-size: small;\">在自变量x处余弦函数的值</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">tan x</span></td><br><td><span style=\"font-size: small;\">其值等于 sin x/cos x</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">cot x</span></td><br><td><span style=\"font-size: small;\">余切函数的值或 cos x/sin x</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">sec x</span></td><br><td><span style=\"font-size: small;\">正割含数的值，其值等于 1/cos x</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">csc x</span></td><br><td><span style=\"font-size: small;\">余割函数的值，其值等于 1/sin x</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">asin x</span></td><br><td><span style=\"font-size: small;\">y，正弦函数反函数在x处的值，即 x = sin y</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">acos x</span></td><br><td><span style=\"font-size: small;\">y，余弦函数反函数在x处的值，即 x = cos y</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">atan x</span></td><br><td><span style=\"font-size: small;\">y，正切函数反函数在x处的值，即 x = tan y</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">acot x</span></td><br><td><span style=\"font-size: small;\">y，余切函数反函数在x处的值，即 x = cot y</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">asec x</span></td><br><td><span style=\"font-size: small;\">y，正割函数反函数在x处的值，即 x = sec y</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">acsc x</span></td><br><td><span style=\"font-size: small;\">y，余割函数反函数在x处的值，即 x = csc y</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">θ</span></td><br><td><span style=\"font-size: small;\">角度的一个标准符号，不注明均指弧度，尤其用于表示atan x/y，当x、y、z用于表示空间中的点时</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">i, j, k</span></td><br><td><span style=\"font-size: small;\">分别表示x、y、z方向上的单位向量</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">(a, b, c)</span></td><br><td><span style=\"font-size: small;\">以a、b、c为元素的向量</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">(a, b)</span></td><br><td><span style=\"font-size: small;\">以a、b为元素的向量</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">(a, b)</span></td><br><td><span style=\"font-size: small;\">a、b向量的点积</span></td><br></tr><br><tr><br><td height=\"17\"><span style=\"font-size: small;\">a•b</span></td><br><td><span style=\"font-size: small;\">a、b向量的点积</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">(a•b)</span></td><br><td><span style=\"font-size: small;\">a、b向量的点积</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">|v|</span></td><br><td><span style=\"font-size: small;\">向量v的模</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">|x|</span></td><br><td><span style=\"font-size: small;\">数x的绝对值</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">Σ</span></td><br><td><span style=\"font-size: small;\">表示求和，通常是某项指数。下边界值写在其下部，上边界值写在其上部。如j从1到100的和可以表示成：<img src=\"http://www.core.org.cn/NR/rdonlyres/Mathematics/18-013ASpring-2005/08B23D50-1CCF-4A12-A58D-72F2036534F8/0/glossary_eqn1.jpg\" border=\"0\" alt=\"\" align=\"middle\">。这表示 1 + 2 + … + n</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">M</span></td><br><td><span style=\"font-size: small;\">表示一个矩阵或数列或其它</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">|v&gt;</span></td><br><td><span style=\"font-size: small;\">列向量，即元素被写成列或可被看成k×1阶矩阵的向量</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">&lt;v|</span></td><br><td><span style=\"font-size: small;\">被写成行或可被看成从1×k阶矩阵的向量</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">dx</span></td><br><td><span style=\"font-size: small;\">变量x的一个无穷小变化，dy, dz, dr等类似</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">ds</span></td><br><td><span style=\"font-size: small;\">长度的微小变化</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">ρ</span></td><br><td><span style=\"font-size: small;\">变量 (x<sup>2</sup> + y<sup>2</sup> + z<sup>2</sup>)<sup>1/2</sup> 或球面坐标系中到原点的距离</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">r</span></td><br><td><span style=\"font-size: small;\">变量 (x<sup>2</sup> + y<sup>2</sup>)<sup>1/2</sup> 或三维空间或极坐标中到z轴的距离</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">|M|</span></td><br><td><span style=\"font-size: small;\">矩阵M的行列式，其值是矩阵的行和列决定的平行区域的面积或体积</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">||M||</span></td><br><td><span style=\"font-size: small;\">矩阵M的行列式的值，为一个面积、体积或超体积</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">det M</span></td><br><td><span style=\"font-size: small;\">M的行列式</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">M<sup>-1</sup></span></td><br><td><span style=\"font-size: small;\">矩阵M的逆矩阵</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">v×w</span></td><br><td><span style=\"font-size: small;\">向量v和w的向量积或叉积</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">θ<sub>vw</sub></span></td><br><td><span style=\"font-size: small;\">向量v和w之间的夹角</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">A•B×C</span></td><br><td><span style=\"font-size: small;\">标量三重积，以A、B、C为列的矩阵的行列式</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">u<sub>w</sub></span></td><br><td><span style=\"font-size: small;\">在向量w方向上的单位向量，即 w/|w|</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">df</span></td><br><td><span style=\"font-size: small;\">函数f的微小变化，足够小以至适合于所有相关函数的线性近似</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">df/dx</span></td><br><td><span style=\"font-size: small;\">f关于x的导数，同时也是f的线性近似斜率</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">f ‘</span></td><br><td><span style=\"font-size: small;\">函数f关于相应自变量的导数，自变量通常为x</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">∂f/∂x</span></td><br><td><span style=\"font-size: small;\">y、z固定时f关于x的偏导数。通常f关于某变量q的偏导数为当其它几个变量固定时df与dq的比值。任何可能导致变量混淆的地方都应明确地表述</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">(∂f/∂x)|<sub>r,z</sub></span></td><br><td><span style=\"font-size: small;\">保持r和z不变时，f关于x的偏导数</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">grad f</span></td><br><td><span style=\"font-size: small;\">元素分别为f关于x、y、z偏导数 [(∂f/∂x), (∂f/∂y), (∂f/∂z)] 或 (∂f/∂x)i + (∂f/∂y)j + (∂f/∂z)k; 的向量场，称为f的梯度</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">∇</span></td><br><td><span style=\"font-size: small;\">向量算子(∂/∂x)i + (∂/∂x)j + (∂/∂x)k, 读作 “del”</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">∇f</span></td><br><td><span style=\"font-size: small;\">f的梯度；它和 u<sub>w</sub> 的点积为f在w方向上的方向导数</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">∇•w</span></td><br><td><span style=\"font-size: small;\">向量场w的散度，为向量算子∇ 同向量 w的点积, 或 (∂w<sub>x</sub> /∂x) + (∂w<sub>y</sub> /∂y) + (∂w<sub>z</sub> /∂z)</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">curl w</span></td><br><td><span style=\"font-size: small;\">向量算子 ∇ 同向量 w 的叉积</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">∇×w</span></td><br><td><span style=\"font-size: small;\">w的旋度，其元素为[(∂f<sub>z</sub> /∂y) - (∂f<sub>y</sub> /∂z), (∂f<sub>x</sub> /∂z) - (∂f<sub>z</sub> /∂x), (∂f<sub>y</sub> /∂x) - (∂f<sub>x</sub> /∂y)]</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">∇•∇</span></td><br><td><span style=\"font-size: small;\">拉普拉斯微分算子： (∂<sup>2</sup>/∂x<sup>2</sup>) + (∂/∂y<sup>2</sup>) + (∂/∂z<sup>2</sup>)</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">f “(x)</span></td><br><td><span style=\"font-size: small;\">f关于x的二阶导数，f ‘(x)的导数</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">d<sup>2</sup>f/dx<sup>2</sup></span></td><br><td><span style=\"font-size: small;\">f关于x的二阶导数</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">f<sup>(2)</sup>(x)</span></td><br><td><span style=\"font-size: small;\">同样也是f关于x的二阶导数</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">f<sup>(k)</sup>(x)</span></td><br><td><span style=\"font-size: small;\">f关于x的第k阶导数，f<sup>(k-1)</sup> (x)的导数</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">T</span></td><br><td><span style=\"font-size: small;\">曲线切线方向上的单位向量，如果曲线可以描述成 r(t), 则T = (dr/dt)/|dr/dt|</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">ds</span></td><br><td><span style=\"font-size: small;\">沿曲线方向距离的导数</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">κ</span></td><br><td><span style=\"font-size: small;\">曲线的曲率，单位切线向量相对曲线距离的导数的值：|dT/ds|</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">N</span></td><br><td><span style=\"font-size: small;\">dT/ds投影方向单位向量，垂直于T</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">B</span></td><br><td><span style=\"font-size: small;\">平面T和N的单位法向量，即曲率的平面</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">τ</span></td><br><td><span style=\"font-size: small;\">曲线的扭率： |dB/ds|</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">g</span></td><br><td><span style=\"font-size: small;\">重力常数</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">F</span></td><br><td><span style=\"font-size: small;\">力学中力的标准符号</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">k</span></td><br><td><span style=\"font-size: small;\">弹簧的弹簧常数</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">p<sub>i</sub></span></td><br><td><span style=\"font-size: small;\">第i个物体的动量</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">H</span></td><br><td><span style=\"font-size: small;\">物理系统的哈密尔敦函数，即位置和动量表示的能量</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">{Q, H}</span></td><br><td><span style=\"font-size: small;\">Q, H的泊松括号</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\"><img src=\"http://www.core.org.cn/NR/rdonlyres/Mathematics/18-013ASpring-2005/B0800DBE-F064-435C-872D-9D834F4FF8D4/0/glossary_eqn2.jpg\" border=\"0\" alt=\"\" align=\"middle\"></span></td><br><td><span style=\"font-size: small;\">以一个关于x的函数的形式表达的f(x)的积分</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\"><img src=\"http://www.core.org.cn/NR/rdonlyres/Mathematics/18-013ASpring-2005/9C981D5B-8A84-4DFC-8224-2F7E4B7DE4ED/0/glossary_eqn3.jpg\" border=\"0\" alt=\"\" align=\"middle\"></span></td><br><td><span style=\"font-size: small;\">函数f 从a到b的定积分。当f是正的且 a &lt; b 时表示由x轴和直线y = a, y = b 及在这些直线之间的函数曲线所围起来图形的面积</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">L(d)</span></td><br><td><span style=\"font-size: small;\">相等子区间大小为d，每个子区间左端点的值为 f的黎曼和</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">R(d)</span></td><br><td><span style=\"font-size: small;\">相等子区间大小为d，每个子区间右端点的值为 f的黎曼和</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">M(d)</span></td><br><td><span style=\"font-size: small;\">相等子区间大小为d，每个子区间上的最大值为 f的黎曼和</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">m(d)</span></td><br><td><span style=\"font-size: small;\">相等子区间大小为d，每个子区间上的最小值为 f的黎曼和</span></td><br></tr><br></tbody><br></table><br><span style=\"font-size: small;\">+:plus(positive正的)<br>-：minus（negative负的）<br>*：multiplied by<br>÷：divided by<br>=:be equal to<br>≈:be approximately equal to<br>():round brackets(parenthess)<br>[]:square brackets<br>{}:braces<br>∵:because<br>∴:therefore<br>≤:less than or equal to<br>≥：greater than or equal to<br>∞：infinity<br>LOGnX:logx to the base n<br>xn:the nth power of x<br>f(x):the function of x<br>dx:diffrencial of x<br>x+y:x plus y<br>(a+b):bracket a plus b bracket closed<br>a=b:a equals b<br>a≠b：a isn’t equal to b<br>a&gt;b:a is greater than b<br>a&gt;&gt;b:a is much greater than b<br>a≥b: a is greater than or equal to b<br>x→∞：x approches infinity<br>x2:x square<br>x3:x cube<br>√￣x:the square root of x<br>3√￣x:the cube root of x<br>3‰：three peimill<br>n∑i=1xi:the summation of x where x goes from 1to n<br>n∏i=1xi:the product of x sub i where igoes from 1to n<br>∫ab:integral betweens a and b</span><br><br></div>\n","site":{"data":{}},"excerpt":"","more":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"views\" content=\"629\"></p>\n<div><br><br># copy from <a href=\"http://blog.sina.com.cn/s/blog_598529cd0100ecv9.html\" target=\"_blank\" rel=\"external\">http://blog.sina.com.cn/s/blog_598529cd0100ecv9.html</a><br><br><span style=\"font-size: small;\">大写 小写 英文注音 国际音标注音 中文注音<br>Α           α       alpha              alfa                 阿耳法<br>Β           β       beta                beta                贝塔<br>Γ           γ       gamma            gamma           伽马<br>Δ           δ       deta                delta               德耳塔<br>Ε           ε       epsilon            epsilon           艾普西隆<br>Ζ           ζ        zeta                zeta                截塔<br>Η           η       eta                  eta                 艾塔<br>Θ           θ      theta               θita                 西塔<br>Ι             ι       iota                  iota                约塔<br>Κ           κ      kappa              kappa            卡帕<br>∧          λ      lambda            lambda           兰姆达<br>Μ          μ        mu                    miu                 缪<br>Ν           ν        nu                    niu                 纽<br>Ξ           ξ         xi                     ksi               可塞<br>Ο           ο      omicron           omikron       奥密可戎<br>∏           π      pi                     pai                   派<br>Ρ            ρ      rho                   rou                   柔<br>∑           σ      sigma              sigma            西格马<br>Τ            τ        tau                  tau                  套<br>Υ            υ      upsilon             jupsilon     衣普西隆<br>Φ           φ       phi                    fai               斐<br>Χ            χ       chi                  khai               喜<br>Ψ           ψ       psi                  psai            普西<br>Ω           ω      omega            omiga         欧米伽</span><br><table summary=\"See table caption for summary.\"><caption>符号表</caption><br><thead><br><tr><br><th scope=\"col\">符号</th><br><th scope=\"col\">含义</th><br></tr><br></thead><br><tbody><br><tr><br><td><span style=\"font-size: small;\">i</span></td><br><td><span style=\"font-size: small;\">-1的平方根</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">f(x)</span></td><br><td><span style=\"font-size: small;\">函数f在自变量x处的值</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">sin(x)</span></td><br><td><span style=\"font-size: small;\">在自变量x处的正弦函数值</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">exp(x)</span></td><br><td><span style=\"font-size: small;\">在自变量x处的指数函数值，常被写作e<sup>x</sup></span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">a^x</span></td><br><td><span style=\"font-size: small;\">a的x次方；有理数x由反函数定义</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">ln x</span></td><br><td><span style=\"font-size: small;\">exp x 的反函数</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">a<sup>x</sup></span></td><br><td><span style=\"font-size: small;\">同 a^x</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">log<sub>b</sub>a</span></td><br><td><span style=\"font-size: small;\">以b为底a的对数； b<sup><sup>log<sub>b</sub>a</sup></sup> = a</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">cos x</span></td><br><td><span style=\"font-size: small;\">在自变量x处余弦函数的值</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">tan x</span></td><br><td><span style=\"font-size: small;\">其值等于 sin x/cos x</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">cot x</span></td><br><td><span style=\"font-size: small;\">余切函数的值或 cos x/sin x</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">sec x</span></td><br><td><span style=\"font-size: small;\">正割含数的值，其值等于 1/cos x</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">csc x</span></td><br><td><span style=\"font-size: small;\">余割函数的值，其值等于 1/sin x</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">asin x</span></td><br><td><span style=\"font-size: small;\">y，正弦函数反函数在x处的值，即 x = sin y</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">acos x</span></td><br><td><span style=\"font-size: small;\">y，余弦函数反函数在x处的值，即 x = cos y</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">atan x</span></td><br><td><span style=\"font-size: small;\">y，正切函数反函数在x处的值，即 x = tan y</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">acot x</span></td><br><td><span style=\"font-size: small;\">y，余切函数反函数在x处的值，即 x = cot y</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">asec x</span></td><br><td><span style=\"font-size: small;\">y，正割函数反函数在x处的值，即 x = sec y</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">acsc x</span></td><br><td><span style=\"font-size: small;\">y，余割函数反函数在x处的值，即 x = csc y</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">θ</span></td><br><td><span style=\"font-size: small;\">角度的一个标准符号，不注明均指弧度，尤其用于表示atan x/y，当x、y、z用于表示空间中的点时</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">i, j, k</span></td><br><td><span style=\"font-size: small;\">分别表示x、y、z方向上的单位向量</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">(a, b, c)</span></td><br><td><span style=\"font-size: small;\">以a、b、c为元素的向量</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">(a, b)</span></td><br><td><span style=\"font-size: small;\">以a、b为元素的向量</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">(a, b)</span></td><br><td><span style=\"font-size: small;\">a、b向量的点积</span></td><br></tr><br><tr><br><td height=\"17\"><span style=\"font-size: small;\">a•b</span></td><br><td><span style=\"font-size: small;\">a、b向量的点积</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">(a•b)</span></td><br><td><span style=\"font-size: small;\">a、b向量的点积</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">|v|</span></td><br><td><span style=\"font-size: small;\">向量v的模</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">|x|</span></td><br><td><span style=\"font-size: small;\">数x的绝对值</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">Σ</span></td><br><td><span style=\"font-size: small;\">表示求和，通常是某项指数。下边界值写在其下部，上边界值写在其上部。如j从1到100的和可以表示成：<img src=\"http://www.core.org.cn/NR/rdonlyres/Mathematics/18-013ASpring-2005/08B23D50-1CCF-4A12-A58D-72F2036534F8/0/glossary_eqn1.jpg\" border=\"0\" alt=\"\" align=\"middle\">。这表示 1 + 2 + … + n</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">M</span></td><br><td><span style=\"font-size: small;\">表示一个矩阵或数列或其它</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">|v&gt;</span></td><br><td><span style=\"font-size: small;\">列向量，即元素被写成列或可被看成k×1阶矩阵的向量</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">&lt;v|</span></td><br><td><span style=\"font-size: small;\">被写成行或可被看成从1×k阶矩阵的向量</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">dx</span></td><br><td><span style=\"font-size: small;\">变量x的一个无穷小变化，dy, dz, dr等类似</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">ds</span></td><br><td><span style=\"font-size: small;\">长度的微小变化</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">ρ</span></td><br><td><span style=\"font-size: small;\">变量 (x<sup>2</sup> + y<sup>2</sup> + z<sup>2</sup>)<sup>1/2</sup> 或球面坐标系中到原点的距离</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">r</span></td><br><td><span style=\"font-size: small;\">变量 (x<sup>2</sup> + y<sup>2</sup>)<sup>1/2</sup> 或三维空间或极坐标中到z轴的距离</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">|M|</span></td><br><td><span style=\"font-size: small;\">矩阵M的行列式，其值是矩阵的行和列决定的平行区域的面积或体积</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">||M||</span></td><br><td><span style=\"font-size: small;\">矩阵M的行列式的值，为一个面积、体积或超体积</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">det M</span></td><br><td><span style=\"font-size: small;\">M的行列式</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">M<sup>-1</sup></span></td><br><td><span style=\"font-size: small;\">矩阵M的逆矩阵</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">v×w</span></td><br><td><span style=\"font-size: small;\">向量v和w的向量积或叉积</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">θ<sub>vw</sub></span></td><br><td><span style=\"font-size: small;\">向量v和w之间的夹角</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">A•B×C</span></td><br><td><span style=\"font-size: small;\">标量三重积，以A、B、C为列的矩阵的行列式</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">u<sub>w</sub></span></td><br><td><span style=\"font-size: small;\">在向量w方向上的单位向量，即 w/|w|</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">df</span></td><br><td><span style=\"font-size: small;\">函数f的微小变化，足够小以至适合于所有相关函数的线性近似</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">df/dx</span></td><br><td><span style=\"font-size: small;\">f关于x的导数，同时也是f的线性近似斜率</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">f ‘</span></td><br><td><span style=\"font-size: small;\">函数f关于相应自变量的导数，自变量通常为x</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">∂f/∂x</span></td><br><td><span style=\"font-size: small;\">y、z固定时f关于x的偏导数。通常f关于某变量q的偏导数为当其它几个变量固定时df与dq的比值。任何可能导致变量混淆的地方都应明确地表述</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">(∂f/∂x)|<sub>r,z</sub></span></td><br><td><span style=\"font-size: small;\">保持r和z不变时，f关于x的偏导数</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">grad f</span></td><br><td><span style=\"font-size: small;\">元素分别为f关于x、y、z偏导数 [(∂f/∂x), (∂f/∂y), (∂f/∂z)] 或 (∂f/∂x)i + (∂f/∂y)j + (∂f/∂z)k; 的向量场，称为f的梯度</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">∇</span></td><br><td><span style=\"font-size: small;\">向量算子(∂/∂x)i + (∂/∂x)j + (∂/∂x)k, 读作 “del”</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">∇f</span></td><br><td><span style=\"font-size: small;\">f的梯度；它和 u<sub>w</sub> 的点积为f在w方向上的方向导数</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">∇•w</span></td><br><td><span style=\"font-size: small;\">向量场w的散度，为向量算子∇ 同向量 w的点积, 或 (∂w<sub>x</sub> /∂x) + (∂w<sub>y</sub> /∂y) + (∂w<sub>z</sub> /∂z)</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">curl w</span></td><br><td><span style=\"font-size: small;\">向量算子 ∇ 同向量 w 的叉积</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">∇×w</span></td><br><td><span style=\"font-size: small;\">w的旋度，其元素为[(∂f<sub>z</sub> /∂y) - (∂f<sub>y</sub> /∂z), (∂f<sub>x</sub> /∂z) - (∂f<sub>z</sub> /∂x), (∂f<sub>y</sub> /∂x) - (∂f<sub>x</sub> /∂y)]</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">∇•∇</span></td><br><td><span style=\"font-size: small;\">拉普拉斯微分算子： (∂<sup>2</sup>/∂x<sup>2</sup>) + (∂/∂y<sup>2</sup>) + (∂/∂z<sup>2</sup>)</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">f “(x)</span></td><br><td><span style=\"font-size: small;\">f关于x的二阶导数，f ‘(x)的导数</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">d<sup>2</sup>f/dx<sup>2</sup></span></td><br><td><span style=\"font-size: small;\">f关于x的二阶导数</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">f<sup>(2)</sup>(x)</span></td><br><td><span style=\"font-size: small;\">同样也是f关于x的二阶导数</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">f<sup>(k)</sup>(x)</span></td><br><td><span style=\"font-size: small;\">f关于x的第k阶导数，f<sup>(k-1)</sup> (x)的导数</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">T</span></td><br><td><span style=\"font-size: small;\">曲线切线方向上的单位向量，如果曲线可以描述成 r(t), 则T = (dr/dt)/|dr/dt|</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">ds</span></td><br><td><span style=\"font-size: small;\">沿曲线方向距离的导数</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">κ</span></td><br><td><span style=\"font-size: small;\">曲线的曲率，单位切线向量相对曲线距离的导数的值：|dT/ds|</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">N</span></td><br><td><span style=\"font-size: small;\">dT/ds投影方向单位向量，垂直于T</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">B</span></td><br><td><span style=\"font-size: small;\">平面T和N的单位法向量，即曲率的平面</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">τ</span></td><br><td><span style=\"font-size: small;\">曲线的扭率： |dB/ds|</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">g</span></td><br><td><span style=\"font-size: small;\">重力常数</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">F</span></td><br><td><span style=\"font-size: small;\">力学中力的标准符号</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">k</span></td><br><td><span style=\"font-size: small;\">弹簧的弹簧常数</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">p<sub>i</sub></span></td><br><td><span style=\"font-size: small;\">第i个物体的动量</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">H</span></td><br><td><span style=\"font-size: small;\">物理系统的哈密尔敦函数，即位置和动量表示的能量</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">{Q, H}</span></td><br><td><span style=\"font-size: small;\">Q, H的泊松括号</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\"><img src=\"http://www.core.org.cn/NR/rdonlyres/Mathematics/18-013ASpring-2005/B0800DBE-F064-435C-872D-9D834F4FF8D4/0/glossary_eqn2.jpg\" border=\"0\" alt=\"\" align=\"middle\"></span></td><br><td><span style=\"font-size: small;\">以一个关于x的函数的形式表达的f(x)的积分</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\"><img src=\"http://www.core.org.cn/NR/rdonlyres/Mathematics/18-013ASpring-2005/9C981D5B-8A84-4DFC-8224-2F7E4B7DE4ED/0/glossary_eqn3.jpg\" border=\"0\" alt=\"\" align=\"middle\"></span></td><br><td><span style=\"font-size: small;\">函数f 从a到b的定积分。当f是正的且 a &lt; b 时表示由x轴和直线y = a, y = b 及在这些直线之间的函数曲线所围起来图形的面积</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">L(d)</span></td><br><td><span style=\"font-size: small;\">相等子区间大小为d，每个子区间左端点的值为 f的黎曼和</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">R(d)</span></td><br><td><span style=\"font-size: small;\">相等子区间大小为d，每个子区间右端点的值为 f的黎曼和</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">M(d)</span></td><br><td><span style=\"font-size: small;\">相等子区间大小为d，每个子区间上的最大值为 f的黎曼和</span></td><br></tr><br><tr><br><td><span style=\"font-size: small;\">m(d)</span></td><br><td><span style=\"font-size: small;\">相等子区间大小为d，每个子区间上的最小值为 f的黎曼和</span></td><br></tr><br></tbody><br></table><br><span style=\"font-size: small;\">+:plus(positive正的)<br>-：minus（negative负的）<br>*：multiplied by<br>÷：divided by<br>=:be equal to<br>≈:be approximately equal to<br>():round brackets(parenthess)<br>[]:square brackets<br>{}:braces<br>∵:because<br>∴:therefore<br>≤:less than or equal to<br>≥：greater than or equal to<br>∞：infinity<br>LOGnX:logx to the base n<br>xn:the nth power of x<br>f(x):the function of x<br>dx:diffrencial of x<br>x+y:x plus y<br>(a+b):bracket a plus b bracket closed<br>a=b:a equals b<br>a≠b：a isn’t equal to b<br>a&gt;b:a is greater than b<br>a&gt;&gt;b:a is much greater than b<br>a≥b: a is greater than or equal to b<br>x→∞：x approches infinity<br>x2:x square<br>x3:x cube<br>√￣x:the square root of x<br>3√￣x:the cube root of x<br>3‰：three peimill<br>n∑i=1xi:the summation of x where x goes from 1to n<br>n∏i=1xi:the product of x sub i where igoes from 1to n<br>∫ab:integral betweens a and b</span><br><br></div>\n"},{"layout":"post","title":"use c language to connect postgreSQL","date":"2010-03-09T16:00:00.000Z","wordpress_id":104,"comments":1,"_content":"<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"views\" content=\"2275\" />\nThere is a small example copied from <a href=\"http://www.postgresql.org/files/documentation/books/aw_pgsql/writing_apps/node3.html\">postgreSQL.org</a>\n\n[codesyntax lang=\"c\" tab_width=\"4\" strict=\"yes\"]\n{% codeblock %}/*\n*  libpq sample program\n*/\n\n#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include \"libpq-fe.h\"                                   /* libpq header file */\n\nint main()\n{\n\tchar        state_code[3];                          /* holds user state code */\n\tchar        query_string[256];                      /* holds constructed SQL query */\n\tPGconn     *conn;                                   /* holds database connection */\n\tPGresult   *res;                                    /* holds query result */\n\tint         i;\n\n\tconn = PQconnectdb(\"dbname=test\"); /* connect to the database */\n\n\tif (PQstatus(conn) == CONNECTION_BAD)               /* did the connection fail? */\n\t{\n\t\tfprintf(stderr, \"Connection to database failed.\\n\");\n\t\tfprintf(stderr, \"%s\", PQerrorMessage(conn));\n\t\texit(1);\n\t}\n\n\tprintf(\"Enter a state code:  \");                    /* prompt user for a state code */\n\tscanf(\"%2s\", state_code);\n\n\tsprintf(query_string,                               /* create an SQL query string */\n\t\"SELECT name \\\n\tFROM statename \\\n\tWHERE code = '%s'\", state_code);\n\n\tres = PQexec(conn, query_string); /* send the query */\n\n\tif (PQresultStatus(res) != PGRES_TUPLES_OK)         /* did the query fail? */\n\t{\n\t\tfprintf(stderr, \"SELECT query failed.\\n\");\n\t\tPQclear(res);\n\t\tPQfinish(conn);\n\t\texit(1);\n\t}\n\n\tfor (i = 0; i &lt; PQntuples(res); i++)                /* loop through all rows returned */\n\t\tprintf(\"%s\\n\", PQgetvalue(res, i, 0));          /* print the value returned */\n\n\tPQclear(res); /* free result */\n\n\tPQfinish(conn); /* disconnect from the database */\n\n\treturn 0;\n}{% endcodeblock %}\n\n\nabove is how to connect localhost database. If you want to connect with remote postgreSQL server. You will following those rules(copied from <a href=\"http://www.cyberciti.biz/tips/postgres-allow-remote-access-tcp-connection.html\">vivek</a>):\n## Step # 1: Login over ssh if server is outside your IDC\n{% codeblock %}$ ssh user@remote.pgsql.server.com{% endcodeblock %}\n## Step # 2: Enable client authentication\nOnce connected, you need edit the PostgreSQL configuration file, edit the PostgreSQL configuration file <strong>/var/lib/pgsql/data/pg_hba.conf</strong> (or <strong>/etc/postgresql/8.2/main/pg_hba.conf</strong> for latest 8.2 version) using a text editor such as vi.\n\nLogin as postgres user using su / sudo command, enter:\n{% codeblock %}$ su - postgres{% endcodeblock %}\nEdit the file:\n{% codeblock %}$ vi /var/lib/pgsql/data/pg_hba.conf{% endcodeblock %}\nOR\n{% codeblock %}$ vi /etc/postgresql/8.2/main/pg_hba.conf{% endcodeblock %}\nAppend the following configuration lines to give access to 10.10.29.0/24 network:\n{% codeblock %}host all all 10.10.29.0/24 trust{% endcodeblock %}\nSave and close the file. Make sure you replace 10.10.29.0/24 with actual network IP address range of the clients system in your own network.\n## Step # 2: Enable networking for PostgreSQL\nYou need to enable TCP / IP networking. Use either step #3 or #3a as per your PostgreSQL database server version.\n## Step # 3: Allow TCP/IP socket\nIf you are using <strong>PostgreSQL version 8.x or newer</strong> use the following instructions or skip to <a href=\"http://www.cyberciti.biz/tips/postgres-allow-remote-access-tcp-connection.html#3a\">Step # 3a</a> for older version (7.x or older).\n\nYou need to open PostgreSQL configuration file /var/lib/pgsql/data/postgresql.conf or /etc/postgresql/8.2/main/postgresql.conf.\n{% codeblock %}# vi /etc/postgresql/8.2/main/postgresql.conf{% endcodeblock %}\nOR\n{% codeblock %}# vi /var/lib/pgsql/data/postgresql.conf {% endcodeblock %}\nFind configuration line that read as follows:\n{% codeblock %}listen_addresses='localhost'{% endcodeblock %}\nNext set IP address(es) to listen on; you can use comma-separated list of addresses; defaults to 'localhost', and '*' is all ip address:\n{% codeblock %}listen_addresses='*'{% endcodeblock %}\nOr just bind to 202.54.1.2 and 202.54.1.3 IP address\n{% codeblock %}listen_addresses='202.54.1.2 202.54.1.3'{% endcodeblock %}\nSave and close the file. Skip to <a href=\"http://www.cyberciti.biz/tips/postgres-allow-remote-access-tcp-connection.html#4\">step # 4</a>.\n\n<a name=\"3a\"></a>\n### Step #3a - Information for old version 7.x  or older\nFollowing configuration only required for <strong>PostgreSQL version 7.x or older</strong>. Open config file, enter:\n{% codeblock %}# vi /var/lib/pgsql/data/postgresql.conf {% endcodeblock %}\nBind and open TCP/IP port by setting tcpip_socket to true.  Set / modify tcpip_socket to true:\n{% codeblock %}tcpip_socket = true{% endcodeblock %}\nSave and close the file.\n\n<a name=\"4\"></a>\n## Step # 4: Restart PostgreSQL Server\nType the following command:\n{% codeblock %}# /etc/init.d/postgresql restart{% endcodeblock %}\n## Step # 5: Iptables firewall rules\nMake sure iptables is not blocking communication, <a href=\"http://www.cyberciti.biz/tips/howto-iptables-postgresql-open-port.html\">open port 5432</a> (append rules to your iptables scripts or file <a href=\"http://www.cyberciti.biz/faq/howto-block-ipaddress-of-spammers-with-firewall/\">/etc/sysconfig/iptables</a>):\n{% codeblock %}iptables -A INPUT -p tcp -s 0/0 --sport 1024:65535 -d 10.10.29.50  --dport 5432\\\n -m state --state NEW,ESTABLISHED -j ACCEPT\niptables -A OUTPUT -p tcp -s 10.10.29.50 --sport 5432 -d 0/0 --dport \\\n1024:65535 -m state --state ESTABLISHED -j ACCEPT{% endcodeblock %}\nRestart firewall:\n{% codeblock %}# /etc/init.d/iptables restart{% endcodeblock %}\n## Step # 6: Test your setup\nUse psql command from client system. Connect to remote server using IP address 10.10.29.50 and login using vivek username and sales database, enter:\n{% codeblock %}$ psql -h 10.10.29.50 -U vivek -d sales{% endcodeblock %}\n## Step #7: Change your code\n\n{% codeblock %}const char * connstr = \"host='10.10.29.50' dbname='my_database' user='postgres' password='secret'\"\nconn = PQconnectdb(connstr);                  /* connect to the database */{% endcodeblock %}\n \n","source":"_posts/2010-03-10-use-c-language-to-connect-postgresql.markdown","raw":"---\nlayout: post\ntitle: \"use c language to connect postgreSQL\"\ndate: 2010-3-10\nwordpress_id: 104\ncomments: true\ncategories: [\"c\", \"code\", \"connect\", \"database\", \"database\", \"postgresql\", \"postgresql\", \"programming\", \"remote\"]\n---\n<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"views\" content=\"2275\" />\nThere is a small example copied from <a href=\"http://www.postgresql.org/files/documentation/books/aw_pgsql/writing_apps/node3.html\">postgreSQL.org</a>\n\n[codesyntax lang=\"c\" tab_width=\"4\" strict=\"yes\"]\n{% codeblock %}/*\n*  libpq sample program\n*/\n\n#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include \"libpq-fe.h\"                                   /* libpq header file */\n\nint main()\n{\n\tchar        state_code[3];                          /* holds user state code */\n\tchar        query_string[256];                      /* holds constructed SQL query */\n\tPGconn     *conn;                                   /* holds database connection */\n\tPGresult   *res;                                    /* holds query result */\n\tint         i;\n\n\tconn = PQconnectdb(\"dbname=test\"); /* connect to the database */\n\n\tif (PQstatus(conn) == CONNECTION_BAD)               /* did the connection fail? */\n\t{\n\t\tfprintf(stderr, \"Connection to database failed.\\n\");\n\t\tfprintf(stderr, \"%s\", PQerrorMessage(conn));\n\t\texit(1);\n\t}\n\n\tprintf(\"Enter a state code:  \");                    /* prompt user for a state code */\n\tscanf(\"%2s\", state_code);\n\n\tsprintf(query_string,                               /* create an SQL query string */\n\t\"SELECT name \\\n\tFROM statename \\\n\tWHERE code = '%s'\", state_code);\n\n\tres = PQexec(conn, query_string); /* send the query */\n\n\tif (PQresultStatus(res) != PGRES_TUPLES_OK)         /* did the query fail? */\n\t{\n\t\tfprintf(stderr, \"SELECT query failed.\\n\");\n\t\tPQclear(res);\n\t\tPQfinish(conn);\n\t\texit(1);\n\t}\n\n\tfor (i = 0; i &lt; PQntuples(res); i++)                /* loop through all rows returned */\n\t\tprintf(\"%s\\n\", PQgetvalue(res, i, 0));          /* print the value returned */\n\n\tPQclear(res); /* free result */\n\n\tPQfinish(conn); /* disconnect from the database */\n\n\treturn 0;\n}{% endcodeblock %}\n\n\nabove is how to connect localhost database. If you want to connect with remote postgreSQL server. You will following those rules(copied from <a href=\"http://www.cyberciti.biz/tips/postgres-allow-remote-access-tcp-connection.html\">vivek</a>):\n## Step # 1: Login over ssh if server is outside your IDC\n{% codeblock %}$ ssh user@remote.pgsql.server.com{% endcodeblock %}\n## Step # 2: Enable client authentication\nOnce connected, you need edit the PostgreSQL configuration file, edit the PostgreSQL configuration file <strong>/var/lib/pgsql/data/pg_hba.conf</strong> (or <strong>/etc/postgresql/8.2/main/pg_hba.conf</strong> for latest 8.2 version) using a text editor such as vi.\n\nLogin as postgres user using su / sudo command, enter:\n{% codeblock %}$ su - postgres{% endcodeblock %}\nEdit the file:\n{% codeblock %}$ vi /var/lib/pgsql/data/pg_hba.conf{% endcodeblock %}\nOR\n{% codeblock %}$ vi /etc/postgresql/8.2/main/pg_hba.conf{% endcodeblock %}\nAppend the following configuration lines to give access to 10.10.29.0/24 network:\n{% codeblock %}host all all 10.10.29.0/24 trust{% endcodeblock %}\nSave and close the file. Make sure you replace 10.10.29.0/24 with actual network IP address range of the clients system in your own network.\n## Step # 2: Enable networking for PostgreSQL\nYou need to enable TCP / IP networking. Use either step #3 or #3a as per your PostgreSQL database server version.\n## Step # 3: Allow TCP/IP socket\nIf you are using <strong>PostgreSQL version 8.x or newer</strong> use the following instructions or skip to <a href=\"http://www.cyberciti.biz/tips/postgres-allow-remote-access-tcp-connection.html#3a\">Step # 3a</a> for older version (7.x or older).\n\nYou need to open PostgreSQL configuration file /var/lib/pgsql/data/postgresql.conf or /etc/postgresql/8.2/main/postgresql.conf.\n{% codeblock %}# vi /etc/postgresql/8.2/main/postgresql.conf{% endcodeblock %}\nOR\n{% codeblock %}# vi /var/lib/pgsql/data/postgresql.conf {% endcodeblock %}\nFind configuration line that read as follows:\n{% codeblock %}listen_addresses='localhost'{% endcodeblock %}\nNext set IP address(es) to listen on; you can use comma-separated list of addresses; defaults to 'localhost', and '*' is all ip address:\n{% codeblock %}listen_addresses='*'{% endcodeblock %}\nOr just bind to 202.54.1.2 and 202.54.1.3 IP address\n{% codeblock %}listen_addresses='202.54.1.2 202.54.1.3'{% endcodeblock %}\nSave and close the file. Skip to <a href=\"http://www.cyberciti.biz/tips/postgres-allow-remote-access-tcp-connection.html#4\">step # 4</a>.\n\n<a name=\"3a\"></a>\n### Step #3a - Information for old version 7.x  or older\nFollowing configuration only required for <strong>PostgreSQL version 7.x or older</strong>. Open config file, enter:\n{% codeblock %}# vi /var/lib/pgsql/data/postgresql.conf {% endcodeblock %}\nBind and open TCP/IP port by setting tcpip_socket to true.  Set / modify tcpip_socket to true:\n{% codeblock %}tcpip_socket = true{% endcodeblock %}\nSave and close the file.\n\n<a name=\"4\"></a>\n## Step # 4: Restart PostgreSQL Server\nType the following command:\n{% codeblock %}# /etc/init.d/postgresql restart{% endcodeblock %}\n## Step # 5: Iptables firewall rules\nMake sure iptables is not blocking communication, <a href=\"http://www.cyberciti.biz/tips/howto-iptables-postgresql-open-port.html\">open port 5432</a> (append rules to your iptables scripts or file <a href=\"http://www.cyberciti.biz/faq/howto-block-ipaddress-of-spammers-with-firewall/\">/etc/sysconfig/iptables</a>):\n{% codeblock %}iptables -A INPUT -p tcp -s 0/0 --sport 1024:65535 -d 10.10.29.50  --dport 5432\\\n -m state --state NEW,ESTABLISHED -j ACCEPT\niptables -A OUTPUT -p tcp -s 10.10.29.50 --sport 5432 -d 0/0 --dport \\\n1024:65535 -m state --state ESTABLISHED -j ACCEPT{% endcodeblock %}\nRestart firewall:\n{% codeblock %}# /etc/init.d/iptables restart{% endcodeblock %}\n## Step # 6: Test your setup\nUse psql command from client system. Connect to remote server using IP address 10.10.29.50 and login using vivek username and sales database, enter:\n{% codeblock %}$ psql -h 10.10.29.50 -U vivek -d sales{% endcodeblock %}\n## Step #7: Change your code\n\n{% codeblock %}const char * connstr = \"host='10.10.29.50' dbname='my_database' user='postgres' password='secret'\"\nconn = PQconnectdb(connstr);                  /* connect to the database */{% endcodeblock %}\n \n","slug":"2010-03-10-use-c-language-to-connect-postgresql","published":1,"updated":"2017-06-05T03:01:15.000Z","photos":[],"link":"","_id":"cj3jjuz0700031jmjuskcg6la","content":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"views\" content=\"2275\"><br>There is a small example copied from <a href=\"http://www.postgresql.org/files/documentation/books/aw_pgsql/writing_apps/node3.html\" target=\"_blank\" rel=\"external\">postgreSQL.org</a></p>\n<p>[codesyntax lang=”c” tab_width=”4” strict=”yes”]<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div></pre></td><td class=\"code\"><pre><div class=\"line\">/*</div><div class=\"line\">*  libpq sample program</div><div class=\"line\">*/</div><div class=\"line\"></div><div class=\"line\">#include &amp;lt;stdio.h&amp;gt;</div><div class=\"line\">#include &amp;lt;stdlib.h&amp;gt;</div><div class=\"line\">#include &quot;libpq-fe.h&quot;                                   /* libpq header file */</div><div class=\"line\"></div><div class=\"line\">int main()</div><div class=\"line\">&#123;</div><div class=\"line\">\tchar        state_code[3];                          /* holds user state code */</div><div class=\"line\">\tchar        query_string[256];                      /* holds constructed SQL query */</div><div class=\"line\">\tPGconn     *conn;                                   /* holds database connection */</div><div class=\"line\">\tPGresult   *res;                                    /* holds query result */</div><div class=\"line\">\tint         i;</div><div class=\"line\"></div><div class=\"line\">\tconn = PQconnectdb(&quot;dbname=test&quot;); /* connect to the database */</div><div class=\"line\"></div><div class=\"line\">\tif (PQstatus(conn) == CONNECTION_BAD)               /* did the connection fail? */</div><div class=\"line\">\t&#123;</div><div class=\"line\">\t\tfprintf(stderr, &quot;Connection to database failed.\\n&quot;);</div><div class=\"line\">\t\tfprintf(stderr, &quot;%s&quot;, PQerrorMessage(conn));</div><div class=\"line\">\t\texit(1);</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\tprintf(&quot;Enter a state code:  &quot;);                    /* prompt user for a state code */</div><div class=\"line\">\tscanf(&quot;%2s&quot;, state_code);</div><div class=\"line\"></div><div class=\"line\">\tsprintf(query_string,                               /* create an SQL query string */</div><div class=\"line\">\t&quot;SELECT name \\</div><div class=\"line\">\tFROM statename \\</div><div class=\"line\">\tWHERE code = &apos;%s&apos;&quot;, state_code);</div><div class=\"line\"></div><div class=\"line\">\tres = PQexec(conn, query_string); /* send the query */</div><div class=\"line\"></div><div class=\"line\">\tif (PQresultStatus(res) != PGRES_TUPLES_OK)         /* did the query fail? */</div><div class=\"line\">\t&#123;</div><div class=\"line\">\t\tfprintf(stderr, &quot;SELECT query failed.\\n&quot;);</div><div class=\"line\">\t\tPQclear(res);</div><div class=\"line\">\t\tPQfinish(conn);</div><div class=\"line\">\t\texit(1);</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\tfor (i = 0; i &amp;lt; PQntuples(res); i++)                /* loop through all rows returned */</div><div class=\"line\">\t\tprintf(&quot;%s\\n&quot;, PQgetvalue(res, i, 0));          /* print the value returned */</div><div class=\"line\"></div><div class=\"line\">\tPQclear(res); /* free result */</div><div class=\"line\"></div><div class=\"line\">\tPQfinish(conn); /* disconnect from the database */</div><div class=\"line\"></div><div class=\"line\">\treturn 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>above is how to connect localhost database. If you want to connect with remote postgreSQL server. You will following those rules(copied from <a href=\"http://www.cyberciti.biz/tips/postgres-allow-remote-access-tcp-connection.html\" target=\"_blank\" rel=\"external\">vivek</a>):</p>\n<h2 id=\"Step-1-Login-over-ssh-if-server-is-outside-your-IDC\"><a href=\"#Step-1-Login-over-ssh-if-server-is-outside-your-IDC\" class=\"headerlink\" title=\"Step # 1: Login over ssh if server is outside your IDC\"></a>Step # 1: Login over ssh if server is outside your IDC</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ ssh user@remote.pgsql.server.com</div></pre></td></tr></table></figure>\n<h2 id=\"Step-2-Enable-client-authentication\"><a href=\"#Step-2-Enable-client-authentication\" class=\"headerlink\" title=\"Step # 2: Enable client authentication\"></a>Step # 2: Enable client authentication</h2><p>Once connected, you need edit the PostgreSQL configuration file, edit the PostgreSQL configuration file <strong>/var/lib/pgsql/data/pg_hba.conf</strong> (or <strong>/etc/postgresql/8.2/main/pg_hba.conf</strong> for latest 8.2 version) using a text editor such as vi.</p>\n<p>Login as postgres user using su / sudo command, enter:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ su - postgres</div></pre></td></tr></table></figure><br>Edit the file:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ vi /var/lib/pgsql/data/pg_hba.conf</div></pre></td></tr></table></figure><br>OR<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ vi /etc/postgresql/8.2/main/pg_hba.conf</div></pre></td></tr></table></figure><br>Append the following configuration lines to give access to 10.10.29.0/24 network:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">host all all 10.10.29.0/24 trust</div></pre></td></tr></table></figure><br>Save and close the file. Make sure you replace 10.10.29.0/24 with actual network IP address range of the clients system in your own network.</p>\n<h2 id=\"Step-2-Enable-networking-for-PostgreSQL\"><a href=\"#Step-2-Enable-networking-for-PostgreSQL\" class=\"headerlink\" title=\"Step # 2: Enable networking for PostgreSQL\"></a>Step # 2: Enable networking for PostgreSQL</h2><p>You need to enable TCP / IP networking. Use either step #3 or #3a as per your PostgreSQL database server version.</p>\n<h2 id=\"Step-3-Allow-TCP-IP-socket\"><a href=\"#Step-3-Allow-TCP-IP-socket\" class=\"headerlink\" title=\"Step # 3: Allow TCP/IP socket\"></a>Step # 3: Allow TCP/IP socket</h2><p>If you are using <strong>PostgreSQL version 8.x or newer</strong> use the following instructions or skip to <a href=\"http://www.cyberciti.biz/tips/postgres-allow-remote-access-tcp-connection.html#3a\" target=\"_blank\" rel=\"external\">Step # 3a</a> for older version (7.x or older).</p>\n<p>You need to open PostgreSQL configuration file /var/lib/pgsql/data/postgresql.conf or /etc/postgresql/8.2/main/postgresql.conf.<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"># vi /etc/postgresql/8.2/main/postgresql.conf</div></pre></td></tr></table></figure><br>OR<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"># vi /var/lib/pgsql/data/postgresql.conf </div></pre></td></tr></table></figure><br>Find configuration line that read as follows:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">listen_addresses=&apos;localhost&apos;</div></pre></td></tr></table></figure><br>Next set IP address(es) to listen on; you can use comma-separated list of addresses; defaults to ‘localhost’, and ‘*’ is all ip address:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">listen_addresses=&apos;*&apos;</div></pre></td></tr></table></figure><br>Or just bind to 202.54.1.2 and 202.54.1.3 IP address<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">listen_addresses=&apos;202.54.1.2 202.54.1.3&apos;</div></pre></td></tr></table></figure><br>Save and close the file. Skip to <a href=\"http://www.cyberciti.biz/tips/postgres-allow-remote-access-tcp-connection.html#4\" target=\"_blank\" rel=\"external\">step # 4</a>.</p>\n<p><a name=\"3a\"></a></p>\n<h3 id=\"Step-3a-Information-for-old-version-7-x-or-older\"><a href=\"#Step-3a-Information-for-old-version-7-x-or-older\" class=\"headerlink\" title=\"Step #3a - Information for old version 7.x  or older\"></a>Step #3a - Information for old version 7.x  or older</h3><p>Following configuration only required for <strong>PostgreSQL version 7.x or older</strong>. Open config file, enter:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"># vi /var/lib/pgsql/data/postgresql.conf </div></pre></td></tr></table></figure><br>Bind and open TCP/IP port by setting tcpip_socket to true.  Set / modify tcpip_socket to true:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">tcpip_socket = true</div></pre></td></tr></table></figure><br>Save and close the file.</p>\n<p><a name=\"4\"></a></p>\n<h2 id=\"Step-4-Restart-PostgreSQL-Server\"><a href=\"#Step-4-Restart-PostgreSQL-Server\" class=\"headerlink\" title=\"Step # 4: Restart PostgreSQL Server\"></a>Step # 4: Restart PostgreSQL Server</h2><p>Type the following command:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"># /etc/init.d/postgresql restart</div></pre></td></tr></table></figure></p>\n<h2 id=\"Step-5-Iptables-firewall-rules\"><a href=\"#Step-5-Iptables-firewall-rules\" class=\"headerlink\" title=\"Step # 5: Iptables firewall rules\"></a>Step # 5: Iptables firewall rules</h2><p>Make sure iptables is not blocking communication, <a href=\"http://www.cyberciti.biz/tips/howto-iptables-postgresql-open-port.html\" target=\"_blank\" rel=\"external\">open port 5432</a> (append rules to your iptables scripts or file <a href=\"http://www.cyberciti.biz/faq/howto-block-ipaddress-of-spammers-with-firewall/\" target=\"_blank\" rel=\"external\">/etc/sysconfig/iptables</a>):<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">iptables -A INPUT -p tcp -s 0/0 --sport 1024:65535 -d 10.10.29.50  --dport 5432\\</div><div class=\"line\"> -m state --state NEW,ESTABLISHED -j ACCEPT</div><div class=\"line\">iptables -A OUTPUT -p tcp -s 10.10.29.50 --sport 5432 -d 0/0 --dport \\</div><div class=\"line\">1024:65535 -m state --state ESTABLISHED -j ACCEPT</div></pre></td></tr></table></figure><br>Restart firewall:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"># /etc/init.d/iptables restart</div></pre></td></tr></table></figure></p>\n<h2 id=\"Step-6-Test-your-setup\"><a href=\"#Step-6-Test-your-setup\" class=\"headerlink\" title=\"Step # 6: Test your setup\"></a>Step # 6: Test your setup</h2><p>Use psql command from client system. Connect to remote server using IP address 10.10.29.50 and login using vivek username and sales database, enter:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ psql -h 10.10.29.50 -U vivek -d sales</div></pre></td></tr></table></figure></p>\n<h2 id=\"Step-7-Change-your-code\"><a href=\"#Step-7-Change-your-code\" class=\"headerlink\" title=\"Step #7: Change your code\"></a>Step #7: Change your code</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">const char * connstr = &quot;host=&apos;10.10.29.50&apos; dbname=&apos;my_database&apos; user=&apos;postgres&apos; password=&apos;secret&apos;&quot;</div><div class=\"line\">conn = PQconnectdb(connstr);                  /* connect to the database */</div></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"views\" content=\"2275\"><br>There is a small example copied from <a href=\"http://www.postgresql.org/files/documentation/books/aw_pgsql/writing_apps/node3.html\" target=\"_blank\" rel=\"external\">postgreSQL.org</a></p>\n<p>[codesyntax lang=”c” tab_width=”4” strict=”yes”]<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div></pre></td><td class=\"code\"><pre><div class=\"line\">/*</div><div class=\"line\">*  libpq sample program</div><div class=\"line\">*/</div><div class=\"line\"></div><div class=\"line\">#include &amp;lt;stdio.h&amp;gt;</div><div class=\"line\">#include &amp;lt;stdlib.h&amp;gt;</div><div class=\"line\">#include &quot;libpq-fe.h&quot;                                   /* libpq header file */</div><div class=\"line\"></div><div class=\"line\">int main()</div><div class=\"line\">&#123;</div><div class=\"line\">\tchar        state_code[3];                          /* holds user state code */</div><div class=\"line\">\tchar        query_string[256];                      /* holds constructed SQL query */</div><div class=\"line\">\tPGconn     *conn;                                   /* holds database connection */</div><div class=\"line\">\tPGresult   *res;                                    /* holds query result */</div><div class=\"line\">\tint         i;</div><div class=\"line\"></div><div class=\"line\">\tconn = PQconnectdb(&quot;dbname=test&quot;); /* connect to the database */</div><div class=\"line\"></div><div class=\"line\">\tif (PQstatus(conn) == CONNECTION_BAD)               /* did the connection fail? */</div><div class=\"line\">\t&#123;</div><div class=\"line\">\t\tfprintf(stderr, &quot;Connection to database failed.\\n&quot;);</div><div class=\"line\">\t\tfprintf(stderr, &quot;%s&quot;, PQerrorMessage(conn));</div><div class=\"line\">\t\texit(1);</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\tprintf(&quot;Enter a state code:  &quot;);                    /* prompt user for a state code */</div><div class=\"line\">\tscanf(&quot;%2s&quot;, state_code);</div><div class=\"line\"></div><div class=\"line\">\tsprintf(query_string,                               /* create an SQL query string */</div><div class=\"line\">\t&quot;SELECT name \\</div><div class=\"line\">\tFROM statename \\</div><div class=\"line\">\tWHERE code = &apos;%s&apos;&quot;, state_code);</div><div class=\"line\"></div><div class=\"line\">\tres = PQexec(conn, query_string); /* send the query */</div><div class=\"line\"></div><div class=\"line\">\tif (PQresultStatus(res) != PGRES_TUPLES_OK)         /* did the query fail? */</div><div class=\"line\">\t&#123;</div><div class=\"line\">\t\tfprintf(stderr, &quot;SELECT query failed.\\n&quot;);</div><div class=\"line\">\t\tPQclear(res);</div><div class=\"line\">\t\tPQfinish(conn);</div><div class=\"line\">\t\texit(1);</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\tfor (i = 0; i &amp;lt; PQntuples(res); i++)                /* loop through all rows returned */</div><div class=\"line\">\t\tprintf(&quot;%s\\n&quot;, PQgetvalue(res, i, 0));          /* print the value returned */</div><div class=\"line\"></div><div class=\"line\">\tPQclear(res); /* free result */</div><div class=\"line\"></div><div class=\"line\">\tPQfinish(conn); /* disconnect from the database */</div><div class=\"line\"></div><div class=\"line\">\treturn 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>above is how to connect localhost database. If you want to connect with remote postgreSQL server. You will following those rules(copied from <a href=\"http://www.cyberciti.biz/tips/postgres-allow-remote-access-tcp-connection.html\" target=\"_blank\" rel=\"external\">vivek</a>):</p>\n<h2 id=\"Step-1-Login-over-ssh-if-server-is-outside-your-IDC\"><a href=\"#Step-1-Login-over-ssh-if-server-is-outside-your-IDC\" class=\"headerlink\" title=\"Step # 1: Login over ssh if server is outside your IDC\"></a>Step # 1: Login over ssh if server is outside your IDC</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ ssh user@remote.pgsql.server.com</div></pre></td></tr></table></figure>\n<h2 id=\"Step-2-Enable-client-authentication\"><a href=\"#Step-2-Enable-client-authentication\" class=\"headerlink\" title=\"Step # 2: Enable client authentication\"></a>Step # 2: Enable client authentication</h2><p>Once connected, you need edit the PostgreSQL configuration file, edit the PostgreSQL configuration file <strong>/var/lib/pgsql/data/pg_hba.conf</strong> (or <strong>/etc/postgresql/8.2/main/pg_hba.conf</strong> for latest 8.2 version) using a text editor such as vi.</p>\n<p>Login as postgres user using su / sudo command, enter:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ su - postgres</div></pre></td></tr></table></figure><br>Edit the file:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ vi /var/lib/pgsql/data/pg_hba.conf</div></pre></td></tr></table></figure><br>OR<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ vi /etc/postgresql/8.2/main/pg_hba.conf</div></pre></td></tr></table></figure><br>Append the following configuration lines to give access to 10.10.29.0/24 network:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">host all all 10.10.29.0/24 trust</div></pre></td></tr></table></figure><br>Save and close the file. Make sure you replace 10.10.29.0/24 with actual network IP address range of the clients system in your own network.</p>\n<h2 id=\"Step-2-Enable-networking-for-PostgreSQL\"><a href=\"#Step-2-Enable-networking-for-PostgreSQL\" class=\"headerlink\" title=\"Step # 2: Enable networking for PostgreSQL\"></a>Step # 2: Enable networking for PostgreSQL</h2><p>You need to enable TCP / IP networking. Use either step #3 or #3a as per your PostgreSQL database server version.</p>\n<h2 id=\"Step-3-Allow-TCP-IP-socket\"><a href=\"#Step-3-Allow-TCP-IP-socket\" class=\"headerlink\" title=\"Step # 3: Allow TCP/IP socket\"></a>Step # 3: Allow TCP/IP socket</h2><p>If you are using <strong>PostgreSQL version 8.x or newer</strong> use the following instructions or skip to <a href=\"http://www.cyberciti.biz/tips/postgres-allow-remote-access-tcp-connection.html#3a\" target=\"_blank\" rel=\"external\">Step # 3a</a> for older version (7.x or older).</p>\n<p>You need to open PostgreSQL configuration file /var/lib/pgsql/data/postgresql.conf or /etc/postgresql/8.2/main/postgresql.conf.<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"># vi /etc/postgresql/8.2/main/postgresql.conf</div></pre></td></tr></table></figure><br>OR<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"># vi /var/lib/pgsql/data/postgresql.conf </div></pre></td></tr></table></figure><br>Find configuration line that read as follows:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">listen_addresses=&apos;localhost&apos;</div></pre></td></tr></table></figure><br>Next set IP address(es) to listen on; you can use comma-separated list of addresses; defaults to ‘localhost’, and ‘*’ is all ip address:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">listen_addresses=&apos;*&apos;</div></pre></td></tr></table></figure><br>Or just bind to 202.54.1.2 and 202.54.1.3 IP address<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">listen_addresses=&apos;202.54.1.2 202.54.1.3&apos;</div></pre></td></tr></table></figure><br>Save and close the file. Skip to <a href=\"http://www.cyberciti.biz/tips/postgres-allow-remote-access-tcp-connection.html#4\" target=\"_blank\" rel=\"external\">step # 4</a>.</p>\n<p><a name=\"3a\"></a></p>\n<h3 id=\"Step-3a-Information-for-old-version-7-x-or-older\"><a href=\"#Step-3a-Information-for-old-version-7-x-or-older\" class=\"headerlink\" title=\"Step #3a - Information for old version 7.x  or older\"></a>Step #3a - Information for old version 7.x  or older</h3><p>Following configuration only required for <strong>PostgreSQL version 7.x or older</strong>. Open config file, enter:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"># vi /var/lib/pgsql/data/postgresql.conf </div></pre></td></tr></table></figure><br>Bind and open TCP/IP port by setting tcpip_socket to true.  Set / modify tcpip_socket to true:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">tcpip_socket = true</div></pre></td></tr></table></figure><br>Save and close the file.</p>\n<p><a name=\"4\"></a></p>\n<h2 id=\"Step-4-Restart-PostgreSQL-Server\"><a href=\"#Step-4-Restart-PostgreSQL-Server\" class=\"headerlink\" title=\"Step # 4: Restart PostgreSQL Server\"></a>Step # 4: Restart PostgreSQL Server</h2><p>Type the following command:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"># /etc/init.d/postgresql restart</div></pre></td></tr></table></figure></p>\n<h2 id=\"Step-5-Iptables-firewall-rules\"><a href=\"#Step-5-Iptables-firewall-rules\" class=\"headerlink\" title=\"Step # 5: Iptables firewall rules\"></a>Step # 5: Iptables firewall rules</h2><p>Make sure iptables is not blocking communication, <a href=\"http://www.cyberciti.biz/tips/howto-iptables-postgresql-open-port.html\" target=\"_blank\" rel=\"external\">open port 5432</a> (append rules to your iptables scripts or file <a href=\"http://www.cyberciti.biz/faq/howto-block-ipaddress-of-spammers-with-firewall/\" target=\"_blank\" rel=\"external\">/etc/sysconfig/iptables</a>):<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">iptables -A INPUT -p tcp -s 0/0 --sport 1024:65535 -d 10.10.29.50  --dport 5432\\</div><div class=\"line\"> -m state --state NEW,ESTABLISHED -j ACCEPT</div><div class=\"line\">iptables -A OUTPUT -p tcp -s 10.10.29.50 --sport 5432 -d 0/0 --dport \\</div><div class=\"line\">1024:65535 -m state --state ESTABLISHED -j ACCEPT</div></pre></td></tr></table></figure><br>Restart firewall:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"># /etc/init.d/iptables restart</div></pre></td></tr></table></figure></p>\n<h2 id=\"Step-6-Test-your-setup\"><a href=\"#Step-6-Test-your-setup\" class=\"headerlink\" title=\"Step # 6: Test your setup\"></a>Step # 6: Test your setup</h2><p>Use psql command from client system. Connect to remote server using IP address 10.10.29.50 and login using vivek username and sales database, enter:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ psql -h 10.10.29.50 -U vivek -d sales</div></pre></td></tr></table></figure></p>\n<h2 id=\"Step-7-Change-your-code\"><a href=\"#Step-7-Change-your-code\" class=\"headerlink\" title=\"Step #7: Change your code\"></a>Step #7: Change your code</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">const char * connstr = &quot;host=&apos;10.10.29.50&apos; dbname=&apos;my_database&apos; user=&apos;postgres&apos; password=&apos;secret&apos;&quot;</div><div class=\"line\">conn = PQconnectdb(connstr);                  /* connect to the database */</div></pre></td></tr></table></figure>\n"},{"layout":"post","title":"listening songs~","date":"2010-03-22T16:00:00.000Z","wordpress_id":128,"comments":1,"_content":"<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"views\" content=\"636\" />\nuse douban: <a href=\"http://douban.fm/radio\">http://douban.fm/radio</a>\n","source":"_posts/2010-03-23-listening-songs.markdown","raw":"---\nlayout: post\ntitle: \"listening songs~\"\ndate: 2010-3-23\nwordpress_id: 128\ncomments: true\ncategories: [\"listen\", \"see-hear\", \"song\"]\n---\n<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"views\" content=\"636\" />\nuse douban: <a href=\"http://douban.fm/radio\">http://douban.fm/radio</a>\n","slug":"2010-03-23-listening-songs","published":1,"updated":"2017-06-05T03:01:15.000Z","photos":[],"link":"","_id":"cj3jjuz0e00051jmjwd4h3i28","content":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"views\" content=\"636\"><br>use douban: <a href=\"http://douban.fm/radio\" target=\"_blank\" rel=\"external\">http://douban.fm/radio</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"views\" content=\"636\"><br>use douban: <a href=\"http://douban.fm/radio\" target=\"_blank\" rel=\"external\">http://douban.fm/radio</a></p>\n"},{"layout":"post","title":"ubuntu 10.04 beta released","date":"2010-03-22T16:00:00.000Z","wordpress_id":125,"comments":1,"_content":"<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"views\" content=\"1242\" />\ndownload:\n<a href=\"http://releases.ubuntu.com/releases/10.04/ubuntu-10.04-beta1-desktop-i386.iso\">desktop(32 bit)</a>\n\n<a href=\"http://releases.ubuntu.com/releases/10.04/ubuntu-10.04-beta1-server-i386.iso\">server(32 bit)</a>\n\n<a href=\"http://releases.ubuntu.com/releases/10.04/\">Ubuntu 10.04 LTS (Lucid Lynx) Beta 1</a>\n","source":"_posts/2010-03-23-ubuntu-10-04-belta-released.markdown","raw":"---\nlayout: post\ntitle: \"ubuntu 10.04 beta released\"\ndate: 2010-3-23\nwordpress_id: 125\ncomments: true\ncategories: [\"open-source\", \"project\", \"release\", \"ubuntu\"]\n---\n<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"views\" content=\"1242\" />\ndownload:\n<a href=\"http://releases.ubuntu.com/releases/10.04/ubuntu-10.04-beta1-desktop-i386.iso\">desktop(32 bit)</a>\n\n<a href=\"http://releases.ubuntu.com/releases/10.04/ubuntu-10.04-beta1-server-i386.iso\">server(32 bit)</a>\n\n<a href=\"http://releases.ubuntu.com/releases/10.04/\">Ubuntu 10.04 LTS (Lucid Lynx) Beta 1</a>\n","slug":"2010-03-23-ubuntu-10-04-belta-released","published":1,"updated":"2017-06-05T03:01:15.000Z","photos":[],"link":"","_id":"cj3jjuz0k00071jmjyqd02qns","content":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"views\" content=\"1242\"><br>download:<br><a href=\"http://releases.ubuntu.com/releases/10.04/ubuntu-10.04-beta1-desktop-i386.iso\" target=\"_blank\" rel=\"external\">desktop(32 bit)</a></p>\n<p><a href=\"http://releases.ubuntu.com/releases/10.04/ubuntu-10.04-beta1-server-i386.iso\" target=\"_blank\" rel=\"external\">server(32 bit)</a></p>\n<p><a href=\"http://releases.ubuntu.com/releases/10.04/\" target=\"_blank\" rel=\"external\">Ubuntu 10.04 LTS (Lucid Lynx) Beta 1</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"views\" content=\"1242\"><br>download:<br><a href=\"http://releases.ubuntu.com/releases/10.04/ubuntu-10.04-beta1-desktop-i386.iso\" target=\"_blank\" rel=\"external\">desktop(32 bit)</a></p>\n<p><a href=\"http://releases.ubuntu.com/releases/10.04/ubuntu-10.04-beta1-server-i386.iso\" target=\"_blank\" rel=\"external\">server(32 bit)</a></p>\n<p><a href=\"http://releases.ubuntu.com/releases/10.04/\" target=\"_blank\" rel=\"external\">Ubuntu 10.04 LTS (Lucid Lynx) Beta 1</a></p>\n"},{"layout":"post","title":"Programmer Competency Matrix","date":"2010-03-14T16:00:00.000Z","wordpress_id":113,"comments":1,"_content":"<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"views\" content=\"957\" />\n<div><a rel=\"cc:attributionURL\" href=\"http://www.cppblog.com/xguru\">XGuru</a> / <a rel=\"license\" href=\"http://creativecommons.org/licenses/by-nc-sa/2.5/cn/\">CC BY-NC-SA 2.5</a></div>\n# Programmer Competency Matrix\n<h6>Note that the knowledge for each level is cumulative;  being at      level <em>n</em> implies that you also know everything from the     levels  lower than <em>n</em>.</h6>\n<!--more-->\n<table>\n<tbody>\n<tr>\n<th colspan=\"5\"><span style=\"color: #808000;\">Computer Science</span></th>\n</tr>\n<tr>\n<td>\n<h6><span style=\"color: #000000;\">\n</span></h6>\n</td>\n<td>\n<h6><span style=\"color: #000000;\">2<sup>n</sup> (Level 0)</span></h6>\n</td>\n<td>\n<h6>n<sup>2</sup> (Level 1)</h6>\n</td>\n<td>\n<h6>n (Level  2)</h6>\n</td>\n<td>\n<h6>log(n) (Level 3)</h6>\n</td>\n<td>\n<h6>Comments</h6>\n</td>\n</tr>\n<tr>\n<td>\n<h6>data structures</h6>\n</td>\n<td>\n<h6>Doesn't know the  difference between Array and LinkedList</h6>\n</td>\n<td>\n<h6>Able to explain and use  Arrays, LinkedLists, Dictionaries etc in practical programming tasks</h6>\n</td>\n<td>\n<h6>Knows  space and time tradeoffs of the basic data structures, Arrays vs  LinkedLists, Able to explain how hashtables can be implemented and can  handle collisions, Priority queues and ways to implement them etc.</h6>\n</td>\n<td>\n<h6>Knowledge  of advanced data structures like B-trees, binomial and fibonacci heaps,  AVL/Red Black trees, Splay Trees, Skip Lists, tries etc.</h6>\n</td>\n<td></td>\n</tr>\n<tr>\n<td>\n<h6>algorithms</h6>\n</td>\n<td>\n<h6>Unable to find the  average of numbers in an array (It's hard to believe but I've  interviewed such candidates)</h6>\n</td>\n<td>\n<h6>Basic sorting, searching and data  structure traversal and retrieval algorithms</h6>\n</td>\n<td>\n<h6>Tree, Graph,  simple greedy and divide and conquer algorithms, is able to understand  the relevance of the levels of this matrix.</h6>\n</td>\n<td>\n<h6>Able to recognize  and code dynamic programming solutions, good knowledge of graph  algorithms, good knowledge of numerical computation algorithms, able to  identify NP problems etc.</h6>\n</td>\n<td>\n<h6>Working with someone who has a good  topcoder ranking would be an unbelievable piece of luck!</h6>\n</td>\n</tr>\n<tr>\n<td>\n<h6>systems programming</h6>\n</td>\n<td>\n<h6>Doesn't know  what a compiler, linker or interpreter is</h6>\n</td>\n<td>\n<h6>Basic understanding  of compilers, linker and interpreters. Understands what assembly code is  and how things work at the hardware level. Some knowledge of virtual  memory and paging.</h6>\n</td>\n<td>\n<h6>Understands kernel mode vs. user mode,  multi-threading, synchronization primitives and how they're implemented,  able to read assembly code. Understands how networks work,  understanding of network protocols and socket level programming.</h6>\n</td>\n<td>\n<h6>Understands  the entire programming stack, hardware (CPU + Memory + Cache +  Interrupts + microcode), binary code, assembly, static and dynamic  linking, compilation, interpretation, JIT compilation, garbage  collection, heap, stack, memory addressing...</h6>\n</td>\n<td></td>\n</tr>\n<tr>\n<th colspan=\"5\">Software Engineering</th>\n</tr>\n<tr>\n<td></td>\n<td>\n<h6>2<sup>n</sup> (Level 0)</h6>\n</td>\n<td>\n<h6>n<sup>2</sup> (Level 1)</h6>\n</td>\n<td>\n<h6>n (Level  2)</h6>\n</td>\n<td>\n<h6>log(n) (Level 3)</h6>\n</td>\n<td>\n<h6>Comments</h6>\n</td>\n</tr>\n<tr>\n<td>\n<h6>source code version control</h6>\n</td>\n<td>\n<h6>Folder  backups by date</h6>\n</td>\n<td>\n<h6>VSS and beginning CVS/SVN user</h6>\n</td>\n<td>\n<h6>Proficient  in using CVS and SVN features. Knows how to branch and merge, use  patches setup repository properties etc.</h6>\n</td>\n<td>\n<h6>Knowledge of  distributed VCS systems. Has tried out Bzr/Mercurial/Darcs/Git</h6>\n</td>\n<td></td>\n</tr>\n<tr>\n<td>\n<h6>build automation</h6>\n</td>\n<td>\n<h6>Only knows how to  build from IDE</h6>\n</td>\n<td>\n<h6>Knows how to build the system from the command  line</h6>\n</td>\n<td>\n<h6>Can setup a script to build the basic system</h6>\n</td>\n<td>\n<h6>Can  setup a script to build the system and also documentation, installers,  generate release notes and tag the code in source control</h6>\n</td>\n<td></td>\n</tr>\n<tr>\n<td>\n<h6>automated testing</h6>\n</td>\n<td>\n<h6>Thinks that all  testing is the job of the tester</h6>\n</td>\n<td>\n<h6>Has written automated unit  tests and comes up with good unit test cases for the code that is being  written</h6>\n</td>\n<td>\n<h6>Has written code in TDD manner</h6>\n</td>\n<td>\n<h6>Understands and  is able to setup automated functional, load/performance and UI tests</h6>\n</td>\n<td></td>\n</tr>\n<tr>\n<th colspan=\"5\">Programming</th>\n</tr>\n<tr>\n<td></td>\n<td>\n<h6>2<sup>n</sup> (Level 0)</h6>\n</td>\n<td>\n<h6>n<sup>2</sup> (Level 1)</h6>\n</td>\n<td>\n<h6>n (Level  2)</h6>\n</td>\n<td>\n<h6>log(n) (Level 3)</h6>\n</td>\n<td>\n<h6>Comments</h6>\n</td>\n</tr>\n<tr>\n<td>\n<h6>problem decomposition</h6>\n</td>\n<td>\n<h6>Only straight  line code with copy paste for reuse</h6>\n</td>\n<td>\n<h6>Able to break up problem  into multiple functions</h6>\n</td>\n<td>\n<h6>Able to come up with reusable  functions/objects that solve the overall problem</h6>\n</td>\n<td>\n<h6>Use of  appropriate data structures and algorithms and comes up with  generic/object-oriented code that encapsulate aspects of the problem  that are subject to change.</h6>\n</td>\n<td></td>\n</tr>\n<tr>\n<td>\n<h6>systems decomposition</h6>\n</td>\n<td>\n<h6>Not able to  think above the level of a single file/class</h6>\n</td>\n<td>\n<h6>Able to break up  problem space and design solution as long as it is within the same  platform/technology</h6>\n</td>\n<td>\n<h6>Able to design systems that span multiple  technologies/platforms.</h6>\n</td>\n<td>\n<h6>Able to visualize and design complex  systems with multiple product lines and integrations with external  systems. Also should be able to design operations support systems like  monitoring, reporting, fail overs etc.</h6>\n</td>\n<td></td>\n</tr>\n<tr>\n<td>\n<h6>communication</h6>\n</td>\n<td>\n<h6>Cannot express  thoughts/ideas to peers. Poor spelling and grammar.</h6>\n</td>\n<td>\n<h6>Peers can  understand what is being said. Good spelling and grammar.</h6>\n</td>\n<td>\n<h6>Is  able to effectively communicate with peers</h6>\n</td>\n<td>\n<h6>Able to understand  and communicate thoughts/design/ideas/specs in a unambiguous manner and  adjusts communication as per the context</h6>\n</td>\n<td>\n<h6>This is an often under  rated but very critical criteria for judging a programmer. With the  increase in outsourcing of programming tasks to places where English is  not the native tongue this issue has become more prominent. I know of  several projects that failed because the programmers could not  understand what the intent of the communication was.</h6>\n</td>\n</tr>\n<tr>\n<td>\n<h6>code organization within a file</h6>\n</td>\n<td>\n<h6>no  evidence of organization within a file</h6>\n</td>\n<td>\n<h6>Methods are grouped  logically or by accessibility</h6>\n</td>\n<td>\n<h6>Code is grouped into regions and  well commented with references to other source files</h6>\n</td>\n<td>\n<h6>File has  license header, summary, well commented, consistent white space usage.  The file should look beautiful.</h6>\n</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>\n<h6>2<sup>n</sup> (Level 0)</h6>\n</td>\n<td>\n<h6>n<sup>2</sup> (Level 1)</h6>\n</td>\n<td>\n<h6>n (Level  2)</h6>\n</td>\n<td>\n<h6>log(n) (Level 3)</h6>\n</td>\n<td>\n<h6>Comments</h6>\n</td>\n</tr>\n<tr>\n<td>\n<h6>code organization across files</h6>\n</td>\n<td>\n<h6>No  thought given to organizing code across files</h6>\n</td>\n<td>\n<h6>Related files are  grouped into a folder</h6>\n</td>\n<td>\n<h6>Each physical file has a unique purpose,  for e.g. one class definition, one feature implementation etc.</h6>\n</td>\n<td>\n<h6>Code  organization at a physical level closely matches design and looking at  file names and folder distribution provides insights into design</h6>\n</td>\n<td></td>\n</tr>\n<tr>\n<td>\n<h6>source tree organization</h6>\n</td>\n<td>\n<h6>Everything  in one folder</h6>\n</td>\n<td>\n<h6>Basic separation of code into logical folders.</h6>\n</td>\n<td>\n<h6>No  circular dependencies, binaries, libs, docs, builds, third-party code  all organized into appropriate folders</h6>\n</td>\n<td>\n<h6>Physical layout of  source tree matches logical hierarchy and organization. The directory  names and organization provide insights into the design of the system.</h6>\n</td>\n<td>\n<h6>The  difference between this and the previous item is in the scale of  organization, source tree organization relates to the entire set of  artifacts that define the system.</h6>\n</td>\n</tr>\n<tr>\n<td>\n<h6>code readability</h6>\n</td>\n<td>\n<h6>Mono-syllable names</h6>\n</td>\n<td>\n<h6>Good names for files, variables classes, methods etc.</h6>\n</td>\n<td>\n<h6>No  long functions, comments explaining unusual code, bug fixes, code  assumptions</h6>\n</td>\n<td>\n<h6>Code assumptions are verified using asserts, code  flows naturally - no deep nesting of conditionals or methods</h6>\n</td>\n<td></td>\n</tr>\n<tr>\n<td>\n<h6>defensive coding</h6>\n</td>\n<td>\n<h6>Doesn't understand  the concept</h6>\n</td>\n<td>\n<h6>Checks all arguments and asserts critical  assumptions in code</h6>\n</td>\n<td>\n<h6>Makes sure to check return values and check  for exceptions around code that can fail.</h6>\n</td>\n<td>\n<h6>Has his own library  to help with defensive coding, writes unit tests that simulate faults</h6>\n</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>\n<h6>2<sup>n</sup> (Level 0)</h6>\n</td>\n<td>\n<h6>n<sup>2</sup> (Level 1)</h6>\n</td>\n<td>\n<h6>n (Level  2)</h6>\n</td>\n<td>\n<h6>log(n) (Level 3)</h6>\n</td>\n<td>\n<h6>Comments</h6>\n</td>\n</tr>\n<tr>\n<td>\n<h6>error handling</h6>\n</td>\n<td>\n<h6>Only codes the happy  case</h6>\n</td>\n<td>\n<h6>Basic error handling around code that can throw  exceptions/generate errors</h6>\n</td>\n<td>\n<h6>Ensures that error/exceptions leave  program in good state, resources, connections and memory is all cleaned  up properly</h6>\n</td>\n<td>\n<h6>Codes to detect possible exception before, maintain  consistent exception handling strategy in all layers of code, come up  with guidelines on exception handling for entire system.</h6>\n</td>\n<td></td>\n</tr>\n<tr>\n<td>\n<h6>IDE</h6>\n</td>\n<td>\n<h6>Mostly uses IDE for text editing</h6>\n</td>\n<td>\n<h6>Knows their way around the interface, able to effectively use  the IDE using menus.</h6>\n</td>\n<td>\n<h6>Knows keyboard shortcuts for most used  operations.</h6>\n</td>\n<td>\n<h6>Has written custom macros</h6>\n</td>\n<td></td>\n</tr>\n<tr>\n<td>\n<h6>API</h6>\n</td>\n<td>\n<h6>Needs to look up the  documentation frequently</h6>\n</td>\n<td>\n<h6>Has the most frequently used APIs in  memory</h6>\n</td>\n<td>\n<h6>Vast and In-depth knowledge of the API</h6>\n</td>\n<td>\n<h6>Has  written libraries that sit on top of the API to simplify frequently used  tasks and to fill in gaps in the API</h6>\n</td>\n<td>\n<h6>E.g. of API can be Java  library, .net framework or the custom API for the application</h6>\n</td>\n</tr>\n<tr>\n<td>\n<h6>frameworks</h6>\n</td>\n<td>\n<h6>Has not used any  framework outside of the core platform</h6>\n</td>\n<td>\n<h6>Has heard about but not  used the popular frameworks available for the platform.</h6>\n</td>\n<td>\n<h6>Has  used more than one framework in a professional capacity and is  well-versed with the idioms of the frameworks.</h6>\n</td>\n<td>\n<h6>Author of  framework</h6>\n</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>\n<h6>2<sup>n</sup> (Level 0)</h6>\n</td>\n<td>\n<h6>n<sup>2</sup> (Level 1)</h6>\n</td>\n<td>\n<h6>n (Level  2)</h6>\n</td>\n<td>\n<h6>log(n) (Level 3)</h6>\n</td>\n<td>\n<h6>Comments</h6>\n</td>\n</tr>\n<tr>\n<td>\n<h6>requirements</h6>\n</td>\n<td>\n<h6>Takes the given  requirements and codes to spec</h6>\n</td>\n<td>\n<h6>Come up with questions regarding  missed cases in the spec</h6>\n</td>\n<td>\n<h6>Understand complete picture and come  up with entire areas that need to be speced</h6>\n</td>\n<td>\n<h6>Able to suggest  better alternatives and flows to given requirements based on experience</h6>\n</td>\n<td></td>\n</tr>\n<tr>\n<td>\n<h6>scripting</h6>\n</td>\n<td>\n<h6>No knowledge of scripting  tools</h6>\n</td>\n<td>\n<h6>Batch files/shell scripts</h6>\n</td>\n<td>\n<h6>Perl/Python/Ruby/VBScript/Powershell</h6>\n</td>\n<td>\n<h6>Has written and published reusable code</h6>\n</td>\n<td></td>\n</tr>\n<tr>\n<td>\n<h6>database</h6>\n</td>\n<td>\n<h6>Thinks that Excel is a  database</h6>\n</td>\n<td>\n<h6>Knows basic database concepts, normalization, ACID,  transactions and can write simple selects</h6>\n</td>\n<td>\n<h6>Able to design good  and normalized database schemas keeping in mind the queries that'll have  to be run, proficient in use of views, stored procedures, triggers and  user defined types. Knows difference between clustered and non-clustered  indexes. Proficient in use of ORM tools.</h6>\n</td>\n<td>\n<h6>Can do basic database  administration, performance optimization, index optimization, write  advanced select queries, able to replace cursor usage with relational  sql, understands how data is stored internally, understands how indexes  are stored internally, understands how databases can be mirrored,  replicated etc. Understands how the two phase commit works.</h6>\n</td>\n<td></td>\n</tr>\n<tr>\n<th colspan=\"5\">Experience</th>\n</tr>\n<tr>\n<td></td>\n<td>\n<h6>2<sup>n</sup> (Level 0)</h6>\n</td>\n<td>\n<h6>n<sup>2</sup> (Level 1)</h6>\n</td>\n<td>\n<h6>n (Level  2)</h6>\n</td>\n<td>\n<h6>log(n) (Level 3)</h6>\n</td>\n<td>\n<h6>Comments</h6>\n</td>\n</tr>\n<tr>\n<td>\n<h6>languages with professional experience</h6>\n</td>\n<td>\n<h6>Imperative  or Object Oriented</h6>\n</td>\n<td>\n<h6>Imperative, Object-Oriented and declarative  (SQL), added bonus if they understand static vs dynamic typing, weak vs  strong typing and static inferred types</h6>\n</td>\n<td>\n<h6>Functional, added  bonus if they understand lazy evaluation, currying, continuations</h6>\n</td>\n<td>\n<h6>Concurrent  (Erlang, Oz) and Logic (Prolog)</h6>\n</td>\n<td></td>\n</tr>\n<tr>\n<td>\n<h6>platforms with professional experience</h6>\n</td>\n<td>\n<h6>1</h6>\n</td>\n<td>\n<h6>2-3</h6>\n</td>\n<td>\n<h6>4-5</h6>\n</td>\n<td>\n<h6>6+</h6>\n</td>\n<td></td>\n</tr>\n<tr>\n<td>\n<h6>years of professional experience</h6>\n</td>\n<td>\n<h6>1</h6>\n</td>\n<td>\n<h6>2-5</h6>\n</td>\n<td>\n<h6>6-9</h6>\n</td>\n<td>\n<h6>10+</h6>\n</td>\n<td></td>\n</tr>\n<tr>\n<td>\n<h6>domain knowledge</h6>\n</td>\n<td>\n<h6>No knowledge of the  domain</h6>\n</td>\n<td>\n<h6>Has worked on at least one product in the domain.</h6>\n</td>\n<td>\n<h6>Has  worked on multiple products in the same domain.</h6>\n</td>\n<td>\n<h6>Domain expert.  Has designed and implemented several products/solutions in the domain.  Well versed with standard terms, protocols used in the domain.</h6>\n</td>\n<td></td>\n</tr>\n<tr>\n<th colspan=\"5\">Knowledge</th>\n</tr>\n<tr>\n<td></td>\n<td>\n<h6>2<sup>n</sup> (Level 0)</h6>\n</td>\n<td>\n<h6>n<sup>2</sup> (Level 1)</h6>\n</td>\n<td>\n<h6>n (Level  2)</h6>\n</td>\n<td>\n<h6>log(n) (Level 3)</h6>\n</td>\n<td>\n<h6>Comments</h6>\n</td>\n</tr>\n<tr>\n<td>\n<h6>tool knowledge</h6>\n</td>\n<td>\n<h6>Limited to primary  IDE (VS.Net, Eclipse etc.)</h6>\n</td>\n<td>\n<h6>Knows about some alternatives to  popular and standard tools.</h6>\n</td>\n<td>\n<h6>Good knowledge of editors,  debuggers, IDEs, open source alternatives etc. etc. For e.g. someone who  knows most of the tools from Scott Hanselman's power tools list. Has  used ORM tools.</h6>\n</td>\n<td>\n<h6>Has actually written tools and scripts, added  bonus if they've been published.</h6>\n</td>\n<td></td>\n</tr>\n<tr>\n<td>\n<h6>languages exposed to</h6>\n</td>\n<td>\n<h6>Imperative or  Object Oriented</h6>\n</td>\n<td>\n<h6>Imperative, Object-Oriented and declarative  (SQL), added bonus if they understand static vs dynamic typing, weak vs  strong typing and static inferred types</h6>\n</td>\n<td>\n<h6>Functional, added bonus  if they understand lazy evaluation, currying, continuations</h6>\n</td>\n<td>\n<h6>Concurrent  (Erlang, Oz) and Logic (Prolog)</h6>\n</td>\n<td></td>\n</tr>\n<tr>\n<td>\n<h6>codebase knowledge</h6>\n</td>\n<td>\n<h6>Has never looked  at the codebase</h6>\n</td>\n<td>\n<h6>Basic knowledge of the code layout and how to  build the system</h6>\n</td>\n<td>\n<h6>Good working knowledge of code base, has  implemented several bug fixes and maybe some small features.</h6>\n</td>\n<td>\n<h6>Has  implemented multiple big features in the codebase and can easily  visualize the changes required for most features or bug fixes.</h6>\n</td>\n<td></td>\n</tr>\n<tr>\n<td>\n<h6>knowledge of upcoming technologies</h6>\n</td>\n<td>\n<h6>Has  not heard of the upcoming technologies</h6>\n</td>\n<td>\n<h6>Has heard of upcoming  technologies in the field</h6>\n</td>\n<td>\n<h6>Has downloaded the alpha  preview/CTP/beta and read some articles/manuals</h6>\n</td>\n<td>\n<h6>Has played with  the previews and has actually built something with it and as a bonus  shared that with everyone else</h6>\n</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>\n<h6>2<sup>n</sup> (Level 0)</h6>\n</td>\n<td>\n<h6>n<sup>2</sup> (Level 1)</h6>\n</td>\n<td>\n<h6>n (Level  2)</h6>\n</td>\n<td>\n<h6>log(n) (Level 3)</h6>\n</td>\n<td>\n<h6>Comments</h6>\n</td>\n</tr>\n<tr>\n<td>\n<h6>platform internals</h6>\n</td>\n<td>\n<h6>Zero knowledge of  platform internals</h6>\n</td>\n<td>\n<h6>Has basic knowledge of how the platform  works internally</h6>\n</td>\n<td>\n<h6>Deep knowledge of platform internals and can  visualize how the platform takes the program and converts it into  executable code.</h6>\n</td>\n<td>\n<h6>Has written tools to enhance or provide  information on platform internals. For e.g. disassemblers, decompilers,  debuggers etc.</h6>\n</td>\n<td></td>\n</tr>\n<tr>\n<td>\n<h6>books</h6>\n</td>\n<td>\n<h6>Unleashed series, 21 days  series, 24 hour series, dummies series...</h6>\n</td>\n<td>\n<h6>Code Complete, Don't  Make me Think, Mastering Regular Expressions</h6>\n</td>\n<td>\n<h6>Design Patterns,  Peopleware, Programming Pearls, Algorithm Design Manual, Pragmatic  Programmer, Mythical Man month</h6>\n</td>\n<td>\n<h6>Structure and Interpretation of  Computer Programs, Concepts Techniques, Models of Computer Programming,  Art of Computer Programming, Database systems , by C. J Date, Thinking  Forth, Little Schemer</h6>\n</td>\n<td></td>\n</tr>\n<tr>\n<td>\n<h6>blogs</h6>\n</td>\n<td>\n<h6>Has heard of them but never  got the time.</h6>\n</td>\n<td>\n<h6>Reads tech/programming/software engineering blogs  and listens to podcasts regularly.</h6>\n</td>\n<td>\n<h6>Maintains a link blog with  some collection of useful articles and tools that he/she has collected</h6>\n</td>\n<td>\n<h6>Maintains  a blog in which personal insights and thoughts on programming are  shared</h6>\n</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<div>\n<h6>Chinese version</h6>\n</div>\n<div>\n<table>\n<tbody>\n<tr>\n<th colspan=\"5\">计算机科学 Computer Science</th>\n</tr>\n<tr>\n<td></td>\n<td>2<sup>n</sup> (Level 0)</td>\n<td>n<sup>2</sup> (Level 1)</td>\n<td>n (Level  2)</td>\n<td>log(n) (Level 3)</td>\n<td>Comments</td>\n</tr>\n<tr>\n<td>数据结构</td>\n<td>不知道数组和链表的差异</td>\n<td>能够解释和使用数组， 链表，字典等，并且能够用于实际的编程任务。</td>\n<td>了解基本数据结构时间和空间的折中，比如数组vs  链表，能够解释如何实现哈希表和处理冲突，了解优先队列及其实现。</td>\n<td>高等的数据结构的知识，比如B-树、二项堆、斐波那契堆、AVL 树、红黑树、伸展树、跳跃表以及前缀树等。</td>\n<td></td>\n</tr>\n<tr>\n<td>算法</td>\n<td>不能够找出一个数组各数的平均值(这令人难以置信，但是我的确在应聘者 中遇到过)</td>\n<td>基本的排序，搜索和数据的遍历和检索算法。</td>\n<td>树，图，简单的贪婪算法和分而治之算法，能够适度了解矩阵该 层的含义。</td>\n<td>能够辨识和编写动态规划方案，良好的图算法知识，良好的数值估算的知识，能够辨别NP问题等。</td>\n<td>Working  with someone who has a good topcoder ranking would be an unbelievable  piece of luck!</td>\n</tr>\n<tr>\n<td>编程体系</td>\n<td>不知道何为编译器、链接器和解释器。</td>\n<td>对编译 器、链接器、解释器有基本的了解。知道什么是汇编代码以及在硬件层如何工作。有一些虚拟内存和分页知识。</td>\n<td>了解内核模式vs用户模式, 多线程，同步原语以及它们如何实现，能够阅读汇编代码。了解网络如何工作，了解网络协议和socket级别编程。</td>\n<td>了解整个程序堆栈、 硬件(CPU+内存+中断+微码)、二进制代码、汇编、静态和动态链接、编码、解释、JIT（just-in-time）编译、内存碎片回收、堆、栈、存 储器编址…</td>\n<td></td>\n</tr>\n<tr>\n<th colspan=\"5\">软件工程 Software Engineering</th>\n</tr>\n<tr>\n<td></td>\n<td>2<sup>n</sup> (Level 0)</td>\n<td>n<sup>2</sup> (Level 1)</td>\n<td>n (Level  2)</td>\n<td>log(n) (Level 3)</td>\n<td>Comments</td>\n</tr>\n<tr>\n<td>源码版本控制</td>\n<td>通过日期备份文件夹</td>\n<td>VSS和初级的 CVS/SVN用户</td>\n<td>熟练地使用CVS和SVN特性。知道如何分支和归并，使用程序库补丁安装特性等</td>\n<td>有分布式VCS 系统的知识。尝试过Bzr/Mercurial/Darcs/Git</td>\n<td></td>\n</tr>\n<tr>\n<td>自动化编译</td>\n<td>只知道在IDE下编译</td>\n<td>知道如何编译在命令行 下编译系统</td>\n<td>能够安装一个脚本构建基本的系统</td>\n<td>能够安装一个脚本来构建系统并且归档，安装程序，生成发布记录和给源 码控制中的代码分配标签。</td>\n<td></td>\n</tr>\n<tr>\n<td>自动化测试</td>\n<td>认为所有的测试都是测试员的工作。</td>\n<td>能够编写 自动化的单元测试，能够为正在编写的代码提出良好的测试用例。</td>\n<td>按照TDD （Test Driven  Development）方式编写代码。</td>\n<td>了解并且能够有效自动化安装，载入/性能和UI测试</td>\n<td></td>\n</tr>\n<tr>\n<th colspan=\"5\"> 程序设计 Programming</th>\n</tr>\n<tr>\n<td></td>\n<td>2<sup>n</sup> (Level 0)</td>\n<td>n<sup>2</sup> (Level 1)</td>\n<td>n (Level  2)</td>\n<td>log(n) (Level 3)</td>\n<td>Comments</td>\n</tr>\n<tr>\n<td>问题分解</td>\n<td>只有直线式的代码，通过复制粘贴来复用</td>\n<td>能够把 问题分散到多个函数中</td>\n<td>能够想出可复用的函数/对象来解决大题的问题</td>\n<td>使用适宜的数据结构和算法，写出通用的/面向 对象的代码来封装问题的易改变的层面。</td>\n<td></td>\n</tr>\n<tr>\n<td>系统分解</td>\n<td>N想不出比单一的文件/类更好的层面</td>\n<td>如果不在 同一平台或没采用相同的技术，能够把问题空间和设计方案分解。</td>\n<td>能够设计跨技术/平台的系统。</td>\n<td>能够在多个产品线和 与外部体系一体化中虚拟化和设计复制的系统。同时也能够设计支持系统监视、报告、故障恢复等。</td>\n<td></td>\n</tr>\n<tr>\n<td>交流</td>\n<td>不能向同伴表达想法/主意。匮乏拼写和语法的能力。</td>\n<td>同 伴能了解你在说什么。有良好的拼写和语法能力。</td>\n<td>能够和同伴进行高效的交流</td>\n<td>能够使用清晰的方式了解和交流想法/设计 /主意/细则，能适应每种环境的交流</td>\n<td>This is an often under rated but very critical criteria for judging a programmer. With the increase in outsourcing of programming tasks to places where English is not the native tongue this issue has become more prominent. I know of several projects that failed because the programmers could not understand what the intent of the communication was.</td>\n</tr>\n<tr>\n<td>同一文件中代码组织</td>\n<td>同一文件中组织没有依据</td>\n<td>按照逻辑 性或者易接近的方法</td>\n<td>代码分块和对于其他源文件来说是易于是释,引用其他源文件时有良好的注释</td>\n<td>文档头部有许可声 明，总结，良好的注释，一致的空格缩进。文档外观美观。</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>2<sup>n</sup> (Level 0)</td>\n<td>n<sup>2</sup> (Level 1)</td>\n<td>n (Level  2)</td>\n<td>log(n) (Level 3)</td>\n<td>Comments</td>\n</tr>\n<tr>\n<td>跨文件代码组织</td>\n<td>没够想过给代码跨文件组织</td>\n<td>相关文件按文件 夹分组</td>\n<td>每个物理文件都有独立的目的，比如一个类的定义，一个特性的实现等。</td>\n<td>代码在物理层组织紧密，在文件名上与 设计和外观相匹配，可以通过文件分布方式洞察设计理念。</td>\n<td></td>\n</tr>\n<tr>\n<td>源码树组织</td>\n<td>一切都放在一个文件夹内</td>\n<td>初步地将代码分散进 对应逻辑的文件夹。</td>\n<td>没有循环依赖，二进制文件，库，文档，构建，第三方的代码都组织进合适的文件夹内。</td>\n<td>源码树的 物理布局与逻辑层次、组织方式相匹配。可以通过目录名称和组织方式洞察设计理念。</td>\n<td>The difference between  this and the previous item is in the scale of organization, source tree organization relates to the entire set of artifacts that define the system.</td>\n</tr>\n<tr>\n<td>代码可读性</td>\n<td>单音节的名称 （在国内应该是那些类似用汉语拼音命名的习惯）</td>\n<td>对文件、变量、类、方法等，有良好的命名。</td>\n<td>没有长函数、注释解释不常规的代码，bug修复,代码假设。</td>\n<td>代 码假设验证使用断言，自然的代码流，没有深层嵌套的条件和方法</td>\n<td></td>\n</tr>\n<tr>\n<td>防御性编码</td>\n<td>不知道这个概念</td>\n<td>检查代码中所有的参数，对关键 的假设进行断言</td>\n<td>确保检查了返回值和使代码失败的异常。</td>\n<td>有自己的库来帮助防御性编程、编写单元测试模拟故障</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>2<sup>n</sup> (Level 0)</td>\n<td>n<sup>2</sup> (Level 1)</td>\n<td>n (Level  2)</td>\n<td>log(n) (Level 3)</td>\n<td>Comments</td>\n</tr>\n<tr>\n<td>错误处理</td>\n<td>只给乐观的情形编码</td>\n<td>基本的代码错误处理，抛出 异常/生成错误</td>\n<td>确保错误/异常留在程序中有良好的状态，资源，连接，内存都有被合适的清理。</td>\n<td>在编码之前察觉可能 出现的异常，在代码的所有层次中维持一致性的异常处理策略，提出整个系统的错误处理准则。</td>\n<td></td>\n</tr>\n<tr>\n<td>IDE</td>\n<td>IDE大部分用来进行文本编辑</td>\n<td>了解其周围的接 口，能够高效地通过菜单来使用IDE</td>\n<td>了解最常操作的键盘快捷键</td>\n<td>编写自定义宏</td>\n<td></td>\n</tr>\n<tr>\n<td>API</td>\n<td>需要频繁地查阅文档</td>\n<td>把最频繁使用的API记在脑 子里</td>\n<td>广阔且深入的API知识。</td>\n<td>为了使实际任务中常用API使用更加便捷，编写过API的上层库，填补API之间 的缺口。</td>\n<td>E.g. of API can be Java library, .net framework or the  custom API for the application</td>\n</tr>\n<tr>\n<td>框架</td>\n<td>没有使用过主平台外的任何框架</td>\n<td>听过但没用过平台下 流行的可用框架</td>\n<td>在专业的职位中使用过一个以上的框架，通晓各框架的特色。</td>\n<td>某框架的作者</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>2<sup>n</sup> (Level 0)</td>\n<td>n<sup>2</sup> (Level 1)</td>\n<td>n (Level  2)</td>\n<td>log(n) (Level 3)</td>\n<td>Comments</td>\n</tr>\n<tr>\n<td>需求分析</td>\n<td>接受给定的需求和代码规格</td>\n<td>能对规格的遗漏提出 疑问</td>\n<td>了解全面情况，提出需要被规格化的整体范围。</td>\n<td>能够提出更好的可选方案，根据经验的浮现给出需求</td>\n<td></td>\n</tr>\n<tr>\n<td>脚本</td>\n<td>不具备脚本工具的知识</td>\n<td>批处理文件/shell脚本</td>\n<td>Perl/Python/Ruby/VBScript/Powershell</td>\n<td>写过并且发表过可重用的代码</td>\n<td></td>\n</tr>\n<tr>\n<td>数据库</td>\n<td>认为Excel就是数据库</td>\n<td>知道基本的数据库概 念，规范化、ACID（原子性Atomicity、一致性Consistency、隔离性Isolation、持久性Durability）、事务化，能 够写简单的select语句</td>\n<td>能够牢记在运行时必要查询中设计良好的规范化数据库模式，  精通用户视图，存储过程，触发器和用户定义类型。知道聚集与非聚集索引之间的差异。精通使用ORM（Object Relational  Mapping对象关系映射）工具</td>\n<td>能做基本的数据库管理，性能优化，索引优化，编写高级的select查询，能够使用相关sql来替 换游标，理解数据内部的存储，了解如何镜像、复制数据库。知道两段数据提交如何工作</td>\n<td></td>\n</tr>\n<tr>\n<th colspan=\"5\">经验 Experience</th>\n</tr>\n<tr>\n<td></td>\n<td>2<sup>n</sup> (Level 0)</td>\n<td>n<sup>2</sup> (Level 1)</td>\n<td>n (Level  2)</td>\n<td>log(n) (Level 3)</td>\n<td>Comments</td>\n</tr>\n<tr>\n<td>专业语言经验</td>\n<td>命令式语言和面向对象语言</td>\n<td>命令式语言,面向对象语言和说明型语言(SQL),如果了解静态类型vs动态类型，弱类型vs强类型则有加分</td>\n<td>函数式语言,如果了解延 缓求值，局部套用函数，延续则有加分</td>\n<td>并发语言(Erlang, Oz)   逻辑语言(Prolog)</td>\n<td></td>\n</tr>\n<tr>\n<td>专业平台经验</td>\n<td>1</td>\n<td>2-3</td>\n<td>4-5</td>\n<td>6+</td>\n<td></td>\n</tr>\n<tr>\n<td>专业经验年龄</td>\n<td>1</td>\n<td>2-5</td>\n<td>6-9</td>\n<td>10+</td>\n<td></td>\n</tr>\n<tr>\n<td>领域知识</td>\n<td>没有该领域的知识</td>\n<td>在该领域中曾经至少为一个 产品工作过</td>\n<td>在同一领域中为多个产品工作过</td>\n<td>领域专家。在该领域设计和实现数种产品/方案。精通该领域使用的标准条款 和协议</td>\n<td></td>\n</tr>\n<tr>\n<th colspan=\"5\">学识 Knowledge</th>\n</tr>\n<tr>\n<td></td>\n<td>2<sup>n</sup> (Level 0)</td>\n<td>n<sup>2</sup> (Level 1)</td>\n<td>n (Level  2)</td>\n<td>log(n) (Level 3)</td>\n<td>Comments</td>\n</tr>\n<tr>\n<td>工具知识</td>\n<td>仅限于主要的IDE(VS.Net, Eclipse等)</td>\n<td>知 道一些流行和标准工具的备选方案</td>\n<td>对编辑器、调试器、IDE、开源的备选方案有很好的了解。比如某人了解大多数Scott  Hanselman的威力工具列表中的工具，使用过ORM工具。</td>\n<td>实际地编写过工具和脚本，如果这些被发布则有加分</td>\n<td></td>\n</tr>\n<tr>\n<td>语言接触</td>\n<td>命令式语言和面向对象语言</td>\n<td>命令式语言、面向对象 语言和说明型语言(SQL),如果了解静态类型vs动态类型、弱类型vs强类型则有加分</td>\n<td>函数式语言,如果了解延缓求值、局部套用函 数、continuations （源于scheme中的一种高级控制结构）则有加分</td>\n<td>并发语言(Erlang, Oz) 逻辑语言(Prolog)</td>\n<td></td>\n</tr>\n<tr>\n<td>代码库知识</td>\n<td>从来没有查询过代码库</td>\n<td>基本的代码层知识，了 解如果构建系统</td>\n<td>良好的代码库工作知识，实现过几次bug修复或者完成了一些细小的特性</td>\n<td>实现了代码库中多个大型特 性，能够轻松地将多数特性的需求变更具体化，从容地处理bug修复。</td>\n<td></td>\n</tr>\n<tr>\n<td>下一代技术知识</td>\n<td>从来没听说过即将到来的技术</td>\n<td>听说过某领 域即将到来的技术</td>\n<td>下载过alpha preview/CTP/beta版本，并且读过一些文章和手册</td>\n<td>试用过预览 版而且实际地构建过某物，如果共享给其他人的话则有加分</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>2<sup>n</sup> (Level 0)</td>\n<td>n<sup>2</sup> (Level 1)</td>\n<td>n (Level  2)</td>\n<td>log(n) (Level 3)</td>\n<td>Comments</td>\n</tr>\n<tr>\n<td>平台内部</td>\n<td>对平台内部毫无所知</td>\n<td>有平台基本的内部工作的 知识</td>\n<td>深度的平台内部知识，能够设想平台如何将程序转换成可执行代码。</td>\n<td>编写过增强平台或者为其平台内部提供信息的 工具。比如，反汇编工具，反编译工具，调试工具等。</td>\n<td></td>\n</tr>\n<tr>\n<td>书籍</td>\n<td>菜鸟系列，21天系列，24小时系列，蠢货系列...</td>\n<td>《代 码大全》，《别让我思考》, 《精通正则表达式》</td>\n<td>《设计模式》，《人件》，《代码珠玑》，《算法设计手册》，《程序员修炼之道》， 《人月神话》</td>\n<td>《计算机程序设计与解释》，《事务处理:概念与技术》，《计算机程序设计模型》，《计算机程序设计艺术》，《数据库系统 导论》 C.J Date版，《Thinking Forth》 ，《Little Schemer》（没找到其中译本）</td>\n<td></td>\n</tr>\n<tr>\n<td>博客</td>\n<td>听过但是从来抽不出空去接触</td>\n<td>阅读一些科技/编程 /软件工程的博客，并且经常的收听一些播客</td>\n<td>维护一些博客的链接，收集博主分享的有用的文章和工具</td>\n<td>维护一个在编程方 面，分享有个人见解和思考的博客</td>\n</tr>\n</tbody>\n</table>\n</div>\n","source":"_posts/2010-03-15-programmer-competency-matrix.markdown","raw":"---\nlayout: post\ntitle: \"Programmer Competency Matrix\"\ndate: 2010-3-15\nwordpress_id: 113\ncomments: true\ncategories: [\"code\", \"competency\", \"logn\", \"matrix\", \"n\", \"programming\"]\n---\n<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"views\" content=\"957\" />\n<div><a rel=\"cc:attributionURL\" href=\"http://www.cppblog.com/xguru\">XGuru</a> / <a rel=\"license\" href=\"http://creativecommons.org/licenses/by-nc-sa/2.5/cn/\">CC BY-NC-SA 2.5</a></div>\n# Programmer Competency Matrix\n<h6>Note that the knowledge for each level is cumulative;  being at      level <em>n</em> implies that you also know everything from the     levels  lower than <em>n</em>.</h6>\n<!--more-->\n<table>\n<tbody>\n<tr>\n<th colspan=\"5\"><span style=\"color: #808000;\">Computer Science</span></th>\n</tr>\n<tr>\n<td>\n<h6><span style=\"color: #000000;\">\n</span></h6>\n</td>\n<td>\n<h6><span style=\"color: #000000;\">2<sup>n</sup> (Level 0)</span></h6>\n</td>\n<td>\n<h6>n<sup>2</sup> (Level 1)</h6>\n</td>\n<td>\n<h6>n (Level  2)</h6>\n</td>\n<td>\n<h6>log(n) (Level 3)</h6>\n</td>\n<td>\n<h6>Comments</h6>\n</td>\n</tr>\n<tr>\n<td>\n<h6>data structures</h6>\n</td>\n<td>\n<h6>Doesn't know the  difference between Array and LinkedList</h6>\n</td>\n<td>\n<h6>Able to explain and use  Arrays, LinkedLists, Dictionaries etc in practical programming tasks</h6>\n</td>\n<td>\n<h6>Knows  space and time tradeoffs of the basic data structures, Arrays vs  LinkedLists, Able to explain how hashtables can be implemented and can  handle collisions, Priority queues and ways to implement them etc.</h6>\n</td>\n<td>\n<h6>Knowledge  of advanced data structures like B-trees, binomial and fibonacci heaps,  AVL/Red Black trees, Splay Trees, Skip Lists, tries etc.</h6>\n</td>\n<td></td>\n</tr>\n<tr>\n<td>\n<h6>algorithms</h6>\n</td>\n<td>\n<h6>Unable to find the  average of numbers in an array (It's hard to believe but I've  interviewed such candidates)</h6>\n</td>\n<td>\n<h6>Basic sorting, searching and data  structure traversal and retrieval algorithms</h6>\n</td>\n<td>\n<h6>Tree, Graph,  simple greedy and divide and conquer algorithms, is able to understand  the relevance of the levels of this matrix.</h6>\n</td>\n<td>\n<h6>Able to recognize  and code dynamic programming solutions, good knowledge of graph  algorithms, good knowledge of numerical computation algorithms, able to  identify NP problems etc.</h6>\n</td>\n<td>\n<h6>Working with someone who has a good  topcoder ranking would be an unbelievable piece of luck!</h6>\n</td>\n</tr>\n<tr>\n<td>\n<h6>systems programming</h6>\n</td>\n<td>\n<h6>Doesn't know  what a compiler, linker or interpreter is</h6>\n</td>\n<td>\n<h6>Basic understanding  of compilers, linker and interpreters. Understands what assembly code is  and how things work at the hardware level. Some knowledge of virtual  memory and paging.</h6>\n</td>\n<td>\n<h6>Understands kernel mode vs. user mode,  multi-threading, synchronization primitives and how they're implemented,  able to read assembly code. Understands how networks work,  understanding of network protocols and socket level programming.</h6>\n</td>\n<td>\n<h6>Understands  the entire programming stack, hardware (CPU + Memory + Cache +  Interrupts + microcode), binary code, assembly, static and dynamic  linking, compilation, interpretation, JIT compilation, garbage  collection, heap, stack, memory addressing...</h6>\n</td>\n<td></td>\n</tr>\n<tr>\n<th colspan=\"5\">Software Engineering</th>\n</tr>\n<tr>\n<td></td>\n<td>\n<h6>2<sup>n</sup> (Level 0)</h6>\n</td>\n<td>\n<h6>n<sup>2</sup> (Level 1)</h6>\n</td>\n<td>\n<h6>n (Level  2)</h6>\n</td>\n<td>\n<h6>log(n) (Level 3)</h6>\n</td>\n<td>\n<h6>Comments</h6>\n</td>\n</tr>\n<tr>\n<td>\n<h6>source code version control</h6>\n</td>\n<td>\n<h6>Folder  backups by date</h6>\n</td>\n<td>\n<h6>VSS and beginning CVS/SVN user</h6>\n</td>\n<td>\n<h6>Proficient  in using CVS and SVN features. Knows how to branch and merge, use  patches setup repository properties etc.</h6>\n</td>\n<td>\n<h6>Knowledge of  distributed VCS systems. Has tried out Bzr/Mercurial/Darcs/Git</h6>\n</td>\n<td></td>\n</tr>\n<tr>\n<td>\n<h6>build automation</h6>\n</td>\n<td>\n<h6>Only knows how to  build from IDE</h6>\n</td>\n<td>\n<h6>Knows how to build the system from the command  line</h6>\n</td>\n<td>\n<h6>Can setup a script to build the basic system</h6>\n</td>\n<td>\n<h6>Can  setup a script to build the system and also documentation, installers,  generate release notes and tag the code in source control</h6>\n</td>\n<td></td>\n</tr>\n<tr>\n<td>\n<h6>automated testing</h6>\n</td>\n<td>\n<h6>Thinks that all  testing is the job of the tester</h6>\n</td>\n<td>\n<h6>Has written automated unit  tests and comes up with good unit test cases for the code that is being  written</h6>\n</td>\n<td>\n<h6>Has written code in TDD manner</h6>\n</td>\n<td>\n<h6>Understands and  is able to setup automated functional, load/performance and UI tests</h6>\n</td>\n<td></td>\n</tr>\n<tr>\n<th colspan=\"5\">Programming</th>\n</tr>\n<tr>\n<td></td>\n<td>\n<h6>2<sup>n</sup> (Level 0)</h6>\n</td>\n<td>\n<h6>n<sup>2</sup> (Level 1)</h6>\n</td>\n<td>\n<h6>n (Level  2)</h6>\n</td>\n<td>\n<h6>log(n) (Level 3)</h6>\n</td>\n<td>\n<h6>Comments</h6>\n</td>\n</tr>\n<tr>\n<td>\n<h6>problem decomposition</h6>\n</td>\n<td>\n<h6>Only straight  line code with copy paste for reuse</h6>\n</td>\n<td>\n<h6>Able to break up problem  into multiple functions</h6>\n</td>\n<td>\n<h6>Able to come up with reusable  functions/objects that solve the overall problem</h6>\n</td>\n<td>\n<h6>Use of  appropriate data structures and algorithms and comes up with  generic/object-oriented code that encapsulate aspects of the problem  that are subject to change.</h6>\n</td>\n<td></td>\n</tr>\n<tr>\n<td>\n<h6>systems decomposition</h6>\n</td>\n<td>\n<h6>Not able to  think above the level of a single file/class</h6>\n</td>\n<td>\n<h6>Able to break up  problem space and design solution as long as it is within the same  platform/technology</h6>\n</td>\n<td>\n<h6>Able to design systems that span multiple  technologies/platforms.</h6>\n</td>\n<td>\n<h6>Able to visualize and design complex  systems with multiple product lines and integrations with external  systems. Also should be able to design operations support systems like  monitoring, reporting, fail overs etc.</h6>\n</td>\n<td></td>\n</tr>\n<tr>\n<td>\n<h6>communication</h6>\n</td>\n<td>\n<h6>Cannot express  thoughts/ideas to peers. Poor spelling and grammar.</h6>\n</td>\n<td>\n<h6>Peers can  understand what is being said. Good spelling and grammar.</h6>\n</td>\n<td>\n<h6>Is  able to effectively communicate with peers</h6>\n</td>\n<td>\n<h6>Able to understand  and communicate thoughts/design/ideas/specs in a unambiguous manner and  adjusts communication as per the context</h6>\n</td>\n<td>\n<h6>This is an often under  rated but very critical criteria for judging a programmer. With the  increase in outsourcing of programming tasks to places where English is  not the native tongue this issue has become more prominent. I know of  several projects that failed because the programmers could not  understand what the intent of the communication was.</h6>\n</td>\n</tr>\n<tr>\n<td>\n<h6>code organization within a file</h6>\n</td>\n<td>\n<h6>no  evidence of organization within a file</h6>\n</td>\n<td>\n<h6>Methods are grouped  logically or by accessibility</h6>\n</td>\n<td>\n<h6>Code is grouped into regions and  well commented with references to other source files</h6>\n</td>\n<td>\n<h6>File has  license header, summary, well commented, consistent white space usage.  The file should look beautiful.</h6>\n</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>\n<h6>2<sup>n</sup> (Level 0)</h6>\n</td>\n<td>\n<h6>n<sup>2</sup> (Level 1)</h6>\n</td>\n<td>\n<h6>n (Level  2)</h6>\n</td>\n<td>\n<h6>log(n) (Level 3)</h6>\n</td>\n<td>\n<h6>Comments</h6>\n</td>\n</tr>\n<tr>\n<td>\n<h6>code organization across files</h6>\n</td>\n<td>\n<h6>No  thought given to organizing code across files</h6>\n</td>\n<td>\n<h6>Related files are  grouped into a folder</h6>\n</td>\n<td>\n<h6>Each physical file has a unique purpose,  for e.g. one class definition, one feature implementation etc.</h6>\n</td>\n<td>\n<h6>Code  organization at a physical level closely matches design and looking at  file names and folder distribution provides insights into design</h6>\n</td>\n<td></td>\n</tr>\n<tr>\n<td>\n<h6>source tree organization</h6>\n</td>\n<td>\n<h6>Everything  in one folder</h6>\n</td>\n<td>\n<h6>Basic separation of code into logical folders.</h6>\n</td>\n<td>\n<h6>No  circular dependencies, binaries, libs, docs, builds, third-party code  all organized into appropriate folders</h6>\n</td>\n<td>\n<h6>Physical layout of  source tree matches logical hierarchy and organization. The directory  names and organization provide insights into the design of the system.</h6>\n</td>\n<td>\n<h6>The  difference between this and the previous item is in the scale of  organization, source tree organization relates to the entire set of  artifacts that define the system.</h6>\n</td>\n</tr>\n<tr>\n<td>\n<h6>code readability</h6>\n</td>\n<td>\n<h6>Mono-syllable names</h6>\n</td>\n<td>\n<h6>Good names for files, variables classes, methods etc.</h6>\n</td>\n<td>\n<h6>No  long functions, comments explaining unusual code, bug fixes, code  assumptions</h6>\n</td>\n<td>\n<h6>Code assumptions are verified using asserts, code  flows naturally - no deep nesting of conditionals or methods</h6>\n</td>\n<td></td>\n</tr>\n<tr>\n<td>\n<h6>defensive coding</h6>\n</td>\n<td>\n<h6>Doesn't understand  the concept</h6>\n</td>\n<td>\n<h6>Checks all arguments and asserts critical  assumptions in code</h6>\n</td>\n<td>\n<h6>Makes sure to check return values and check  for exceptions around code that can fail.</h6>\n</td>\n<td>\n<h6>Has his own library  to help with defensive coding, writes unit tests that simulate faults</h6>\n</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>\n<h6>2<sup>n</sup> (Level 0)</h6>\n</td>\n<td>\n<h6>n<sup>2</sup> (Level 1)</h6>\n</td>\n<td>\n<h6>n (Level  2)</h6>\n</td>\n<td>\n<h6>log(n) (Level 3)</h6>\n</td>\n<td>\n<h6>Comments</h6>\n</td>\n</tr>\n<tr>\n<td>\n<h6>error handling</h6>\n</td>\n<td>\n<h6>Only codes the happy  case</h6>\n</td>\n<td>\n<h6>Basic error handling around code that can throw  exceptions/generate errors</h6>\n</td>\n<td>\n<h6>Ensures that error/exceptions leave  program in good state, resources, connections and memory is all cleaned  up properly</h6>\n</td>\n<td>\n<h6>Codes to detect possible exception before, maintain  consistent exception handling strategy in all layers of code, come up  with guidelines on exception handling for entire system.</h6>\n</td>\n<td></td>\n</tr>\n<tr>\n<td>\n<h6>IDE</h6>\n</td>\n<td>\n<h6>Mostly uses IDE for text editing</h6>\n</td>\n<td>\n<h6>Knows their way around the interface, able to effectively use  the IDE using menus.</h6>\n</td>\n<td>\n<h6>Knows keyboard shortcuts for most used  operations.</h6>\n</td>\n<td>\n<h6>Has written custom macros</h6>\n</td>\n<td></td>\n</tr>\n<tr>\n<td>\n<h6>API</h6>\n</td>\n<td>\n<h6>Needs to look up the  documentation frequently</h6>\n</td>\n<td>\n<h6>Has the most frequently used APIs in  memory</h6>\n</td>\n<td>\n<h6>Vast and In-depth knowledge of the API</h6>\n</td>\n<td>\n<h6>Has  written libraries that sit on top of the API to simplify frequently used  tasks and to fill in gaps in the API</h6>\n</td>\n<td>\n<h6>E.g. of API can be Java  library, .net framework or the custom API for the application</h6>\n</td>\n</tr>\n<tr>\n<td>\n<h6>frameworks</h6>\n</td>\n<td>\n<h6>Has not used any  framework outside of the core platform</h6>\n</td>\n<td>\n<h6>Has heard about but not  used the popular frameworks available for the platform.</h6>\n</td>\n<td>\n<h6>Has  used more than one framework in a professional capacity and is  well-versed with the idioms of the frameworks.</h6>\n</td>\n<td>\n<h6>Author of  framework</h6>\n</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>\n<h6>2<sup>n</sup> (Level 0)</h6>\n</td>\n<td>\n<h6>n<sup>2</sup> (Level 1)</h6>\n</td>\n<td>\n<h6>n (Level  2)</h6>\n</td>\n<td>\n<h6>log(n) (Level 3)</h6>\n</td>\n<td>\n<h6>Comments</h6>\n</td>\n</tr>\n<tr>\n<td>\n<h6>requirements</h6>\n</td>\n<td>\n<h6>Takes the given  requirements and codes to spec</h6>\n</td>\n<td>\n<h6>Come up with questions regarding  missed cases in the spec</h6>\n</td>\n<td>\n<h6>Understand complete picture and come  up with entire areas that need to be speced</h6>\n</td>\n<td>\n<h6>Able to suggest  better alternatives and flows to given requirements based on experience</h6>\n</td>\n<td></td>\n</tr>\n<tr>\n<td>\n<h6>scripting</h6>\n</td>\n<td>\n<h6>No knowledge of scripting  tools</h6>\n</td>\n<td>\n<h6>Batch files/shell scripts</h6>\n</td>\n<td>\n<h6>Perl/Python/Ruby/VBScript/Powershell</h6>\n</td>\n<td>\n<h6>Has written and published reusable code</h6>\n</td>\n<td></td>\n</tr>\n<tr>\n<td>\n<h6>database</h6>\n</td>\n<td>\n<h6>Thinks that Excel is a  database</h6>\n</td>\n<td>\n<h6>Knows basic database concepts, normalization, ACID,  transactions and can write simple selects</h6>\n</td>\n<td>\n<h6>Able to design good  and normalized database schemas keeping in mind the queries that'll have  to be run, proficient in use of views, stored procedures, triggers and  user defined types. Knows difference between clustered and non-clustered  indexes. Proficient in use of ORM tools.</h6>\n</td>\n<td>\n<h6>Can do basic database  administration, performance optimization, index optimization, write  advanced select queries, able to replace cursor usage with relational  sql, understands how data is stored internally, understands how indexes  are stored internally, understands how databases can be mirrored,  replicated etc. Understands how the two phase commit works.</h6>\n</td>\n<td></td>\n</tr>\n<tr>\n<th colspan=\"5\">Experience</th>\n</tr>\n<tr>\n<td></td>\n<td>\n<h6>2<sup>n</sup> (Level 0)</h6>\n</td>\n<td>\n<h6>n<sup>2</sup> (Level 1)</h6>\n</td>\n<td>\n<h6>n (Level  2)</h6>\n</td>\n<td>\n<h6>log(n) (Level 3)</h6>\n</td>\n<td>\n<h6>Comments</h6>\n</td>\n</tr>\n<tr>\n<td>\n<h6>languages with professional experience</h6>\n</td>\n<td>\n<h6>Imperative  or Object Oriented</h6>\n</td>\n<td>\n<h6>Imperative, Object-Oriented and declarative  (SQL), added bonus if they understand static vs dynamic typing, weak vs  strong typing and static inferred types</h6>\n</td>\n<td>\n<h6>Functional, added  bonus if they understand lazy evaluation, currying, continuations</h6>\n</td>\n<td>\n<h6>Concurrent  (Erlang, Oz) and Logic (Prolog)</h6>\n</td>\n<td></td>\n</tr>\n<tr>\n<td>\n<h6>platforms with professional experience</h6>\n</td>\n<td>\n<h6>1</h6>\n</td>\n<td>\n<h6>2-3</h6>\n</td>\n<td>\n<h6>4-5</h6>\n</td>\n<td>\n<h6>6+</h6>\n</td>\n<td></td>\n</tr>\n<tr>\n<td>\n<h6>years of professional experience</h6>\n</td>\n<td>\n<h6>1</h6>\n</td>\n<td>\n<h6>2-5</h6>\n</td>\n<td>\n<h6>6-9</h6>\n</td>\n<td>\n<h6>10+</h6>\n</td>\n<td></td>\n</tr>\n<tr>\n<td>\n<h6>domain knowledge</h6>\n</td>\n<td>\n<h6>No knowledge of the  domain</h6>\n</td>\n<td>\n<h6>Has worked on at least one product in the domain.</h6>\n</td>\n<td>\n<h6>Has  worked on multiple products in the same domain.</h6>\n</td>\n<td>\n<h6>Domain expert.  Has designed and implemented several products/solutions in the domain.  Well versed with standard terms, protocols used in the domain.</h6>\n</td>\n<td></td>\n</tr>\n<tr>\n<th colspan=\"5\">Knowledge</th>\n</tr>\n<tr>\n<td></td>\n<td>\n<h6>2<sup>n</sup> (Level 0)</h6>\n</td>\n<td>\n<h6>n<sup>2</sup> (Level 1)</h6>\n</td>\n<td>\n<h6>n (Level  2)</h6>\n</td>\n<td>\n<h6>log(n) (Level 3)</h6>\n</td>\n<td>\n<h6>Comments</h6>\n</td>\n</tr>\n<tr>\n<td>\n<h6>tool knowledge</h6>\n</td>\n<td>\n<h6>Limited to primary  IDE (VS.Net, Eclipse etc.)</h6>\n</td>\n<td>\n<h6>Knows about some alternatives to  popular and standard tools.</h6>\n</td>\n<td>\n<h6>Good knowledge of editors,  debuggers, IDEs, open source alternatives etc. etc. For e.g. someone who  knows most of the tools from Scott Hanselman's power tools list. Has  used ORM tools.</h6>\n</td>\n<td>\n<h6>Has actually written tools and scripts, added  bonus if they've been published.</h6>\n</td>\n<td></td>\n</tr>\n<tr>\n<td>\n<h6>languages exposed to</h6>\n</td>\n<td>\n<h6>Imperative or  Object Oriented</h6>\n</td>\n<td>\n<h6>Imperative, Object-Oriented and declarative  (SQL), added bonus if they understand static vs dynamic typing, weak vs  strong typing and static inferred types</h6>\n</td>\n<td>\n<h6>Functional, added bonus  if they understand lazy evaluation, currying, continuations</h6>\n</td>\n<td>\n<h6>Concurrent  (Erlang, Oz) and Logic (Prolog)</h6>\n</td>\n<td></td>\n</tr>\n<tr>\n<td>\n<h6>codebase knowledge</h6>\n</td>\n<td>\n<h6>Has never looked  at the codebase</h6>\n</td>\n<td>\n<h6>Basic knowledge of the code layout and how to  build the system</h6>\n</td>\n<td>\n<h6>Good working knowledge of code base, has  implemented several bug fixes and maybe some small features.</h6>\n</td>\n<td>\n<h6>Has  implemented multiple big features in the codebase and can easily  visualize the changes required for most features or bug fixes.</h6>\n</td>\n<td></td>\n</tr>\n<tr>\n<td>\n<h6>knowledge of upcoming technologies</h6>\n</td>\n<td>\n<h6>Has  not heard of the upcoming technologies</h6>\n</td>\n<td>\n<h6>Has heard of upcoming  technologies in the field</h6>\n</td>\n<td>\n<h6>Has downloaded the alpha  preview/CTP/beta and read some articles/manuals</h6>\n</td>\n<td>\n<h6>Has played with  the previews and has actually built something with it and as a bonus  shared that with everyone else</h6>\n</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>\n<h6>2<sup>n</sup> (Level 0)</h6>\n</td>\n<td>\n<h6>n<sup>2</sup> (Level 1)</h6>\n</td>\n<td>\n<h6>n (Level  2)</h6>\n</td>\n<td>\n<h6>log(n) (Level 3)</h6>\n</td>\n<td>\n<h6>Comments</h6>\n</td>\n</tr>\n<tr>\n<td>\n<h6>platform internals</h6>\n</td>\n<td>\n<h6>Zero knowledge of  platform internals</h6>\n</td>\n<td>\n<h6>Has basic knowledge of how the platform  works internally</h6>\n</td>\n<td>\n<h6>Deep knowledge of platform internals and can  visualize how the platform takes the program and converts it into  executable code.</h6>\n</td>\n<td>\n<h6>Has written tools to enhance or provide  information on platform internals. For e.g. disassemblers, decompilers,  debuggers etc.</h6>\n</td>\n<td></td>\n</tr>\n<tr>\n<td>\n<h6>books</h6>\n</td>\n<td>\n<h6>Unleashed series, 21 days  series, 24 hour series, dummies series...</h6>\n</td>\n<td>\n<h6>Code Complete, Don't  Make me Think, Mastering Regular Expressions</h6>\n</td>\n<td>\n<h6>Design Patterns,  Peopleware, Programming Pearls, Algorithm Design Manual, Pragmatic  Programmer, Mythical Man month</h6>\n</td>\n<td>\n<h6>Structure and Interpretation of  Computer Programs, Concepts Techniques, Models of Computer Programming,  Art of Computer Programming, Database systems , by C. J Date, Thinking  Forth, Little Schemer</h6>\n</td>\n<td></td>\n</tr>\n<tr>\n<td>\n<h6>blogs</h6>\n</td>\n<td>\n<h6>Has heard of them but never  got the time.</h6>\n</td>\n<td>\n<h6>Reads tech/programming/software engineering blogs  and listens to podcasts regularly.</h6>\n</td>\n<td>\n<h6>Maintains a link blog with  some collection of useful articles and tools that he/she has collected</h6>\n</td>\n<td>\n<h6>Maintains  a blog in which personal insights and thoughts on programming are  shared</h6>\n</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<div>\n<h6>Chinese version</h6>\n</div>\n<div>\n<table>\n<tbody>\n<tr>\n<th colspan=\"5\">计算机科学 Computer Science</th>\n</tr>\n<tr>\n<td></td>\n<td>2<sup>n</sup> (Level 0)</td>\n<td>n<sup>2</sup> (Level 1)</td>\n<td>n (Level  2)</td>\n<td>log(n) (Level 3)</td>\n<td>Comments</td>\n</tr>\n<tr>\n<td>数据结构</td>\n<td>不知道数组和链表的差异</td>\n<td>能够解释和使用数组， 链表，字典等，并且能够用于实际的编程任务。</td>\n<td>了解基本数据结构时间和空间的折中，比如数组vs  链表，能够解释如何实现哈希表和处理冲突，了解优先队列及其实现。</td>\n<td>高等的数据结构的知识，比如B-树、二项堆、斐波那契堆、AVL 树、红黑树、伸展树、跳跃表以及前缀树等。</td>\n<td></td>\n</tr>\n<tr>\n<td>算法</td>\n<td>不能够找出一个数组各数的平均值(这令人难以置信，但是我的确在应聘者 中遇到过)</td>\n<td>基本的排序，搜索和数据的遍历和检索算法。</td>\n<td>树，图，简单的贪婪算法和分而治之算法，能够适度了解矩阵该 层的含义。</td>\n<td>能够辨识和编写动态规划方案，良好的图算法知识，良好的数值估算的知识，能够辨别NP问题等。</td>\n<td>Working  with someone who has a good topcoder ranking would be an unbelievable  piece of luck!</td>\n</tr>\n<tr>\n<td>编程体系</td>\n<td>不知道何为编译器、链接器和解释器。</td>\n<td>对编译 器、链接器、解释器有基本的了解。知道什么是汇编代码以及在硬件层如何工作。有一些虚拟内存和分页知识。</td>\n<td>了解内核模式vs用户模式, 多线程，同步原语以及它们如何实现，能够阅读汇编代码。了解网络如何工作，了解网络协议和socket级别编程。</td>\n<td>了解整个程序堆栈、 硬件(CPU+内存+中断+微码)、二进制代码、汇编、静态和动态链接、编码、解释、JIT（just-in-time）编译、内存碎片回收、堆、栈、存 储器编址…</td>\n<td></td>\n</tr>\n<tr>\n<th colspan=\"5\">软件工程 Software Engineering</th>\n</tr>\n<tr>\n<td></td>\n<td>2<sup>n</sup> (Level 0)</td>\n<td>n<sup>2</sup> (Level 1)</td>\n<td>n (Level  2)</td>\n<td>log(n) (Level 3)</td>\n<td>Comments</td>\n</tr>\n<tr>\n<td>源码版本控制</td>\n<td>通过日期备份文件夹</td>\n<td>VSS和初级的 CVS/SVN用户</td>\n<td>熟练地使用CVS和SVN特性。知道如何分支和归并，使用程序库补丁安装特性等</td>\n<td>有分布式VCS 系统的知识。尝试过Bzr/Mercurial/Darcs/Git</td>\n<td></td>\n</tr>\n<tr>\n<td>自动化编译</td>\n<td>只知道在IDE下编译</td>\n<td>知道如何编译在命令行 下编译系统</td>\n<td>能够安装一个脚本构建基本的系统</td>\n<td>能够安装一个脚本来构建系统并且归档，安装程序，生成发布记录和给源 码控制中的代码分配标签。</td>\n<td></td>\n</tr>\n<tr>\n<td>自动化测试</td>\n<td>认为所有的测试都是测试员的工作。</td>\n<td>能够编写 自动化的单元测试，能够为正在编写的代码提出良好的测试用例。</td>\n<td>按照TDD （Test Driven  Development）方式编写代码。</td>\n<td>了解并且能够有效自动化安装，载入/性能和UI测试</td>\n<td></td>\n</tr>\n<tr>\n<th colspan=\"5\"> 程序设计 Programming</th>\n</tr>\n<tr>\n<td></td>\n<td>2<sup>n</sup> (Level 0)</td>\n<td>n<sup>2</sup> (Level 1)</td>\n<td>n (Level  2)</td>\n<td>log(n) (Level 3)</td>\n<td>Comments</td>\n</tr>\n<tr>\n<td>问题分解</td>\n<td>只有直线式的代码，通过复制粘贴来复用</td>\n<td>能够把 问题分散到多个函数中</td>\n<td>能够想出可复用的函数/对象来解决大题的问题</td>\n<td>使用适宜的数据结构和算法，写出通用的/面向 对象的代码来封装问题的易改变的层面。</td>\n<td></td>\n</tr>\n<tr>\n<td>系统分解</td>\n<td>N想不出比单一的文件/类更好的层面</td>\n<td>如果不在 同一平台或没采用相同的技术，能够把问题空间和设计方案分解。</td>\n<td>能够设计跨技术/平台的系统。</td>\n<td>能够在多个产品线和 与外部体系一体化中虚拟化和设计复制的系统。同时也能够设计支持系统监视、报告、故障恢复等。</td>\n<td></td>\n</tr>\n<tr>\n<td>交流</td>\n<td>不能向同伴表达想法/主意。匮乏拼写和语法的能力。</td>\n<td>同 伴能了解你在说什么。有良好的拼写和语法能力。</td>\n<td>能够和同伴进行高效的交流</td>\n<td>能够使用清晰的方式了解和交流想法/设计 /主意/细则，能适应每种环境的交流</td>\n<td>This is an often under rated but very critical criteria for judging a programmer. With the increase in outsourcing of programming tasks to places where English is not the native tongue this issue has become more prominent. I know of several projects that failed because the programmers could not understand what the intent of the communication was.</td>\n</tr>\n<tr>\n<td>同一文件中代码组织</td>\n<td>同一文件中组织没有依据</td>\n<td>按照逻辑 性或者易接近的方法</td>\n<td>代码分块和对于其他源文件来说是易于是释,引用其他源文件时有良好的注释</td>\n<td>文档头部有许可声 明，总结，良好的注释，一致的空格缩进。文档外观美观。</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>2<sup>n</sup> (Level 0)</td>\n<td>n<sup>2</sup> (Level 1)</td>\n<td>n (Level  2)</td>\n<td>log(n) (Level 3)</td>\n<td>Comments</td>\n</tr>\n<tr>\n<td>跨文件代码组织</td>\n<td>没够想过给代码跨文件组织</td>\n<td>相关文件按文件 夹分组</td>\n<td>每个物理文件都有独立的目的，比如一个类的定义，一个特性的实现等。</td>\n<td>代码在物理层组织紧密，在文件名上与 设计和外观相匹配，可以通过文件分布方式洞察设计理念。</td>\n<td></td>\n</tr>\n<tr>\n<td>源码树组织</td>\n<td>一切都放在一个文件夹内</td>\n<td>初步地将代码分散进 对应逻辑的文件夹。</td>\n<td>没有循环依赖，二进制文件，库，文档，构建，第三方的代码都组织进合适的文件夹内。</td>\n<td>源码树的 物理布局与逻辑层次、组织方式相匹配。可以通过目录名称和组织方式洞察设计理念。</td>\n<td>The difference between  this and the previous item is in the scale of organization, source tree organization relates to the entire set of artifacts that define the system.</td>\n</tr>\n<tr>\n<td>代码可读性</td>\n<td>单音节的名称 （在国内应该是那些类似用汉语拼音命名的习惯）</td>\n<td>对文件、变量、类、方法等，有良好的命名。</td>\n<td>没有长函数、注释解释不常规的代码，bug修复,代码假设。</td>\n<td>代 码假设验证使用断言，自然的代码流，没有深层嵌套的条件和方法</td>\n<td></td>\n</tr>\n<tr>\n<td>防御性编码</td>\n<td>不知道这个概念</td>\n<td>检查代码中所有的参数，对关键 的假设进行断言</td>\n<td>确保检查了返回值和使代码失败的异常。</td>\n<td>有自己的库来帮助防御性编程、编写单元测试模拟故障</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>2<sup>n</sup> (Level 0)</td>\n<td>n<sup>2</sup> (Level 1)</td>\n<td>n (Level  2)</td>\n<td>log(n) (Level 3)</td>\n<td>Comments</td>\n</tr>\n<tr>\n<td>错误处理</td>\n<td>只给乐观的情形编码</td>\n<td>基本的代码错误处理，抛出 异常/生成错误</td>\n<td>确保错误/异常留在程序中有良好的状态，资源，连接，内存都有被合适的清理。</td>\n<td>在编码之前察觉可能 出现的异常，在代码的所有层次中维持一致性的异常处理策略，提出整个系统的错误处理准则。</td>\n<td></td>\n</tr>\n<tr>\n<td>IDE</td>\n<td>IDE大部分用来进行文本编辑</td>\n<td>了解其周围的接 口，能够高效地通过菜单来使用IDE</td>\n<td>了解最常操作的键盘快捷键</td>\n<td>编写自定义宏</td>\n<td></td>\n</tr>\n<tr>\n<td>API</td>\n<td>需要频繁地查阅文档</td>\n<td>把最频繁使用的API记在脑 子里</td>\n<td>广阔且深入的API知识。</td>\n<td>为了使实际任务中常用API使用更加便捷，编写过API的上层库，填补API之间 的缺口。</td>\n<td>E.g. of API can be Java library, .net framework or the  custom API for the application</td>\n</tr>\n<tr>\n<td>框架</td>\n<td>没有使用过主平台外的任何框架</td>\n<td>听过但没用过平台下 流行的可用框架</td>\n<td>在专业的职位中使用过一个以上的框架，通晓各框架的特色。</td>\n<td>某框架的作者</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>2<sup>n</sup> (Level 0)</td>\n<td>n<sup>2</sup> (Level 1)</td>\n<td>n (Level  2)</td>\n<td>log(n) (Level 3)</td>\n<td>Comments</td>\n</tr>\n<tr>\n<td>需求分析</td>\n<td>接受给定的需求和代码规格</td>\n<td>能对规格的遗漏提出 疑问</td>\n<td>了解全面情况，提出需要被规格化的整体范围。</td>\n<td>能够提出更好的可选方案，根据经验的浮现给出需求</td>\n<td></td>\n</tr>\n<tr>\n<td>脚本</td>\n<td>不具备脚本工具的知识</td>\n<td>批处理文件/shell脚本</td>\n<td>Perl/Python/Ruby/VBScript/Powershell</td>\n<td>写过并且发表过可重用的代码</td>\n<td></td>\n</tr>\n<tr>\n<td>数据库</td>\n<td>认为Excel就是数据库</td>\n<td>知道基本的数据库概 念，规范化、ACID（原子性Atomicity、一致性Consistency、隔离性Isolation、持久性Durability）、事务化，能 够写简单的select语句</td>\n<td>能够牢记在运行时必要查询中设计良好的规范化数据库模式，  精通用户视图，存储过程，触发器和用户定义类型。知道聚集与非聚集索引之间的差异。精通使用ORM（Object Relational  Mapping对象关系映射）工具</td>\n<td>能做基本的数据库管理，性能优化，索引优化，编写高级的select查询，能够使用相关sql来替 换游标，理解数据内部的存储，了解如何镜像、复制数据库。知道两段数据提交如何工作</td>\n<td></td>\n</tr>\n<tr>\n<th colspan=\"5\">经验 Experience</th>\n</tr>\n<tr>\n<td></td>\n<td>2<sup>n</sup> (Level 0)</td>\n<td>n<sup>2</sup> (Level 1)</td>\n<td>n (Level  2)</td>\n<td>log(n) (Level 3)</td>\n<td>Comments</td>\n</tr>\n<tr>\n<td>专业语言经验</td>\n<td>命令式语言和面向对象语言</td>\n<td>命令式语言,面向对象语言和说明型语言(SQL),如果了解静态类型vs动态类型，弱类型vs强类型则有加分</td>\n<td>函数式语言,如果了解延 缓求值，局部套用函数，延续则有加分</td>\n<td>并发语言(Erlang, Oz)   逻辑语言(Prolog)</td>\n<td></td>\n</tr>\n<tr>\n<td>专业平台经验</td>\n<td>1</td>\n<td>2-3</td>\n<td>4-5</td>\n<td>6+</td>\n<td></td>\n</tr>\n<tr>\n<td>专业经验年龄</td>\n<td>1</td>\n<td>2-5</td>\n<td>6-9</td>\n<td>10+</td>\n<td></td>\n</tr>\n<tr>\n<td>领域知识</td>\n<td>没有该领域的知识</td>\n<td>在该领域中曾经至少为一个 产品工作过</td>\n<td>在同一领域中为多个产品工作过</td>\n<td>领域专家。在该领域设计和实现数种产品/方案。精通该领域使用的标准条款 和协议</td>\n<td></td>\n</tr>\n<tr>\n<th colspan=\"5\">学识 Knowledge</th>\n</tr>\n<tr>\n<td></td>\n<td>2<sup>n</sup> (Level 0)</td>\n<td>n<sup>2</sup> (Level 1)</td>\n<td>n (Level  2)</td>\n<td>log(n) (Level 3)</td>\n<td>Comments</td>\n</tr>\n<tr>\n<td>工具知识</td>\n<td>仅限于主要的IDE(VS.Net, Eclipse等)</td>\n<td>知 道一些流行和标准工具的备选方案</td>\n<td>对编辑器、调试器、IDE、开源的备选方案有很好的了解。比如某人了解大多数Scott  Hanselman的威力工具列表中的工具，使用过ORM工具。</td>\n<td>实际地编写过工具和脚本，如果这些被发布则有加分</td>\n<td></td>\n</tr>\n<tr>\n<td>语言接触</td>\n<td>命令式语言和面向对象语言</td>\n<td>命令式语言、面向对象 语言和说明型语言(SQL),如果了解静态类型vs动态类型、弱类型vs强类型则有加分</td>\n<td>函数式语言,如果了解延缓求值、局部套用函 数、continuations （源于scheme中的一种高级控制结构）则有加分</td>\n<td>并发语言(Erlang, Oz) 逻辑语言(Prolog)</td>\n<td></td>\n</tr>\n<tr>\n<td>代码库知识</td>\n<td>从来没有查询过代码库</td>\n<td>基本的代码层知识，了 解如果构建系统</td>\n<td>良好的代码库工作知识，实现过几次bug修复或者完成了一些细小的特性</td>\n<td>实现了代码库中多个大型特 性，能够轻松地将多数特性的需求变更具体化，从容地处理bug修复。</td>\n<td></td>\n</tr>\n<tr>\n<td>下一代技术知识</td>\n<td>从来没听说过即将到来的技术</td>\n<td>听说过某领 域即将到来的技术</td>\n<td>下载过alpha preview/CTP/beta版本，并且读过一些文章和手册</td>\n<td>试用过预览 版而且实际地构建过某物，如果共享给其他人的话则有加分</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>2<sup>n</sup> (Level 0)</td>\n<td>n<sup>2</sup> (Level 1)</td>\n<td>n (Level  2)</td>\n<td>log(n) (Level 3)</td>\n<td>Comments</td>\n</tr>\n<tr>\n<td>平台内部</td>\n<td>对平台内部毫无所知</td>\n<td>有平台基本的内部工作的 知识</td>\n<td>深度的平台内部知识，能够设想平台如何将程序转换成可执行代码。</td>\n<td>编写过增强平台或者为其平台内部提供信息的 工具。比如，反汇编工具，反编译工具，调试工具等。</td>\n<td></td>\n</tr>\n<tr>\n<td>书籍</td>\n<td>菜鸟系列，21天系列，24小时系列，蠢货系列...</td>\n<td>《代 码大全》，《别让我思考》, 《精通正则表达式》</td>\n<td>《设计模式》，《人件》，《代码珠玑》，《算法设计手册》，《程序员修炼之道》， 《人月神话》</td>\n<td>《计算机程序设计与解释》，《事务处理:概念与技术》，《计算机程序设计模型》，《计算机程序设计艺术》，《数据库系统 导论》 C.J Date版，《Thinking Forth》 ，《Little Schemer》（没找到其中译本）</td>\n<td></td>\n</tr>\n<tr>\n<td>博客</td>\n<td>听过但是从来抽不出空去接触</td>\n<td>阅读一些科技/编程 /软件工程的博客，并且经常的收听一些播客</td>\n<td>维护一些博客的链接，收集博主分享的有用的文章和工具</td>\n<td>维护一个在编程方 面，分享有个人见解和思考的博客</td>\n</tr>\n</tbody>\n</table>\n</div>\n","slug":"2010-03-15-programmer-competency-matrix","published":1,"updated":"2017-06-05T03:01:15.000Z","photos":[],"link":"","_id":"cj3jjuz0p00091jmjt4gp6pln","content":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"views\" content=\"957\"></p>\n<div><a rel=\"external\" href=\"http://www.cppblog.com/xguru\" target=\"_blank\">XGuru</a> / <a rel=\"external\" href=\"http://creativecommons.org/licenses/by-nc-sa/2.5/cn/\" target=\"_blank\">CC BY-NC-SA 2.5</a></div><br># Programmer Competency Matrix<br><h6>Note that the knowledge for each level is cumulative;  being at      level <em>n</em> implies that you also know everything from the     levels  lower than <em>n</em>.</h6><br><a id=\"more\"></a><br><table><br><tbody><br><tr><br><th colspan=\"5\"><span style=\"color: #808000;\">Computer Science</span></th><br></tr><br><tr><br><td><br><h6><span style=\"color: #000000;\"><br></span></h6><br></td><br><td><br><h6><span style=\"color: #000000;\">2<sup>n</sup> (Level 0)</span></h6><br></td><br><td><br><h6>n<sup>2</sup> (Level 1)</h6><br></td><br><td><br><h6>n (Level  2)</h6><br></td><br><td><br><h6>log(n) (Level 3)</h6><br></td><br><td><br><h6>Comments</h6><br></td><br></tr><br><tr><br><td><br><h6>data structures</h6><br></td><br><td><br><h6>Doesn’t know the  difference between Array and LinkedList</h6><br></td><br><td><br><h6>Able to explain and use  Arrays, LinkedLists, Dictionaries etc in practical programming tasks</h6><br></td><br><td><br><h6>Knows  space and time tradeoffs of the basic data structures, Arrays vs  LinkedLists, Able to explain how hashtables can be implemented and can  handle collisions, Priority queues and ways to implement them etc.</h6><br></td><br><td><br><h6>Knowledge  of advanced data structures like B-trees, binomial and fibonacci heaps,  AVL/Red Black trees, Splay Trees, Skip Lists, tries etc.</h6><br></td><br><td></td><br></tr><br><tr><br><td><br><h6>algorithms</h6><br></td><br><td><br><h6>Unable to find the  average of numbers in an array (It’s hard to believe but I’ve  interviewed such candidates)</h6><br></td><br><td><br><h6>Basic sorting, searching and data  structure traversal and retrieval algorithms</h6><br></td><br><td><br><h6>Tree, Graph,  simple greedy and divide and conquer algorithms, is able to understand  the relevance of the levels of this matrix.</h6><br></td><br><td><br><h6>Able to recognize  and code dynamic programming solutions, good knowledge of graph  algorithms, good knowledge of numerical computation algorithms, able to  identify NP problems etc.</h6><br></td><br><td><br><h6>Working with someone who has a good  topcoder ranking would be an unbelievable piece of luck!</h6><br></td><br></tr><br><tr><br><td><br><h6>systems programming</h6><br></td><br><td><br><h6>Doesn’t know  what a compiler, linker or interpreter is</h6><br></td><br><td><br><h6>Basic understanding  of compilers, linker and interpreters. Understands what assembly code is  and how things work at the hardware level. Some knowledge of virtual  memory and paging.</h6><br></td><br><td><br><h6>Understands kernel mode vs. user mode,  multi-threading, synchronization primitives and how they’re implemented,  able to read assembly code. Understands how networks work,  understanding of network protocols and socket level programming.</h6><br></td><br><td><br><h6>Understands  the entire programming stack, hardware (CPU + Memory + Cache +  Interrupts + microcode), binary code, assembly, static and dynamic  linking, compilation, interpretation, JIT compilation, garbage  collection, heap, stack, memory addressing…</h6><br></td><br><td></td><br></tr><br><tr><br><th colspan=\"5\">Software Engineering</th><br></tr><br><tr><br><td></td><br><td><br><h6>2<sup>n</sup> (Level 0)</h6><br></td><br><td><br><h6>n<sup>2</sup> (Level 1)</h6><br></td><br><td><br><h6>n (Level  2)</h6><br></td><br><td><br><h6>log(n) (Level 3)</h6><br></td><br><td><br><h6>Comments</h6><br></td><br></tr><br><tr><br><td><br><h6>source code version control</h6><br></td><br><td><br><h6>Folder  backups by date</h6><br></td><br><td><br><h6>VSS and beginning CVS/SVN user</h6><br></td><br><td><br><h6>Proficient  in using CVS and SVN features. Knows how to branch and merge, use  patches setup repository properties etc.</h6><br></td><br><td><br><h6>Knowledge of  distributed VCS systems. Has tried out Bzr/Mercurial/Darcs/Git</h6><br></td><br><td></td><br></tr><br><tr><br><td><br><h6>build automation</h6><br></td><br><td><br><h6>Only knows how to  build from IDE</h6><br></td><br><td><br><h6>Knows how to build the system from the command  line</h6><br></td><br><td><br><h6>Can setup a script to build the basic system</h6><br></td><br><td><br><h6>Can  setup a script to build the system and also documentation, installers,  generate release notes and tag the code in source control</h6><br></td><br><td></td><br></tr><br><tr><br><td><br><h6>automated testing</h6><br></td><br><td><br><h6>Thinks that all  testing is the job of the tester</h6><br></td><br><td><br><h6>Has written automated unit  tests and comes up with good unit test cases for the code that is being  written</h6><br></td><br><td><br><h6>Has written code in TDD manner</h6><br></td><br><td><br><h6>Understands and  is able to setup automated functional, load/performance and UI tests</h6><br></td><br><td></td><br></tr><br><tr><br><th colspan=\"5\">Programming</th><br></tr><br><tr><br><td></td><br><td><br><h6>2<sup>n</sup> (Level 0)</h6><br></td><br><td><br><h6>n<sup>2</sup> (Level 1)</h6><br></td><br><td><br><h6>n (Level  2)</h6><br></td><br><td><br><h6>log(n) (Level 3)</h6><br></td><br><td><br><h6>Comments</h6><br></td><br></tr><br><tr><br><td><br><h6>problem decomposition</h6><br></td><br><td><br><h6>Only straight  line code with copy paste for reuse</h6><br></td><br><td><br><h6>Able to break up problem  into multiple functions</h6><br></td><br><td><br><h6>Able to come up with reusable  functions/objects that solve the overall problem</h6><br></td><br><td><br><h6>Use of  appropriate data structures and algorithms and comes up with  generic/object-oriented code that encapsulate aspects of the problem  that are subject to change.</h6><br></td><br><td></td><br></tr><br><tr><br><td><br><h6>systems decomposition</h6><br></td><br><td><br><h6>Not able to  think above the level of a single file/class</h6><br></td><br><td><br><h6>Able to break up  problem space and design solution as long as it is within the same  platform/technology</h6><br></td><br><td><br><h6>Able to design systems that span multiple  technologies/platforms.</h6><br></td><br><td><br><h6>Able to visualize and design complex  systems with multiple product lines and integrations with external  systems. Also should be able to design operations support systems like  monitoring, reporting, fail overs etc.</h6><br></td><br><td></td><br></tr><br><tr><br><td><br><h6>communication</h6><br></td><br><td><br><h6>Cannot express  thoughts/ideas to peers. Poor spelling and grammar.</h6><br></td><br><td><br><h6>Peers can  understand what is being said. Good spelling and grammar.</h6><br></td><br><td><br><h6>Is  able to effectively communicate with peers</h6><br></td><br><td><br><h6>Able to understand  and communicate thoughts/design/ideas/specs in a unambiguous manner and  adjusts communication as per the context</h6><br></td><br><td><br><h6>This is an often under  rated but very critical criteria for judging a programmer. With the  increase in outsourcing of programming tasks to places where English is  not the native tongue this issue has become more prominent. I know of  several projects that failed because the programmers could not  understand what the intent of the communication was.</h6><br></td><br></tr><br><tr><br><td><br><h6>code organization within a file</h6><br></td><br><td><br><h6>no  evidence of organization within a file</h6><br></td><br><td><br><h6>Methods are grouped  logically or by accessibility</h6><br></td><br><td><br><h6>Code is grouped into regions and  well commented with references to other source files</h6><br></td><br><td><br><h6>File has  license header, summary, well commented, consistent white space usage.  The file should look beautiful.</h6><br></td><br><td></td><br></tr><br><tr><br><td></td><br><td><br><h6>2<sup>n</sup> (Level 0)</h6><br></td><br><td><br><h6>n<sup>2</sup> (Level 1)</h6><br></td><br><td><br><h6>n (Level  2)</h6><br></td><br><td><br><h6>log(n) (Level 3)</h6><br></td><br><td><br><h6>Comments</h6><br></td><br></tr><br><tr><br><td><br><h6>code organization across files</h6><br></td><br><td><br><h6>No  thought given to organizing code across files</h6><br></td><br><td><br><h6>Related files are  grouped into a folder</h6><br></td><br><td><br><h6>Each physical file has a unique purpose,  for e.g. one class definition, one feature implementation etc.</h6><br></td><br><td><br><h6>Code  organization at a physical level closely matches design and looking at  file names and folder distribution provides insights into design</h6><br></td><br><td></td><br></tr><br><tr><br><td><br><h6>source tree organization</h6><br></td><br><td><br><h6>Everything  in one folder</h6><br></td><br><td><br><h6>Basic separation of code into logical folders.</h6><br></td><br><td><br><h6>No  circular dependencies, binaries, libs, docs, builds, third-party code  all organized into appropriate folders</h6><br></td><br><td><br><h6>Physical layout of  source tree matches logical hierarchy and organization. The directory  names and organization provide insights into the design of the system.</h6><br></td><br><td><br><h6>The  difference between this and the previous item is in the scale of  organization, source tree organization relates to the entire set of  artifacts that define the system.</h6><br></td><br></tr><br><tr><br><td><br><h6>code readability</h6><br></td><br><td><br><h6>Mono-syllable names</h6><br></td><br><td><br><h6>Good names for files, variables classes, methods etc.</h6><br></td><br><td><br><h6>No  long functions, comments explaining unusual code, bug fixes, code  assumptions</h6><br></td><br><td><br><h6>Code assumptions are verified using asserts, code  flows naturally - no deep nesting of conditionals or methods</h6><br></td><br><td></td><br></tr><br><tr><br><td><br><h6>defensive coding</h6><br></td><br><td><br><h6>Doesn’t understand  the concept</h6><br></td><br><td><br><h6>Checks all arguments and asserts critical  assumptions in code</h6><br></td><br><td><br><h6>Makes sure to check return values and check  for exceptions around code that can fail.</h6><br></td><br><td><br><h6>Has his own library  to help with defensive coding, writes unit tests that simulate faults</h6><br></td><br><td></td><br></tr><br><tr><br><td></td><br><td><br><h6>2<sup>n</sup> (Level 0)</h6><br></td><br><td><br><h6>n<sup>2</sup> (Level 1)</h6><br></td><br><td><br><h6>n (Level  2)</h6><br></td><br><td><br><h6>log(n) (Level 3)</h6><br></td><br><td><br><h6>Comments</h6><br></td><br></tr><br><tr><br><td><br><h6>error handling</h6><br></td><br><td><br><h6>Only codes the happy  case</h6><br></td><br><td><br><h6>Basic error handling around code that can throw  exceptions/generate errors</h6><br></td><br><td><br><h6>Ensures that error/exceptions leave  program in good state, resources, connections and memory is all cleaned  up properly</h6><br></td><br><td><br><h6>Codes to detect possible exception before, maintain  consistent exception handling strategy in all layers of code, come up  with guidelines on exception handling for entire system.</h6><br></td><br><td></td><br></tr><br><tr><br><td><br><h6>IDE</h6><br></td><br><td><br><h6>Mostly uses IDE for text editing</h6><br></td><br><td><br><h6>Knows their way around the interface, able to effectively use  the IDE using menus.</h6><br></td><br><td><br><h6>Knows keyboard shortcuts for most used  operations.</h6><br></td><br><td><br><h6>Has written custom macros</h6><br></td><br><td></td><br></tr><br><tr><br><td><br><h6>API</h6><br></td><br><td><br><h6>Needs to look up the  documentation frequently</h6><br></td><br><td><br><h6>Has the most frequently used APIs in  memory</h6><br></td><br><td><br><h6>Vast and In-depth knowledge of the API</h6><br></td><br><td><br><h6>Has  written libraries that sit on top of the API to simplify frequently used  tasks and to fill in gaps in the API</h6><br></td><br><td><br><h6>E.g. of API can be Java  library, .net framework or the custom API for the application</h6><br></td><br></tr><br><tr><br><td><br><h6>frameworks</h6><br></td><br><td><br><h6>Has not used any  framework outside of the core platform</h6><br></td><br><td><br><h6>Has heard about but not  used the popular frameworks available for the platform.</h6><br></td><br><td><br><h6>Has  used more than one framework in a professional capacity and is  well-versed with the idioms of the frameworks.</h6><br></td><br><td><br><h6>Author of  framework</h6><br></td><br><td></td><br></tr><br><tr><br><td></td><br><td><br><h6>2<sup>n</sup> (Level 0)</h6><br></td><br><td><br><h6>n<sup>2</sup> (Level 1)</h6><br></td><br><td><br><h6>n (Level  2)</h6><br></td><br><td><br><h6>log(n) (Level 3)</h6><br></td><br><td><br><h6>Comments</h6><br></td><br></tr><br><tr><br><td><br><h6>requirements</h6><br></td><br><td><br><h6>Takes the given  requirements and codes to spec</h6><br></td><br><td><br><h6>Come up with questions regarding  missed cases in the spec</h6><br></td><br><td><br><h6>Understand complete picture and come  up with entire areas that need to be speced</h6><br></td><br><td><br><h6>Able to suggest  better alternatives and flows to given requirements based on experience</h6><br></td><br><td></td><br></tr><br><tr><br><td><br><h6>scripting</h6><br></td><br><td><br><h6>No knowledge of scripting  tools</h6><br></td><br><td><br><h6>Batch files/shell scripts</h6><br></td><br><td><br><h6>Perl/Python/Ruby/VBScript/Powershell</h6><br></td><br><td><br><h6>Has written and published reusable code</h6><br></td><br><td></td><br></tr><br><tr><br><td><br><h6>database</h6><br></td><br><td><br><h6>Thinks that Excel is a  database</h6><br></td><br><td><br><h6>Knows basic database concepts, normalization, ACID,  transactions and can write simple selects</h6><br></td><br><td><br><h6>Able to design good  and normalized database schemas keeping in mind the queries that’ll have  to be run, proficient in use of views, stored procedures, triggers and  user defined types. Knows difference between clustered and non-clustered  indexes. Proficient in use of ORM tools.</h6><br></td><br><td><br><h6>Can do basic database  administration, performance optimization, index optimization, write  advanced select queries, able to replace cursor usage with relational  sql, understands how data is stored internally, understands how indexes  are stored internally, understands how databases can be mirrored,  replicated etc. Understands how the two phase commit works.</h6><br></td><br><td></td><br></tr><br><tr><br><th colspan=\"5\">Experience</th><br></tr><br><tr><br><td></td><br><td><br><h6>2<sup>n</sup> (Level 0)</h6><br></td><br><td><br><h6>n<sup>2</sup> (Level 1)</h6><br></td><br><td><br><h6>n (Level  2)</h6><br></td><br><td><br><h6>log(n) (Level 3)</h6><br></td><br><td><br><h6>Comments</h6><br></td><br></tr><br><tr><br><td><br><h6>languages with professional experience</h6><br></td><br><td><br><h6>Imperative  or Object Oriented</h6><br></td><br><td><br><h6>Imperative, Object-Oriented and declarative  (SQL), added bonus if they understand static vs dynamic typing, weak vs  strong typing and static inferred types</h6><br></td><br><td><br><h6>Functional, added  bonus if they understand lazy evaluation, currying, continuations</h6><br></td><br><td><br><h6>Concurrent  (Erlang, Oz) and Logic (Prolog)</h6><br></td><br><td></td><br></tr><br><tr><br><td><br><h6>platforms with professional experience</h6><br></td><br><td><br><h6>1</h6><br></td><br><td><br><h6>2-3</h6><br></td><br><td><br><h6>4-5</h6><br></td><br><td><br><h6>6+</h6><br></td><br><td></td><br></tr><br><tr><br><td><br><h6>years of professional experience</h6><br></td><br><td><br><h6>1</h6><br></td><br><td><br><h6>2-5</h6><br></td><br><td><br><h6>6-9</h6><br></td><br><td><br><h6>10+</h6><br></td><br><td></td><br></tr><br><tr><br><td><br><h6>domain knowledge</h6><br></td><br><td><br><h6>No knowledge of the  domain</h6><br></td><br><td><br><h6>Has worked on at least one product in the domain.</h6><br></td><br><td><br><h6>Has  worked on multiple products in the same domain.</h6><br></td><br><td><br><h6>Domain expert.  Has designed and implemented several products/solutions in the domain.  Well versed with standard terms, protocols used in the domain.</h6><br></td><br><td></td><br></tr><br><tr><br><th colspan=\"5\">Knowledge</th><br></tr><br><tr><br><td></td><br><td><br><h6>2<sup>n</sup> (Level 0)</h6><br></td><br><td><br><h6>n<sup>2</sup> (Level 1)</h6><br></td><br><td><br><h6>n (Level  2)</h6><br></td><br><td><br><h6>log(n) (Level 3)</h6><br></td><br><td><br><h6>Comments</h6><br></td><br></tr><br><tr><br><td><br><h6>tool knowledge</h6><br></td><br><td><br><h6>Limited to primary  IDE (VS.Net, Eclipse etc.)</h6><br></td><br><td><br><h6>Knows about some alternatives to  popular and standard tools.</h6><br></td><br><td><br><h6>Good knowledge of editors,  debuggers, IDEs, open source alternatives etc. etc. For e.g. someone who  knows most of the tools from Scott Hanselman’s power tools list. Has  used ORM tools.</h6><br></td><br><td><br><h6>Has actually written tools and scripts, added  bonus if they’ve been published.</h6><br></td><br><td></td><br></tr><br><tr><br><td><br><h6>languages exposed to</h6><br></td><br><td><br><h6>Imperative or  Object Oriented</h6><br></td><br><td><br><h6>Imperative, Object-Oriented and declarative  (SQL), added bonus if they understand static vs dynamic typing, weak vs  strong typing and static inferred types</h6><br></td><br><td><br><h6>Functional, added bonus  if they understand lazy evaluation, currying, continuations</h6><br></td><br><td><br><h6>Concurrent  (Erlang, Oz) and Logic (Prolog)</h6><br></td><br><td></td><br></tr><br><tr><br><td><br><h6>codebase knowledge</h6><br></td><br><td><br><h6>Has never looked  at the codebase</h6><br></td><br><td><br><h6>Basic knowledge of the code layout and how to  build the system</h6><br></td><br><td><br><h6>Good working knowledge of code base, has  implemented several bug fixes and maybe some small features.</h6><br></td><br><td><br><h6>Has  implemented multiple big features in the codebase and can easily  visualize the changes required for most features or bug fixes.</h6><br></td><br><td></td><br></tr><br><tr><br><td><br><h6>knowledge of upcoming technologies</h6><br></td><br><td><br><h6>Has  not heard of the upcoming technologies</h6><br></td><br><td><br><h6>Has heard of upcoming  technologies in the field</h6><br></td><br><td><br><h6>Has downloaded the alpha  preview/CTP/beta and read some articles/manuals</h6><br></td><br><td><br><h6>Has played with  the previews and has actually built something with it and as a bonus  shared that with everyone else</h6><br></td><br><td></td><br></tr><br><tr><br><td></td><br><td><br><h6>2<sup>n</sup> (Level 0)</h6><br></td><br><td><br><h6>n<sup>2</sup> (Level 1)</h6><br></td><br><td><br><h6>n (Level  2)</h6><br></td><br><td><br><h6>log(n) (Level 3)</h6><br></td><br><td><br><h6>Comments</h6><br></td><br></tr><br><tr><br><td><br><h6>platform internals</h6><br></td><br><td><br><h6>Zero knowledge of  platform internals</h6><br></td><br><td><br><h6>Has basic knowledge of how the platform  works internally</h6><br></td><br><td><br><h6>Deep knowledge of platform internals and can  visualize how the platform takes the program and converts it into  executable code.</h6><br></td><br><td><br><h6>Has written tools to enhance or provide  information on platform internals. For e.g. disassemblers, decompilers,  debuggers etc.</h6><br></td><br><td></td><br></tr><br><tr><br><td><br><h6>books</h6><br></td><br><td><br><h6>Unleashed series, 21 days  series, 24 hour series, dummies series…</h6><br></td><br><td><br><h6>Code Complete, Don’t  Make me Think, Mastering Regular Expressions</h6><br></td><br><td><br><h6>Design Patterns,  Peopleware, Programming Pearls, Algorithm Design Manual, Pragmatic  Programmer, Mythical Man month</h6><br></td><br><td><br><h6>Structure and Interpretation of  Computer Programs, Concepts Techniques, Models of Computer Programming,  Art of Computer Programming, Database systems , by C. J Date, Thinking  Forth, Little Schemer</h6><br></td><br><td></td><br></tr><br><tr><br><td><br><h6>blogs</h6><br></td><br><td><br><h6>Has heard of them but never  got the time.</h6><br></td><br><td><br><h6>Reads tech/programming/software engineering blogs  and listens to podcasts regularly.</h6><br></td><br><td><br><h6>Maintains a link blog with  some collection of useful articles and tools that he/she has collected</h6><br></td><br><td><br><h6>Maintains  a blog in which personal insights and thoughts on programming are  shared</h6><br></td><br><td></td><br></tr><br></tbody><br></table><br><div><br><h6>Chinese version</h6><br></div><br><div><br><table><br><tbody><br><tr><br><th colspan=\"5\">计算机科学 Computer Science</th><br></tr><br><tr><br><td></td><br><td>2<sup>n</sup> (Level 0)</td><br><td>n<sup>2</sup> (Level 1)</td><br><td>n (Level  2)</td><br><td>log(n) (Level 3)</td><br><td>Comments</td><br></tr><br><tr><br><td>数据结构</td><br><td>不知道数组和链表的差异</td><br><td>能够解释和使用数组， 链表，字典等，并且能够用于实际的编程任务。</td><br><td>了解基本数据结构时间和空间的折中，比如数组vs  链表，能够解释如何实现哈希表和处理冲突，了解优先队列及其实现。</td><br><td>高等的数据结构的知识，比如B-树、二项堆、斐波那契堆、AVL 树、红黑树、伸展树、跳跃表以及前缀树等。</td><br><td></td><br></tr><br><tr><br><td>算法</td><br><td>不能够找出一个数组各数的平均值(这令人难以置信，但是我的确在应聘者 中遇到过)</td><br><td>基本的排序，搜索和数据的遍历和检索算法。</td><br><td>树，图，简单的贪婪算法和分而治之算法，能够适度了解矩阵该 层的含义。</td><br><td>能够辨识和编写动态规划方案，良好的图算法知识，良好的数值估算的知识，能够辨别NP问题等。</td><br><td>Working  with someone who has a good topcoder ranking would be an unbelievable  piece of luck!</td><br></tr><br><tr><br><td>编程体系</td><br><td>不知道何为编译器、链接器和解释器。</td><br><td>对编译 器、链接器、解释器有基本的了解。知道什么是汇编代码以及在硬件层如何工作。有一些虚拟内存和分页知识。</td><br><td>了解内核模式vs用户模式, 多线程，同步原语以及它们如何实现，能够阅读汇编代码。了解网络如何工作，了解网络协议和socket级别编程。</td><br><td>了解整个程序堆栈、 硬件(CPU+内存+中断+微码)、二进制代码、汇编、静态和动态链接、编码、解释、JIT（just-in-time）编译、内存碎片回收、堆、栈、存 储器编址…</td><br><td></td><br></tr><br><tr><br><th colspan=\"5\">软件工程 Software Engineering</th><br></tr><br><tr><br><td></td><br><td>2<sup>n</sup> (Level 0)</td><br><td>n<sup>2</sup> (Level 1)</td><br><td>n (Level  2)</td><br><td>log(n) (Level 3)</td><br><td>Comments</td><br></tr><br><tr><br><td>源码版本控制</td><br><td>通过日期备份文件夹</td><br><td>VSS和初级的 CVS/SVN用户</td><br><td>熟练地使用CVS和SVN特性。知道如何分支和归并，使用程序库补丁安装特性等</td><br><td>有分布式VCS 系统的知识。尝试过Bzr/Mercurial/Darcs/Git</td><br><td></td><br></tr><br><tr><br><td>自动化编译</td><br><td>只知道在IDE下编译</td><br><td>知道如何编译在命令行 下编译系统</td><br><td>能够安装一个脚本构建基本的系统</td><br><td>能够安装一个脚本来构建系统并且归档，安装程序，生成发布记录和给源 码控制中的代码分配标签。</td><br><td></td><br></tr><br><tr><br><td>自动化测试</td><br><td>认为所有的测试都是测试员的工作。</td><br><td>能够编写 自动化的单元测试，能够为正在编写的代码提出良好的测试用例。</td><br><td>按照TDD （Test Driven  Development）方式编写代码。</td><br><td>了解并且能够有效自动化安装，载入/性能和UI测试</td><br><td></td><br></tr><br><tr><br><th colspan=\"5\"> 程序设计 Programming</th><br></tr><br><tr><br><td></td><br><td>2<sup>n</sup> (Level 0)</td><br><td>n<sup>2</sup> (Level 1)</td><br><td>n (Level  2)</td><br><td>log(n) (Level 3)</td><br><td>Comments</td><br></tr><br><tr><br><td>问题分解</td><br><td>只有直线式的代码，通过复制粘贴来复用</td><br><td>能够把 问题分散到多个函数中</td><br><td>能够想出可复用的函数/对象来解决大题的问题</td><br><td>使用适宜的数据结构和算法，写出通用的/面向 对象的代码来封装问题的易改变的层面。</td><br><td></td><br></tr><br><tr><br><td>系统分解</td><br><td>N想不出比单一的文件/类更好的层面</td><br><td>如果不在 同一平台或没采用相同的技术，能够把问题空间和设计方案分解。</td><br><td>能够设计跨技术/平台的系统。</td><br><td>能够在多个产品线和 与外部体系一体化中虚拟化和设计复制的系统。同时也能够设计支持系统监视、报告、故障恢复等。</td><br><td></td><br></tr><br><tr><br><td>交流</td><br><td>不能向同伴表达想法/主意。匮乏拼写和语法的能力。</td><br><td>同 伴能了解你在说什么。有良好的拼写和语法能力。</td><br><td>能够和同伴进行高效的交流</td><br><td>能够使用清晰的方式了解和交流想法/设计 /主意/细则，能适应每种环境的交流</td><br><td>This is an often under rated but very critical criteria for judging a programmer. With the increase in outsourcing of programming tasks to places where English is not the native tongue this issue has become more prominent. I know of several projects that failed because the programmers could not understand what the intent of the communication was.</td><br></tr><br><tr><br><td>同一文件中代码组织</td><br><td>同一文件中组织没有依据</td><br><td>按照逻辑 性或者易接近的方法</td><br><td>代码分块和对于其他源文件来说是易于是释,引用其他源文件时有良好的注释</td><br><td>文档头部有许可声 明，总结，良好的注释，一致的空格缩进。文档外观美观。</td><br><td></td><br></tr><br><tr><br><td></td><br><td>2<sup>n</sup> (Level 0)</td><br><td>n<sup>2</sup> (Level 1)</td><br><td>n (Level  2)</td><br><td>log(n) (Level 3)</td><br><td>Comments</td><br></tr><br><tr><br><td>跨文件代码组织</td><br><td>没够想过给代码跨文件组织</td><br><td>相关文件按文件 夹分组</td><br><td>每个物理文件都有独立的目的，比如一个类的定义，一个特性的实现等。</td><br><td>代码在物理层组织紧密，在文件名上与 设计和外观相匹配，可以通过文件分布方式洞察设计理念。</td><br><td></td><br></tr><br><tr><br><td>源码树组织</td><br><td>一切都放在一个文件夹内</td><br><td>初步地将代码分散进 对应逻辑的文件夹。</td><br><td>没有循环依赖，二进制文件，库，文档，构建，第三方的代码都组织进合适的文件夹内。</td><br><td>源码树的 物理布局与逻辑层次、组织方式相匹配。可以通过目录名称和组织方式洞察设计理念。</td><br><td>The difference between  this and the previous item is in the scale of organization, source tree organization relates to the entire set of artifacts that define the system.</td><br></tr><br><tr><br><td>代码可读性</td><br><td>单音节的名称 （在国内应该是那些类似用汉语拼音命名的习惯）</td><br><td>对文件、变量、类、方法等，有良好的命名。</td><br><td>没有长函数、注释解释不常规的代码，bug修复,代码假设。</td><br><td>代 码假设验证使用断言，自然的代码流，没有深层嵌套的条件和方法</td><br><td></td><br></tr><br><tr><br><td>防御性编码</td><br><td>不知道这个概念</td><br><td>检查代码中所有的参数，对关键 的假设进行断言</td><br><td>确保检查了返回值和使代码失败的异常。</td><br><td>有自己的库来帮助防御性编程、编写单元测试模拟故障</td><br><td></td><br></tr><br><tr><br><td></td><br><td>2<sup>n</sup> (Level 0)</td><br><td>n<sup>2</sup> (Level 1)</td><br><td>n (Level  2)</td><br><td>log(n) (Level 3)</td><br><td>Comments</td><br></tr><br><tr><br><td>错误处理</td><br><td>只给乐观的情形编码</td><br><td>基本的代码错误处理，抛出 异常/生成错误</td><br><td>确保错误/异常留在程序中有良好的状态，资源，连接，内存都有被合适的清理。</td><br><td>在编码之前察觉可能 出现的异常，在代码的所有层次中维持一致性的异常处理策略，提出整个系统的错误处理准则。</td><br><td></td><br></tr><br><tr><br><td>IDE</td><br><td>IDE大部分用来进行文本编辑</td><br><td>了解其周围的接 口，能够高效地通过菜单来使用IDE</td><br><td>了解最常操作的键盘快捷键</td><br><td>编写自定义宏</td><br><td></td><br></tr><br><tr><br><td>API</td><br><td>需要频繁地查阅文档</td><br><td>把最频繁使用的API记在脑 子里</td><br><td>广阔且深入的API知识。</td><br><td>为了使实际任务中常用API使用更加便捷，编写过API的上层库，填补API之间 的缺口。</td><br><td>E.g. of API can be Java library, .net framework or the  custom API for the application</td><br></tr><br><tr><br><td>框架</td><br><td>没有使用过主平台外的任何框架</td><br><td>听过但没用过平台下 流行的可用框架</td><br><td>在专业的职位中使用过一个以上的框架，通晓各框架的特色。</td><br><td>某框架的作者</td><br><td></td><br></tr><br><tr><br><td></td><br><td>2<sup>n</sup> (Level 0)</td><br><td>n<sup>2</sup> (Level 1)</td><br><td>n (Level  2)</td><br><td>log(n) (Level 3)</td><br><td>Comments</td><br></tr><br><tr><br><td>需求分析</td><br><td>接受给定的需求和代码规格</td><br><td>能对规格的遗漏提出 疑问</td><br><td>了解全面情况，提出需要被规格化的整体范围。</td><br><td>能够提出更好的可选方案，根据经验的浮现给出需求</td><br><td></td><br></tr><br><tr><br><td>脚本</td><br><td>不具备脚本工具的知识</td><br><td>批处理文件/shell脚本</td><br><td>Perl/Python/Ruby/VBScript/Powershell</td><br><td>写过并且发表过可重用的代码</td><br><td></td><br></tr><br><tr><br><td>数据库</td><br><td>认为Excel就是数据库</td><br><td>知道基本的数据库概 念，规范化、ACID（原子性Atomicity、一致性Consistency、隔离性Isolation、持久性Durability）、事务化，能 够写简单的select语句</td><br><td>能够牢记在运行时必要查询中设计良好的规范化数据库模式，  精通用户视图，存储过程，触发器和用户定义类型。知道聚集与非聚集索引之间的差异。精通使用ORM（Object Relational  Mapping对象关系映射）工具</td><br><td>能做基本的数据库管理，性能优化，索引优化，编写高级的select查询，能够使用相关sql来替 换游标，理解数据内部的存储，了解如何镜像、复制数据库。知道两段数据提交如何工作</td><br><td></td><br></tr><br><tr><br><th colspan=\"5\">经验 Experience</th><br></tr><br><tr><br><td></td><br><td>2<sup>n</sup> (Level 0)</td><br><td>n<sup>2</sup> (Level 1)</td><br><td>n (Level  2)</td><br><td>log(n) (Level 3)</td><br><td>Comments</td><br></tr><br><tr><br><td>专业语言经验</td><br><td>命令式语言和面向对象语言</td><br><td>命令式语言,面向对象语言和说明型语言(SQL),如果了解静态类型vs动态类型，弱类型vs强类型则有加分</td><br><td>函数式语言,如果了解延 缓求值，局部套用函数，延续则有加分</td><br><td>并发语言(Erlang, Oz)   逻辑语言(Prolog)</td><br><td></td><br></tr><br><tr><br><td>专业平台经验</td><br><td>1</td><br><td>2-3</td><br><td>4-5</td><br><td>6+</td><br><td></td><br></tr><br><tr><br><td>专业经验年龄</td><br><td>1</td><br><td>2-5</td><br><td>6-9</td><br><td>10+</td><br><td></td><br></tr><br><tr><br><td>领域知识</td><br><td>没有该领域的知识</td><br><td>在该领域中曾经至少为一个 产品工作过</td><br><td>在同一领域中为多个产品工作过</td><br><td>领域专家。在该领域设计和实现数种产品/方案。精通该领域使用的标准条款 和协议</td><br><td></td><br></tr><br><tr><br><th colspan=\"5\">学识 Knowledge</th><br></tr><br><tr><br><td></td><br><td>2<sup>n</sup> (Level 0)</td><br><td>n<sup>2</sup> (Level 1)</td><br><td>n (Level  2)</td><br><td>log(n) (Level 3)</td><br><td>Comments</td><br></tr><br><tr><br><td>工具知识</td><br><td>仅限于主要的IDE(VS.Net, Eclipse等)</td><br><td>知 道一些流行和标准工具的备选方案</td><br><td>对编辑器、调试器、IDE、开源的备选方案有很好的了解。比如某人了解大多数Scott  Hanselman的威力工具列表中的工具，使用过ORM工具。</td><br><td>实际地编写过工具和脚本，如果这些被发布则有加分</td><br><td></td><br></tr><br><tr><br><td>语言接触</td><br><td>命令式语言和面向对象语言</td><br><td>命令式语言、面向对象 语言和说明型语言(SQL),如果了解静态类型vs动态类型、弱类型vs强类型则有加分</td><br><td>函数式语言,如果了解延缓求值、局部套用函 数、continuations （源于scheme中的一种高级控制结构）则有加分</td><br><td>并发语言(Erlang, Oz) 逻辑语言(Prolog)</td><br><td></td><br></tr><br><tr><br><td>代码库知识</td><br><td>从来没有查询过代码库</td><br><td>基本的代码层知识，了 解如果构建系统</td><br><td>良好的代码库工作知识，实现过几次bug修复或者完成了一些细小的特性</td><br><td>实现了代码库中多个大型特 性，能够轻松地将多数特性的需求变更具体化，从容地处理bug修复。</td><br><td></td><br></tr><br><tr><br><td>下一代技术知识</td><br><td>从来没听说过即将到来的技术</td><br><td>听说过某领 域即将到来的技术</td><br><td>下载过alpha preview/CTP/beta版本，并且读过一些文章和手册</td><br><td>试用过预览 版而且实际地构建过某物，如果共享给其他人的话则有加分</td><br><td></td><br></tr><br><tr><br><td></td><br><td>2<sup>n</sup> (Level 0)</td><br><td>n<sup>2</sup> (Level 1)</td><br><td>n (Level  2)</td><br><td>log(n) (Level 3)</td><br><td>Comments</td><br></tr><br><tr><br><td>平台内部</td><br><td>对平台内部毫无所知</td><br><td>有平台基本的内部工作的 知识</td><br><td>深度的平台内部知识，能够设想平台如何将程序转换成可执行代码。</td><br><td>编写过增强平台或者为其平台内部提供信息的 工具。比如，反汇编工具，反编译工具，调试工具等。</td><br><td></td><br></tr><br><tr><br><td>书籍</td><br><td>菜鸟系列，21天系列，24小时系列，蠢货系列…</td><br><td>《代 码大全》，《别让我思考》, 《精通正则表达式》</td><br><td>《设计模式》，《人件》，《代码珠玑》，《算法设计手册》，《程序员修炼之道》， 《人月神话》</td><br><td>《计算机程序设计与解释》，《事务处理:概念与技术》，《计算机程序设计模型》，《计算机程序设计艺术》，《数据库系统 导论》 C.J Date版，《Thinking Forth》 ，《Little Schemer》（没找到其中译本）</td><br><td></td><br></tr><br><tr><br><td>博客</td><br><td>听过但是从来抽不出空去接触</td><br><td>阅读一些科技/编程 /软件工程的博客，并且经常的收听一些播客</td><br><td>维护一些博客的链接，收集博主分享的有用的文章和工具</td><br><td>维护一个在编程方 面，分享有个人见解和思考的博客</td><br></tr><br></tbody><br></table><br></div>\n","site":{"data":{}},"excerpt":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"views\" content=\"957\"></p>\n<div><a rel=\"external\" href=\"http://www.cppblog.com/xguru\" target=\"_blank\">XGuru</a> / <a rel=\"external\" href=\"http://creativecommons.org/licenses/by-nc-sa/2.5/cn/\" target=\"_blank\">CC BY-NC-SA 2.5</a></div><br># Programmer Competency Matrix<br><h6>Note that the knowledge for each level is cumulative;  being at      level <em>n</em> implies that you also know everything from the     levels  lower than <em>n</em>.</h6><br>","more":"<br><table><br><tbody><br><tr><br><th colspan=\"5\"><span style=\"color: #808000;\">Computer Science</span></th><br></tr><br><tr><br><td><br><h6><span style=\"color: #000000;\"><br></span></h6><br></td><br><td><br><h6><span style=\"color: #000000;\">2<sup>n</sup> (Level 0)</span></h6><br></td><br><td><br><h6>n<sup>2</sup> (Level 1)</h6><br></td><br><td><br><h6>n (Level  2)</h6><br></td><br><td><br><h6>log(n) (Level 3)</h6><br></td><br><td><br><h6>Comments</h6><br></td><br></tr><br><tr><br><td><br><h6>data structures</h6><br></td><br><td><br><h6>Doesn’t know the  difference between Array and LinkedList</h6><br></td><br><td><br><h6>Able to explain and use  Arrays, LinkedLists, Dictionaries etc in practical programming tasks</h6><br></td><br><td><br><h6>Knows  space and time tradeoffs of the basic data structures, Arrays vs  LinkedLists, Able to explain how hashtables can be implemented and can  handle collisions, Priority queues and ways to implement them etc.</h6><br></td><br><td><br><h6>Knowledge  of advanced data structures like B-trees, binomial and fibonacci heaps,  AVL/Red Black trees, Splay Trees, Skip Lists, tries etc.</h6><br></td><br><td></td><br></tr><br><tr><br><td><br><h6>algorithms</h6><br></td><br><td><br><h6>Unable to find the  average of numbers in an array (It’s hard to believe but I’ve  interviewed such candidates)</h6><br></td><br><td><br><h6>Basic sorting, searching and data  structure traversal and retrieval algorithms</h6><br></td><br><td><br><h6>Tree, Graph,  simple greedy and divide and conquer algorithms, is able to understand  the relevance of the levels of this matrix.</h6><br></td><br><td><br><h6>Able to recognize  and code dynamic programming solutions, good knowledge of graph  algorithms, good knowledge of numerical computation algorithms, able to  identify NP problems etc.</h6><br></td><br><td><br><h6>Working with someone who has a good  topcoder ranking would be an unbelievable piece of luck!</h6><br></td><br></tr><br><tr><br><td><br><h6>systems programming</h6><br></td><br><td><br><h6>Doesn’t know  what a compiler, linker or interpreter is</h6><br></td><br><td><br><h6>Basic understanding  of compilers, linker and interpreters. Understands what assembly code is  and how things work at the hardware level. Some knowledge of virtual  memory and paging.</h6><br></td><br><td><br><h6>Understands kernel mode vs. user mode,  multi-threading, synchronization primitives and how they’re implemented,  able to read assembly code. Understands how networks work,  understanding of network protocols and socket level programming.</h6><br></td><br><td><br><h6>Understands  the entire programming stack, hardware (CPU + Memory + Cache +  Interrupts + microcode), binary code, assembly, static and dynamic  linking, compilation, interpretation, JIT compilation, garbage  collection, heap, stack, memory addressing…</h6><br></td><br><td></td><br></tr><br><tr><br><th colspan=\"5\">Software Engineering</th><br></tr><br><tr><br><td></td><br><td><br><h6>2<sup>n</sup> (Level 0)</h6><br></td><br><td><br><h6>n<sup>2</sup> (Level 1)</h6><br></td><br><td><br><h6>n (Level  2)</h6><br></td><br><td><br><h6>log(n) (Level 3)</h6><br></td><br><td><br><h6>Comments</h6><br></td><br></tr><br><tr><br><td><br><h6>source code version control</h6><br></td><br><td><br><h6>Folder  backups by date</h6><br></td><br><td><br><h6>VSS and beginning CVS/SVN user</h6><br></td><br><td><br><h6>Proficient  in using CVS and SVN features. Knows how to branch and merge, use  patches setup repository properties etc.</h6><br></td><br><td><br><h6>Knowledge of  distributed VCS systems. Has tried out Bzr/Mercurial/Darcs/Git</h6><br></td><br><td></td><br></tr><br><tr><br><td><br><h6>build automation</h6><br></td><br><td><br><h6>Only knows how to  build from IDE</h6><br></td><br><td><br><h6>Knows how to build the system from the command  line</h6><br></td><br><td><br><h6>Can setup a script to build the basic system</h6><br></td><br><td><br><h6>Can  setup a script to build the system and also documentation, installers,  generate release notes and tag the code in source control</h6><br></td><br><td></td><br></tr><br><tr><br><td><br><h6>automated testing</h6><br></td><br><td><br><h6>Thinks that all  testing is the job of the tester</h6><br></td><br><td><br><h6>Has written automated unit  tests and comes up with good unit test cases for the code that is being  written</h6><br></td><br><td><br><h6>Has written code in TDD manner</h6><br></td><br><td><br><h6>Understands and  is able to setup automated functional, load/performance and UI tests</h6><br></td><br><td></td><br></tr><br><tr><br><th colspan=\"5\">Programming</th><br></tr><br><tr><br><td></td><br><td><br><h6>2<sup>n</sup> (Level 0)</h6><br></td><br><td><br><h6>n<sup>2</sup> (Level 1)</h6><br></td><br><td><br><h6>n (Level  2)</h6><br></td><br><td><br><h6>log(n) (Level 3)</h6><br></td><br><td><br><h6>Comments</h6><br></td><br></tr><br><tr><br><td><br><h6>problem decomposition</h6><br></td><br><td><br><h6>Only straight  line code with copy paste for reuse</h6><br></td><br><td><br><h6>Able to break up problem  into multiple functions</h6><br></td><br><td><br><h6>Able to come up with reusable  functions/objects that solve the overall problem</h6><br></td><br><td><br><h6>Use of  appropriate data structures and algorithms and comes up with  generic/object-oriented code that encapsulate aspects of the problem  that are subject to change.</h6><br></td><br><td></td><br></tr><br><tr><br><td><br><h6>systems decomposition</h6><br></td><br><td><br><h6>Not able to  think above the level of a single file/class</h6><br></td><br><td><br><h6>Able to break up  problem space and design solution as long as it is within the same  platform/technology</h6><br></td><br><td><br><h6>Able to design systems that span multiple  technologies/platforms.</h6><br></td><br><td><br><h6>Able to visualize and design complex  systems with multiple product lines and integrations with external  systems. Also should be able to design operations support systems like  monitoring, reporting, fail overs etc.</h6><br></td><br><td></td><br></tr><br><tr><br><td><br><h6>communication</h6><br></td><br><td><br><h6>Cannot express  thoughts/ideas to peers. Poor spelling and grammar.</h6><br></td><br><td><br><h6>Peers can  understand what is being said. Good spelling and grammar.</h6><br></td><br><td><br><h6>Is  able to effectively communicate with peers</h6><br></td><br><td><br><h6>Able to understand  and communicate thoughts/design/ideas/specs in a unambiguous manner and  adjusts communication as per the context</h6><br></td><br><td><br><h6>This is an often under  rated but very critical criteria for judging a programmer. With the  increase in outsourcing of programming tasks to places where English is  not the native tongue this issue has become more prominent. I know of  several projects that failed because the programmers could not  understand what the intent of the communication was.</h6><br></td><br></tr><br><tr><br><td><br><h6>code organization within a file</h6><br></td><br><td><br><h6>no  evidence of organization within a file</h6><br></td><br><td><br><h6>Methods are grouped  logically or by accessibility</h6><br></td><br><td><br><h6>Code is grouped into regions and  well commented with references to other source files</h6><br></td><br><td><br><h6>File has  license header, summary, well commented, consistent white space usage.  The file should look beautiful.</h6><br></td><br><td></td><br></tr><br><tr><br><td></td><br><td><br><h6>2<sup>n</sup> (Level 0)</h6><br></td><br><td><br><h6>n<sup>2</sup> (Level 1)</h6><br></td><br><td><br><h6>n (Level  2)</h6><br></td><br><td><br><h6>log(n) (Level 3)</h6><br></td><br><td><br><h6>Comments</h6><br></td><br></tr><br><tr><br><td><br><h6>code organization across files</h6><br></td><br><td><br><h6>No  thought given to organizing code across files</h6><br></td><br><td><br><h6>Related files are  grouped into a folder</h6><br></td><br><td><br><h6>Each physical file has a unique purpose,  for e.g. one class definition, one feature implementation etc.</h6><br></td><br><td><br><h6>Code  organization at a physical level closely matches design and looking at  file names and folder distribution provides insights into design</h6><br></td><br><td></td><br></tr><br><tr><br><td><br><h6>source tree organization</h6><br></td><br><td><br><h6>Everything  in one folder</h6><br></td><br><td><br><h6>Basic separation of code into logical folders.</h6><br></td><br><td><br><h6>No  circular dependencies, binaries, libs, docs, builds, third-party code  all organized into appropriate folders</h6><br></td><br><td><br><h6>Physical layout of  source tree matches logical hierarchy and organization. The directory  names and organization provide insights into the design of the system.</h6><br></td><br><td><br><h6>The  difference between this and the previous item is in the scale of  organization, source tree organization relates to the entire set of  artifacts that define the system.</h6><br></td><br></tr><br><tr><br><td><br><h6>code readability</h6><br></td><br><td><br><h6>Mono-syllable names</h6><br></td><br><td><br><h6>Good names for files, variables classes, methods etc.</h6><br></td><br><td><br><h6>No  long functions, comments explaining unusual code, bug fixes, code  assumptions</h6><br></td><br><td><br><h6>Code assumptions are verified using asserts, code  flows naturally - no deep nesting of conditionals or methods</h6><br></td><br><td></td><br></tr><br><tr><br><td><br><h6>defensive coding</h6><br></td><br><td><br><h6>Doesn’t understand  the concept</h6><br></td><br><td><br><h6>Checks all arguments and asserts critical  assumptions in code</h6><br></td><br><td><br><h6>Makes sure to check return values and check  for exceptions around code that can fail.</h6><br></td><br><td><br><h6>Has his own library  to help with defensive coding, writes unit tests that simulate faults</h6><br></td><br><td></td><br></tr><br><tr><br><td></td><br><td><br><h6>2<sup>n</sup> (Level 0)</h6><br></td><br><td><br><h6>n<sup>2</sup> (Level 1)</h6><br></td><br><td><br><h6>n (Level  2)</h6><br></td><br><td><br><h6>log(n) (Level 3)</h6><br></td><br><td><br><h6>Comments</h6><br></td><br></tr><br><tr><br><td><br><h6>error handling</h6><br></td><br><td><br><h6>Only codes the happy  case</h6><br></td><br><td><br><h6>Basic error handling around code that can throw  exceptions/generate errors</h6><br></td><br><td><br><h6>Ensures that error/exceptions leave  program in good state, resources, connections and memory is all cleaned  up properly</h6><br></td><br><td><br><h6>Codes to detect possible exception before, maintain  consistent exception handling strategy in all layers of code, come up  with guidelines on exception handling for entire system.</h6><br></td><br><td></td><br></tr><br><tr><br><td><br><h6>IDE</h6><br></td><br><td><br><h6>Mostly uses IDE for text editing</h6><br></td><br><td><br><h6>Knows their way around the interface, able to effectively use  the IDE using menus.</h6><br></td><br><td><br><h6>Knows keyboard shortcuts for most used  operations.</h6><br></td><br><td><br><h6>Has written custom macros</h6><br></td><br><td></td><br></tr><br><tr><br><td><br><h6>API</h6><br></td><br><td><br><h6>Needs to look up the  documentation frequently</h6><br></td><br><td><br><h6>Has the most frequently used APIs in  memory</h6><br></td><br><td><br><h6>Vast and In-depth knowledge of the API</h6><br></td><br><td><br><h6>Has  written libraries that sit on top of the API to simplify frequently used  tasks and to fill in gaps in the API</h6><br></td><br><td><br><h6>E.g. of API can be Java  library, .net framework or the custom API for the application</h6><br></td><br></tr><br><tr><br><td><br><h6>frameworks</h6><br></td><br><td><br><h6>Has not used any  framework outside of the core platform</h6><br></td><br><td><br><h6>Has heard about but not  used the popular frameworks available for the platform.</h6><br></td><br><td><br><h6>Has  used more than one framework in a professional capacity and is  well-versed with the idioms of the frameworks.</h6><br></td><br><td><br><h6>Author of  framework</h6><br></td><br><td></td><br></tr><br><tr><br><td></td><br><td><br><h6>2<sup>n</sup> (Level 0)</h6><br></td><br><td><br><h6>n<sup>2</sup> (Level 1)</h6><br></td><br><td><br><h6>n (Level  2)</h6><br></td><br><td><br><h6>log(n) (Level 3)</h6><br></td><br><td><br><h6>Comments</h6><br></td><br></tr><br><tr><br><td><br><h6>requirements</h6><br></td><br><td><br><h6>Takes the given  requirements and codes to spec</h6><br></td><br><td><br><h6>Come up with questions regarding  missed cases in the spec</h6><br></td><br><td><br><h6>Understand complete picture and come  up with entire areas that need to be speced</h6><br></td><br><td><br><h6>Able to suggest  better alternatives and flows to given requirements based on experience</h6><br></td><br><td></td><br></tr><br><tr><br><td><br><h6>scripting</h6><br></td><br><td><br><h6>No knowledge of scripting  tools</h6><br></td><br><td><br><h6>Batch files/shell scripts</h6><br></td><br><td><br><h6>Perl/Python/Ruby/VBScript/Powershell</h6><br></td><br><td><br><h6>Has written and published reusable code</h6><br></td><br><td></td><br></tr><br><tr><br><td><br><h6>database</h6><br></td><br><td><br><h6>Thinks that Excel is a  database</h6><br></td><br><td><br><h6>Knows basic database concepts, normalization, ACID,  transactions and can write simple selects</h6><br></td><br><td><br><h6>Able to design good  and normalized database schemas keeping in mind the queries that’ll have  to be run, proficient in use of views, stored procedures, triggers and  user defined types. Knows difference between clustered and non-clustered  indexes. Proficient in use of ORM tools.</h6><br></td><br><td><br><h6>Can do basic database  administration, performance optimization, index optimization, write  advanced select queries, able to replace cursor usage with relational  sql, understands how data is stored internally, understands how indexes  are stored internally, understands how databases can be mirrored,  replicated etc. Understands how the two phase commit works.</h6><br></td><br><td></td><br></tr><br><tr><br><th colspan=\"5\">Experience</th><br></tr><br><tr><br><td></td><br><td><br><h6>2<sup>n</sup> (Level 0)</h6><br></td><br><td><br><h6>n<sup>2</sup> (Level 1)</h6><br></td><br><td><br><h6>n (Level  2)</h6><br></td><br><td><br><h6>log(n) (Level 3)</h6><br></td><br><td><br><h6>Comments</h6><br></td><br></tr><br><tr><br><td><br><h6>languages with professional experience</h6><br></td><br><td><br><h6>Imperative  or Object Oriented</h6><br></td><br><td><br><h6>Imperative, Object-Oriented and declarative  (SQL), added bonus if they understand static vs dynamic typing, weak vs  strong typing and static inferred types</h6><br></td><br><td><br><h6>Functional, added  bonus if they understand lazy evaluation, currying, continuations</h6><br></td><br><td><br><h6>Concurrent  (Erlang, Oz) and Logic (Prolog)</h6><br></td><br><td></td><br></tr><br><tr><br><td><br><h6>platforms with professional experience</h6><br></td><br><td><br><h6>1</h6><br></td><br><td><br><h6>2-3</h6><br></td><br><td><br><h6>4-5</h6><br></td><br><td><br><h6>6+</h6><br></td><br><td></td><br></tr><br><tr><br><td><br><h6>years of professional experience</h6><br></td><br><td><br><h6>1</h6><br></td><br><td><br><h6>2-5</h6><br></td><br><td><br><h6>6-9</h6><br></td><br><td><br><h6>10+</h6><br></td><br><td></td><br></tr><br><tr><br><td><br><h6>domain knowledge</h6><br></td><br><td><br><h6>No knowledge of the  domain</h6><br></td><br><td><br><h6>Has worked on at least one product in the domain.</h6><br></td><br><td><br><h6>Has  worked on multiple products in the same domain.</h6><br></td><br><td><br><h6>Domain expert.  Has designed and implemented several products/solutions in the domain.  Well versed with standard terms, protocols used in the domain.</h6><br></td><br><td></td><br></tr><br><tr><br><th colspan=\"5\">Knowledge</th><br></tr><br><tr><br><td></td><br><td><br><h6>2<sup>n</sup> (Level 0)</h6><br></td><br><td><br><h6>n<sup>2</sup> (Level 1)</h6><br></td><br><td><br><h6>n (Level  2)</h6><br></td><br><td><br><h6>log(n) (Level 3)</h6><br></td><br><td><br><h6>Comments</h6><br></td><br></tr><br><tr><br><td><br><h6>tool knowledge</h6><br></td><br><td><br><h6>Limited to primary  IDE (VS.Net, Eclipse etc.)</h6><br></td><br><td><br><h6>Knows about some alternatives to  popular and standard tools.</h6><br></td><br><td><br><h6>Good knowledge of editors,  debuggers, IDEs, open source alternatives etc. etc. For e.g. someone who  knows most of the tools from Scott Hanselman’s power tools list. Has  used ORM tools.</h6><br></td><br><td><br><h6>Has actually written tools and scripts, added  bonus if they’ve been published.</h6><br></td><br><td></td><br></tr><br><tr><br><td><br><h6>languages exposed to</h6><br></td><br><td><br><h6>Imperative or  Object Oriented</h6><br></td><br><td><br><h6>Imperative, Object-Oriented and declarative  (SQL), added bonus if they understand static vs dynamic typing, weak vs  strong typing and static inferred types</h6><br></td><br><td><br><h6>Functional, added bonus  if they understand lazy evaluation, currying, continuations</h6><br></td><br><td><br><h6>Concurrent  (Erlang, Oz) and Logic (Prolog)</h6><br></td><br><td></td><br></tr><br><tr><br><td><br><h6>codebase knowledge</h6><br></td><br><td><br><h6>Has never looked  at the codebase</h6><br></td><br><td><br><h6>Basic knowledge of the code layout and how to  build the system</h6><br></td><br><td><br><h6>Good working knowledge of code base, has  implemented several bug fixes and maybe some small features.</h6><br></td><br><td><br><h6>Has  implemented multiple big features in the codebase and can easily  visualize the changes required for most features or bug fixes.</h6><br></td><br><td></td><br></tr><br><tr><br><td><br><h6>knowledge of upcoming technologies</h6><br></td><br><td><br><h6>Has  not heard of the upcoming technologies</h6><br></td><br><td><br><h6>Has heard of upcoming  technologies in the field</h6><br></td><br><td><br><h6>Has downloaded the alpha  preview/CTP/beta and read some articles/manuals</h6><br></td><br><td><br><h6>Has played with  the previews and has actually built something with it and as a bonus  shared that with everyone else</h6><br></td><br><td></td><br></tr><br><tr><br><td></td><br><td><br><h6>2<sup>n</sup> (Level 0)</h6><br></td><br><td><br><h6>n<sup>2</sup> (Level 1)</h6><br></td><br><td><br><h6>n (Level  2)</h6><br></td><br><td><br><h6>log(n) (Level 3)</h6><br></td><br><td><br><h6>Comments</h6><br></td><br></tr><br><tr><br><td><br><h6>platform internals</h6><br></td><br><td><br><h6>Zero knowledge of  platform internals</h6><br></td><br><td><br><h6>Has basic knowledge of how the platform  works internally</h6><br></td><br><td><br><h6>Deep knowledge of platform internals and can  visualize how the platform takes the program and converts it into  executable code.</h6><br></td><br><td><br><h6>Has written tools to enhance or provide  information on platform internals. For e.g. disassemblers, decompilers,  debuggers etc.</h6><br></td><br><td></td><br></tr><br><tr><br><td><br><h6>books</h6><br></td><br><td><br><h6>Unleashed series, 21 days  series, 24 hour series, dummies series…</h6><br></td><br><td><br><h6>Code Complete, Don’t  Make me Think, Mastering Regular Expressions</h6><br></td><br><td><br><h6>Design Patterns,  Peopleware, Programming Pearls, Algorithm Design Manual, Pragmatic  Programmer, Mythical Man month</h6><br></td><br><td><br><h6>Structure and Interpretation of  Computer Programs, Concepts Techniques, Models of Computer Programming,  Art of Computer Programming, Database systems , by C. J Date, Thinking  Forth, Little Schemer</h6><br></td><br><td></td><br></tr><br><tr><br><td><br><h6>blogs</h6><br></td><br><td><br><h6>Has heard of them but never  got the time.</h6><br></td><br><td><br><h6>Reads tech/programming/software engineering blogs  and listens to podcasts regularly.</h6><br></td><br><td><br><h6>Maintains a link blog with  some collection of useful articles and tools that he/she has collected</h6><br></td><br><td><br><h6>Maintains  a blog in which personal insights and thoughts on programming are  shared</h6><br></td><br><td></td><br></tr><br></tbody><br></table><br><div><br><h6>Chinese version</h6><br></div><br><div><br><table><br><tbody><br><tr><br><th colspan=\"5\">计算机科学 Computer Science</th><br></tr><br><tr><br><td></td><br><td>2<sup>n</sup> (Level 0)</td><br><td>n<sup>2</sup> (Level 1)</td><br><td>n (Level  2)</td><br><td>log(n) (Level 3)</td><br><td>Comments</td><br></tr><br><tr><br><td>数据结构</td><br><td>不知道数组和链表的差异</td><br><td>能够解释和使用数组， 链表，字典等，并且能够用于实际的编程任务。</td><br><td>了解基本数据结构时间和空间的折中，比如数组vs  链表，能够解释如何实现哈希表和处理冲突，了解优先队列及其实现。</td><br><td>高等的数据结构的知识，比如B-树、二项堆、斐波那契堆、AVL 树、红黑树、伸展树、跳跃表以及前缀树等。</td><br><td></td><br></tr><br><tr><br><td>算法</td><br><td>不能够找出一个数组各数的平均值(这令人难以置信，但是我的确在应聘者 中遇到过)</td><br><td>基本的排序，搜索和数据的遍历和检索算法。</td><br><td>树，图，简单的贪婪算法和分而治之算法，能够适度了解矩阵该 层的含义。</td><br><td>能够辨识和编写动态规划方案，良好的图算法知识，良好的数值估算的知识，能够辨别NP问题等。</td><br><td>Working  with someone who has a good topcoder ranking would be an unbelievable  piece of luck!</td><br></tr><br><tr><br><td>编程体系</td><br><td>不知道何为编译器、链接器和解释器。</td><br><td>对编译 器、链接器、解释器有基本的了解。知道什么是汇编代码以及在硬件层如何工作。有一些虚拟内存和分页知识。</td><br><td>了解内核模式vs用户模式, 多线程，同步原语以及它们如何实现，能够阅读汇编代码。了解网络如何工作，了解网络协议和socket级别编程。</td><br><td>了解整个程序堆栈、 硬件(CPU+内存+中断+微码)、二进制代码、汇编、静态和动态链接、编码、解释、JIT（just-in-time）编译、内存碎片回收、堆、栈、存 储器编址…</td><br><td></td><br></tr><br><tr><br><th colspan=\"5\">软件工程 Software Engineering</th><br></tr><br><tr><br><td></td><br><td>2<sup>n</sup> (Level 0)</td><br><td>n<sup>2</sup> (Level 1)</td><br><td>n (Level  2)</td><br><td>log(n) (Level 3)</td><br><td>Comments</td><br></tr><br><tr><br><td>源码版本控制</td><br><td>通过日期备份文件夹</td><br><td>VSS和初级的 CVS/SVN用户</td><br><td>熟练地使用CVS和SVN特性。知道如何分支和归并，使用程序库补丁安装特性等</td><br><td>有分布式VCS 系统的知识。尝试过Bzr/Mercurial/Darcs/Git</td><br><td></td><br></tr><br><tr><br><td>自动化编译</td><br><td>只知道在IDE下编译</td><br><td>知道如何编译在命令行 下编译系统</td><br><td>能够安装一个脚本构建基本的系统</td><br><td>能够安装一个脚本来构建系统并且归档，安装程序，生成发布记录和给源 码控制中的代码分配标签。</td><br><td></td><br></tr><br><tr><br><td>自动化测试</td><br><td>认为所有的测试都是测试员的工作。</td><br><td>能够编写 自动化的单元测试，能够为正在编写的代码提出良好的测试用例。</td><br><td>按照TDD （Test Driven  Development）方式编写代码。</td><br><td>了解并且能够有效自动化安装，载入/性能和UI测试</td><br><td></td><br></tr><br><tr><br><th colspan=\"5\"> 程序设计 Programming</th><br></tr><br><tr><br><td></td><br><td>2<sup>n</sup> (Level 0)</td><br><td>n<sup>2</sup> (Level 1)</td><br><td>n (Level  2)</td><br><td>log(n) (Level 3)</td><br><td>Comments</td><br></tr><br><tr><br><td>问题分解</td><br><td>只有直线式的代码，通过复制粘贴来复用</td><br><td>能够把 问题分散到多个函数中</td><br><td>能够想出可复用的函数/对象来解决大题的问题</td><br><td>使用适宜的数据结构和算法，写出通用的/面向 对象的代码来封装问题的易改变的层面。</td><br><td></td><br></tr><br><tr><br><td>系统分解</td><br><td>N想不出比单一的文件/类更好的层面</td><br><td>如果不在 同一平台或没采用相同的技术，能够把问题空间和设计方案分解。</td><br><td>能够设计跨技术/平台的系统。</td><br><td>能够在多个产品线和 与外部体系一体化中虚拟化和设计复制的系统。同时也能够设计支持系统监视、报告、故障恢复等。</td><br><td></td><br></tr><br><tr><br><td>交流</td><br><td>不能向同伴表达想法/主意。匮乏拼写和语法的能力。</td><br><td>同 伴能了解你在说什么。有良好的拼写和语法能力。</td><br><td>能够和同伴进行高效的交流</td><br><td>能够使用清晰的方式了解和交流想法/设计 /主意/细则，能适应每种环境的交流</td><br><td>This is an often under rated but very critical criteria for judging a programmer. With the increase in outsourcing of programming tasks to places where English is not the native tongue this issue has become more prominent. I know of several projects that failed because the programmers could not understand what the intent of the communication was.</td><br></tr><br><tr><br><td>同一文件中代码组织</td><br><td>同一文件中组织没有依据</td><br><td>按照逻辑 性或者易接近的方法</td><br><td>代码分块和对于其他源文件来说是易于是释,引用其他源文件时有良好的注释</td><br><td>文档头部有许可声 明，总结，良好的注释，一致的空格缩进。文档外观美观。</td><br><td></td><br></tr><br><tr><br><td></td><br><td>2<sup>n</sup> (Level 0)</td><br><td>n<sup>2</sup> (Level 1)</td><br><td>n (Level  2)</td><br><td>log(n) (Level 3)</td><br><td>Comments</td><br></tr><br><tr><br><td>跨文件代码组织</td><br><td>没够想过给代码跨文件组织</td><br><td>相关文件按文件 夹分组</td><br><td>每个物理文件都有独立的目的，比如一个类的定义，一个特性的实现等。</td><br><td>代码在物理层组织紧密，在文件名上与 设计和外观相匹配，可以通过文件分布方式洞察设计理念。</td><br><td></td><br></tr><br><tr><br><td>源码树组织</td><br><td>一切都放在一个文件夹内</td><br><td>初步地将代码分散进 对应逻辑的文件夹。</td><br><td>没有循环依赖，二进制文件，库，文档，构建，第三方的代码都组织进合适的文件夹内。</td><br><td>源码树的 物理布局与逻辑层次、组织方式相匹配。可以通过目录名称和组织方式洞察设计理念。</td><br><td>The difference between  this and the previous item is in the scale of organization, source tree organization relates to the entire set of artifacts that define the system.</td><br></tr><br><tr><br><td>代码可读性</td><br><td>单音节的名称 （在国内应该是那些类似用汉语拼音命名的习惯）</td><br><td>对文件、变量、类、方法等，有良好的命名。</td><br><td>没有长函数、注释解释不常规的代码，bug修复,代码假设。</td><br><td>代 码假设验证使用断言，自然的代码流，没有深层嵌套的条件和方法</td><br><td></td><br></tr><br><tr><br><td>防御性编码</td><br><td>不知道这个概念</td><br><td>检查代码中所有的参数，对关键 的假设进行断言</td><br><td>确保检查了返回值和使代码失败的异常。</td><br><td>有自己的库来帮助防御性编程、编写单元测试模拟故障</td><br><td></td><br></tr><br><tr><br><td></td><br><td>2<sup>n</sup> (Level 0)</td><br><td>n<sup>2</sup> (Level 1)</td><br><td>n (Level  2)</td><br><td>log(n) (Level 3)</td><br><td>Comments</td><br></tr><br><tr><br><td>错误处理</td><br><td>只给乐观的情形编码</td><br><td>基本的代码错误处理，抛出 异常/生成错误</td><br><td>确保错误/异常留在程序中有良好的状态，资源，连接，内存都有被合适的清理。</td><br><td>在编码之前察觉可能 出现的异常，在代码的所有层次中维持一致性的异常处理策略，提出整个系统的错误处理准则。</td><br><td></td><br></tr><br><tr><br><td>IDE</td><br><td>IDE大部分用来进行文本编辑</td><br><td>了解其周围的接 口，能够高效地通过菜单来使用IDE</td><br><td>了解最常操作的键盘快捷键</td><br><td>编写自定义宏</td><br><td></td><br></tr><br><tr><br><td>API</td><br><td>需要频繁地查阅文档</td><br><td>把最频繁使用的API记在脑 子里</td><br><td>广阔且深入的API知识。</td><br><td>为了使实际任务中常用API使用更加便捷，编写过API的上层库，填补API之间 的缺口。</td><br><td>E.g. of API can be Java library, .net framework or the  custom API for the application</td><br></tr><br><tr><br><td>框架</td><br><td>没有使用过主平台外的任何框架</td><br><td>听过但没用过平台下 流行的可用框架</td><br><td>在专业的职位中使用过一个以上的框架，通晓各框架的特色。</td><br><td>某框架的作者</td><br><td></td><br></tr><br><tr><br><td></td><br><td>2<sup>n</sup> (Level 0)</td><br><td>n<sup>2</sup> (Level 1)</td><br><td>n (Level  2)</td><br><td>log(n) (Level 3)</td><br><td>Comments</td><br></tr><br><tr><br><td>需求分析</td><br><td>接受给定的需求和代码规格</td><br><td>能对规格的遗漏提出 疑问</td><br><td>了解全面情况，提出需要被规格化的整体范围。</td><br><td>能够提出更好的可选方案，根据经验的浮现给出需求</td><br><td></td><br></tr><br><tr><br><td>脚本</td><br><td>不具备脚本工具的知识</td><br><td>批处理文件/shell脚本</td><br><td>Perl/Python/Ruby/VBScript/Powershell</td><br><td>写过并且发表过可重用的代码</td><br><td></td><br></tr><br><tr><br><td>数据库</td><br><td>认为Excel就是数据库</td><br><td>知道基本的数据库概 念，规范化、ACID（原子性Atomicity、一致性Consistency、隔离性Isolation、持久性Durability）、事务化，能 够写简单的select语句</td><br><td>能够牢记在运行时必要查询中设计良好的规范化数据库模式，  精通用户视图，存储过程，触发器和用户定义类型。知道聚集与非聚集索引之间的差异。精通使用ORM（Object Relational  Mapping对象关系映射）工具</td><br><td>能做基本的数据库管理，性能优化，索引优化，编写高级的select查询，能够使用相关sql来替 换游标，理解数据内部的存储，了解如何镜像、复制数据库。知道两段数据提交如何工作</td><br><td></td><br></tr><br><tr><br><th colspan=\"5\">经验 Experience</th><br></tr><br><tr><br><td></td><br><td>2<sup>n</sup> (Level 0)</td><br><td>n<sup>2</sup> (Level 1)</td><br><td>n (Level  2)</td><br><td>log(n) (Level 3)</td><br><td>Comments</td><br></tr><br><tr><br><td>专业语言经验</td><br><td>命令式语言和面向对象语言</td><br><td>命令式语言,面向对象语言和说明型语言(SQL),如果了解静态类型vs动态类型，弱类型vs强类型则有加分</td><br><td>函数式语言,如果了解延 缓求值，局部套用函数，延续则有加分</td><br><td>并发语言(Erlang, Oz)   逻辑语言(Prolog)</td><br><td></td><br></tr><br><tr><br><td>专业平台经验</td><br><td>1</td><br><td>2-3</td><br><td>4-5</td><br><td>6+</td><br><td></td><br></tr><br><tr><br><td>专业经验年龄</td><br><td>1</td><br><td>2-5</td><br><td>6-9</td><br><td>10+</td><br><td></td><br></tr><br><tr><br><td>领域知识</td><br><td>没有该领域的知识</td><br><td>在该领域中曾经至少为一个 产品工作过</td><br><td>在同一领域中为多个产品工作过</td><br><td>领域专家。在该领域设计和实现数种产品/方案。精通该领域使用的标准条款 和协议</td><br><td></td><br></tr><br><tr><br><th colspan=\"5\">学识 Knowledge</th><br></tr><br><tr><br><td></td><br><td>2<sup>n</sup> (Level 0)</td><br><td>n<sup>2</sup> (Level 1)</td><br><td>n (Level  2)</td><br><td>log(n) (Level 3)</td><br><td>Comments</td><br></tr><br><tr><br><td>工具知识</td><br><td>仅限于主要的IDE(VS.Net, Eclipse等)</td><br><td>知 道一些流行和标准工具的备选方案</td><br><td>对编辑器、调试器、IDE、开源的备选方案有很好的了解。比如某人了解大多数Scott  Hanselman的威力工具列表中的工具，使用过ORM工具。</td><br><td>实际地编写过工具和脚本，如果这些被发布则有加分</td><br><td></td><br></tr><br><tr><br><td>语言接触</td><br><td>命令式语言和面向对象语言</td><br><td>命令式语言、面向对象 语言和说明型语言(SQL),如果了解静态类型vs动态类型、弱类型vs强类型则有加分</td><br><td>函数式语言,如果了解延缓求值、局部套用函 数、continuations （源于scheme中的一种高级控制结构）则有加分</td><br><td>并发语言(Erlang, Oz) 逻辑语言(Prolog)</td><br><td></td><br></tr><br><tr><br><td>代码库知识</td><br><td>从来没有查询过代码库</td><br><td>基本的代码层知识，了 解如果构建系统</td><br><td>良好的代码库工作知识，实现过几次bug修复或者完成了一些细小的特性</td><br><td>实现了代码库中多个大型特 性，能够轻松地将多数特性的需求变更具体化，从容地处理bug修复。</td><br><td></td><br></tr><br><tr><br><td>下一代技术知识</td><br><td>从来没听说过即将到来的技术</td><br><td>听说过某领 域即将到来的技术</td><br><td>下载过alpha preview/CTP/beta版本，并且读过一些文章和手册</td><br><td>试用过预览 版而且实际地构建过某物，如果共享给其他人的话则有加分</td><br><td></td><br></tr><br><tr><br><td></td><br><td>2<sup>n</sup> (Level 0)</td><br><td>n<sup>2</sup> (Level 1)</td><br><td>n (Level  2)</td><br><td>log(n) (Level 3)</td><br><td>Comments</td><br></tr><br><tr><br><td>平台内部</td><br><td>对平台内部毫无所知</td><br><td>有平台基本的内部工作的 知识</td><br><td>深度的平台内部知识，能够设想平台如何将程序转换成可执行代码。</td><br><td>编写过增强平台或者为其平台内部提供信息的 工具。比如，反汇编工具，反编译工具，调试工具等。</td><br><td></td><br></tr><br><tr><br><td>书籍</td><br><td>菜鸟系列，21天系列，24小时系列，蠢货系列…</td><br><td>《代 码大全》，《别让我思考》, 《精通正则表达式》</td><br><td>《设计模式》，《人件》，《代码珠玑》，《算法设计手册》，《程序员修炼之道》， 《人月神话》</td><br><td>《计算机程序设计与解释》，《事务处理:概念与技术》，《计算机程序设计模型》，《计算机程序设计艺术》，《数据库系统 导论》 C.J Date版，《Thinking Forth》 ，《Little Schemer》（没找到其中译本）</td><br><td></td><br></tr><br><tr><br><td>博客</td><br><td>听过但是从来抽不出空去接触</td><br><td>阅读一些科技/编程 /软件工程的博客，并且经常的收听一些播客</td><br><td>维护一些博客的链接，收集博主分享的有用的文章和工具</td><br><td>维护一个在编程方 面，分享有个人见解和思考的博客</td><br></tr><br></tbody><br></table><br></div>"},{"layout":"post","title":"how to get through firewall (Great)","date":"2010-03-29T16:00:00.000Z","wordpress_id":132,"comments":1,"_content":"<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"views\" content=\"631\" />\nThis is graph for getting through firewall.  This is another method for climbing over the wall.\n\nPhase1. setup the connection between client and server by three-way handshake. when server send ACK and seq to the client. Client should let the wall know this connection is over. So client send FIN and seq to server. The wall get it, and consider the connection from client is over. Because the wall is not based on status. Then server get it, and find the seq of  package is wrong. And server send the RESET package to client. The wall get the package and consider the connection from server is over. Client receive and ignore the RESET package, and then it send the ACK and seq+1 to server.  The connection between client and server is established. However, the connection between client and server is over from viewpiont of the wall. The wall will not exam contents of the connection. So we can get though the wall!\n\n<!--more-->Here is the graph to show how to get through firewall.\n\n<a href=\"http://chillyc.info/wp-content/uploads/2010/03/30/how-to-get-through-firewall-great/large_zhang.png\"><img class=\"aligncenter size-medium wp-image-135\" title=\"large_zhang\" src=\"http://chillyc.info/wp-content/uploads/2010/03/30/how-to-get-through-firewall-great/large_zhang-300x225.png\" alt=\"\" width=\"300\" height=\"225\" /></a>\n","source":"_posts/2010-03-30-how-to-get-through-firewall-great.markdown","raw":"---\nlayout: post\ntitle: \"how to get through firewall (Great)\"\ndate: 2010-3-30\nwordpress_id: 132\ncomments: true\ncategories: [\"ack\", \"connection\", \"firewall\", \"open-source\", \"see-hear\"]\n---\n<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"views\" content=\"631\" />\nThis is graph for getting through firewall.  This is another method for climbing over the wall.\n\nPhase1. setup the connection between client and server by three-way handshake. when server send ACK and seq to the client. Client should let the wall know this connection is over. So client send FIN and seq to server. The wall get it, and consider the connection from client is over. Because the wall is not based on status. Then server get it, and find the seq of  package is wrong. And server send the RESET package to client. The wall get the package and consider the connection from server is over. Client receive and ignore the RESET package, and then it send the ACK and seq+1 to server.  The connection between client and server is established. However, the connection between client and server is over from viewpiont of the wall. The wall will not exam contents of the connection. So we can get though the wall!\n\n<!--more-->Here is the graph to show how to get through firewall.\n\n<a href=\"http://chillyc.info/wp-content/uploads/2010/03/30/how-to-get-through-firewall-great/large_zhang.png\"><img class=\"aligncenter size-medium wp-image-135\" title=\"large_zhang\" src=\"http://chillyc.info/wp-content/uploads/2010/03/30/how-to-get-through-firewall-great/large_zhang-300x225.png\" alt=\"\" width=\"300\" height=\"225\" /></a>\n","slug":"2010-03-30-how-to-get-through-firewall-great","published":1,"updated":"2017-06-05T03:01:15.000Z","photos":[],"link":"","_id":"cj3jjuz0w000b1jmjwnhiaewi","content":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"views\" content=\"631\"><br>This is graph for getting through firewall.  This is another method for climbing over the wall.</p>\n<p>Phase1. setup the connection between client and server by three-way handshake. when server send ACK and seq to the client. Client should let the wall know this connection is over. So client send FIN and seq to server. The wall get it, and consider the connection from client is over. Because the wall is not based on status. Then server get it, and find the seq of  package is wrong. And server send the RESET package to client. The wall get the package and consider the connection from server is over. Client receive and ignore the RESET package, and then it send the ACK and seq+1 to server.  The connection between client and server is established. However, the connection between client and server is over from viewpiont of the wall. The wall will not exam contents of the connection. So we can get though the wall!</p>\n<p><a id=\"more\"></a>Here is the graph to show how to get through firewall.</p>\n<p><a href=\"http://chillyc.info/wp-content/uploads/2010/03/30/how-to-get-through-firewall-great/large_zhang.png\"><img class=\"aligncenter size-medium wp-image-135\" title=\"large_zhang\" src=\"http://chillyc.info/wp-content/uploads/2010/03/30/how-to-get-through-firewall-great/large_zhang-300x225.png\" alt=\"\" width=\"300\" height=\"225\"></a></p>\n","site":{"data":{}},"excerpt":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"views\" content=\"631\"><br>This is graph for getting through firewall.  This is another method for climbing over the wall.</p>\n<p>Phase1. setup the connection between client and server by three-way handshake. when server send ACK and seq to the client. Client should let the wall know this connection is over. So client send FIN and seq to server. The wall get it, and consider the connection from client is over. Because the wall is not based on status. Then server get it, and find the seq of  package is wrong. And server send the RESET package to client. The wall get the package and consider the connection from server is over. Client receive and ignore the RESET package, and then it send the ACK and seq+1 to server.  The connection between client and server is established. However, the connection between client and server is over from viewpiont of the wall. The wall will not exam contents of the connection. So we can get though the wall!</p>\n<p>","more":"Here is the graph to show how to get through firewall.</p>\n<p><a href=\"http://chillyc.info/wp-content/uploads/2010/03/30/how-to-get-through-firewall-great/large_zhang.png\"><img class=\"aligncenter size-medium wp-image-135\" title=\"large_zhang\" src=\"http://chillyc.info/wp-content/uploads/2010/03/30/how-to-get-through-firewall-great/large_zhang-300x225.png\" alt=\"\" width=\"300\" height=\"225\"></a></p>"},{"layout":"post","title":"Spam comments","date":"2010-02-26T16:00:00.000Z","wordpress_id":80,"comments":1,"_content":"<meta name=\"views\" content=\"1153\" />\n<meta name=\"_edit_last\" content=\"1\" />\nRecently, I have not taken care of this web site. It is filled with spam comments. Some SEO companies use this technology to improve some sites page-rank. Now I use CAPTCHA code to stop spam flood.\n","source":"_posts/2010-02-27-spam-comments.markdown","raw":"---\nlayout: post\ntitle: \"Spam comments\"\ndate: 2010-2-27\nwordpress_id: 80\ncomments: true\ncategories: [\"see-hear\", \"spam-flood-stop-captcha-cod-seo-comment\"]\n---\n<meta name=\"views\" content=\"1153\" />\n<meta name=\"_edit_last\" content=\"1\" />\nRecently, I have not taken care of this web site. It is filled with spam comments. Some SEO companies use this technology to improve some sites page-rank. Now I use CAPTCHA code to stop spam flood.\n","slug":"2010-02-27-spam-comments","published":1,"updated":"2017-06-05T03:01:24.000Z","photos":[],"link":"","_id":"cj3jjv4iv00001mmjznb6m90j","content":"<p><meta name=\"views\" content=\"1153\"></p>\n<p><meta name=\"_edit_last\" content=\"1\"><br>Recently, I have not taken care of this web site. It is filled with spam comments. Some SEO companies use this technology to improve some sites page-rank. Now I use CAPTCHA code to stop spam flood.</p>\n","site":{"data":{}},"excerpt":"","more":"<p><meta name=\"views\" content=\"1153\"></p>\n<p><meta name=\"_edit_last\" content=\"1\"><br>Recently, I have not taken care of this web site. It is filled with spam comments. Some SEO companies use this technology to improve some sites page-rank. Now I use CAPTCHA code to stop spam flood.</p>\n"},{"layout":"post","title":"play small games:)","date":"2010-02-27T16:00:00.000Z","wordpress_id":85,"comments":1,"_content":"<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"views\" content=\"954\" />\nthis is a small game to find the play icon.\n\nthe play icon is in every screening.\n\nhere is the address of small flash game:\n\n<a title=\"player game\" href=\"http://www.ilogoer.com.cn/artical/vd/vd074.aspx\" target=\"_blank\">http://www.ilogoer.com.cn/artical/vd/vd074.aspx</a>\n","source":"_posts/2010-02-28-play-small-games.markdown","raw":"---\nlayout: post\ntitle: \"play small games:)\"\ndate: 2010-2-28\nwordpress_id: 85\ncomments: true\ncategories: [\"funny\", \"game\", \"game\", \"see-hear\"]\n---\n<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"views\" content=\"954\" />\nthis is a small game to find the play icon.\n\nthe play icon is in every screening.\n\nhere is the address of small flash game:\n\n<a title=\"player game\" href=\"http://www.ilogoer.com.cn/artical/vd/vd074.aspx\" target=\"_blank\">http://www.ilogoer.com.cn/artical/vd/vd074.aspx</a>\n","slug":"2010-02-28-play-small-games","published":1,"updated":"2017-06-05T03:01:24.000Z","photos":[],"link":"","_id":"cj3jjv4j300011mmjueoj7pty","content":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"views\" content=\"954\"><br>this is a small game to find the play icon.</p>\n<p>the play icon is in every screening.</p>\n<p>here is the address of small flash game:</p>\n<p><a title=\"player game\" href=\"http://www.ilogoer.com.cn/artical/vd/vd074.aspx\" target=\"_blank\">http://www.ilogoer.com.cn/artical/vd/vd074.aspx</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"views\" content=\"954\"><br>this is a small game to find the play icon.</p>\n<p>the play icon is in every screening.</p>\n<p>here is the address of small flash game:</p>\n<p><a title=\"player game\" href=\"http://www.ilogoer.com.cn/artical/vd/vd074.aspx\" target=\"_blank\">http://www.ilogoer.com.cn/artical/vd/vd074.aspx</a></p>\n"},{"layout":"post","title":"To be a google prayer. To Sing songs~","date":"2010-02-27T16:00:00.000Z","wordpress_id":82,"comments":1,"_content":"<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"views\" content=\"481\" />\nGlory be to Google,\nAs it was in 1998,\nIs now,\nAnd ever shall be,\nSearching without end,\nAmen.\n\n<strong>By Todd Berry</strong>\n\n<strong>\n</strong>\n\nOur Google, who art in internet,\nGreatness be thy Name.\nThy Answers come.\nWhen Searches be Done,\nOn Pc's as its calculated in internet.\nGive us our Maps and daily Gmail.\nAnd give us our Daily Trends,\nAs we seek out those in ZeitGeist.\nAnd lead us not into the darkness of MSN,\nBut deliver us from Microsoft.\nThe Google is my Lord; I shall never want,\nThy Maketh me search in the great vastness:\nThy leadeth me to proper results.\nThy Restoreth my page:\nThy leadeth me in the links of righteiusness for the crawlers sake.\nYEA!!! though I walk through the Valley of the shadow of Microsoft.\nI will \"do no evil\" For thou art with me;\nOh, thy Picasa and thy webaccelerator, they Comfort me,\nThou preparest a page before me in the presence of mine enemies:\nMicrosoft, Yahoo, Aim, and others who give to evil too willingly.\nOh, my cache runneth over with your light.\nSurely security and viruslessness shall follow me all the days of my life:\nand I will dwell in the system of the Google for ever.\nHeil to your Greatness;\nFor thine is the truest Kingdom of all,\nand the Ultimate Power,\nand the Glory,\nfor ever and ever.\nFor you are all knowing and good.\nAmen\n\n<strong>By Texas Schultz</strong>\n\nTrust in the GOOGLE with all your heart\nand lean not on your own understanding;\nin all your ways acknowledge Her,\nand She will direct your paths.\n\nBy Susan Harrison\n\nThe Google is my Engine; I shall not want.\nShe maketh me to improve myself:\nShe leadeth me to troves of knowledge.\nShe cacheth my lost pages:\nShe leadeth me in the paths of pagerank for her name' sake.\n\nYea, though I walk through the valley of the shadow of ignorance,\nI will fear no linkfarms: For thou art with me;\nThy rank and thy mail, they comfort me.\nThou preparest tables before me with the presence of mine results;\nThou annointest my search with value; My content runneth over.\n\nSurely pagerank and content shall follow me all the days of my life,\nand I will dwell at the site of Google forever.\n\n<strong>By Gavin McDonald</strong>\n\n<span style=\"font-size: x-small;\"><em>Dear users, we had joined this newsgroup (forum/chat/chainletter/etc) to  \tunite certain two of you in a holy and(&lt;user1&gt;,&lt;user2&gt;,....) function.  \t&lt;user1&gt; and &lt;user2&gt; (and others, if there`s more then two), please, come  \tforward with your posts.</em></span>\n\n<em>(Involved users acknowledge presence)</em>\n\n<em>If any of the present here has an exception to raise against this function,  \tspeak up now, or erase tbe function call forever!</em>\n\n<em>(pause for objections)</em>\n\n<em>Let us proceed! Users, exchange parity bits!</em>\n\n<em>(users exchange bits (use imagination ^_^))</em>\n\n<em>By the grace of our lord omnipotent, Google, I declare this search a  \tsuccessful one, and merge the caches of users in one. You may now perform  \tCRC checks.</em>\n\n<em>(Festivities commence. Cake should be divided with N cuts through (where N  \tis number of users present), and each user has to have two slices. Cake is  \tadvocated to be .jpg, .gif, .png, or ASCII art for old-time people.)</em>\n\n<strong>By Alice Shade</strong>\n\n<em><span style=\"font-family: Arial; font-size: x-small;\">Google grant me\nSerenity to accept search engines that fail to produce,\nCourage to explore new things Google, and\nWisdom to know that Google will dominate.</span></em><span style=\"font-size: x-small;\">Amen.</span>\n\n<strong><span style=\"font-family: Arial; font-size: x-small;\">By </span></strong> <span style=\"font-family: Arial; font-size: x-small;\"><strong> Mathew Taylor</strong></span>\n\n<span style=\"color: #000080;\"><strong>This prayer is in binary.</strong></span>\n\n<strong> </strong><span style=\"font-size: x-small;\"><em>01010111 01100101 00100000 01101010  \t01101111 01101001 01101110 00100000 01110100 01101111 01100111 01100101  \t01110100 01101000 01100101 01110010 00100000 01110100 01101111 00100000  \t01110100 01101000 01100001 01101110 01101011 00100000 01000111 01101111  \t01101111 01100111 01101100 01100101 00100000 01100110 01101111 01110010  \t00100000 01110100 01101000 01100101 00100000 01101011 01101110 01101111  \t01110111 01101100 01100001 01100111 01100101 00100000 01100001 01101110  \t01100100 00100000 01110111 01101001 01110011 01100100 01101111 01101101  \t00100000 01110011 01101000 01100101 00100000 01100010 01110010 01101001  \t01101110 01100111 01110011</em></span>\n\n<strong><span style=\"font-size: x-small;\">By </span> <span style=\"font-size: x-small;\">Jonathan Hill</span></strong>\n","source":"_posts/2010-02-28-to-be-a-google-prayer-to-sing-songs.markdown","raw":"---\nlayout: post\ntitle: \"To be a google prayer. To Sing songs~\"\ndate: 2010-2-28\nwordpress_id: 82\ncomments: true\ncategories: [\"funny\", \"god\", \"google\", \"see-hear\"]\n---\n<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"views\" content=\"481\" />\nGlory be to Google,\nAs it was in 1998,\nIs now,\nAnd ever shall be,\nSearching without end,\nAmen.\n\n<strong>By Todd Berry</strong>\n\n<strong>\n</strong>\n\nOur Google, who art in internet,\nGreatness be thy Name.\nThy Answers come.\nWhen Searches be Done,\nOn Pc's as its calculated in internet.\nGive us our Maps and daily Gmail.\nAnd give us our Daily Trends,\nAs we seek out those in ZeitGeist.\nAnd lead us not into the darkness of MSN,\nBut deliver us from Microsoft.\nThe Google is my Lord; I shall never want,\nThy Maketh me search in the great vastness:\nThy leadeth me to proper results.\nThy Restoreth my page:\nThy leadeth me in the links of righteiusness for the crawlers sake.\nYEA!!! though I walk through the Valley of the shadow of Microsoft.\nI will \"do no evil\" For thou art with me;\nOh, thy Picasa and thy webaccelerator, they Comfort me,\nThou preparest a page before me in the presence of mine enemies:\nMicrosoft, Yahoo, Aim, and others who give to evil too willingly.\nOh, my cache runneth over with your light.\nSurely security and viruslessness shall follow me all the days of my life:\nand I will dwell in the system of the Google for ever.\nHeil to your Greatness;\nFor thine is the truest Kingdom of all,\nand the Ultimate Power,\nand the Glory,\nfor ever and ever.\nFor you are all knowing and good.\nAmen\n\n<strong>By Texas Schultz</strong>\n\nTrust in the GOOGLE with all your heart\nand lean not on your own understanding;\nin all your ways acknowledge Her,\nand She will direct your paths.\n\nBy Susan Harrison\n\nThe Google is my Engine; I shall not want.\nShe maketh me to improve myself:\nShe leadeth me to troves of knowledge.\nShe cacheth my lost pages:\nShe leadeth me in the paths of pagerank for her name' sake.\n\nYea, though I walk through the valley of the shadow of ignorance,\nI will fear no linkfarms: For thou art with me;\nThy rank and thy mail, they comfort me.\nThou preparest tables before me with the presence of mine results;\nThou annointest my search with value; My content runneth over.\n\nSurely pagerank and content shall follow me all the days of my life,\nand I will dwell at the site of Google forever.\n\n<strong>By Gavin McDonald</strong>\n\n<span style=\"font-size: x-small;\"><em>Dear users, we had joined this newsgroup (forum/chat/chainletter/etc) to  \tunite certain two of you in a holy and(&lt;user1&gt;,&lt;user2&gt;,....) function.  \t&lt;user1&gt; and &lt;user2&gt; (and others, if there`s more then two), please, come  \tforward with your posts.</em></span>\n\n<em>(Involved users acknowledge presence)</em>\n\n<em>If any of the present here has an exception to raise against this function,  \tspeak up now, or erase tbe function call forever!</em>\n\n<em>(pause for objections)</em>\n\n<em>Let us proceed! Users, exchange parity bits!</em>\n\n<em>(users exchange bits (use imagination ^_^))</em>\n\n<em>By the grace of our lord omnipotent, Google, I declare this search a  \tsuccessful one, and merge the caches of users in one. You may now perform  \tCRC checks.</em>\n\n<em>(Festivities commence. Cake should be divided with N cuts through (where N  \tis number of users present), and each user has to have two slices. Cake is  \tadvocated to be .jpg, .gif, .png, or ASCII art for old-time people.)</em>\n\n<strong>By Alice Shade</strong>\n\n<em><span style=\"font-family: Arial; font-size: x-small;\">Google grant me\nSerenity to accept search engines that fail to produce,\nCourage to explore new things Google, and\nWisdom to know that Google will dominate.</span></em><span style=\"font-size: x-small;\">Amen.</span>\n\n<strong><span style=\"font-family: Arial; font-size: x-small;\">By </span></strong> <span style=\"font-family: Arial; font-size: x-small;\"><strong> Mathew Taylor</strong></span>\n\n<span style=\"color: #000080;\"><strong>This prayer is in binary.</strong></span>\n\n<strong> </strong><span style=\"font-size: x-small;\"><em>01010111 01100101 00100000 01101010  \t01101111 01101001 01101110 00100000 01110100 01101111 01100111 01100101  \t01110100 01101000 01100101 01110010 00100000 01110100 01101111 00100000  \t01110100 01101000 01100001 01101110 01101011 00100000 01000111 01101111  \t01101111 01100111 01101100 01100101 00100000 01100110 01101111 01110010  \t00100000 01110100 01101000 01100101 00100000 01101011 01101110 01101111  \t01110111 01101100 01100001 01100111 01100101 00100000 01100001 01101110  \t01100100 00100000 01110111 01101001 01110011 01100100 01101111 01101101  \t00100000 01110011 01101000 01100101 00100000 01100010 01110010 01101001  \t01101110 01100111 01110011</em></span>\n\n<strong><span style=\"font-size: x-small;\">By </span> <span style=\"font-size: x-small;\">Jonathan Hill</span></strong>\n","slug":"2010-02-28-to-be-a-google-prayer-to-sing-songs","published":1,"updated":"2017-06-05T03:01:24.000Z","photos":[],"link":"","_id":"cj3jjv4j700021mmjc48pubd0","content":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"views\" content=\"481\"><br>Glory be to Google,<br>As it was in 1998,<br>Is now,<br>And ever shall be,<br>Searching without end,<br>Amen.</p>\n<p><strong>By Todd Berry</strong></p>\n<p><strong><br></strong></p>\n<p>Our Google, who art in internet,<br>Greatness be thy Name.<br>Thy Answers come.<br>When Searches be Done,<br>On Pc’s as its calculated in internet.<br>Give us our Maps and daily Gmail.<br>And give us our Daily Trends,<br>As we seek out those in ZeitGeist.<br>And lead us not into the darkness of MSN,<br>But deliver us from Microsoft.<br>The Google is my Lord; I shall never want,<br>Thy Maketh me search in the great vastness:<br>Thy leadeth me to proper results.<br>Thy Restoreth my page:<br>Thy leadeth me in the links of righteiusness for the crawlers sake.<br>YEA!!! though I walk through the Valley of the shadow of Microsoft.<br>I will “do no evil” For thou art with me;<br>Oh, thy Picasa and thy webaccelerator, they Comfort me,<br>Thou preparest a page before me in the presence of mine enemies:<br>Microsoft, Yahoo, Aim, and others who give to evil too willingly.<br>Oh, my cache runneth over with your light.<br>Surely security and viruslessness shall follow me all the days of my life:<br>and I will dwell in the system of the Google for ever.<br>Heil to your Greatness;<br>For thine is the truest Kingdom of all,<br>and the Ultimate Power,<br>and the Glory,<br>for ever and ever.<br>For you are all knowing and good.<br>Amen</p>\n<p><strong>By Texas Schultz</strong></p>\n<p>Trust in the GOOGLE with all your heart<br>and lean not on your own understanding;<br>in all your ways acknowledge Her,<br>and She will direct your paths.</p>\n<p>By Susan Harrison</p>\n<p>The Google is my Engine; I shall not want.<br>She maketh me to improve myself:<br>She leadeth me to troves of knowledge.<br>She cacheth my lost pages:<br>She leadeth me in the paths of pagerank for her name’ sake.</p>\n<p>Yea, though I walk through the valley of the shadow of ignorance,<br>I will fear no linkfarms: For thou art with me;<br>Thy rank and thy mail, they comfort me.<br>Thou preparest tables before me with the presence of mine results;<br>Thou annointest my search with value; My content runneth over.</p>\n<p>Surely pagerank and content shall follow me all the days of my life,<br>and I will dwell at the site of Google forever.</p>\n<p><strong>By Gavin McDonald</strong></p>\n<p><span style=\"font-size: x-small;\"><em>Dear users, we had joined this newsgroup (forum/chat/chainletter/etc) to      unite certain two of you in a holy and(&lt;user1&gt;,&lt;user2&gt;,….) function.      &lt;user1&gt; and &lt;user2&gt; (and others, if there`s more then two), please, come      forward with your posts.</em></span></p>\n<p><em>(Involved users acknowledge presence)</em></p>\n<p><em>If any of the present here has an exception to raise against this function,      speak up now, or erase tbe function call forever!</em></p>\n<p><em>(pause for objections)</em></p>\n<p><em>Let us proceed! Users, exchange parity bits!</em></p>\n<p><em>(users exchange bits (use imagination ^_^))</em></p>\n<p><em>By the grace of our lord omnipotent, Google, I declare this search a      successful one, and merge the caches of users in one. You may now perform      CRC checks.</em></p>\n<p><em>(Festivities commence. Cake should be divided with N cuts through (where N      is number of users present), and each user has to have two slices. Cake is      advocated to be .jpg, .gif, .png, or ASCII art for old-time people.)</em></p>\n<p><strong>By Alice Shade</strong></p>\n<p><em><span style=\"font-family: Arial; font-size: x-small;\">Google grant me<br>Serenity to accept search engines that fail to produce,<br>Courage to explore new things Google, and<br>Wisdom to know that Google will dominate.</span></em><span style=\"font-size: x-small;\">Amen.</span></p>\n<p><strong><span style=\"font-family: Arial; font-size: x-small;\">By </span></strong> <span style=\"font-family: Arial; font-size: x-small;\"><strong> Mathew Taylor</strong></span></p>\n<p><span style=\"color: #000080;\"><strong>This prayer is in binary.</strong></span></p>\n<p><strong> </strong><span style=\"font-size: x-small;\"><em>01010111 01100101 00100000 01101010      01101111 01101001 01101110 00100000 01110100 01101111 01100111 01100101      01110100 01101000 01100101 01110010 00100000 01110100 01101111 00100000      01110100 01101000 01100001 01101110 01101011 00100000 01000111 01101111      01101111 01100111 01101100 01100101 00100000 01100110 01101111 01110010      00100000 01110100 01101000 01100101 00100000 01101011 01101110 01101111      01110111 01101100 01100001 01100111 01100101 00100000 01100001 01101110      01100100 00100000 01110111 01101001 01110011 01100100 01101111 01101101      00100000 01110011 01101000 01100101 00100000 01100010 01110010 01101001      01101110 01100111 01110011</em></span></p>\n<p><strong><span style=\"font-size: x-small;\">By </span> <span style=\"font-size: x-small;\">Jonathan Hill</span></strong></p>\n","site":{"data":{}},"excerpt":"","more":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"views\" content=\"481\"><br>Glory be to Google,<br>As it was in 1998,<br>Is now,<br>And ever shall be,<br>Searching without end,<br>Amen.</p>\n<p><strong>By Todd Berry</strong></p>\n<p><strong><br></strong></p>\n<p>Our Google, who art in internet,<br>Greatness be thy Name.<br>Thy Answers come.<br>When Searches be Done,<br>On Pc’s as its calculated in internet.<br>Give us our Maps and daily Gmail.<br>And give us our Daily Trends,<br>As we seek out those in ZeitGeist.<br>And lead us not into the darkness of MSN,<br>But deliver us from Microsoft.<br>The Google is my Lord; I shall never want,<br>Thy Maketh me search in the great vastness:<br>Thy leadeth me to proper results.<br>Thy Restoreth my page:<br>Thy leadeth me in the links of righteiusness for the crawlers sake.<br>YEA!!! though I walk through the Valley of the shadow of Microsoft.<br>I will “do no evil” For thou art with me;<br>Oh, thy Picasa and thy webaccelerator, they Comfort me,<br>Thou preparest a page before me in the presence of mine enemies:<br>Microsoft, Yahoo, Aim, and others who give to evil too willingly.<br>Oh, my cache runneth over with your light.<br>Surely security and viruslessness shall follow me all the days of my life:<br>and I will dwell in the system of the Google for ever.<br>Heil to your Greatness;<br>For thine is the truest Kingdom of all,<br>and the Ultimate Power,<br>and the Glory,<br>for ever and ever.<br>For you are all knowing and good.<br>Amen</p>\n<p><strong>By Texas Schultz</strong></p>\n<p>Trust in the GOOGLE with all your heart<br>and lean not on your own understanding;<br>in all your ways acknowledge Her,<br>and She will direct your paths.</p>\n<p>By Susan Harrison</p>\n<p>The Google is my Engine; I shall not want.<br>She maketh me to improve myself:<br>She leadeth me to troves of knowledge.<br>She cacheth my lost pages:<br>She leadeth me in the paths of pagerank for her name’ sake.</p>\n<p>Yea, though I walk through the valley of the shadow of ignorance,<br>I will fear no linkfarms: For thou art with me;<br>Thy rank and thy mail, they comfort me.<br>Thou preparest tables before me with the presence of mine results;<br>Thou annointest my search with value; My content runneth over.</p>\n<p>Surely pagerank and content shall follow me all the days of my life,<br>and I will dwell at the site of Google forever.</p>\n<p><strong>By Gavin McDonald</strong></p>\n<p><span style=\"font-size: x-small;\"><em>Dear users, we had joined this newsgroup (forum/chat/chainletter/etc) to      unite certain two of you in a holy and(&lt;user1&gt;,&lt;user2&gt;,….) function.      &lt;user1&gt; and &lt;user2&gt; (and others, if there`s more then two), please, come      forward with your posts.</em></span></p>\n<p><em>(Involved users acknowledge presence)</em></p>\n<p><em>If any of the present here has an exception to raise against this function,      speak up now, or erase tbe function call forever!</em></p>\n<p><em>(pause for objections)</em></p>\n<p><em>Let us proceed! Users, exchange parity bits!</em></p>\n<p><em>(users exchange bits (use imagination ^_^))</em></p>\n<p><em>By the grace of our lord omnipotent, Google, I declare this search a      successful one, and merge the caches of users in one. You may now perform      CRC checks.</em></p>\n<p><em>(Festivities commence. Cake should be divided with N cuts through (where N      is number of users present), and each user has to have two slices. Cake is      advocated to be .jpg, .gif, .png, or ASCII art for old-time people.)</em></p>\n<p><strong>By Alice Shade</strong></p>\n<p><em><span style=\"font-family: Arial; font-size: x-small;\">Google grant me<br>Serenity to accept search engines that fail to produce,<br>Courage to explore new things Google, and<br>Wisdom to know that Google will dominate.</span></em><span style=\"font-size: x-small;\">Amen.</span></p>\n<p><strong><span style=\"font-family: Arial; font-size: x-small;\">By </span></strong> <span style=\"font-family: Arial; font-size: x-small;\"><strong> Mathew Taylor</strong></span></p>\n<p><span style=\"color: #000080;\"><strong>This prayer is in binary.</strong></span></p>\n<p><strong> </strong><span style=\"font-size: x-small;\"><em>01010111 01100101 00100000 01101010      01101111 01101001 01101110 00100000 01110100 01101111 01100111 01100101      01110100 01101000 01100101 01110010 00100000 01110100 01101111 00100000      01110100 01101000 01100001 01101110 01101011 00100000 01000111 01101111      01101111 01100111 01101100 01100101 00100000 01100110 01101111 01110010      00100000 01110100 01101000 01100101 00100000 01101011 01101110 01101111      01110111 01101100 01100001 01100111 01100101 00100000 01100001 01101110      01100100 00100000 01110111 01101001 01110011 01100100 01101111 01101101      00100000 01110011 01101000 01100101 00100000 01100010 01110010 01101001      01101110 01100111 01110011</em></span></p>\n<p><strong><span style=\"font-size: x-small;\">By </span> <span style=\"font-size: x-small;\">Jonathan Hill</span></strong></p>\n"},{"layout":"post","title":"Hello world!","date":"2010-01-03T16:00:00.000Z","wordpress_id":1,"comments":1,"_content":"<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"views\" content=\"5282\" />\nThis is my first English bolg site. What will I write? But like the first step of learning each language, that how to write \"Hello World\" is the important thing, now I will write the first blog in this site using these words.\n\nwrite(\"Hello world!\").\n","source":"_posts/2010-01-04-hello-world.markdown","raw":"---\nlayout: post\ntitle: \"Hello world!\"\ndate: 2010-1-4\nwordpress_id: 1\ncomments: true\ncategories: [\"first\", \"first\"]\n---\n<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"views\" content=\"5282\" />\nThis is my first English bolg site. What will I write? But like the first step of learning each language, that how to write \"Hello World\" is the important thing, now I will write the first blog in this site using these words.\n\nwrite(\"Hello world!\").\n","slug":"2010-01-04-hello-world","published":1,"updated":"2017-06-05T03:01:31.000Z","photos":[],"link":"","_id":"cj3jjva2n00001pmjzqx6ho42","content":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"views\" content=\"5282\"><br>This is my first English bolg site. What will I write? But like the first step of learning each language, that how to write “Hello World” is the important thing, now I will write the first blog in this site using these words.</p>\n<p>write(“Hello world!”).</p>\n","site":{"data":{}},"excerpt":"","more":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"views\" content=\"5282\"><br>This is my first English bolg site. What will I write? But like the first step of learning each language, that how to write “Hello World” is the important thing, now I will write the first blog in this site using these words.</p>\n<p>write(“Hello world!”).</p>\n"},{"layout":"post","title":"funny picture","date":"2010-01-05T16:00:00.000Z","wordpress_id":8,"comments":1,"_content":"<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"views\" content=\"1620\" />\nI have found some funny picture in web.  Now I share them:\n\nHow to play a computer game:\n\n<a href=\"http://chillyc.info/wp-content/uploads/2010/01/p_large_1zJg_6593000280582d14.jpg\"><img class=\"alignnone size-medium wp-image-9\" title=\"p_large_1zJg_6593000280582d14\" src=\"http://chillyc.info/wp-content/uploads/2010/01/p_large_1zJg_6593000280582d14-283x300.jpg\" alt=\"\" width=\"283\" height=\"300\" /></a>\n\nHow to escape from the mouth of wolf\n\n<a href=\"http://chillyc.info/wp-content/uploads/2010/01/p_large_5eVD_1e1a0000b2112d13.jpg\"><img class=\"alignnone size-medium wp-image-10\" title=\"p_large_5eVD_1e1a0000b2112d13\" src=\"http://chillyc.info/wp-content/uploads/2010/01/p_large_5eVD_1e1a0000b2112d13-127x300.jpg\" alt=\"\" width=\"127\" height=\"300\" /></a>\n\ncan pig swim?\n\n<a href=\"http://chillyc.info/wp-content/uploads/2010/01/p_large_tlf6_659300027f962d14.jpg\"><img class=\"alignnone size-medium wp-image-15\" title=\"p_large_tlf6_659300027f962d14\" src=\"http://chillyc.info/wp-content/uploads/2010/01/p_large_tlf6_659300027f962d14-300x199.jpg\" alt=\"\" width=\"300\" height=\"199\" /></a>\n\nDo you know lots of programming language than him?\n\n<a href=\"http://chillyc.info/wp-content/uploads/2010/01/p_large_7WK8_60a600029ae82d10.jpg\"><img class=\"alignnone size-medium wp-image-11\" title=\"p_large_7WK8_60a600029ae82d10\" src=\"http://chillyc.info/wp-content/uploads/2010/01/p_large_7WK8_60a600029ae82d10-170x300.jpg\" alt=\"\" width=\"170\" height=\"300\" /></a>\n\nHow to find Osama bin Laden?\n\n<a href=\"http://chillyc.info/wp-content/uploads/2010/01/p_large_jNiH_2a5100001f022d0b.jpg\"><img class=\"alignnone size-medium wp-image-14\" title=\"p_large_jNiH_2a5100001f022d0b\" src=\"http://chillyc.info/wp-content/uploads/2010/01/p_large_jNiH_2a5100001f022d0b-300x260.jpg\" alt=\"\" width=\"300\" height=\"260\" /></a>\n\nHave you seen the smiles of those people? rotate 180 Degree!\n\n<a href=\"http://chillyc.info/wp-content/uploads/2010/01/p_large_Eyu1_659100014bed2d14.jpg\"><img class=\"alignnone size-medium wp-image-13\" title=\"p_large_Eyu1_659100014bed2d14\" src=\"http://chillyc.info/wp-content/uploads/2010/01/p_large_Eyu1_659100014bed2d14-300x237.jpg\" alt=\"\" width=\"300\" height=\"237\" /></a>\n\nhow to get back your stolened? If you learned Chinese, you will know the meaning of this letter.\n\n<a href=\"http://chillyc.info/wp-content/uploads/2010/01/p_large_eItK_659100014c062d14.jpg\"><img class=\"alignnone size-medium wp-image-12\" title=\"p_large_eItK_659100014c062d14\" src=\"http://chillyc.info/wp-content/uploads/2010/01/p_large_eItK_659100014c062d14-233x300.jpg\" alt=\"\" width=\"233\" height=\"300\" /></a>\n","source":"_posts/2010-01-06-funny-picture.markdown","raw":"---\nlayout: post\ntitle: \"funny picture\"\ndate: 2010-1-6\nwordpress_id: 8\ncomments: true\ncategories: [\"funny\", \"funny\", \"picture\"]\n---\n<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"views\" content=\"1620\" />\nI have found some funny picture in web.  Now I share them:\n\nHow to play a computer game:\n\n<a href=\"http://chillyc.info/wp-content/uploads/2010/01/p_large_1zJg_6593000280582d14.jpg\"><img class=\"alignnone size-medium wp-image-9\" title=\"p_large_1zJg_6593000280582d14\" src=\"http://chillyc.info/wp-content/uploads/2010/01/p_large_1zJg_6593000280582d14-283x300.jpg\" alt=\"\" width=\"283\" height=\"300\" /></a>\n\nHow to escape from the mouth of wolf\n\n<a href=\"http://chillyc.info/wp-content/uploads/2010/01/p_large_5eVD_1e1a0000b2112d13.jpg\"><img class=\"alignnone size-medium wp-image-10\" title=\"p_large_5eVD_1e1a0000b2112d13\" src=\"http://chillyc.info/wp-content/uploads/2010/01/p_large_5eVD_1e1a0000b2112d13-127x300.jpg\" alt=\"\" width=\"127\" height=\"300\" /></a>\n\ncan pig swim?\n\n<a href=\"http://chillyc.info/wp-content/uploads/2010/01/p_large_tlf6_659300027f962d14.jpg\"><img class=\"alignnone size-medium wp-image-15\" title=\"p_large_tlf6_659300027f962d14\" src=\"http://chillyc.info/wp-content/uploads/2010/01/p_large_tlf6_659300027f962d14-300x199.jpg\" alt=\"\" width=\"300\" height=\"199\" /></a>\n\nDo you know lots of programming language than him?\n\n<a href=\"http://chillyc.info/wp-content/uploads/2010/01/p_large_7WK8_60a600029ae82d10.jpg\"><img class=\"alignnone size-medium wp-image-11\" title=\"p_large_7WK8_60a600029ae82d10\" src=\"http://chillyc.info/wp-content/uploads/2010/01/p_large_7WK8_60a600029ae82d10-170x300.jpg\" alt=\"\" width=\"170\" height=\"300\" /></a>\n\nHow to find Osama bin Laden?\n\n<a href=\"http://chillyc.info/wp-content/uploads/2010/01/p_large_jNiH_2a5100001f022d0b.jpg\"><img class=\"alignnone size-medium wp-image-14\" title=\"p_large_jNiH_2a5100001f022d0b\" src=\"http://chillyc.info/wp-content/uploads/2010/01/p_large_jNiH_2a5100001f022d0b-300x260.jpg\" alt=\"\" width=\"300\" height=\"260\" /></a>\n\nHave you seen the smiles of those people? rotate 180 Degree!\n\n<a href=\"http://chillyc.info/wp-content/uploads/2010/01/p_large_Eyu1_659100014bed2d14.jpg\"><img class=\"alignnone size-medium wp-image-13\" title=\"p_large_Eyu1_659100014bed2d14\" src=\"http://chillyc.info/wp-content/uploads/2010/01/p_large_Eyu1_659100014bed2d14-300x237.jpg\" alt=\"\" width=\"300\" height=\"237\" /></a>\n\nhow to get back your stolened? If you learned Chinese, you will know the meaning of this letter.\n\n<a href=\"http://chillyc.info/wp-content/uploads/2010/01/p_large_eItK_659100014c062d14.jpg\"><img class=\"alignnone size-medium wp-image-12\" title=\"p_large_eItK_659100014c062d14\" src=\"http://chillyc.info/wp-content/uploads/2010/01/p_large_eItK_659100014c062d14-233x300.jpg\" alt=\"\" width=\"233\" height=\"300\" /></a>\n","slug":"2010-01-06-funny-picture","published":1,"updated":"2017-06-05T03:01:31.000Z","photos":[],"link":"","_id":"cj3jjva2z00011pmjnirmbq00","content":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"views\" content=\"1620\"><br>I have found some funny picture in web.  Now I share them:</p>\n<p>How to play a computer game:</p>\n<p><a href=\"http://chillyc.info/wp-content/uploads/2010/01/p_large_1zJg_6593000280582d14.jpg\"><img class=\"alignnone size-medium wp-image-9\" title=\"p_large_1zJg_6593000280582d14\" src=\"http://chillyc.info/wp-content/uploads/2010/01/p_large_1zJg_6593000280582d14-283x300.jpg\" alt=\"\" width=\"283\" height=\"300\"></a></p>\n<p>How to escape from the mouth of wolf</p>\n<p><a href=\"http://chillyc.info/wp-content/uploads/2010/01/p_large_5eVD_1e1a0000b2112d13.jpg\"><img class=\"alignnone size-medium wp-image-10\" title=\"p_large_5eVD_1e1a0000b2112d13\" src=\"http://chillyc.info/wp-content/uploads/2010/01/p_large_5eVD_1e1a0000b2112d13-127x300.jpg\" alt=\"\" width=\"127\" height=\"300\"></a></p>\n<p>can pig swim?</p>\n<p><a href=\"http://chillyc.info/wp-content/uploads/2010/01/p_large_tlf6_659300027f962d14.jpg\"><img class=\"alignnone size-medium wp-image-15\" title=\"p_large_tlf6_659300027f962d14\" src=\"http://chillyc.info/wp-content/uploads/2010/01/p_large_tlf6_659300027f962d14-300x199.jpg\" alt=\"\" width=\"300\" height=\"199\"></a></p>\n<p>Do you know lots of programming language than him?</p>\n<p><a href=\"http://chillyc.info/wp-content/uploads/2010/01/p_large_7WK8_60a600029ae82d10.jpg\"><img class=\"alignnone size-medium wp-image-11\" title=\"p_large_7WK8_60a600029ae82d10\" src=\"http://chillyc.info/wp-content/uploads/2010/01/p_large_7WK8_60a600029ae82d10-170x300.jpg\" alt=\"\" width=\"170\" height=\"300\"></a></p>\n<p>How to find Osama bin Laden?</p>\n<p><a href=\"http://chillyc.info/wp-content/uploads/2010/01/p_large_jNiH_2a5100001f022d0b.jpg\"><img class=\"alignnone size-medium wp-image-14\" title=\"p_large_jNiH_2a5100001f022d0b\" src=\"http://chillyc.info/wp-content/uploads/2010/01/p_large_jNiH_2a5100001f022d0b-300x260.jpg\" alt=\"\" width=\"300\" height=\"260\"></a></p>\n<p>Have you seen the smiles of those people? rotate 180 Degree!</p>\n<p><a href=\"http://chillyc.info/wp-content/uploads/2010/01/p_large_Eyu1_659100014bed2d14.jpg\"><img class=\"alignnone size-medium wp-image-13\" title=\"p_large_Eyu1_659100014bed2d14\" src=\"http://chillyc.info/wp-content/uploads/2010/01/p_large_Eyu1_659100014bed2d14-300x237.jpg\" alt=\"\" width=\"300\" height=\"237\"></a></p>\n<p>how to get back your stolened? If you learned Chinese, you will know the meaning of this letter.</p>\n<p><a href=\"http://chillyc.info/wp-content/uploads/2010/01/p_large_eItK_659100014c062d14.jpg\"><img class=\"alignnone size-medium wp-image-12\" title=\"p_large_eItK_659100014c062d14\" src=\"http://chillyc.info/wp-content/uploads/2010/01/p_large_eItK_659100014c062d14-233x300.jpg\" alt=\"\" width=\"233\" height=\"300\"></a></p>\n","site":{"data":{}},"excerpt":"","more":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"views\" content=\"1620\"><br>I have found some funny picture in web.  Now I share them:</p>\n<p>How to play a computer game:</p>\n<p><a href=\"http://chillyc.info/wp-content/uploads/2010/01/p_large_1zJg_6593000280582d14.jpg\"><img class=\"alignnone size-medium wp-image-9\" title=\"p_large_1zJg_6593000280582d14\" src=\"http://chillyc.info/wp-content/uploads/2010/01/p_large_1zJg_6593000280582d14-283x300.jpg\" alt=\"\" width=\"283\" height=\"300\"></a></p>\n<p>How to escape from the mouth of wolf</p>\n<p><a href=\"http://chillyc.info/wp-content/uploads/2010/01/p_large_5eVD_1e1a0000b2112d13.jpg\"><img class=\"alignnone size-medium wp-image-10\" title=\"p_large_5eVD_1e1a0000b2112d13\" src=\"http://chillyc.info/wp-content/uploads/2010/01/p_large_5eVD_1e1a0000b2112d13-127x300.jpg\" alt=\"\" width=\"127\" height=\"300\"></a></p>\n<p>can pig swim?</p>\n<p><a href=\"http://chillyc.info/wp-content/uploads/2010/01/p_large_tlf6_659300027f962d14.jpg\"><img class=\"alignnone size-medium wp-image-15\" title=\"p_large_tlf6_659300027f962d14\" src=\"http://chillyc.info/wp-content/uploads/2010/01/p_large_tlf6_659300027f962d14-300x199.jpg\" alt=\"\" width=\"300\" height=\"199\"></a></p>\n<p>Do you know lots of programming language than him?</p>\n<p><a href=\"http://chillyc.info/wp-content/uploads/2010/01/p_large_7WK8_60a600029ae82d10.jpg\"><img class=\"alignnone size-medium wp-image-11\" title=\"p_large_7WK8_60a600029ae82d10\" src=\"http://chillyc.info/wp-content/uploads/2010/01/p_large_7WK8_60a600029ae82d10-170x300.jpg\" alt=\"\" width=\"170\" height=\"300\"></a></p>\n<p>How to find Osama bin Laden?</p>\n<p><a href=\"http://chillyc.info/wp-content/uploads/2010/01/p_large_jNiH_2a5100001f022d0b.jpg\"><img class=\"alignnone size-medium wp-image-14\" title=\"p_large_jNiH_2a5100001f022d0b\" src=\"http://chillyc.info/wp-content/uploads/2010/01/p_large_jNiH_2a5100001f022d0b-300x260.jpg\" alt=\"\" width=\"300\" height=\"260\"></a></p>\n<p>Have you seen the smiles of those people? rotate 180 Degree!</p>\n<p><a href=\"http://chillyc.info/wp-content/uploads/2010/01/p_large_Eyu1_659100014bed2d14.jpg\"><img class=\"alignnone size-medium wp-image-13\" title=\"p_large_Eyu1_659100014bed2d14\" src=\"http://chillyc.info/wp-content/uploads/2010/01/p_large_Eyu1_659100014bed2d14-300x237.jpg\" alt=\"\" width=\"300\" height=\"237\"></a></p>\n<p>how to get back your stolened? If you learned Chinese, you will know the meaning of this letter.</p>\n<p><a href=\"http://chillyc.info/wp-content/uploads/2010/01/p_large_eItK_659100014c062d14.jpg\"><img class=\"alignnone size-medium wp-image-12\" title=\"p_large_eItK_659100014c062d14\" src=\"http://chillyc.info/wp-content/uploads/2010/01/p_large_eItK_659100014c062d14-233x300.jpg\" alt=\"\" width=\"233\" height=\"300\"></a></p>\n"},{"layout":"post","title":"first Formula","date":"2010-01-07T16:00:00.000Z","wordpress_id":24,"comments":1,"_content":"<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"views\" content=\"1013\" />\nWrite first formula using latex here:\n\n$latex \\alpha+\\beta=x^{\\delta+3}/y $\n\nwooo~~~~\n","source":"_posts/2010-01-08-first-formula.markdown","raw":"---\nlayout: post\ntitle: \"first Formula\"\ndate: 2010-1-8\nwordpress_id: 24\ncomments: true\ncategories: [\"first\", \"first\", \"formula\", \"formula\"]\n---\n<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"views\" content=\"1013\" />\nWrite first formula using latex here:\n\n$latex \\alpha+\\beta=x^{\\delta+3}/y $\n\nwooo~~~~\n","slug":"2010-01-08-first-formula","published":1,"updated":"2017-06-05T03:01:31.000Z","photos":[],"link":"","_id":"cj3jjva3300021pmjvnnn0thd","content":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"views\" content=\"1013\"><br>Write first formula using latex here:</p>\n<p>$latex \\alpha+\\beta=x^{\\delta+3}/y $</p>\n<p>wooo~~~~</p>\n","site":{"data":{}},"excerpt":"","more":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"views\" content=\"1013\"><br>Write first formula using latex here:</p>\n<p>$latex \\alpha+\\beta=x^{\\delta+3}/y $</p>\n<p>wooo~~~~</p>\n"},{"layout":"post","title":"first code","date":"2010-01-07T16:00:00.000Z","wordpress_id":19,"comments":1,"_content":"<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"views\" content=\"1079\" />\nwrite first c++ code here:\n\n[codesyntax lang=\"cpp\" tab_width=\"4\"]\n{% codeblock %}#include&lt;iostream&gt;\n#include&lt;string&gt;\nusing namespace std;\nint main()\n{\n\tcout &lt;&lt; \"Hello my first code!\"&lt;&lt;endl;\n\tcout &lt;&lt;\"this codeSyntax looks great!\"&lt;&lt;endl;\n\treturn 0;\n}{% endcodeblock %}\n\n\nI use WP-synhighlight plugin to do this. I like it.\n","source":"_posts/2010-01-08-first-code.markdown","raw":"---\nlayout: post\ntitle: \"first code\"\ndate: 2010-1-8\nwordpress_id: 19\ncomments: true\ncategories: [\"c\", \"code\", \"code\", \"first\", \"first\"]\n---\n<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"views\" content=\"1079\" />\nwrite first c++ code here:\n\n[codesyntax lang=\"cpp\" tab_width=\"4\"]\n{% codeblock %}#include&lt;iostream&gt;\n#include&lt;string&gt;\nusing namespace std;\nint main()\n{\n\tcout &lt;&lt; \"Hello my first code!\"&lt;&lt;endl;\n\tcout &lt;&lt;\"this codeSyntax looks great!\"&lt;&lt;endl;\n\treturn 0;\n}{% endcodeblock %}\n\n\nI use WP-synhighlight plugin to do this. I like it.\n","slug":"2010-01-08-first-code","published":1,"updated":"2017-06-05T03:01:31.000Z","photos":[],"link":"","_id":"cj3jjva3600031pmj5xhqvsjb","content":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"views\" content=\"1079\"><br>write first c++ code here:</p>\n<p>[codesyntax lang=”cpp” tab_width=”4”]<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&amp;lt;iostream&amp;gt;</div><div class=\"line\">#include&amp;lt;string&amp;gt;</div><div class=\"line\">using namespace std;</div><div class=\"line\">int main()</div><div class=\"line\">&#123;</div><div class=\"line\">\tcout &amp;lt;&amp;lt; &quot;Hello my first code!&quot;&amp;lt;&amp;lt;endl;</div><div class=\"line\">\tcout &amp;lt;&amp;lt;&quot;this codeSyntax looks great!&quot;&amp;lt;&amp;lt;endl;</div><div class=\"line\">\treturn 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>I use WP-synhighlight plugin to do this. I like it.</p>\n","site":{"data":{}},"excerpt":"","more":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"views\" content=\"1079\"><br>write first c++ code here:</p>\n<p>[codesyntax lang=”cpp” tab_width=”4”]<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&amp;lt;iostream&amp;gt;</div><div class=\"line\">#include&amp;lt;string&amp;gt;</div><div class=\"line\">using namespace std;</div><div class=\"line\">int main()</div><div class=\"line\">&#123;</div><div class=\"line\">\tcout &amp;lt;&amp;lt; &quot;Hello my first code!&quot;&amp;lt;&amp;lt;endl;</div><div class=\"line\">\tcout &amp;lt;&amp;lt;&quot;this codeSyntax looks great!&quot;&amp;lt;&amp;lt;endl;</div><div class=\"line\">\treturn 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>I use WP-synhighlight plugin to do this. I like it.</p>\n"},{"layout":"post","title":"funny picture","date":"2010-01-08T16:00:00.000Z","wordpress_id":54,"comments":1,"_content":"<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"views\" content=\"774\" />\n<a href=\"http://chillyc.info/wp-content/uploads/2010/01/nl7bt4vi.gif\"><img class=\"aligncenter size-full wp-image-53\" title=\"surprise\" src=\"http://chillyc.info/wp-content/uploads/2010/01/nl7bt4vi.gif\" alt=\"\" width=\"230\" height=\"145\" /></a>\n","source":"_posts/2010-01-09-funny-picture-2.markdown","raw":"---\nlayout: post\ntitle: \"funny picture\"\ndate: 2010-1-9\nwordpress_id: 54\ncomments: true\ncategories: [\"funny\", \"funny\", \"picture\"]\n---\n<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"views\" content=\"774\" />\n<a href=\"http://chillyc.info/wp-content/uploads/2010/01/nl7bt4vi.gif\"><img class=\"aligncenter size-full wp-image-53\" title=\"surprise\" src=\"http://chillyc.info/wp-content/uploads/2010/01/nl7bt4vi.gif\" alt=\"\" width=\"230\" height=\"145\" /></a>\n","slug":"2010-01-09-funny-picture-2","published":1,"updated":"2017-06-05T03:01:31.000Z","photos":[],"link":"","_id":"cj3jjva3a00051pmjwlcbpfe5","content":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"views\" content=\"774\"><br><a href=\"http://chillyc.info/wp-content/uploads/2010/01/nl7bt4vi.gif\"><img class=\"aligncenter size-full wp-image-53\" title=\"surprise\" src=\"http://chillyc.info/wp-content/uploads/2010/01/nl7bt4vi.gif\" alt=\"\" width=\"230\" height=\"145\"></a></p>\n","site":{"data":{}},"excerpt":"","more":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"views\" content=\"774\"><br><a href=\"http://chillyc.info/wp-content/uploads/2010/01/nl7bt4vi.gif\"><img class=\"aligncenter size-full wp-image-53\" title=\"surprise\" src=\"http://chillyc.info/wp-content/uploads/2010/01/nl7bt4vi.gif\" alt=\"\" width=\"230\" height=\"145\"></a></p>\n"},{"layout":"post","title":"small Games","date":"2010-01-08T16:00:00.000Z","wordpress_id":40,"comments":1,"_content":"<meta name=\"_oembed_e98e7d3c2898c9d8800b645844a1a2e6\" content=\"{{unknown}}\" />\n<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_oembed_8024b595793ed1eaf15515de7c3a074c\" content=\"{{unknown}}\" />\n<meta name=\"views\" content=\"1360\" />\n<meta name=\"_oembed_987d1bca828b09ebec319b758c1a1fa1\" content=\"{{unknown}}\" />\n<a href=\"http://www.miniclip.com/games/bloxorz/cn/bloxorz_miniclip.swf\">use direction keys to rotate block into hole!</a>\n\nthinking harder!\n\n[swfobj src=\"http://chillyc.info/wp-content/uploads/2010/01/bloxorz_miniclip.swf\" alt=\"use direction keys to rotate block into hole!\"]\n\nhttp://www.kongregate.com/games/Coolio_Niato/light-bot\n\nthis game is fitable for programmer.\n\n[swfobj src=\"http://chillyc.info/wp-content/uploads/2010/01/light-bot.swf\" alt=\"http://www.kongregate.com/games/Coolio_Niato/light-bot\"] \n","source":"_posts/2010-01-09-small-games.markdown","raw":"---\nlayout: post\ntitle: \"small Games\"\ndate: 2010-1-9\nwordpress_id: 40\ncomments: true\ncategories: [\"funny\", \"game\", \"game\"]\n---\n<meta name=\"_oembed_e98e7d3c2898c9d8800b645844a1a2e6\" content=\"{{unknown}}\" />\n<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_oembed_8024b595793ed1eaf15515de7c3a074c\" content=\"{{unknown}}\" />\n<meta name=\"views\" content=\"1360\" />\n<meta name=\"_oembed_987d1bca828b09ebec319b758c1a1fa1\" content=\"{{unknown}}\" />\n<a href=\"http://www.miniclip.com/games/bloxorz/cn/bloxorz_miniclip.swf\">use direction keys to rotate block into hole!</a>\n\nthinking harder!\n\n[swfobj src=\"http://chillyc.info/wp-content/uploads/2010/01/bloxorz_miniclip.swf\" alt=\"use direction keys to rotate block into hole!\"]\n\nhttp://www.kongregate.com/games/Coolio_Niato/light-bot\n\nthis game is fitable for programmer.\n\n[swfobj src=\"http://chillyc.info/wp-content/uploads/2010/01/light-bot.swf\" alt=\"http://www.kongregate.com/games/Coolio_Niato/light-bot\"] \n","slug":"2010-01-09-small-games","published":1,"updated":"2017-06-05T03:01:31.000Z","photos":[],"link":"","_id":"cj3jjva3e00071pmj5wyyznl9","content":"<p><meta name=\"_oembed_e98e7d3c2898c9d8800b645844a1a2e6\" content=\"\"></p>\n<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_oembed_8024b595793ed1eaf15515de7c3a074c\" content=\"\"></p>\n<p><meta name=\"views\" content=\"1360\"></p>\n<p><meta name=\"_oembed_987d1bca828b09ebec319b758c1a1fa1\" content=\"\"><br><a href=\"http://www.miniclip.com/games/bloxorz/cn/bloxorz_miniclip.swf\" target=\"_blank\" rel=\"external\">use direction keys to rotate block into hole!</a></p>\n<p>thinking harder!</p>\n<p>[swfobj src=”<a href=\"http://chillyc.info/wp-content/uploads/2010/01/bloxorz_miniclip.swf\">http://chillyc.info/wp-content/uploads/2010/01/bloxorz_miniclip.swf</a>“ alt=”use direction keys to rotate block into hole!”]</p>\n<p><a href=\"http://www.kongregate.com/games/Coolio_Niato/light-bot\" target=\"_blank\" rel=\"external\">http://www.kongregate.com/games/Coolio_Niato/light-bot</a></p>\n<p>this game is fitable for programmer.</p>\n<p>[swfobj src=”<a href=\"http://chillyc.info/wp-content/uploads/2010/01/light-bot.swf\">http://chillyc.info/wp-content/uploads/2010/01/light-bot.swf</a>“ alt=”<a href=\"http://www.kongregate.com/games/Coolio_Niato/light-bot\" target=\"_blank\" rel=\"external\">http://www.kongregate.com/games/Coolio_Niato/light-bot</a>“] </p>\n","site":{"data":{}},"excerpt":"","more":"<p><meta name=\"_oembed_e98e7d3c2898c9d8800b645844a1a2e6\" content=\"\"></p>\n<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_oembed_8024b595793ed1eaf15515de7c3a074c\" content=\"\"></p>\n<p><meta name=\"views\" content=\"1360\"></p>\n<p><meta name=\"_oembed_987d1bca828b09ebec319b758c1a1fa1\" content=\"\"><br><a href=\"http://www.miniclip.com/games/bloxorz/cn/bloxorz_miniclip.swf\" target=\"_blank\" rel=\"external\">use direction keys to rotate block into hole!</a></p>\n<p>thinking harder!</p>\n<p>[swfobj src=”<a href=\"http://chillyc.info/wp-content/uploads/2010/01/bloxorz_miniclip.swf\">http://chillyc.info/wp-content/uploads/2010/01/bloxorz_miniclip.swf</a>“ alt=”use direction keys to rotate block into hole!”]</p>\n<p><a href=\"http://www.kongregate.com/games/Coolio_Niato/light-bot\" target=\"_blank\" rel=\"external\">http://www.kongregate.com/games/Coolio_Niato/light-bot</a></p>\n<p>this game is fitable for programmer.</p>\n<p>[swfobj src=”<a href=\"http://chillyc.info/wp-content/uploads/2010/01/light-bot.swf\">http://chillyc.info/wp-content/uploads/2010/01/light-bot.swf</a>“ alt=”<a href=\"http://www.kongregate.com/games/Coolio_Niato/light-bot\" target=\"_blank\" rel=\"external\">http://www.kongregate.com/games/Coolio_Niato/light-bot</a>“] </p>\n"},{"layout":"post","title":"Look back","date":"2010-01-10T16:00:00.000Z","wordpress_id":57,"comments":1,"_content":"<meta name=\"views\" content=\"1320\" />\n<meta name=\"_edit_last\" content=\"1\" />\nsomeone passed away\nsomeone was born\nsomeone had gone\nsomeone is in\nonce I had fallen in\nnow I have got through\ntime passes by\nmemory fades away\nI am not myself\nI am still me\n","source":"_posts/2010-01-11-look-back.markdown","raw":"---\nlayout: post\ntitle: \"Look back\"\ndate: 2010-1-11\nwordpress_id: 57\ncomments: true\ncategories: [\"conclusion-summary\", \"rw\"]\n---\n<meta name=\"views\" content=\"1320\" />\n<meta name=\"_edit_last\" content=\"1\" />\nsomeone passed away\nsomeone was born\nsomeone had gone\nsomeone is in\nonce I had fallen in\nnow I have got through\ntime passes by\nmemory fades away\nI am not myself\nI am still me\n","slug":"2010-01-11-look-back","published":1,"updated":"2017-06-05T03:01:31.000Z","photos":[],"link":"","_id":"cj3jjva3q00091pmjjwg479jc","content":"<p><meta name=\"views\" content=\"1320\"></p>\n<p><meta name=\"_edit_last\" content=\"1\"><br>someone passed away<br>someone was born<br>someone had gone<br>someone is in<br>once I had fallen in<br>now I have got through<br>time passes by<br>memory fades away<br>I am not myself<br>I am still me</p>\n","site":{"data":{}},"excerpt":"","more":"<p><meta name=\"views\" content=\"1320\"></p>\n<p><meta name=\"_edit_last\" content=\"1\"><br>someone passed away<br>someone was born<br>someone had gone<br>someone is in<br>once I had fallen in<br>now I have got through<br>time passes by<br>memory fades away<br>I am not myself<br>I am still me</p>\n"},{"layout":"post","title":"world war II","date":"2010-01-13T16:00:00.000Z","wordpress_id":62,"comments":1,"_content":"<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"views\" content=\"1763\" />\nthere is a flash for you to know the detail of the second world war. And it shows the German attacked the Soviet Union. It is so interactive that you can click here and there to know the detail of information. But its drawback is it doesn't contain all of histories of the second world war.\n<a title=\"war\" href=\"http://english.pobediteli.ru/flash.html?DR=0\"> Here is the link! click here!</a>\nAnd the screen shot is the following:\n<a href=\"http://chillyc.info/wp-content/uploads/2010/01/world-war2.jpg\"><img class=\"aligncenter size-medium wp-image-60\" title=\"world war2\" src=\"http://chillyc.info/wp-content/uploads/2010/01/world-war2-300x225.jpg\" alt=\"world war2 image\" width=\"300\" height=\"225\" /></a>\n<a href=\"http://chillyc.info/wp-content/uploads/2010/01/world-war2.1.jpg\"><img class=\"aligncenter size-medium wp-image-61\" title=\"world war2.1\" src=\"http://chillyc.info/wp-content/uploads/2010/01/world-war2.1-300x225.jpg\" alt=\"world war2.1\" width=\"300\" height=\"225\" /></a>\n","source":"_posts/2010-01-14-world-war-ii.markdown","raw":"---\nlayout: post\ntitle: \"world war II\"\ndate: 2010-1-14\nwordpress_id: 62\ncomments: true\ncategories: [\"flash\", \"second\", \"see-hear\", \"war\", \"world\"]\n---\n<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"views\" content=\"1763\" />\nthere is a flash for you to know the detail of the second world war. And it shows the German attacked the Soviet Union. It is so interactive that you can click here and there to know the detail of information. But its drawback is it doesn't contain all of histories of the second world war.\n<a title=\"war\" href=\"http://english.pobediteli.ru/flash.html?DR=0\"> Here is the link! click here!</a>\nAnd the screen shot is the following:\n<a href=\"http://chillyc.info/wp-content/uploads/2010/01/world-war2.jpg\"><img class=\"aligncenter size-medium wp-image-60\" title=\"world war2\" src=\"http://chillyc.info/wp-content/uploads/2010/01/world-war2-300x225.jpg\" alt=\"world war2 image\" width=\"300\" height=\"225\" /></a>\n<a href=\"http://chillyc.info/wp-content/uploads/2010/01/world-war2.1.jpg\"><img class=\"aligncenter size-medium wp-image-61\" title=\"world war2.1\" src=\"http://chillyc.info/wp-content/uploads/2010/01/world-war2.1-300x225.jpg\" alt=\"world war2.1\" width=\"300\" height=\"225\" /></a>\n","slug":"2010-01-14-world-war-ii","published":1,"updated":"2017-06-05T03:01:31.000Z","photos":[],"link":"","_id":"cj3jjva3v000b1pmj2oycp5q1","content":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"views\" content=\"1763\"><br>there is a flash for you to know the detail of the second world war. And it shows the German attacked the Soviet Union. It is so interactive that you can click here and there to know the detail of information. But its drawback is it doesn’t contain all of histories of the second world war.<br><a title=\"war\" href=\"http://english.pobediteli.ru/flash.html?DR=0\" target=\"_blank\" rel=\"external\"> Here is the link! click here!</a><br>And the screen shot is the following:<br><a href=\"http://chillyc.info/wp-content/uploads/2010/01/world-war2.jpg\"><img class=\"aligncenter size-medium wp-image-60\" title=\"world war2\" src=\"http://chillyc.info/wp-content/uploads/2010/01/world-war2-300x225.jpg\" alt=\"world war2 image\" width=\"300\" height=\"225\"></a><br><a href=\"http://chillyc.info/wp-content/uploads/2010/01/world-war2.1.jpg\"><img class=\"aligncenter size-medium wp-image-61\" title=\"world war2.1\" src=\"http://chillyc.info/wp-content/uploads/2010/01/world-war2.1-300x225.jpg\" alt=\"world war2.1\" width=\"300\" height=\"225\"></a></p>\n","site":{"data":{}},"excerpt":"","more":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"views\" content=\"1763\"><br>there is a flash for you to know the detail of the second world war. And it shows the German attacked the Soviet Union. It is so interactive that you can click here and there to know the detail of information. But its drawback is it doesn’t contain all of histories of the second world war.<br><a title=\"war\" href=\"http://english.pobediteli.ru/flash.html?DR=0\" target=\"_blank\" rel=\"external\"> Here is the link! click here!</a><br>And the screen shot is the following:<br><a href=\"http://chillyc.info/wp-content/uploads/2010/01/world-war2.jpg\"><img class=\"aligncenter size-medium wp-image-60\" title=\"world war2\" src=\"http://chillyc.info/wp-content/uploads/2010/01/world-war2-300x225.jpg\" alt=\"world war2 image\" width=\"300\" height=\"225\"></a><br><a href=\"http://chillyc.info/wp-content/uploads/2010/01/world-war2.1.jpg\"><img class=\"aligncenter size-medium wp-image-61\" title=\"world war2.1\" src=\"http://chillyc.info/wp-content/uploads/2010/01/world-war2.1-300x225.jpg\" alt=\"world war2.1\" width=\"300\" height=\"225\"></a></p>\n"},{"layout":"post","title":"How difficultly we choose lessons!","date":"2010-01-18T16:00:00.000Z","wordpress_id":66,"comments":1,"_content":"<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"views\" content=\"825\" />\nThis short film is showing how difficultly we choose lessons in university. It is a comedy.\n\n[swfobj src=\"http://player.youku.com/player.php/sid/XMTQ0NDU4OTEy/v.swf\" alt=\"choosing a lesson\"] \n","source":"_posts/2010-01-19-how-hard-we-choose-lessons.markdown","raw":"---\nlayout: post\ntitle: \"How difficultly we choose lessons!\"\ndate: 2010-1-19\nwordpress_id: 66\ncomments: true\ncategories: [\"funny\", \"funny\", \"lesson\", \"see-hear\", \"video\", \"war\", \"world\"]\n---\n<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"views\" content=\"825\" />\nThis short film is showing how difficultly we choose lessons in university. It is a comedy.\n\n[swfobj src=\"http://player.youku.com/player.php/sid/XMTQ0NDU4OTEy/v.swf\" alt=\"choosing a lesson\"] \n","slug":"2010-01-19-how-hard-we-choose-lessons","published":1,"updated":"2017-06-05T03:01:31.000Z","photos":[],"link":"","_id":"cj3jjva3y000d1pmj1fveqr5l","content":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"views\" content=\"825\"><br>This short film is showing how difficultly we choose lessons in university. It is a comedy.</p>\n<p>[swfobj src=”<a href=\"http://player.youku.com/player.php/sid/XMTQ0NDU4OTEy/v.swf\" target=\"_blank\" rel=\"external\">http://player.youku.com/player.php/sid/XMTQ0NDU4OTEy/v.swf</a>“ alt=”choosing a lesson”] </p>\n","site":{"data":{}},"excerpt":"","more":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"views\" content=\"825\"><br>This short film is showing how difficultly we choose lessons in university. It is a comedy.</p>\n<p>[swfobj src=”<a href=\"http://player.youku.com/player.php/sid/XMTQ0NDU4OTEy/v.swf\" target=\"_blank\" rel=\"external\">http://player.youku.com/player.php/sid/XMTQ0NDU4OTEy/v.swf</a>“ alt=”choosing a lesson”] </p>\n"},{"layout":"post","title":"Never forget the war and Never forgive Japan!","date":"2010-01-25T16:00:00.000Z","wordpress_id":70,"comments":1,"_content":"<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"views\" content=\"1058\" />\nAlthough Japan supports China in many projects, the very important thing is Japan should apologize to China.\n\nThe crimes of Japan:\n\n[swfobj src=\"http://player.ku6.com/refer/vT5aXBC03QExAUFf/v.swf\"] \n","source":"_posts/2010-01-26-never-forget-the-war-and-never-forgive-japan.markdown","raw":"---\nlayout: post\ntitle: \"Never forget the war and Never forgive Japan!\"\ndate: 2010-1-26\nwordpress_id: 70\ncomments: true\ncategories: [\"china\", \"forget\", \"forgive\", \"japan\", \"see-hear\", \"war\"]\n---\n<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"views\" content=\"1058\" />\nAlthough Japan supports China in many projects, the very important thing is Japan should apologize to China.\n\nThe crimes of Japan:\n\n[swfobj src=\"http://player.ku6.com/refer/vT5aXBC03QExAUFf/v.swf\"] \n","slug":"2010-01-26-never-forget-the-war-and-never-forgive-japan","published":1,"updated":"2017-06-05T03:01:31.000Z","photos":[],"link":"","_id":"cj3jjva41000f1pmjhqlda0hn","content":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"views\" content=\"1058\"><br>Although Japan supports China in many projects, the very important thing is Japan should apologize to China.</p>\n<p>The crimes of Japan:</p>\n<p>[swfobj src=”<a href=\"http://player.ku6.com/refer/vT5aXBC03QExAUFf/v.swf\" target=\"_blank\" rel=\"external\">http://player.ku6.com/refer/vT5aXBC03QExAUFf/v.swf</a>“] </p>\n","site":{"data":{}},"excerpt":"","more":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"views\" content=\"1058\"><br>Although Japan supports China in many projects, the very important thing is Japan should apologize to China.</p>\n<p>The crimes of Japan:</p>\n<p>[swfobj src=”<a href=\"http://player.ku6.com/refer/vT5aXBC03QExAUFf/v.swf\" target=\"_blank\" rel=\"external\">http://player.ku6.com/refer/vT5aXBC03QExAUFf/v.swf</a>“] </p>\n"},{"layout":"post","title":"评书三国","date":"2010-01-27T16:00:00.000Z","wordpress_id":65,"comments":1,"_content":"<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"views\" content=\"1297\" />\nthis is a comedy.  some of scripts are copied from some web pages. But the rest of them are created by the actors and me. Laughing~\n\n<a href=\"http://blog.csdn.net/cctt_1/archive/2010/01/18/5205862.aspx\">http://blog.csdn.net/cctt_1/archive/2010/01/18/5205862.aspx</a>\n","source":"_posts/2010-01-28-ping-shu-san-guo.markdown","raw":"---\nlayout: post\ntitle: \"评书三国\"\ndate: 2010-1-28\nwordpress_id: 65\ncomments: true\ncategories: [\"comedy\", \"drama\", \"funny\", \"play\", \"rw\"]\n---\n<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"views\" content=\"1297\" />\nthis is a comedy.  some of scripts are copied from some web pages. But the rest of them are created by the actors and me. Laughing~\n\n<a href=\"http://blog.csdn.net/cctt_1/archive/2010/01/18/5205862.aspx\">http://blog.csdn.net/cctt_1/archive/2010/01/18/5205862.aspx</a>\n","slug":"2010-01-28-ping-shu-san-guo","published":1,"updated":"2017-06-05T03:01:31.000Z","photos":[],"link":"","_id":"cj3jjva43000h1pmjhvgjrct1","content":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"views\" content=\"1297\"><br>this is a comedy.  some of scripts are copied from some web pages. But the rest of them are created by the actors and me. Laughing~</p>\n<p><a href=\"http://blog.csdn.net/cctt_1/archive/2010/01/18/5205862.aspx\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/cctt_1/archive/2010/01/18/5205862.aspx</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"views\" content=\"1297\"><br>this is a comedy.  some of scripts are copied from some web pages. But the rest of them are created by the actors and me. Laughing~</p>\n<p><a href=\"http://blog.csdn.net/cctt_1/archive/2010/01/18/5205862.aspx\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/cctt_1/archive/2010/01/18/5205862.aspx</a></p>\n"},{"layout":"post","title":"memory allocation in c","date":"2010-07-04T16:00:00.000Z","wordpress_id":238,"comments":1,"_content":"<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_rich_snippet_type\" content=\"none\" />\n<meta name=\"_su_description\" content=\"c language , memory allocation about malloc function , calloc function and realloc function, free function and new and delete. \" />\n<meta name=\"views\" content=\"1100\" />\n<meta name=\"_su_title\" content=\"memory allocation in c\" />\n<meta name=\"_su_keywords\" content=\"memory, allocation,malloc,calloc,realloc,free,new,delete,c,c++\" />\nIn c language, there are three methods for memory allocation: malloc(), calloc(), realloc(). And one method to free memory: free().\n\nThe <strong>malloc</strong> function prototype is :<strong> void* malloc(size_t size);</strong> This function will allocates a block of <em>size</em> bytes of memory, returning a pointer to  the beginning of the block. <span style=\"color: #ff0000;\">Attention:</span> this function is only for allocating memory! So the initial value of these memory will be Non-Zero. Maybe sometimes, it will be zero. Code for example:\n\n\n{% codeblock %}#include&lt;stdio.h&gt;\n#include&lt;stdlib.h&gt;\nint main(){\n\n\tint * a = NULL;\n\ta = malloc(sizeof(int)*4);\n\t// like int a[4], but those memory is in heap\n\tfor(int i = 0; i&lt; 4; i++)\n\t\tprintf(\"%d \",a[i]);\n\treturn 0;\n}{% endcodeblock %}\n\n\nThe <strong>realloc</strong> function prototype is :<strong> void* realloc(void* ptr, size_t size);</strong> This function will reallocates a block of <em>size</em> bytes of memory,  returning a pointer to  the beginning of the block. If size is zero and ptr is not <strong>NULL</strong>, it will be used as <strong>free()</strong>. If prt is NULL and size is not zero, it will be used as <strong>malloc()</strong>. If ptr is NULL and size is zero, return value is some kind of memory which contains zero elements! Wooo~~~~. Look at the following codes:\n\n\n{% codeblock %}char * p = NULL;\nprintf(\"%x\",(int)p); // will output 0\n\np = (char*)realloc(p,0);\nprintf(\"%x\",(int)p); // will output non-zero\n\np = (char*)realloc(p,0);\nprintf(\"%x\",(int)p);{% endcodeblock %}\n\n\nwhy?! Because if this function is called successfully, it will return non-zero memory address. And you will see the third output <strong>subtract </strong>the second output will be<strong> 16 bytes</strong>. If ptr is not NULL , and size is non-zero, and current block can simply expand without moving,  the return value is the same as ptr. But there is not enough space for simply expand, it will execute<strong> free(ptr) and return malloc(size)</strong>. This function will become very <span style=\"color: #ff0000;\">dangerous!</span>\n\n\n{% codeblock %}char * k = (char*)realloc(NULL,100);\nchar * kbigger = (char*)realloc(k,104);\nchar * kbiggest = (char*)realloc(k,106); <span style=\"color: #ff0000;\">// crash!</span>{% endcodeblock %}\n\n\nSafety called will be like the following:\n\n\n{% codeblock %}char * k = (char*)realloc(NULL,100);\nk = (char*)realloc(k,4); // k's address is not changed\nk = (char*)realloc(k,104); // k's address is changed{% endcodeblock %}\n\n\nIf there is not enough free memory to be allocated, this function will return NULL.<span style=\"color: #ff0000;\">Attention:</span> this function will not initialize those memory also.\n\n<strong>calloc</strong>'s prototype is void* calloc(int num, size_t size).\n\n\n{% codeblock %}char* p = (char*)calloc(20,sizeof(char));\n\n// it is equal to\n\nchar* p = (char*)malloc(20*sizeof(char));\nmemset(p,0,20*sizeof(char));{% endcodeblock %}\n\n\n<span style=\"color: #ff0000;\">But calloc is efficient!</span>\n\n<span style=\"color: #ff0000;\"> <strong> </strong><span style=\"color: #000000;\"><strong>free</strong> function is to delete memory which has been allocated. But free function will not assign the point to zero.</span></span>\n\n<span style=\"color: #ff0000;\"><span style=\"color: #000000;\"></span></span>\n{% codeblock %}char * p = (char*)calloc(100);\n\np[0] = 'a';\nprintf(\"%c\",p[0]);   // output 'a'\nprintf(\"%x\",(int)p);\nfree(p);\nprintf(\"%c\",p[0]); // output nothing\nprintf(\"%x\",(int)p); // the value is the same as the first.{% endcodeblock %}\n\n\nAnd all of those functions will not recommend to be used in c++, because those functions will not initialize class structure or v_ptr. free() function will not destruct parent class when sub class is destructed. In c++, maybe should always use <strong>new</strong> and <strong>delete</strong>!\n","source":"_posts/2010-07-05-memory-allocation.markdown","raw":"---\nlayout: post\ntitle: \"memory allocation in c\"\ndate: 2010-7-5\nwordpress_id: 238\ncomments: true\ncategories: [\"allocation\", \"cc\", \"calloc\", \"code\", \"code\", \"free\", \"malloc\", \"memory\", \"realloc\"]\n---\n<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_rich_snippet_type\" content=\"none\" />\n<meta name=\"_su_description\" content=\"c language , memory allocation about malloc function , calloc function and realloc function, free function and new and delete. \" />\n<meta name=\"views\" content=\"1100\" />\n<meta name=\"_su_title\" content=\"memory allocation in c\" />\n<meta name=\"_su_keywords\" content=\"memory, allocation,malloc,calloc,realloc,free,new,delete,c,c++\" />\nIn c language, there are three methods for memory allocation: malloc(), calloc(), realloc(). And one method to free memory: free().\n\nThe <strong>malloc</strong> function prototype is :<strong> void* malloc(size_t size);</strong> This function will allocates a block of <em>size</em> bytes of memory, returning a pointer to  the beginning of the block. <span style=\"color: #ff0000;\">Attention:</span> this function is only for allocating memory! So the initial value of these memory will be Non-Zero. Maybe sometimes, it will be zero. Code for example:\n\n\n{% codeblock %}#include&lt;stdio.h&gt;\n#include&lt;stdlib.h&gt;\nint main(){\n\n\tint * a = NULL;\n\ta = malloc(sizeof(int)*4);\n\t// like int a[4], but those memory is in heap\n\tfor(int i = 0; i&lt; 4; i++)\n\t\tprintf(\"%d \",a[i]);\n\treturn 0;\n}{% endcodeblock %}\n\n\nThe <strong>realloc</strong> function prototype is :<strong> void* realloc(void* ptr, size_t size);</strong> This function will reallocates a block of <em>size</em> bytes of memory,  returning a pointer to  the beginning of the block. If size is zero and ptr is not <strong>NULL</strong>, it will be used as <strong>free()</strong>. If prt is NULL and size is not zero, it will be used as <strong>malloc()</strong>. If ptr is NULL and size is zero, return value is some kind of memory which contains zero elements! Wooo~~~~. Look at the following codes:\n\n\n{% codeblock %}char * p = NULL;\nprintf(\"%x\",(int)p); // will output 0\n\np = (char*)realloc(p,0);\nprintf(\"%x\",(int)p); // will output non-zero\n\np = (char*)realloc(p,0);\nprintf(\"%x\",(int)p);{% endcodeblock %}\n\n\nwhy?! Because if this function is called successfully, it will return non-zero memory address. And you will see the third output <strong>subtract </strong>the second output will be<strong> 16 bytes</strong>. If ptr is not NULL , and size is non-zero, and current block can simply expand without moving,  the return value is the same as ptr. But there is not enough space for simply expand, it will execute<strong> free(ptr) and return malloc(size)</strong>. This function will become very <span style=\"color: #ff0000;\">dangerous!</span>\n\n\n{% codeblock %}char * k = (char*)realloc(NULL,100);\nchar * kbigger = (char*)realloc(k,104);\nchar * kbiggest = (char*)realloc(k,106); <span style=\"color: #ff0000;\">// crash!</span>{% endcodeblock %}\n\n\nSafety called will be like the following:\n\n\n{% codeblock %}char * k = (char*)realloc(NULL,100);\nk = (char*)realloc(k,4); // k's address is not changed\nk = (char*)realloc(k,104); // k's address is changed{% endcodeblock %}\n\n\nIf there is not enough free memory to be allocated, this function will return NULL.<span style=\"color: #ff0000;\">Attention:</span> this function will not initialize those memory also.\n\n<strong>calloc</strong>'s prototype is void* calloc(int num, size_t size).\n\n\n{% codeblock %}char* p = (char*)calloc(20,sizeof(char));\n\n// it is equal to\n\nchar* p = (char*)malloc(20*sizeof(char));\nmemset(p,0,20*sizeof(char));{% endcodeblock %}\n\n\n<span style=\"color: #ff0000;\">But calloc is efficient!</span>\n\n<span style=\"color: #ff0000;\"> <strong> </strong><span style=\"color: #000000;\"><strong>free</strong> function is to delete memory which has been allocated. But free function will not assign the point to zero.</span></span>\n\n<span style=\"color: #ff0000;\"><span style=\"color: #000000;\"></span></span>\n{% codeblock %}char * p = (char*)calloc(100);\n\np[0] = 'a';\nprintf(\"%c\",p[0]);   // output 'a'\nprintf(\"%x\",(int)p);\nfree(p);\nprintf(\"%c\",p[0]); // output nothing\nprintf(\"%x\",(int)p); // the value is the same as the first.{% endcodeblock %}\n\n\nAnd all of those functions will not recommend to be used in c++, because those functions will not initialize class structure or v_ptr. free() function will not destruct parent class when sub class is destructed. In c++, maybe should always use <strong>new</strong> and <strong>delete</strong>!\n","slug":"2010-07-05-memory-allocation","published":1,"updated":"2017-06-05T03:02:01.000Z","photos":[],"link":"","_id":"cj3jjvy8x00001wmjkodwxvl1","content":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_rich_snippet_type\" content=\"none\"></p>\n<p><meta name=\"_su_description\" content=\"c language , memory allocation about malloc function , calloc function and realloc function, free function and new and delete. \"></p>\n<p><meta name=\"views\" content=\"1100\"></p>\n<p><meta name=\"_su_title\" content=\"memory allocation in c\"></p>\n<p><meta name=\"_su_keywords\" content=\"memory, allocation,malloc,calloc,realloc,free,new,delete,c,c++\"><br>In c language, there are three methods for memory allocation: malloc(), calloc(), realloc(). And one method to free memory: free().</p>\n<p>The <strong>malloc</strong> function prototype is :<strong> void* malloc(size_t size);</strong> This function will allocates a block of <em>size</em> bytes of memory, returning a pointer to  the beginning of the block. <span style=\"color: #ff0000;\">Attention:</span> this function is only for allocating memory! So the initial value of these memory will be Non-Zero. Maybe sometimes, it will be zero. Code for example:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&amp;lt;stdio.h&amp;gt;</div><div class=\"line\">#include&amp;lt;stdlib.h&amp;gt;</div><div class=\"line\">int main()&#123;</div><div class=\"line\"></div><div class=\"line\">\tint * a = NULL;</div><div class=\"line\">\ta = malloc(sizeof(int)*4);</div><div class=\"line\">\t// like int a[4], but those memory is in heap</div><div class=\"line\">\tfor(int i = 0; i&amp;lt; 4; i++)</div><div class=\"line\">\t\tprintf(&quot;%d &quot;,a[i]);</div><div class=\"line\">\treturn 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>The <strong>realloc</strong> function prototype is :<strong> void<em> realloc(void</em> ptr, size_t size);</strong> This function will reallocates a block of <em>size</em> bytes of memory,  returning a pointer to  the beginning of the block. If size is zero and ptr is not <strong>NULL</strong>, it will be used as <strong>free()</strong>. If prt is NULL and size is not zero, it will be used as <strong>malloc()</strong>. If ptr is NULL and size is zero, return value is some kind of memory which contains zero elements! Wooo~~~~. Look at the following codes:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">char * p = NULL;</div><div class=\"line\">printf(&quot;%x&quot;,(int)p); // will output 0</div><div class=\"line\"></div><div class=\"line\">p = (char*)realloc(p,0);</div><div class=\"line\">printf(&quot;%x&quot;,(int)p); // will output non-zero</div><div class=\"line\"></div><div class=\"line\">p = (char*)realloc(p,0);</div><div class=\"line\">printf(&quot;%x&quot;,(int)p);</div></pre></td></tr></table></figure>\n<p>why?! Because if this function is called successfully, it will return non-zero memory address. And you will see the third output <strong>subtract </strong>the second output will be<strong> 16 bytes</strong>. If ptr is not NULL , and size is non-zero, and current block can simply expand without moving,  the return value is the same as ptr. But there is not enough space for simply expand, it will execute<strong> free(ptr) and return malloc(size)</strong>. This function will become very <span style=\"color: #ff0000;\">dangerous!</span></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">char * k = (char*)realloc(NULL,100);</div><div class=\"line\">char * kbigger = (char*)realloc(k,104);</div><div class=\"line\">char * kbiggest = (char*)realloc(k,106); &lt;span style=&quot;color: #ff0000;&quot;&gt;// crash!&lt;/span&gt;</div></pre></td></tr></table></figure>\n<p>Safety called will be like the following:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">char * k = (char*)realloc(NULL,100);</div><div class=\"line\">k = (char*)realloc(k,4); // k&apos;s address is not changed</div><div class=\"line\">k = (char*)realloc(k,104); // k&apos;s address is changed</div></pre></td></tr></table></figure>\n<p>If there is not enough free memory to be allocated, this function will return NULL.<span style=\"color: #ff0000;\">Attention:</span> this function will not initialize those memory also.</p>\n<p><strong>calloc</strong>‘s prototype is void* calloc(int num, size_t size).</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">char* p = (char*)calloc(20,sizeof(char));</div><div class=\"line\"></div><div class=\"line\">// it is equal to</div><div class=\"line\"></div><div class=\"line\">char* p = (char*)malloc(20*sizeof(char));</div><div class=\"line\">memset(p,0,20*sizeof(char));</div></pre></td></tr></table></figure>\n<p><span style=\"color: #ff0000;\">But calloc is efficient!</span></p>\n<p><span style=\"color: #ff0000;\"> <strong> </strong><span style=\"color: #000000;\"><strong>free</strong> function is to delete memory which has been allocated. But free function will not assign the point to zero.</span></span></p>\n<p><span style=\"color: #ff0000;\"><span style=\"color: #000000;\"></span></span><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">char * p = (char*)calloc(100);</div><div class=\"line\"></div><div class=\"line\">p[0] = &apos;a&apos;;</div><div class=\"line\">printf(&quot;%c&quot;,p[0]);   // output &apos;a&apos;</div><div class=\"line\">printf(&quot;%x&quot;,(int)p);</div><div class=\"line\">free(p);</div><div class=\"line\">printf(&quot;%c&quot;,p[0]); // output nothing</div><div class=\"line\">printf(&quot;%x&quot;,(int)p); // the value is the same as the first.</div></pre></td></tr></table></figure></p>\n<p>And all of those functions will not recommend to be used in c++, because those functions will not initialize class structure or v_ptr. free() function will not destruct parent class when sub class is destructed. In c++, maybe should always use <strong>new</strong> and <strong>delete</strong>!</p>\n","site":{"data":{}},"excerpt":"","more":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_rich_snippet_type\" content=\"none\"></p>\n<p><meta name=\"_su_description\" content=\"c language , memory allocation about malloc function , calloc function and realloc function, free function and new and delete. \"></p>\n<p><meta name=\"views\" content=\"1100\"></p>\n<p><meta name=\"_su_title\" content=\"memory allocation in c\"></p>\n<p><meta name=\"_su_keywords\" content=\"memory, allocation,malloc,calloc,realloc,free,new,delete,c,c++\"><br>In c language, there are three methods for memory allocation: malloc(), calloc(), realloc(). And one method to free memory: free().</p>\n<p>The <strong>malloc</strong> function prototype is :<strong> void* malloc(size_t size);</strong> This function will allocates a block of <em>size</em> bytes of memory, returning a pointer to  the beginning of the block. <span style=\"color: #ff0000;\">Attention:</span> this function is only for allocating memory! So the initial value of these memory will be Non-Zero. Maybe sometimes, it will be zero. Code for example:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&amp;lt;stdio.h&amp;gt;</div><div class=\"line\">#include&amp;lt;stdlib.h&amp;gt;</div><div class=\"line\">int main()&#123;</div><div class=\"line\"></div><div class=\"line\">\tint * a = NULL;</div><div class=\"line\">\ta = malloc(sizeof(int)*4);</div><div class=\"line\">\t// like int a[4], but those memory is in heap</div><div class=\"line\">\tfor(int i = 0; i&amp;lt; 4; i++)</div><div class=\"line\">\t\tprintf(&quot;%d &quot;,a[i]);</div><div class=\"line\">\treturn 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>The <strong>realloc</strong> function prototype is :<strong> void<em> realloc(void</em> ptr, size_t size);</strong> This function will reallocates a block of <em>size</em> bytes of memory,  returning a pointer to  the beginning of the block. If size is zero and ptr is not <strong>NULL</strong>, it will be used as <strong>free()</strong>. If prt is NULL and size is not zero, it will be used as <strong>malloc()</strong>. If ptr is NULL and size is zero, return value is some kind of memory which contains zero elements! Wooo~~~~. Look at the following codes:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">char * p = NULL;</div><div class=\"line\">printf(&quot;%x&quot;,(int)p); // will output 0</div><div class=\"line\"></div><div class=\"line\">p = (char*)realloc(p,0);</div><div class=\"line\">printf(&quot;%x&quot;,(int)p); // will output non-zero</div><div class=\"line\"></div><div class=\"line\">p = (char*)realloc(p,0);</div><div class=\"line\">printf(&quot;%x&quot;,(int)p);</div></pre></td></tr></table></figure>\n<p>why?! Because if this function is called successfully, it will return non-zero memory address. And you will see the third output <strong>subtract </strong>the second output will be<strong> 16 bytes</strong>. If ptr is not NULL , and size is non-zero, and current block can simply expand without moving,  the return value is the same as ptr. But there is not enough space for simply expand, it will execute<strong> free(ptr) and return malloc(size)</strong>. This function will become very <span style=\"color: #ff0000;\">dangerous!</span></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">char * k = (char*)realloc(NULL,100);</div><div class=\"line\">char * kbigger = (char*)realloc(k,104);</div><div class=\"line\">char * kbiggest = (char*)realloc(k,106); &lt;span style=&quot;color: #ff0000;&quot;&gt;// crash!&lt;/span&gt;</div></pre></td></tr></table></figure>\n<p>Safety called will be like the following:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">char * k = (char*)realloc(NULL,100);</div><div class=\"line\">k = (char*)realloc(k,4); // k&apos;s address is not changed</div><div class=\"line\">k = (char*)realloc(k,104); // k&apos;s address is changed</div></pre></td></tr></table></figure>\n<p>If there is not enough free memory to be allocated, this function will return NULL.<span style=\"color: #ff0000;\">Attention:</span> this function will not initialize those memory also.</p>\n<p><strong>calloc</strong>‘s prototype is void* calloc(int num, size_t size).</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">char* p = (char*)calloc(20,sizeof(char));</div><div class=\"line\"></div><div class=\"line\">// it is equal to</div><div class=\"line\"></div><div class=\"line\">char* p = (char*)malloc(20*sizeof(char));</div><div class=\"line\">memset(p,0,20*sizeof(char));</div></pre></td></tr></table></figure>\n<p><span style=\"color: #ff0000;\">But calloc is efficient!</span></p>\n<p><span style=\"color: #ff0000;\"> <strong> </strong><span style=\"color: #000000;\"><strong>free</strong> function is to delete memory which has been allocated. But free function will not assign the point to zero.</span></span></p>\n<p><span style=\"color: #ff0000;\"><span style=\"color: #000000;\"></span></span><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">char * p = (char*)calloc(100);</div><div class=\"line\"></div><div class=\"line\">p[0] = &apos;a&apos;;</div><div class=\"line\">printf(&quot;%c&quot;,p[0]);   // output &apos;a&apos;</div><div class=\"line\">printf(&quot;%x&quot;,(int)p);</div><div class=\"line\">free(p);</div><div class=\"line\">printf(&quot;%c&quot;,p[0]); // output nothing</div><div class=\"line\">printf(&quot;%x&quot;,(int)p); // the value is the same as the first.</div></pre></td></tr></table></figure></p>\n<p>And all of those functions will not recommend to be used in c++, because those functions will not initialize class structure or v_ptr. free() function will not destruct parent class when sub class is destructed. In c++, maybe should always use <strong>new</strong> and <strong>delete</strong>!</p>\n"},{"layout":"post","title":"get absolute value(integer)","date":"2010-07-06T16:00:00.000Z","wordpress_id":244,"comments":1,"_content":"<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_description\" content=\"how to use bit operator and simple +-*/ to get absolute number.\" />\n<meta name=\"_su_keywords\" content=\"bit,operator,absolute,complement,number,priority\" />\n<meta name=\"_su_rich_snippet_type\" content=\"none\" />\n<meta name=\"_su_title\" content=\"bit operators absolute complement number priority\" />\n<meta name=\"views\" content=\"1060\" />\n<meta name=\"_wp_old_slug\" content=\"absolute-numberinteger\" />\nHow to get absolute (integer) only use bit operators and +-*/.(In gcc version 4.4.3 (Ubuntu 4.4.3-4ubuntu5)&nbsp; )\n<ul>\n\t<li>if number &gt;= 0 , then number &gt;&gt; 31 == 0</li>\n</ul>\n<ul>\n\t<li>if number &lt; 0&nbsp;&nbsp; , then number &gt;&gt; 31 == 0xFFFFFFFF</li>\n</ul>\nIf some number exclusive or( xor ) 0xFFFFFFFF means each bit becomes its \"opposite\" number. (1 becomes 0, and 0 becomes 1).And If a number xor 0x00000000 means nothing happened to this number. So:\n<ul>\n\t<li>number ^ 0xFFFFFFFF = ~number</li>\n\t<li>number ^ 0x00000000 = number</li>\n</ul>\nIn this question, you should also know something about<a href=\"http://en.wikipedia.org/wiki/Signed_number_representations#Ones.27_complement\"> complement number(see two's complement)</a>. When a number is negative, |number| = ~number +1 or you can use |number| = !number + 1. When a number is positive, |number| = number.\n\nIf you know above, then the goal of |x| = (x^(x&gt;&gt;31))+(~(x&gt;&gt;31)+1).\n\n(x^(x&gt;&gt;31)) means:\n<ul>\n\t<li>x &gt;= 0, x^(x&gt;&gt;31) = x^0x00000000 = x</li>\n\t<li>x &lt; 0, x^(x&gt;&gt;31) = x^0xFFFFFFFF = ~x</li>\n</ul>\nAnd (~(x&gt;&gt;31)+1)means:\n<ul>\n\t<li>x &gt;= 0, ~(x&gt;&gt;31)+1 = 0xFFFFFFFF+1 = 0</li>\n\t<li>x &lt; 0, ~(x&gt;&gt;31)+1 = 0x00000000+1 = 1</li>\n</ul>\nAnd we should take care of those brackets, because the priorities of operators are: ~ <span style=\"color: rgb(128, 0, 0); font-size: 16pt;\"><strong>&gt;</strong></span> */ <span style=\"color: rgb(153, 51, 0); font-size: 16pt;\"><strong>&gt;</strong></span> + - <strong><span style=\"color: rgb(153, 51, 0); font-size: 16pt;\">&gt;</span></strong> bit operators(&amp;,^,|)\n<table>\n<tbody>\n<tr>\n<th>Level</th>\n<th>Operator</th>\n<th>Description</th>\n<th>Grouping</th>\n</tr>\n<tr>\n<td>1</td>\n<td><tt>::</tt></td>\n<td>scope</td>\n<td>Left-to-right</td>\n</tr>\n<tr>\n<td>2</td>\n<td><tt>() [] . -&gt; ++ -- dynamic_cast static_cast  reinterpret_cast const_cast typeid</tt></td>\n<td>postfix</td>\n<td>Left-to-right</td>\n</tr>\n<tr>\n<td rowspan=\"3\">3</td>\n<td><tt>++ -- ~ ! sizeof new delete</tt></td>\n<td>unary  (prefix)</td>\n<td rowspan=\"3\">Right-to-left</td>\n</tr>\n<tr>\n<td><tt>* &amp;</tt></td>\n<td>indirection and reference (pointers)</td>\n</tr>\n<tr>\n<td><tt>+ -</tt></td>\n<td>unary sign operator</td>\n</tr>\n<tr>\n<td>4</td>\n<td><tt>(type)</tt></td>\n<td>type casting</td>\n<td>Right-to-left</td>\n</tr>\n<tr>\n<td>5</td>\n<td><tt>.* -&gt;*</tt></td>\n<td>pointer-to-member</td>\n<td>Left-to-right</td>\n</tr>\n<tr>\n<td>6</td>\n<td><tt>* / %</tt></td>\n<td>multiplicative</td>\n<td>Left-to-right</td>\n</tr>\n<tr>\n<td>7</td>\n<td><tt>+ -</tt></td>\n<td>additive</td>\n<td>Left-to-right</td>\n</tr>\n<tr>\n<td>8</td>\n<td><tt>&lt;&lt; &gt;&gt;</tt></td>\n<td>shift</td>\n<td>Left-to-right</td>\n</tr>\n<tr>\n<td>9</td>\n<td><tt>&lt; &gt; &lt;= &gt;=</tt></td>\n<td>relational</td>\n<td>Left-to-right</td>\n</tr>\n<tr>\n<td>10</td>\n<td><tt>== !=</tt></td>\n<td>equality</td>\n<td>Left-to-right</td>\n</tr>\n<tr>\n<td>11</td>\n<td><tt>&amp;</tt></td>\n<td>bitwise AND</td>\n<td>Left-to-right</td>\n</tr>\n<tr>\n<td>12</td>\n<td><tt>^</tt></td>\n<td>bitwise XOR</td>\n<td>Left-to-right</td>\n</tr>\n<tr>\n<td>13</td>\n<td><tt>|</tt></td>\n<td>bitwise OR</td>\n<td>Left-to-right</td>\n</tr>\n<tr>\n<td>14</td>\n<td><tt>&amp;&amp;</tt></td>\n<td>logical AND</td>\n<td>Left-to-right</td>\n</tr>\n<tr>\n<td>15</td>\n<td><tt>||</tt></td>\n<td>logical OR</td>\n<td>Left-to-right</td>\n</tr>\n<tr>\n<td>16</td>\n<td><tt>?:</tt></td>\n<td>conditional</td>\n<td>Right-to-left</td>\n</tr>\n<tr>\n<td>17</td>\n<td><tt>= *= /= %= += -= &gt;&gt;= &lt;&lt;= &amp;= ^= |=</tt></td>\n<td>assignment</td>\n<td>Right-to-left</td>\n</tr>\n<tr>\n<td>18</td>\n<td><tt>,</tt></td>\n<td>comma</td>\n<td>Left-to-right</td>\n</tr>\n</tbody>\n</table>\n","source":"_posts/2010-07-07-absolute-valueinteger.markdown","raw":"---\nlayout: post\ntitle: \"get absolute value(integer)\"\ndate: 2010-7-7\nwordpress_id: 244\ncomments: true\ncategories: [\"absolute\", \"bit\", \"c\", \"code\", \"complement\", \"math\", \"math\", \"priority\"]\n---\n<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_description\" content=\"how to use bit operator and simple +-*/ to get absolute number.\" />\n<meta name=\"_su_keywords\" content=\"bit,operator,absolute,complement,number,priority\" />\n<meta name=\"_su_rich_snippet_type\" content=\"none\" />\n<meta name=\"_su_title\" content=\"bit operators absolute complement number priority\" />\n<meta name=\"views\" content=\"1060\" />\n<meta name=\"_wp_old_slug\" content=\"absolute-numberinteger\" />\nHow to get absolute (integer) only use bit operators and +-*/.(In gcc version 4.4.3 (Ubuntu 4.4.3-4ubuntu5)&nbsp; )\n<ul>\n\t<li>if number &gt;= 0 , then number &gt;&gt; 31 == 0</li>\n</ul>\n<ul>\n\t<li>if number &lt; 0&nbsp;&nbsp; , then number &gt;&gt; 31 == 0xFFFFFFFF</li>\n</ul>\nIf some number exclusive or( xor ) 0xFFFFFFFF means each bit becomes its \"opposite\" number. (1 becomes 0, and 0 becomes 1).And If a number xor 0x00000000 means nothing happened to this number. So:\n<ul>\n\t<li>number ^ 0xFFFFFFFF = ~number</li>\n\t<li>number ^ 0x00000000 = number</li>\n</ul>\nIn this question, you should also know something about<a href=\"http://en.wikipedia.org/wiki/Signed_number_representations#Ones.27_complement\"> complement number(see two's complement)</a>. When a number is negative, |number| = ~number +1 or you can use |number| = !number + 1. When a number is positive, |number| = number.\n\nIf you know above, then the goal of |x| = (x^(x&gt;&gt;31))+(~(x&gt;&gt;31)+1).\n\n(x^(x&gt;&gt;31)) means:\n<ul>\n\t<li>x &gt;= 0, x^(x&gt;&gt;31) = x^0x00000000 = x</li>\n\t<li>x &lt; 0, x^(x&gt;&gt;31) = x^0xFFFFFFFF = ~x</li>\n</ul>\nAnd (~(x&gt;&gt;31)+1)means:\n<ul>\n\t<li>x &gt;= 0, ~(x&gt;&gt;31)+1 = 0xFFFFFFFF+1 = 0</li>\n\t<li>x &lt; 0, ~(x&gt;&gt;31)+1 = 0x00000000+1 = 1</li>\n</ul>\nAnd we should take care of those brackets, because the priorities of operators are: ~ <span style=\"color: rgb(128, 0, 0); font-size: 16pt;\"><strong>&gt;</strong></span> */ <span style=\"color: rgb(153, 51, 0); font-size: 16pt;\"><strong>&gt;</strong></span> + - <strong><span style=\"color: rgb(153, 51, 0); font-size: 16pt;\">&gt;</span></strong> bit operators(&amp;,^,|)\n<table>\n<tbody>\n<tr>\n<th>Level</th>\n<th>Operator</th>\n<th>Description</th>\n<th>Grouping</th>\n</tr>\n<tr>\n<td>1</td>\n<td><tt>::</tt></td>\n<td>scope</td>\n<td>Left-to-right</td>\n</tr>\n<tr>\n<td>2</td>\n<td><tt>() [] . -&gt; ++ -- dynamic_cast static_cast  reinterpret_cast const_cast typeid</tt></td>\n<td>postfix</td>\n<td>Left-to-right</td>\n</tr>\n<tr>\n<td rowspan=\"3\">3</td>\n<td><tt>++ -- ~ ! sizeof new delete</tt></td>\n<td>unary  (prefix)</td>\n<td rowspan=\"3\">Right-to-left</td>\n</tr>\n<tr>\n<td><tt>* &amp;</tt></td>\n<td>indirection and reference (pointers)</td>\n</tr>\n<tr>\n<td><tt>+ -</tt></td>\n<td>unary sign operator</td>\n</tr>\n<tr>\n<td>4</td>\n<td><tt>(type)</tt></td>\n<td>type casting</td>\n<td>Right-to-left</td>\n</tr>\n<tr>\n<td>5</td>\n<td><tt>.* -&gt;*</tt></td>\n<td>pointer-to-member</td>\n<td>Left-to-right</td>\n</tr>\n<tr>\n<td>6</td>\n<td><tt>* / %</tt></td>\n<td>multiplicative</td>\n<td>Left-to-right</td>\n</tr>\n<tr>\n<td>7</td>\n<td><tt>+ -</tt></td>\n<td>additive</td>\n<td>Left-to-right</td>\n</tr>\n<tr>\n<td>8</td>\n<td><tt>&lt;&lt; &gt;&gt;</tt></td>\n<td>shift</td>\n<td>Left-to-right</td>\n</tr>\n<tr>\n<td>9</td>\n<td><tt>&lt; &gt; &lt;= &gt;=</tt></td>\n<td>relational</td>\n<td>Left-to-right</td>\n</tr>\n<tr>\n<td>10</td>\n<td><tt>== !=</tt></td>\n<td>equality</td>\n<td>Left-to-right</td>\n</tr>\n<tr>\n<td>11</td>\n<td><tt>&amp;</tt></td>\n<td>bitwise AND</td>\n<td>Left-to-right</td>\n</tr>\n<tr>\n<td>12</td>\n<td><tt>^</tt></td>\n<td>bitwise XOR</td>\n<td>Left-to-right</td>\n</tr>\n<tr>\n<td>13</td>\n<td><tt>|</tt></td>\n<td>bitwise OR</td>\n<td>Left-to-right</td>\n</tr>\n<tr>\n<td>14</td>\n<td><tt>&amp;&amp;</tt></td>\n<td>logical AND</td>\n<td>Left-to-right</td>\n</tr>\n<tr>\n<td>15</td>\n<td><tt>||</tt></td>\n<td>logical OR</td>\n<td>Left-to-right</td>\n</tr>\n<tr>\n<td>16</td>\n<td><tt>?:</tt></td>\n<td>conditional</td>\n<td>Right-to-left</td>\n</tr>\n<tr>\n<td>17</td>\n<td><tt>= *= /= %= += -= &gt;&gt;= &lt;&lt;= &amp;= ^= |=</tt></td>\n<td>assignment</td>\n<td>Right-to-left</td>\n</tr>\n<tr>\n<td>18</td>\n<td><tt>,</tt></td>\n<td>comma</td>\n<td>Left-to-right</td>\n</tr>\n</tbody>\n</table>\n","slug":"2010-07-07-absolute-valueinteger","published":1,"updated":"2017-06-05T03:02:17.000Z","photos":[],"link":"","_id":"cj3jjw9ff00001zmj8pa8iqqs","content":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_description\" content=\"how to use bit operator and simple +-*/ to get absolute number.\"></p>\n<p><meta name=\"_su_keywords\" content=\"bit,operator,absolute,complement,number,priority\"></p>\n<p><meta name=\"_su_rich_snippet_type\" content=\"none\"></p>\n<p><meta name=\"_su_title\" content=\"bit operators absolute complement number priority\"></p>\n<p><meta name=\"views\" content=\"1060\"></p>\n<p><meta name=\"_wp_old_slug\" content=\"absolute-numberinteger\"><br>How to get absolute (integer) only use bit operators and +-*/.(In gcc version 4.4.3 (Ubuntu 4.4.3-4ubuntu5)&nbsp; )</p>\n<p><ul><br>    <li>if number &gt;= 0 , then number &gt;&gt; 31 == 0</li><br></ul></p>\n<p><ul><br>    <li>if number &lt; 0&nbsp;&nbsp; , then number &gt;&gt; 31 == 0xFFFFFFFF</li><br></ul><br>If some number exclusive or( xor ) 0xFFFFFFFF means each bit becomes its “opposite” number. (1 becomes 0, and 0 becomes 1).And If a number xor 0x00000000 means nothing happened to this number. So:</p>\n<p><ul><br>    <li>number ^ 0xFFFFFFFF = ~number</li><br>    <li>number ^ 0x00000000 = number</li><br></ul><br>In this question, you should also know something about<a href=\"http://en.wikipedia.org/wiki/Signed_number_representations#Ones.27_complement\" target=\"_blank\" rel=\"external\"> complement number(see two’s complement)</a>. When a number is negative, |number| = ~number +1 or you can use |number| = !number + 1. When a number is positive, |number| = number.</p>\n<p>If you know above, then the goal of |x| = (x^(x&gt;&gt;31))+(~(x&gt;&gt;31)+1).</p>\n<p>(x^(x&gt;&gt;31)) means:</p>\n<p><ul><br>    <li>x &gt;= 0, x^(x&gt;&gt;31) = x^0x00000000 = x</li><br>    <li>x &lt; 0, x^(x&gt;&gt;31) = x^0xFFFFFFFF = ~x</li><br></ul><br>And (~(x&gt;&gt;31)+1)means:</p>\n<p><ul><br>    <li>x &gt;= 0, ~(x&gt;&gt;31)+1 = 0xFFFFFFFF+1 = 0</li><br>    <li>x &lt; 0, ~(x&gt;&gt;31)+1 = 0x00000000+1 = 1</li><br></ul><br>And we should take care of those brackets, because the priorities of operators are: ~ <span style=\"color: rgb(128, 0, 0); font-size: 16pt;\"><strong>&gt;</strong></span> */ <span style=\"color: rgb(153, 51, 0); font-size: 16pt;\"><strong>&gt;</strong></span> + - <strong><span style=\"color: rgb(153, 51, 0); font-size: 16pt;\">&gt;</span></strong> bit operators(&amp;,^,|)</p>\n<table><br><tbody><br><tr><br><th>Level</th><br><th>Operator</th><br><th>Description</th><br><th>Grouping</th><br></tr><br><tr><br><td>1</td><br><td><tt>::</tt></td><br><td>scope</td><br><td>Left-to-right</td><br></tr><br><tr><br><td>2</td><br><td><tt>() [] . -&gt; ++ – dynamic_cast static_cast  reinterpret_cast const_cast typeid</tt></td><br><td>postfix</td><br><td>Left-to-right</td><br></tr><br><tr><br><td rowspan=\"3\">3</td><br><td><tt>++ – ~ ! sizeof new delete</tt></td><br><td>unary  (prefix)</td><br><td rowspan=\"3\">Right-to-left</td><br></tr><br><tr><br><td><tt><em> &amp;</em></tt></td><br><td>indirection and reference (pointers)</td><br></tr><br><tr><br><td><tt>+ -</tt></td><br><td>unary sign operator</td><br></tr><br><tr><br><td>4</td><br><td><tt>(type)</tt></td><br><td>type casting</td><br><td>Right-to-left</td><br></tr><br><tr><br><td>5</td><br><td><tt>. -&gt;<em></em></tt></td><br><td>pointer-to-member</td><br><td>Left-to-right</td><br></tr><br><tr><br><td>6</td><br><td><tt> / %</tt></td><br><td>multiplicative</td><br><td>Left-to-right</td><br></tr><br><tr><br><td>7</td><br><td><tt>+ -</tt></td><br><td>additive</td><br><td>Left-to-right</td><br></tr><br><tr><br><td>8</td><br><td><tt>&lt;&lt; &gt;&gt;</tt></td><br><td>shift</td><br><td>Left-to-right</td><br></tr><br><tr><br><td>9</td><br><td><tt>&lt; &gt; &lt;= &gt;=</tt></td><br><td>relational</td><br><td>Left-to-right</td><br></tr><br><tr><br><td>10</td><br><td><tt>== !=</tt></td><br><td>equality</td><br><td>Left-to-right</td><br></tr><br><tr><br><td>11</td><br><td><tt>&amp;</tt></td><br><td>bitwise AND</td><br><td>Left-to-right</td><br></tr><br><tr><br><td>12</td><br><td><tt>^</tt></td><br><td>bitwise XOR</td><br><td>Left-to-right</td><br></tr><br><tr><br><td>13</td><br><td><tt>|</tt></td><br><td>bitwise OR</td><br><td>Left-to-right</td><br></tr><br><tr><br><td>14</td><br><td><tt>&amp;&amp;</tt></td><br><td>logical AND</td><br><td>Left-to-right</td><br></tr><br><tr><br><td>15</td><br><td><tt>||</tt></td><br><td>logical OR</td><br><td>Left-to-right</td><br></tr><br><tr><br><td>16</td><br><td><tt>?:</tt></td><br><td>conditional</td><br><td>Right-to-left</td><br></tr><br><tr><br><td>17</td><br><td><tt>= *= /= %= += -= &gt;&gt;= &lt;&lt;= &amp;= ^= |=</tt></td><br><td>assignment</td><br><td>Right-to-left</td><br></tr><br><tr><br><td>18</td><br><td><tt>,</tt></td><br><td>comma</td><br><td>Left-to-right</td><br></tr><br></tbody><br></table>\n","site":{"data":{}},"excerpt":"","more":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_description\" content=\"how to use bit operator and simple +-*/ to get absolute number.\"></p>\n<p><meta name=\"_su_keywords\" content=\"bit,operator,absolute,complement,number,priority\"></p>\n<p><meta name=\"_su_rich_snippet_type\" content=\"none\"></p>\n<p><meta name=\"_su_title\" content=\"bit operators absolute complement number priority\"></p>\n<p><meta name=\"views\" content=\"1060\"></p>\n<p><meta name=\"_wp_old_slug\" content=\"absolute-numberinteger\"><br>How to get absolute (integer) only use bit operators and +-*/.(In gcc version 4.4.3 (Ubuntu 4.4.3-4ubuntu5)&nbsp; )</p>\n<p><ul><br>    <li>if number &gt;= 0 , then number &gt;&gt; 31 == 0</li><br></ul></p>\n<p><ul><br>    <li>if number &lt; 0&nbsp;&nbsp; , then number &gt;&gt; 31 == 0xFFFFFFFF</li><br></ul><br>If some number exclusive or( xor ) 0xFFFFFFFF means each bit becomes its “opposite” number. (1 becomes 0, and 0 becomes 1).And If a number xor 0x00000000 means nothing happened to this number. So:</p>\n<p><ul><br>    <li>number ^ 0xFFFFFFFF = ~number</li><br>    <li>number ^ 0x00000000 = number</li><br></ul><br>In this question, you should also know something about<a href=\"http://en.wikipedia.org/wiki/Signed_number_representations#Ones.27_complement\" target=\"_blank\" rel=\"external\"> complement number(see two’s complement)</a>. When a number is negative, |number| = ~number +1 or you can use |number| = !number + 1. When a number is positive, |number| = number.</p>\n<p>If you know above, then the goal of |x| = (x^(x&gt;&gt;31))+(~(x&gt;&gt;31)+1).</p>\n<p>(x^(x&gt;&gt;31)) means:</p>\n<p><ul><br>    <li>x &gt;= 0, x^(x&gt;&gt;31) = x^0x00000000 = x</li><br>    <li>x &lt; 0, x^(x&gt;&gt;31) = x^0xFFFFFFFF = ~x</li><br></ul><br>And (~(x&gt;&gt;31)+1)means:</p>\n<p><ul><br>    <li>x &gt;= 0, ~(x&gt;&gt;31)+1 = 0xFFFFFFFF+1 = 0</li><br>    <li>x &lt; 0, ~(x&gt;&gt;31)+1 = 0x00000000+1 = 1</li><br></ul><br>And we should take care of those brackets, because the priorities of operators are: ~ <span style=\"color: rgb(128, 0, 0); font-size: 16pt;\"><strong>&gt;</strong></span> */ <span style=\"color: rgb(153, 51, 0); font-size: 16pt;\"><strong>&gt;</strong></span> + - <strong><span style=\"color: rgb(153, 51, 0); font-size: 16pt;\">&gt;</span></strong> bit operators(&amp;,^,|)</p>\n<table><br><tbody><br><tr><br><th>Level</th><br><th>Operator</th><br><th>Description</th><br><th>Grouping</th><br></tr><br><tr><br><td>1</td><br><td><tt>::</tt></td><br><td>scope</td><br><td>Left-to-right</td><br></tr><br><tr><br><td>2</td><br><td><tt>() [] . -&gt; ++ – dynamic_cast static_cast  reinterpret_cast const_cast typeid</tt></td><br><td>postfix</td><br><td>Left-to-right</td><br></tr><br><tr><br><td rowspan=\"3\">3</td><br><td><tt>++ – ~ ! sizeof new delete</tt></td><br><td>unary  (prefix)</td><br><td rowspan=\"3\">Right-to-left</td><br></tr><br><tr><br><td><tt><em> &amp;</em></tt></td><br><td>indirection and reference (pointers)</td><br></tr><br><tr><br><td><tt>+ -</tt></td><br><td>unary sign operator</td><br></tr><br><tr><br><td>4</td><br><td><tt>(type)</tt></td><br><td>type casting</td><br><td>Right-to-left</td><br></tr><br><tr><br><td>5</td><br><td><tt>. -&gt;<em></em></tt></td><br><td>pointer-to-member</td><br><td>Left-to-right</td><br></tr><br><tr><br><td>6</td><br><td><tt> / %</tt></td><br><td>multiplicative</td><br><td>Left-to-right</td><br></tr><br><tr><br><td>7</td><br><td><tt>+ -</tt></td><br><td>additive</td><br><td>Left-to-right</td><br></tr><br><tr><br><td>8</td><br><td><tt>&lt;&lt; &gt;&gt;</tt></td><br><td>shift</td><br><td>Left-to-right</td><br></tr><br><tr><br><td>9</td><br><td><tt>&lt; &gt; &lt;= &gt;=</tt></td><br><td>relational</td><br><td>Left-to-right</td><br></tr><br><tr><br><td>10</td><br><td><tt>== !=</tt></td><br><td>equality</td><br><td>Left-to-right</td><br></tr><br><tr><br><td>11</td><br><td><tt>&amp;</tt></td><br><td>bitwise AND</td><br><td>Left-to-right</td><br></tr><br><tr><br><td>12</td><br><td><tt>^</tt></td><br><td>bitwise XOR</td><br><td>Left-to-right</td><br></tr><br><tr><br><td>13</td><br><td><tt>|</tt></td><br><td>bitwise OR</td><br><td>Left-to-right</td><br></tr><br><tr><br><td>14</td><br><td><tt>&amp;&amp;</tt></td><br><td>logical AND</td><br><td>Left-to-right</td><br></tr><br><tr><br><td>15</td><br><td><tt>||</tt></td><br><td>logical OR</td><br><td>Left-to-right</td><br></tr><br><tr><br><td>16</td><br><td><tt>?:</tt></td><br><td>conditional</td><br><td>Right-to-left</td><br></tr><br><tr><br><td>17</td><br><td><tt>= *= /= %= += -= &gt;&gt;= &lt;&lt;= &amp;= ^= |=</tt></td><br><td>assignment</td><br><td>Right-to-left</td><br></tr><br><tr><br><td>18</td><br><td><tt>,</tt></td><br><td>comma</td><br><td>Left-to-right</td><br></tr><br></tbody><br></table>\n"},{"layout":"post","title":"print only display one row","date":"2010-07-08T16:00:00.000Z","wordpress_id":254,"comments":1,"_content":"<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_description\" content=\"这篇文章是写如何在界面上只输出一行，而不用写到另外一行的方法。中文不知道专业名称是什么，英语也不知道怎么说这个才能被搜索到。\n\nthis article is about how to print one row only, and do not need to write to another row. I don't know how to describe it in Chinese or English. And I also don't know this article how to be searched.\" />\n<meta name=\"_su_keywords\" content=\"c++,fflush,\\n,\\r,output,printf\" />\n<meta name=\"_su_rich_snippet_type\" content=\"none\" />\n<meta name=\"_su_title\" content=\"print only display one row process bar\" />\n<meta name=\"views\" content=\"690\" />\n这篇文章是写如何在界面上只输出一行，而不用写到另外一行的方法。中文不知道专业名称是什么，英语也不知道怎么说这个才能被搜索到。\n\nthis article is about how to print one row only, and do not need to write infos to another row. I don't know how to describe it in Chinese or English. And I also don't know this article how to be searched.\n\nThis effect is like use wget to downloading files. You will see the process bar moving. How to display this effect? Use the following code:\n\n\n{% codeblock %}#include&lt;cstdio&gt;\n#include&lt;unistd.h&gt;\nusing namespace std;\n\nint main(){\n    printf(\"====&gt;\\r\");\n    fflush(stdout);       #flush buffer\n    sleep(2);             # wait\n    printf(\"======&gt;\\r\");\n    fflush(stdout);\n    sleep(3);\n    printf(\"========&gt;\\n\");\n    return 0;\n}{% endcodeblock %}\n\n\nIn the above code, '\\r' is \"Enter\" character, and '\\n' is “newline” character. If input '\\n' into printf(), it will go to a new line. If input '\\r' into printf(), the output cursor will go to the beginning. If you do not use fflush(stdout); you will never your output without '\\n'.\n","source":"_posts/2010-07-09-print-display-row.markdown","raw":"---\nlayout: post\ntitle: \"print only display one row\"\ndate: 2010-7-9\nwordpress_id: 254\ncomments: true\ncategories: [\"c\", \"cc\", \"code\", \"fflush\", \"n\", \"output\", \"printf\", \"r\"]\n---\n<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_description\" content=\"这篇文章是写如何在界面上只输出一行，而不用写到另外一行的方法。中文不知道专业名称是什么，英语也不知道怎么说这个才能被搜索到。\n\nthis article is about how to print one row only, and do not need to write to another row. I don't know how to describe it in Chinese or English. And I also don't know this article how to be searched.\" />\n<meta name=\"_su_keywords\" content=\"c++,fflush,\\n,\\r,output,printf\" />\n<meta name=\"_su_rich_snippet_type\" content=\"none\" />\n<meta name=\"_su_title\" content=\"print only display one row process bar\" />\n<meta name=\"views\" content=\"690\" />\n这篇文章是写如何在界面上只输出一行，而不用写到另外一行的方法。中文不知道专业名称是什么，英语也不知道怎么说这个才能被搜索到。\n\nthis article is about how to print one row only, and do not need to write infos to another row. I don't know how to describe it in Chinese or English. And I also don't know this article how to be searched.\n\nThis effect is like use wget to downloading files. You will see the process bar moving. How to display this effect? Use the following code:\n\n\n{% codeblock %}#include&lt;cstdio&gt;\n#include&lt;unistd.h&gt;\nusing namespace std;\n\nint main(){\n    printf(\"====&gt;\\r\");\n    fflush(stdout);       #flush buffer\n    sleep(2);             # wait\n    printf(\"======&gt;\\r\");\n    fflush(stdout);\n    sleep(3);\n    printf(\"========&gt;\\n\");\n    return 0;\n}{% endcodeblock %}\n\n\nIn the above code, '\\r' is \"Enter\" character, and '\\n' is “newline” character. If input '\\n' into printf(), it will go to a new line. If input '\\r' into printf(), the output cursor will go to the beginning. If you do not use fflush(stdout); you will never your output without '\\n'.\n","slug":"2010-07-09-print-display-row","published":1,"updated":"2017-06-05T03:02:24.000Z","photos":[],"link":"","_id":"cj3jjwf9p000022mjoma8xsun","content":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p>&lt;meta name=”_su_description” content=”这篇文章是写如何在界面上只输出一行，而不用写到另外一行的方法。中文不知道专业名称是什么，英语也不知道怎么说这个才能被搜索到。</p>\n<p>this article is about how to print one row only, and do not need to write to another row. I don’t know how to describe it in Chinese or English. And I also don’t know this article how to be searched.” /&gt;</p>\n<p><meta name=\"_su_keywords\" content=\"c++,fflush,\\n,\\r,output,printf\"></p>\n<p><meta name=\"_su_rich_snippet_type\" content=\"none\"></p>\n<p><meta name=\"_su_title\" content=\"print only display one row process bar\"></p>\n<p><meta name=\"views\" content=\"690\"><br>这篇文章是写如何在界面上只输出一行，而不用写到另外一行的方法。中文不知道专业名称是什么，英语也不知道怎么说这个才能被搜索到。</p>\n<p>this article is about how to print one row only, and do not need to write infos to another row. I don’t know how to describe it in Chinese or English. And I also don’t know this article how to be searched.</p>\n<p>This effect is like use wget to downloading files. You will see the process bar moving. How to display this effect? Use the following code:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&amp;lt;cstdio&amp;gt;</div><div class=\"line\">#include&amp;lt;unistd.h&amp;gt;</div><div class=\"line\">using namespace std;</div><div class=\"line\"></div><div class=\"line\">int main()&#123;</div><div class=\"line\">    printf(&quot;====&amp;gt;\\r&quot;);</div><div class=\"line\">    fflush(stdout);       #flush buffer</div><div class=\"line\">    sleep(2);             # wait</div><div class=\"line\">    printf(&quot;======&amp;gt;\\r&quot;);</div><div class=\"line\">    fflush(stdout);</div><div class=\"line\">    sleep(3);</div><div class=\"line\">    printf(&quot;========&amp;gt;\\n&quot;);</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>In the above code, ‘\\r’ is “Enter” character, and ‘\\n’ is “newline” character. If input ‘\\n’ into printf(), it will go to a new line. If input ‘\\r’ into printf(), the output cursor will go to the beginning. If you do not use fflush(stdout); you will never your output without ‘\\n’.</p>\n","site":{"data":{}},"excerpt":"","more":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p>&lt;meta name=”_su_description” content=”这篇文章是写如何在界面上只输出一行，而不用写到另外一行的方法。中文不知道专业名称是什么，英语也不知道怎么说这个才能被搜索到。</p>\n<p>this article is about how to print one row only, and do not need to write to another row. I don’t know how to describe it in Chinese or English. And I also don’t know this article how to be searched.” /&gt;</p>\n<p><meta name=\"_su_keywords\" content=\"c++,fflush,\\n,\\r,output,printf\"></p>\n<p><meta name=\"_su_rich_snippet_type\" content=\"none\"></p>\n<p><meta name=\"_su_title\" content=\"print only display one row process bar\"></p>\n<p><meta name=\"views\" content=\"690\"><br>这篇文章是写如何在界面上只输出一行，而不用写到另外一行的方法。中文不知道专业名称是什么，英语也不知道怎么说这个才能被搜索到。</p>\n<p>this article is about how to print one row only, and do not need to write infos to another row. I don’t know how to describe it in Chinese or English. And I also don’t know this article how to be searched.</p>\n<p>This effect is like use wget to downloading files. You will see the process bar moving. How to display this effect? Use the following code:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&amp;lt;cstdio&amp;gt;</div><div class=\"line\">#include&amp;lt;unistd.h&amp;gt;</div><div class=\"line\">using namespace std;</div><div class=\"line\"></div><div class=\"line\">int main()&#123;</div><div class=\"line\">    printf(&quot;====&amp;gt;\\r&quot;);</div><div class=\"line\">    fflush(stdout);       #flush buffer</div><div class=\"line\">    sleep(2);             # wait</div><div class=\"line\">    printf(&quot;======&amp;gt;\\r&quot;);</div><div class=\"line\">    fflush(stdout);</div><div class=\"line\">    sleep(3);</div><div class=\"line\">    printf(&quot;========&amp;gt;\\n&quot;);</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>In the above code, ‘\\r’ is “Enter” character, and ‘\\n’ is “newline” character. If input ‘\\n’ into printf(), it will go to a new line. If input ‘\\r’ into printf(), the output cursor will go to the beginning. If you do not use fflush(stdout); you will never your output without ‘\\n’.</p>\n"},{"layout":"post","title":"Quick Sort","date":"2010-07-15T16:00:00.000Z","wordpress_id":262,"comments":1,"_content":"<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_rich_snippet_type\" content=\"none\" />\n<meta name=\"_su_description\" content=\"Optimize QuickSort\" />\n<meta name=\"_su_keywords\" content=\"Optimize,Quick,Sort\" />\n<meta name=\"_su_title\" content=\"Quick Sort\" />\n<meta name=\"views\" content=\"851\" />\nthe simplest quick sort is like following:\n\n\n{% codeblock %}#include&lt;iostream&gt;\n\nusing namespace std;\n\nint Partition(int * a, int start, int end){\n    swap(a[start],a[start+rand()%(end-start+1)]);\n    int p = a[start];\n    while(start&lt;end){\n        while(start&lt;end &amp;&amp; a[end] &gt;= p) end--;\n        swap(a[start],a[end]);\n        while(start&lt;end &amp;&amp; a[start]&lt;= p) start++;\n        swap(a[start],a[end];)\n    }\n    return start;\n}\n\nvoid QuickSort(int * a, int start, int end){\n\n     if(end-start&gt;=1){\n         int mid = Partition(a,start, end);\n         QuickSort(a,start,mid-1);\n         QuickSort(a,mid+1,end);\n     }\n}{% endcodeblock %}\n\n\nBut If you want do some optimization in QuickSort, first when the number of elements is small than 10, do insert sort not quick sort. Second, To find the near-like middle element of array, and not use the random one. Third, when the array is already sorted , do not use quick sort. and Reduce the function call. You will the following codes:\n\n\n{% codeblock %}#include&lt;iostream&gt;\n\nusing namespace std;\n\nvoid QuickSort(int *a, int start, int end){\n\n    if(end - start &lt;= 0 ) // or you can throw some exceptions!\n       return ;\n\n// if the number of element is less than 8, do insert sort;\n\n    if(end - start&lt;7){\n\n      for(int i = start; i &lt;= end; i++){\n\n         for(int j = i; j &gt; start &amp;&amp; a[j] &lt; a[j-1]; j--)\n\n             swap(a[j],a[j-1]);\n\n      }\n\n      return;\n    }\n\n// check if the array is sorted.\n\n    bool isSorted = true;\n    for(int i = start; i &lt; end; i++){\n       if(a[i]&gt;a[i+1])\n         isSorted = false;\n    }\n    if(isSorted)\n      return;\n\n// get the near-like middle element, use 3 point middle method.\n\n    int dm = start+(end-start)/2;\n\n    int dl, dh;\n\n    if(end-start&lt;40){\n\n       int d = (end-start+1)/8;\n\n       dl = mid(a, start,start+d,start+2*d);\n\n       dm = mid(a,dm-d,dm,dm+d);\n\n       dh = mid(a,end-2*d,end-d, end);\n\n       dm = mid(a,dl,dm,dh);\n\n    }\n\n// do partition\n\n    swap(a[start],a[dm]);\n\n    int low=start, high = end, p = a[start];\n    while(low&lt;high){\n        while(low &lt; high &amp;&amp; a[high]&gt;= p) high--;\n        swap(a[low],a[high]);\n        while(low&lt;high &amp;&amp; a[low]&lt;= p) low ++;\n        swap(a[low],a[high]);\n    }\n    QuickSort(a,start, low-1);\n    QuickSort(a,low+1,end);\n}{% endcodeblock %}\n \n","source":"_posts/2010-07-16-quick-sort.markdown","raw":"---\nlayout: post\ntitle: \"Quick Sort\"\ndate: 2010-7-16\nwordpress_id: 262\ncomments: true\ncategories: [\"algorithm\", \"c\", \"cc\", \"optimiz\", \"quick\", \"see-hear\", \"sort\"]\n---\n<meta name=\"_edit_last\" content=\"1\" />\n<meta name=\"_su_rich_snippet_type\" content=\"none\" />\n<meta name=\"_su_description\" content=\"Optimize QuickSort\" />\n<meta name=\"_su_keywords\" content=\"Optimize,Quick,Sort\" />\n<meta name=\"_su_title\" content=\"Quick Sort\" />\n<meta name=\"views\" content=\"851\" />\nthe simplest quick sort is like following:\n\n\n{% codeblock %}#include&lt;iostream&gt;\n\nusing namespace std;\n\nint Partition(int * a, int start, int end){\n    swap(a[start],a[start+rand()%(end-start+1)]);\n    int p = a[start];\n    while(start&lt;end){\n        while(start&lt;end &amp;&amp; a[end] &gt;= p) end--;\n        swap(a[start],a[end]);\n        while(start&lt;end &amp;&amp; a[start]&lt;= p) start++;\n        swap(a[start],a[end];)\n    }\n    return start;\n}\n\nvoid QuickSort(int * a, int start, int end){\n\n     if(end-start&gt;=1){\n         int mid = Partition(a,start, end);\n         QuickSort(a,start,mid-1);\n         QuickSort(a,mid+1,end);\n     }\n}{% endcodeblock %}\n\n\nBut If you want do some optimization in QuickSort, first when the number of elements is small than 10, do insert sort not quick sort. Second, To find the near-like middle element of array, and not use the random one. Third, when the array is already sorted , do not use quick sort. and Reduce the function call. You will the following codes:\n\n\n{% codeblock %}#include&lt;iostream&gt;\n\nusing namespace std;\n\nvoid QuickSort(int *a, int start, int end){\n\n    if(end - start &lt;= 0 ) // or you can throw some exceptions!\n       return ;\n\n// if the number of element is less than 8, do insert sort;\n\n    if(end - start&lt;7){\n\n      for(int i = start; i &lt;= end; i++){\n\n         for(int j = i; j &gt; start &amp;&amp; a[j] &lt; a[j-1]; j--)\n\n             swap(a[j],a[j-1]);\n\n      }\n\n      return;\n    }\n\n// check if the array is sorted.\n\n    bool isSorted = true;\n    for(int i = start; i &lt; end; i++){\n       if(a[i]&gt;a[i+1])\n         isSorted = false;\n    }\n    if(isSorted)\n      return;\n\n// get the near-like middle element, use 3 point middle method.\n\n    int dm = start+(end-start)/2;\n\n    int dl, dh;\n\n    if(end-start&lt;40){\n\n       int d = (end-start+1)/8;\n\n       dl = mid(a, start,start+d,start+2*d);\n\n       dm = mid(a,dm-d,dm,dm+d);\n\n       dh = mid(a,end-2*d,end-d, end);\n\n       dm = mid(a,dl,dm,dh);\n\n    }\n\n// do partition\n\n    swap(a[start],a[dm]);\n\n    int low=start, high = end, p = a[start];\n    while(low&lt;high){\n        while(low &lt; high &amp;&amp; a[high]&gt;= p) high--;\n        swap(a[low],a[high]);\n        while(low&lt;high &amp;&amp; a[low]&lt;= p) low ++;\n        swap(a[low],a[high]);\n    }\n    QuickSort(a,start, low-1);\n    QuickSort(a,low+1,end);\n}{% endcodeblock %}\n \n","slug":"2010-07-16-quick-sort","published":1,"updated":"2017-06-05T03:02:38.000Z","photos":[],"link":"","_id":"cj3jjwpo6000026mjxt1ep5bp","content":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_rich_snippet_type\" content=\"none\"></p>\n<p><meta name=\"_su_description\" content=\"Optimize QuickSort\"></p>\n<p><meta name=\"_su_keywords\" content=\"Optimize,Quick,Sort\"></p>\n<p><meta name=\"_su_title\" content=\"Quick Sort\"></p>\n<p><meta name=\"views\" content=\"851\"><br>the simplest quick sort is like following:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&amp;lt;iostream&amp;gt;</div><div class=\"line\"></div><div class=\"line\">using namespace std;</div><div class=\"line\"></div><div class=\"line\">int Partition(int * a, int start, int end)&#123;</div><div class=\"line\">    swap(a[start],a[start+rand()%(end-start+1)]);</div><div class=\"line\">    int p = a[start];</div><div class=\"line\">    while(start&amp;lt;end)&#123;</div><div class=\"line\">        while(start&amp;lt;end &amp;amp;&amp;amp; a[end] &amp;gt;= p) end--;</div><div class=\"line\">        swap(a[start],a[end]);</div><div class=\"line\">        while(start&amp;lt;end &amp;amp;&amp;amp; a[start]&amp;lt;= p) start++;</div><div class=\"line\">        swap(a[start],a[end];)</div><div class=\"line\">    &#125;</div><div class=\"line\">    return start;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">void QuickSort(int * a, int start, int end)&#123;</div><div class=\"line\"></div><div class=\"line\">     if(end-start&amp;gt;=1)&#123;</div><div class=\"line\">         int mid = Partition(a,start, end);</div><div class=\"line\">         QuickSort(a,start,mid-1);</div><div class=\"line\">         QuickSort(a,mid+1,end);</div><div class=\"line\">     &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>But If you want do some optimization in QuickSort, first when the number of elements is small than 10, do insert sort not quick sort. Second, To find the near-like middle element of array, and not use the random one. Third, when the array is already sorted , do not use quick sort. and Reduce the function call. You will the following codes:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&amp;lt;iostream&amp;gt;</div><div class=\"line\"></div><div class=\"line\">using namespace std;</div><div class=\"line\"></div><div class=\"line\">void QuickSort(int *a, int start, int end)&#123;</div><div class=\"line\"></div><div class=\"line\">    if(end - start &amp;lt;= 0 ) // or you can throw some exceptions!</div><div class=\"line\">       return ;</div><div class=\"line\"></div><div class=\"line\">// if the number of element is less than 8, do insert sort;</div><div class=\"line\"></div><div class=\"line\">    if(end - start&amp;lt;7)&#123;</div><div class=\"line\"></div><div class=\"line\">      for(int i = start; i &amp;lt;= end; i++)&#123;</div><div class=\"line\"></div><div class=\"line\">         for(int j = i; j &amp;gt; start &amp;amp;&amp;amp; a[j] &amp;lt; a[j-1]; j--)</div><div class=\"line\"></div><div class=\"line\">             swap(a[j],a[j-1]);</div><div class=\"line\"></div><div class=\"line\">      &#125;</div><div class=\"line\"></div><div class=\"line\">      return;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">// check if the array is sorted.</div><div class=\"line\"></div><div class=\"line\">    bool isSorted = true;</div><div class=\"line\">    for(int i = start; i &amp;lt; end; i++)&#123;</div><div class=\"line\">       if(a[i]&amp;gt;a[i+1])</div><div class=\"line\">         isSorted = false;</div><div class=\"line\">    &#125;</div><div class=\"line\">    if(isSorted)</div><div class=\"line\">      return;</div><div class=\"line\"></div><div class=\"line\">// get the near-like middle element, use 3 point middle method.</div><div class=\"line\"></div><div class=\"line\">    int dm = start+(end-start)/2;</div><div class=\"line\"></div><div class=\"line\">    int dl, dh;</div><div class=\"line\"></div><div class=\"line\">    if(end-start&amp;lt;40)&#123;</div><div class=\"line\"></div><div class=\"line\">       int d = (end-start+1)/8;</div><div class=\"line\"></div><div class=\"line\">       dl = mid(a, start,start+d,start+2*d);</div><div class=\"line\"></div><div class=\"line\">       dm = mid(a,dm-d,dm,dm+d);</div><div class=\"line\"></div><div class=\"line\">       dh = mid(a,end-2*d,end-d, end);</div><div class=\"line\"></div><div class=\"line\">       dm = mid(a,dl,dm,dh);</div><div class=\"line\"></div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">// do partition</div><div class=\"line\"></div><div class=\"line\">    swap(a[start],a[dm]);</div><div class=\"line\"></div><div class=\"line\">    int low=start, high = end, p = a[start];</div><div class=\"line\">    while(low&amp;lt;high)&#123;</div><div class=\"line\">        while(low &amp;lt; high &amp;amp;&amp;amp; a[high]&amp;gt;= p) high--;</div><div class=\"line\">        swap(a[low],a[high]);</div><div class=\"line\">        while(low&amp;lt;high &amp;amp;&amp;amp; a[low]&amp;lt;= p) low ++;</div><div class=\"line\">        swap(a[low],a[high]);</div><div class=\"line\">    &#125;</div><div class=\"line\">    QuickSort(a,start, low-1);</div><div class=\"line\">    QuickSort(a,low+1,end);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p><meta name=\"_edit_last\" content=\"1\"></p>\n<p><meta name=\"_su_rich_snippet_type\" content=\"none\"></p>\n<p><meta name=\"_su_description\" content=\"Optimize QuickSort\"></p>\n<p><meta name=\"_su_keywords\" content=\"Optimize,Quick,Sort\"></p>\n<p><meta name=\"_su_title\" content=\"Quick Sort\"></p>\n<p><meta name=\"views\" content=\"851\"><br>the simplest quick sort is like following:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&amp;lt;iostream&amp;gt;</div><div class=\"line\"></div><div class=\"line\">using namespace std;</div><div class=\"line\"></div><div class=\"line\">int Partition(int * a, int start, int end)&#123;</div><div class=\"line\">    swap(a[start],a[start+rand()%(end-start+1)]);</div><div class=\"line\">    int p = a[start];</div><div class=\"line\">    while(start&amp;lt;end)&#123;</div><div class=\"line\">        while(start&amp;lt;end &amp;amp;&amp;amp; a[end] &amp;gt;= p) end--;</div><div class=\"line\">        swap(a[start],a[end]);</div><div class=\"line\">        while(start&amp;lt;end &amp;amp;&amp;amp; a[start]&amp;lt;= p) start++;</div><div class=\"line\">        swap(a[start],a[end];)</div><div class=\"line\">    &#125;</div><div class=\"line\">    return start;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">void QuickSort(int * a, int start, int end)&#123;</div><div class=\"line\"></div><div class=\"line\">     if(end-start&amp;gt;=1)&#123;</div><div class=\"line\">         int mid = Partition(a,start, end);</div><div class=\"line\">         QuickSort(a,start,mid-1);</div><div class=\"line\">         QuickSort(a,mid+1,end);</div><div class=\"line\">     &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>But If you want do some optimization in QuickSort, first when the number of elements is small than 10, do insert sort not quick sort. Second, To find the near-like middle element of array, and not use the random one. Third, when the array is already sorted , do not use quick sort. and Reduce the function call. You will the following codes:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&amp;lt;iostream&amp;gt;</div><div class=\"line\"></div><div class=\"line\">using namespace std;</div><div class=\"line\"></div><div class=\"line\">void QuickSort(int *a, int start, int end)&#123;</div><div class=\"line\"></div><div class=\"line\">    if(end - start &amp;lt;= 0 ) // or you can throw some exceptions!</div><div class=\"line\">       return ;</div><div class=\"line\"></div><div class=\"line\">// if the number of element is less than 8, do insert sort;</div><div class=\"line\"></div><div class=\"line\">    if(end - start&amp;lt;7)&#123;</div><div class=\"line\"></div><div class=\"line\">      for(int i = start; i &amp;lt;= end; i++)&#123;</div><div class=\"line\"></div><div class=\"line\">         for(int j = i; j &amp;gt; start &amp;amp;&amp;amp; a[j] &amp;lt; a[j-1]; j--)</div><div class=\"line\"></div><div class=\"line\">             swap(a[j],a[j-1]);</div><div class=\"line\"></div><div class=\"line\">      &#125;</div><div class=\"line\"></div><div class=\"line\">      return;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">// check if the array is sorted.</div><div class=\"line\"></div><div class=\"line\">    bool isSorted = true;</div><div class=\"line\">    for(int i = start; i &amp;lt; end; i++)&#123;</div><div class=\"line\">       if(a[i]&amp;gt;a[i+1])</div><div class=\"line\">         isSorted = false;</div><div class=\"line\">    &#125;</div><div class=\"line\">    if(isSorted)</div><div class=\"line\">      return;</div><div class=\"line\"></div><div class=\"line\">// get the near-like middle element, use 3 point middle method.</div><div class=\"line\"></div><div class=\"line\">    int dm = start+(end-start)/2;</div><div class=\"line\"></div><div class=\"line\">    int dl, dh;</div><div class=\"line\"></div><div class=\"line\">    if(end-start&amp;lt;40)&#123;</div><div class=\"line\"></div><div class=\"line\">       int d = (end-start+1)/8;</div><div class=\"line\"></div><div class=\"line\">       dl = mid(a, start,start+d,start+2*d);</div><div class=\"line\"></div><div class=\"line\">       dm = mid(a,dm-d,dm,dm+d);</div><div class=\"line\"></div><div class=\"line\">       dh = mid(a,end-2*d,end-d, end);</div><div class=\"line\"></div><div class=\"line\">       dm = mid(a,dl,dm,dh);</div><div class=\"line\"></div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">// do partition</div><div class=\"line\"></div><div class=\"line\">    swap(a[start],a[dm]);</div><div class=\"line\"></div><div class=\"line\">    int low=start, high = end, p = a[start];</div><div class=\"line\">    while(low&amp;lt;high)&#123;</div><div class=\"line\">        while(low &amp;lt; high &amp;amp;&amp;amp; a[high]&amp;gt;= p) high--;</div><div class=\"line\">        swap(a[low],a[high]);</div><div class=\"line\">        while(low&amp;lt;high &amp;amp;&amp;amp; a[low]&amp;lt;= p) low ++;</div><div class=\"line\">        swap(a[low],a[high]);</div><div class=\"line\">    &#125;</div><div class=\"line\">    QuickSort(a,start, low-1);</div><div class=\"line\">    QuickSort(a,low+1,end);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n"},{"_content":"\nHi all,I should write this article  in Chinese. Because there are many special Math words here. Maybe I will translate this article later.\n\n首先是啥米叫`[[catalan]]`数，`h(n) = h(0)*h(n-1)+ h(1)*h(n-2)+....+h(n-2)*h(1)+h(n-1)*h(0)` ，h(0) = h(1) = 1通项公式为$h(n) = \\frac{1}{n+1}{C_{2n}^{n}}$另外还有`h(n) = h(1)h(n-1)+h(2)*h(n-2)+...+h(n-2)*h(2)+h(n-1)*h(1)`,h(1) = 1其通项公式为$h(n) = \\frac{1}{n}{C_{2n-2}^{n-1}}$\n\n首先是括号问题，很多问题都能转换为括号匹配问题，即在任何位置，左括号的数目都要大于等于右括号的数目。然后问你给n个左括号和n个右括号，共有多少种放置方法。分析方法转载：http://blog.csdn.net/dlyme/archive/2008/06/10/2532831.aspx具体解法为：\n\n\n分析：把左括号看作0，将右括号看作1，n个1和n个0组成的2n     位二进制数。由于等待入栈的操作数按照1‥n的顺序排列、入栈的操作数b大于等于出栈的操作数a(a≤b)，因此输出序列的总数目=由左而右扫描由n个1   和n个0组成的2n位二进制数，1的累计数不小于0的累计数的方案种数。在2n位二进制数中填入n个1的方案数为c(2n,n),不 填 1的其余n位自动填0。从中减去不符合要求（由左而右扫描，0的累计数大于1的累计 数）的方案数即为所求。不符合要求的数的特征是 由左 而右扫描时，必然在某一奇数位2m+1位上首先出现m+1个0的累计数和m个1的累计数，此后的2(n-m)-1位上有 n-m个    1和n-m-1个0。如若把后面这2(n-m)-1位上的0和1互换，使之成为n-m个0和n-m-1个1，结果得1个由n+1个0和n-1个1组成的   2n位数，即一个不合要求的数对应于一个由n+1个0和n-1个1组成的排列。反过来，任何一个由n+1个0和n-1个1组成的2n位 二 进制数，由于0的个数多2个，2n为偶数，故必在某一个奇数位上出现0的累计数超过1的累   计数。同样在后面部分0和1互换，使之成为由n个0和n个1组成的2n位数，即n+1个0和n-1个1组成的2n位数必对应一个不符合要求的数。因而不合要求的2n位数与n＋1个0，n－1个1组成的排列一一对应。显然，不符合要求的方案数为c(2n,n+1)。由此得出    `输出序列的总数目=c(2n,n)-c(2n,n+1)=1/(n+1)*c(2n,n)`。\n\n\n当然也可以看作第一对括号出现在什么位置，如果出现在1，2位置，则为`h(0)*h(2n-2)`,出现在3,4位置为`h(2)*h(2n-4)`,当然这里不可能出现在2，3位置，否则，左边h(1)是错误状态，不可以再递归做下去。所以原方程为\n```\nh(n) = h(0)*h(2n-2)+h(2)*h(2n-4)+...+h(2n-4)*h(2)+h(2n-2)*h(0)`，这里将`h(n)->f(n/2)`,即 `h(n) = f(0)*f(n-1)+f(1)*h(n-2)+... = $latex \\frac{1}{n+1}{{C_{2n}}^{n}} $\n```\n\n另外矩阵连乘，出入栈，人过街区问题和这个解法类似。\n\n 1. 矩阵连乘即`a1*a2*a3...*an`这样的矩阵加括号表示成对共有多少种方法。首先可以选取某个矩阵作为起始矩阵，在这个矩阵上加括号，例如a2为起始矩阵，然后就变为 `a1*(a2)*a3...`然后如果a2与a3相乘则`a1*((a2)*a3)...`看出来括号是否和刚才那个左右括号匹配的问题一样？所以这里共有2n个括号，然后求放置正确括号位置的种类有多少。因为最初的一对括号无用，所以这里其实有2n-2个括号，结果秒杀为\n \n```\n $latex \\frac{1}{n}{{C_{2n-2}}^{n-1}} $ 其实就是g(n)=f(2n-2)=h(n-1)，带入即可。\n```\n\n 1. 下面是问n个数出入栈，共有多少种出入栈的方式？进栈看作左括号，出栈看作右括号，然后瞬间变为左右括号匹配问题。结果依旧是\n ```\n $latex \\frac{1}{n+1}{{C_{2n}}^{n}} $\n ``` \n 因为第一个括号对就决定了结果的顺序，所以是2n个括号，这个与问题1有所不同。\n \n 1. 然后是人过2n个街区工作，看作方格子，即左右走向n个街区，南北走向n个街区，但是这个家伙不会穿越但是可以碰到家到办公室的对角线，问有多少种可能的道路走法。这里因为没有通过对角线，所以走了k个左右走向的街区，最多只能再走k个南北走向的街区，否则就会穿越对角线。所以可以看作是栈问题，塞进去k个数只能弹出k个数。所以结果同2.\n 1. 凸多边形区域划分三角形的方法数有多少？划分的三角形不能重叠（除三边可以重叠外）。首先选一条基边（因为划分必然要用到基边），一个顶点。图1中选中一条基边，一个顶点后，左边剩余1条基边(红色)，右边剩余n-2条；图二中左边剩余两条基边，右边剩余n-3条。其中n为凸多边形顶点数。则有\n```\nf(n) = f(1)*f(n-2)+f(2)*f(n-3)+....+f(n-2)*f(1)。\n```\n 1. 圆上选择2n个点，将这些点对连接起来，且所得n条线段不相交，求可行方法数。首先选择两个点，左边剩余0个点，右边剩余2n-2个点继续这样连接。下一次选择，左边剩余两个点，右边剩余2n-4继续选择..\n \n \n ```\n f(2n) = f(0)*f(2n-2)+f(2)*f(2n-4)+..., 令f(2n) = h(n), f(2n) = h(0)*h(n-1)+h(1)*h(n-2)+...=$latex \\frac{1}{n+1}C(2n,n) $\n ```\n\n 1. n个节点构造多少种不同的二叉树。这个问题可以转换为括号问题，与连乘不同的是，它的第一对括号决定了它的树根。当选择一个节点，左边可以有0个，右边有n-1个；左边有1个，右边n-2个....所以\n \n ```\n g(n) = f(2n) = h(n) =$latex \\frac{1}{n+1}C(2n,n) $\n ```\n\n\n\n下面转载冷笑话：\n\n\n从前有棵树，叫高数，树上挂了很多人\n很久很久以前，在拉格朗日照耀下，有几座城：分别是常微分方城和偏微分方城这两座兄弟城，还有数理方程、随机过城。从这几座城里流出了几条溪，比较著名的 有：柯溪、数学分溪、泛函分溪、回归分溪、时间序列分溪等。其中某几条溪和支流汇聚在一起，形成了解析几河、微分几河、黎曼几河三条大河。\n\n河边有座古老的海森堡，里面生活着亥霍母子，穿着德布罗衣、卢瑟服、门捷列服，这样就不会被开尔蚊骚扰，被河里的薛定鳄咬伤。城堡门口两边摆放着牛墩和道 尔墩，出去便是鲍林。鲍林里面的树非常多：有高等代树、抽象代树、线性代树、实变函树、复变函树、数值代树等，还有长满了傅立叶，开满了范德花的级 树...人们专门在这些树边放了许多的盖(概)桶,高桶，这是用来放尸体的，因为，挂在上面的人，太多了，太多了...\n\n这些人死后就葬在微积坟，坟的后面是一片广阔的麦克劳林，林子里有一只费马，它喜欢在柯溪喝水，溪里撒着用高丝做成的ε-网，有时可以捕捉到二次剩鱼。\n后来，芬斯勒几河改道，几河不能同调，工程师李群不得不微分流形，调河分溪。几河分溪以后，水量大涨，建了个测渡也没有效果，还是挂了很多人，连非交换代 树都挂满了，不得不弄到动力系桶里扔掉。\n有些人不想挂在树上，索性投入了数值逼井（近）。结果投井的人发现井下生活着线性回龟和非线性回龟两种龟：前一种最为常见的是简单线性回龟和多元线性回 龟，它们都喜欢吃最小二橙。\n\n柯溪经过不等市，渐近县和极县，这里房子的屋顶都是用伽罗瓦盖的，人们的主食是无穷小粮。\n\n极县旁有一座道观叫线性无观，线性无观里有很多道士叫做多项士，道长比较二，也叫二项士。线性无观旁有一座庙叫做香寺，长老叫做满志，排出咀阵，守卫着一 座塔方。一天二项士拎着马尔可夫链来踢馆，满志曰：“正定！正定！吾级数太低，愿以郑太求和，道友合同否？”二项士惊呼：“特真值啊！”立退。不料满志此 人置信度太低，不以郑太求和，却要郑太回归。二项式大怒在密度函树下展开标准分布，布里包了两个钗钗，分别是标准钗和方钗。满志见状央（鞅）求饶命。二项 式将其关到希尔伯特空间，命巴纳赫看守。后来，巴纳赫让其付饭钱，满志念已缴钱便贪多吃，结果在无参树下被噎死（贝叶斯）。\n\n","source":"_posts/2010-07-19-catalan.markdown","raw":"\nHi all,I should write this article  in Chinese. Because there are many special Math words here. Maybe I will translate this article later.\n\n首先是啥米叫`[[catalan]]`数，`h(n) = h(0)*h(n-1)+ h(1)*h(n-2)+....+h(n-2)*h(1)+h(n-1)*h(0)` ，h(0) = h(1) = 1通项公式为$h(n) = \\frac{1}{n+1}{C_{2n}^{n}}$另外还有`h(n) = h(1)h(n-1)+h(2)*h(n-2)+...+h(n-2)*h(2)+h(n-1)*h(1)`,h(1) = 1其通项公式为$h(n) = \\frac{1}{n}{C_{2n-2}^{n-1}}$\n\n首先是括号问题，很多问题都能转换为括号匹配问题，即在任何位置，左括号的数目都要大于等于右括号的数目。然后问你给n个左括号和n个右括号，共有多少种放置方法。分析方法转载：http://blog.csdn.net/dlyme/archive/2008/06/10/2532831.aspx具体解法为：\n\n\n分析：把左括号看作0，将右括号看作1，n个1和n个0组成的2n     位二进制数。由于等待入栈的操作数按照1‥n的顺序排列、入栈的操作数b大于等于出栈的操作数a(a≤b)，因此输出序列的总数目=由左而右扫描由n个1   和n个0组成的2n位二进制数，1的累计数不小于0的累计数的方案种数。在2n位二进制数中填入n个1的方案数为c(2n,n),不 填 1的其余n位自动填0。从中减去不符合要求（由左而右扫描，0的累计数大于1的累计 数）的方案数即为所求。不符合要求的数的特征是 由左 而右扫描时，必然在某一奇数位2m+1位上首先出现m+1个0的累计数和m个1的累计数，此后的2(n-m)-1位上有 n-m个    1和n-m-1个0。如若把后面这2(n-m)-1位上的0和1互换，使之成为n-m个0和n-m-1个1，结果得1个由n+1个0和n-1个1组成的   2n位数，即一个不合要求的数对应于一个由n+1个0和n-1个1组成的排列。反过来，任何一个由n+1个0和n-1个1组成的2n位 二 进制数，由于0的个数多2个，2n为偶数，故必在某一个奇数位上出现0的累计数超过1的累   计数。同样在后面部分0和1互换，使之成为由n个0和n个1组成的2n位数，即n+1个0和n-1个1组成的2n位数必对应一个不符合要求的数。因而不合要求的2n位数与n＋1个0，n－1个1组成的排列一一对应。显然，不符合要求的方案数为c(2n,n+1)。由此得出    `输出序列的总数目=c(2n,n)-c(2n,n+1)=1/(n+1)*c(2n,n)`。\n\n\n当然也可以看作第一对括号出现在什么位置，如果出现在1，2位置，则为`h(0)*h(2n-2)`,出现在3,4位置为`h(2)*h(2n-4)`,当然这里不可能出现在2，3位置，否则，左边h(1)是错误状态，不可以再递归做下去。所以原方程为\n```\nh(n) = h(0)*h(2n-2)+h(2)*h(2n-4)+...+h(2n-4)*h(2)+h(2n-2)*h(0)`，这里将`h(n)->f(n/2)`,即 `h(n) = f(0)*f(n-1)+f(1)*h(n-2)+... = $latex \\frac{1}{n+1}{{C_{2n}}^{n}} $\n```\n\n另外矩阵连乘，出入栈，人过街区问题和这个解法类似。\n\n 1. 矩阵连乘即`a1*a2*a3...*an`这样的矩阵加括号表示成对共有多少种方法。首先可以选取某个矩阵作为起始矩阵，在这个矩阵上加括号，例如a2为起始矩阵，然后就变为 `a1*(a2)*a3...`然后如果a2与a3相乘则`a1*((a2)*a3)...`看出来括号是否和刚才那个左右括号匹配的问题一样？所以这里共有2n个括号，然后求放置正确括号位置的种类有多少。因为最初的一对括号无用，所以这里其实有2n-2个括号，结果秒杀为\n \n```\n $latex \\frac{1}{n}{{C_{2n-2}}^{n-1}} $ 其实就是g(n)=f(2n-2)=h(n-1)，带入即可。\n```\n\n 1. 下面是问n个数出入栈，共有多少种出入栈的方式？进栈看作左括号，出栈看作右括号，然后瞬间变为左右括号匹配问题。结果依旧是\n ```\n $latex \\frac{1}{n+1}{{C_{2n}}^{n}} $\n ``` \n 因为第一个括号对就决定了结果的顺序，所以是2n个括号，这个与问题1有所不同。\n \n 1. 然后是人过2n个街区工作，看作方格子，即左右走向n个街区，南北走向n个街区，但是这个家伙不会穿越但是可以碰到家到办公室的对角线，问有多少种可能的道路走法。这里因为没有通过对角线，所以走了k个左右走向的街区，最多只能再走k个南北走向的街区，否则就会穿越对角线。所以可以看作是栈问题，塞进去k个数只能弹出k个数。所以结果同2.\n 1. 凸多边形区域划分三角形的方法数有多少？划分的三角形不能重叠（除三边可以重叠外）。首先选一条基边（因为划分必然要用到基边），一个顶点。图1中选中一条基边，一个顶点后，左边剩余1条基边(红色)，右边剩余n-2条；图二中左边剩余两条基边，右边剩余n-3条。其中n为凸多边形顶点数。则有\n```\nf(n) = f(1)*f(n-2)+f(2)*f(n-3)+....+f(n-2)*f(1)。\n```\n 1. 圆上选择2n个点，将这些点对连接起来，且所得n条线段不相交，求可行方法数。首先选择两个点，左边剩余0个点，右边剩余2n-2个点继续这样连接。下一次选择，左边剩余两个点，右边剩余2n-4继续选择..\n \n \n ```\n f(2n) = f(0)*f(2n-2)+f(2)*f(2n-4)+..., 令f(2n) = h(n), f(2n) = h(0)*h(n-1)+h(1)*h(n-2)+...=$latex \\frac{1}{n+1}C(2n,n) $\n ```\n\n 1. n个节点构造多少种不同的二叉树。这个问题可以转换为括号问题，与连乘不同的是，它的第一对括号决定了它的树根。当选择一个节点，左边可以有0个，右边有n-1个；左边有1个，右边n-2个....所以\n \n ```\n g(n) = f(2n) = h(n) =$latex \\frac{1}{n+1}C(2n,n) $\n ```\n\n\n\n下面转载冷笑话：\n\n\n从前有棵树，叫高数，树上挂了很多人\n很久很久以前，在拉格朗日照耀下，有几座城：分别是常微分方城和偏微分方城这两座兄弟城，还有数理方程、随机过城。从这几座城里流出了几条溪，比较著名的 有：柯溪、数学分溪、泛函分溪、回归分溪、时间序列分溪等。其中某几条溪和支流汇聚在一起，形成了解析几河、微分几河、黎曼几河三条大河。\n\n河边有座古老的海森堡，里面生活着亥霍母子，穿着德布罗衣、卢瑟服、门捷列服，这样就不会被开尔蚊骚扰，被河里的薛定鳄咬伤。城堡门口两边摆放着牛墩和道 尔墩，出去便是鲍林。鲍林里面的树非常多：有高等代树、抽象代树、线性代树、实变函树、复变函树、数值代树等，还有长满了傅立叶，开满了范德花的级 树...人们专门在这些树边放了许多的盖(概)桶,高桶，这是用来放尸体的，因为，挂在上面的人，太多了，太多了...\n\n这些人死后就葬在微积坟，坟的后面是一片广阔的麦克劳林，林子里有一只费马，它喜欢在柯溪喝水，溪里撒着用高丝做成的ε-网，有时可以捕捉到二次剩鱼。\n后来，芬斯勒几河改道，几河不能同调，工程师李群不得不微分流形，调河分溪。几河分溪以后，水量大涨，建了个测渡也没有效果，还是挂了很多人，连非交换代 树都挂满了，不得不弄到动力系桶里扔掉。\n有些人不想挂在树上，索性投入了数值逼井（近）。结果投井的人发现井下生活着线性回龟和非线性回龟两种龟：前一种最为常见的是简单线性回龟和多元线性回 龟，它们都喜欢吃最小二橙。\n\n柯溪经过不等市，渐近县和极县，这里房子的屋顶都是用伽罗瓦盖的，人们的主食是无穷小粮。\n\n极县旁有一座道观叫线性无观，线性无观里有很多道士叫做多项士，道长比较二，也叫二项士。线性无观旁有一座庙叫做香寺，长老叫做满志，排出咀阵，守卫着一 座塔方。一天二项士拎着马尔可夫链来踢馆，满志曰：“正定！正定！吾级数太低，愿以郑太求和，道友合同否？”二项士惊呼：“特真值啊！”立退。不料满志此 人置信度太低，不以郑太求和，却要郑太回归。二项式大怒在密度函树下展开标准分布，布里包了两个钗钗，分别是标准钗和方钗。满志见状央（鞅）求饶命。二项 式将其关到希尔伯特空间，命巴纳赫看守。后来，巴纳赫让其付饭钱，满志念已缴钱便贪多吃，结果在无参树下被噎死（贝叶斯）。\n\n","slug":"2010-07-19-catalan","published":1,"date":"2017-06-05T04:36:13.000Z","updated":"2017-06-05T04:36:13.000Z","_id":"cj3jjwx8w000029mjr8eh5yme","title":"","comments":1,"layout":"post","photos":[],"link":"","content":"<p>Hi all,I should write this article  in Chinese. Because there are many special Math words here. Maybe I will translate this article later.</p>\n<p>首先是啥米叫<code>[[catalan]]</code>数，<code>h(n) = h(0)*h(n-1)+ h(1)*h(n-2)+....+h(n-2)*h(1)+h(n-1)*h(0)</code> ，h(0) = h(1) = 1通项公式为$h(n) = \\frac{1}{n+1}{C<em>{2n}^{n}}$另外还有<code>h(n) = h(1)h(n-1)+h(2)*h(n-2)+...+h(n-2)*h(2)+h(n-1)*h(1)</code>,h(1) = 1其通项公式为$h(n) = \\frac{1}{n}{C</em>{2n-2}^{n-1}}$</p>\n<p>首先是括号问题，很多问题都能转换为括号匹配问题，即在任何位置，左括号的数目都要大于等于右括号的数目。然后问你给n个左括号和n个右括号，共有多少种放置方法。分析方法转载：<a href=\"http://blog.csdn.net/dlyme/archive/2008/06/10/2532831.aspx具体解法为：\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/dlyme/archive/2008/06/10/2532831.aspx具体解法为：</a></p>\n<p>分析：把左括号看作0，将右括号看作1，n个1和n个0组成的2n     位二进制数。由于等待入栈的操作数按照1‥n的顺序排列、入栈的操作数b大于等于出栈的操作数a(a≤b)，因此输出序列的总数目=由左而右扫描由n个1   和n个0组成的2n位二进制数，1的累计数不小于0的累计数的方案种数。在2n位二进制数中填入n个1的方案数为c(2n,n),不 填 1的其余n位自动填0。从中减去不符合要求（由左而右扫描，0的累计数大于1的累计 数）的方案数即为所求。不符合要求的数的特征是 由左 而右扫描时，必然在某一奇数位2m+1位上首先出现m+1个0的累计数和m个1的累计数，此后的2(n-m)-1位上有 n-m个    1和n-m-1个0。如若把后面这2(n-m)-1位上的0和1互换，使之成为n-m个0和n-m-1个1，结果得1个由n+1个0和n-1个1组成的   2n位数，即一个不合要求的数对应于一个由n+1个0和n-1个1组成的排列。反过来，任何一个由n+1个0和n-1个1组成的2n位 二 进制数，由于0的个数多2个，2n为偶数，故必在某一个奇数位上出现0的累计数超过1的累   计数。同样在后面部分0和1互换，使之成为由n个0和n个1组成的2n位数，即n+1个0和n-1个1组成的2n位数必对应一个不符合要求的数。因而不合要求的2n位数与n＋1个0，n－1个1组成的排列一一对应。显然，不符合要求的方案数为c(2n,n+1)。由此得出    <code>输出序列的总数目=c(2n,n)-c(2n,n+1)=1/(n+1)*c(2n,n)</code>。</p>\n<p>当然也可以看作第一对括号出现在什么位置，如果出现在1，2位置，则为<code>h(0)*h(2n-2)</code>,出现在3,4位置为<code>h(2)*h(2n-4)</code>,当然这里不可能出现在2，3位置，否则，左边h(1)是错误状态，不可以再递归做下去。所以原方程为<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">h(n) = h(0)*h(2n-2)+h(2)*h(2n-4)+...+h(2n-4)*h(2)+h(2n-2)*h(0)`，这里将`h(n)-&gt;f(n/2)`,即 `h(n) = f(0)*f(n-1)+f(1)*h(n-2)+... = $latex \\frac&#123;1&#125;&#123;n+1&#125;&#123;&#123;C_&#123;2n&#125;&#125;^&#123;n&#125;&#125; $</div></pre></td></tr></table></figure></p>\n<p>另外矩阵连乘，出入栈，人过街区问题和这个解法类似。</p>\n<ol>\n<li>矩阵连乘即<code>a1*a2*a3...*an</code>这样的矩阵加括号表示成对共有多少种方法。首先可以选取某个矩阵作为起始矩阵，在这个矩阵上加括号，例如a2为起始矩阵，然后就变为 <code>a1*(a2)*a3...</code>然后如果a2与a3相乘则<code>a1*((a2)*a3)...</code>看出来括号是否和刚才那个左右括号匹配的问题一样？所以这里共有2n个括号，然后求放置正确括号位置的种类有多少。因为最初的一对括号无用，所以这里其实有2n-2个括号，结果秒杀为</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$latex \\frac&#123;1&#125;&#123;n&#125;&#123;&#123;C_&#123;2n-2&#125;&#125;^&#123;n-1&#125;&#125; $ 其实就是g(n)=f(2n-2)=h(n-1)，带入即可。</div></pre></td></tr></table></figure>\n<ol>\n<li>下面是问n个数出入栈，共有多少种出入栈的方式？进栈看作左括号，出栈看作右括号，然后瞬间变为左右括号匹配问题。结果依旧是<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">$latex \\frac&#123;1&#125;&#123;n+1&#125;&#123;&#123;C_&#123;2n&#125;&#125;^&#123;n&#125;&#125; $</div><div class=\"line\">``` </div><div class=\"line\">因为第一个括号对就决定了结果的顺序，所以是2n个括号，这个与问题1有所不同。</div><div class=\"line\"></div><div class=\"line\">1. 然后是人过2n个街区工作，看作方格子，即左右走向n个街区，南北走向n个街区，但是这个家伙不会穿越但是可以碰到家到办公室的对角线，问有多少种可能的道路走法。这里因为没有通过对角线，所以走了k个左右走向的街区，最多只能再走k个南北走向的街区，否则就会穿越对角线。所以可以看作是栈问题，塞进去k个数只能弹出k个数。所以结果同2.</div><div class=\"line\">1. 凸多边形区域划分三角形的方法数有多少？划分的三角形不能重叠（除三边可以重叠外）。首先选一条基边（因为划分必然要用到基边），一个顶点。图1中选中一条基边，一个顶点后，左边剩余1条基边(红色)，右边剩余n-2条；图二中左边剩余两条基边，右边剩余n-3条。其中n为凸多边形顶点数。则有</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>f(n) = f(1)<em>f(n-2)+f(2)</em>f(n-3)+….+f(n-2)*f(1)。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">1. 圆上选择2n个点，将这些点对连接起来，且所得n条线段不相交，求可行方法数。首先选择两个点，左边剩余0个点，右边剩余2n-2个点继续这样连接。下一次选择，左边剩余两个点，右边剩余2n-4继续选择..</div></pre></td></tr></table></figure></p>\n<p> f(2n) = f(0)<em>f(2n-2)+f(2)</em>f(2n-4)+…, 令f(2n) = h(n), f(2n) = h(0)<em>h(n-1)+h(1)</em>h(n-2)+…=$latex \\frac{1}{n+1}C(2n,n) $<br> <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">1. n个节点构造多少种不同的二叉树。这个问题可以转换为括号问题，与连乘不同的是，它的第一对括号决定了它的树根。当选择一个节点，左边可以有0个，右边有n-1个；左边有1个，右边n-2个....所以</div></pre></td></tr></table></figure></p>\n<p> g(n) = f(2n) = h(n) =$latex \\frac{1}{n+1}C(2n,n) $<br> ```</p>\n<p>下面转载冷笑话：</p>\n<p>从前有棵树，叫高数，树上挂了很多人<br>很久很久以前，在拉格朗日照耀下，有几座城：分别是常微分方城和偏微分方城这两座兄弟城，还有数理方程、随机过城。从这几座城里流出了几条溪，比较著名的 有：柯溪、数学分溪、泛函分溪、回归分溪、时间序列分溪等。其中某几条溪和支流汇聚在一起，形成了解析几河、微分几河、黎曼几河三条大河。</p>\n<p>河边有座古老的海森堡，里面生活着亥霍母子，穿着德布罗衣、卢瑟服、门捷列服，这样就不会被开尔蚊骚扰，被河里的薛定鳄咬伤。城堡门口两边摆放着牛墩和道 尔墩，出去便是鲍林。鲍林里面的树非常多：有高等代树、抽象代树、线性代树、实变函树、复变函树、数值代树等，还有长满了傅立叶，开满了范德花的级 树…人们专门在这些树边放了许多的盖(概)桶,高桶，这是用来放尸体的，因为，挂在上面的人，太多了，太多了…</p>\n<p>这些人死后就葬在微积坟，坟的后面是一片广阔的麦克劳林，林子里有一只费马，它喜欢在柯溪喝水，溪里撒着用高丝做成的ε-网，有时可以捕捉到二次剩鱼。<br>后来，芬斯勒几河改道，几河不能同调，工程师李群不得不微分流形，调河分溪。几河分溪以后，水量大涨，建了个测渡也没有效果，还是挂了很多人，连非交换代 树都挂满了，不得不弄到动力系桶里扔掉。<br>有些人不想挂在树上，索性投入了数值逼井（近）。结果投井的人发现井下生活着线性回龟和非线性回龟两种龟：前一种最为常见的是简单线性回龟和多元线性回 龟，它们都喜欢吃最小二橙。</p>\n<p>柯溪经过不等市，渐近县和极县，这里房子的屋顶都是用伽罗瓦盖的，人们的主食是无穷小粮。</p>\n<p>极县旁有一座道观叫线性无观，线性无观里有很多道士叫做多项士，道长比较二，也叫二项士。线性无观旁有一座庙叫做香寺，长老叫做满志，排出咀阵，守卫着一 座塔方。一天二项士拎着马尔可夫链来踢馆，满志曰：“正定！正定！吾级数太低，愿以郑太求和，道友合同否？”二项士惊呼：“特真值啊！”立退。不料满志此 人置信度太低，不以郑太求和，却要郑太回归。二项式大怒在密度函树下展开标准分布，布里包了两个钗钗，分别是标准钗和方钗。满志见状央（鞅）求饶命。二项 式将其关到希尔伯特空间，命巴纳赫看守。后来，巴纳赫让其付饭钱，满志念已缴钱便贪多吃，结果在无参树下被噎死（贝叶斯）。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>Hi all,I should write this article  in Chinese. Because there are many special Math words here. Maybe I will translate this article later.</p>\n<p>首先是啥米叫<code>[[catalan]]</code>数，<code>h(n) = h(0)*h(n-1)+ h(1)*h(n-2)+....+h(n-2)*h(1)+h(n-1)*h(0)</code> ，h(0) = h(1) = 1通项公式为$h(n) = \\frac{1}{n+1}{C<em>{2n}^{n}}$另外还有<code>h(n) = h(1)h(n-1)+h(2)*h(n-2)+...+h(n-2)*h(2)+h(n-1)*h(1)</code>,h(1) = 1其通项公式为$h(n) = \\frac{1}{n}{C</em>{2n-2}^{n-1}}$</p>\n<p>首先是括号问题，很多问题都能转换为括号匹配问题，即在任何位置，左括号的数目都要大于等于右括号的数目。然后问你给n个左括号和n个右括号，共有多少种放置方法。分析方法转载：<a href=\"http://blog.csdn.net/dlyme/archive/2008/06/10/2532831.aspx具体解法为：\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/dlyme/archive/2008/06/10/2532831.aspx具体解法为：</a></p>\n<p>分析：把左括号看作0，将右括号看作1，n个1和n个0组成的2n     位二进制数。由于等待入栈的操作数按照1‥n的顺序排列、入栈的操作数b大于等于出栈的操作数a(a≤b)，因此输出序列的总数目=由左而右扫描由n个1   和n个0组成的2n位二进制数，1的累计数不小于0的累计数的方案种数。在2n位二进制数中填入n个1的方案数为c(2n,n),不 填 1的其余n位自动填0。从中减去不符合要求（由左而右扫描，0的累计数大于1的累计 数）的方案数即为所求。不符合要求的数的特征是 由左 而右扫描时，必然在某一奇数位2m+1位上首先出现m+1个0的累计数和m个1的累计数，此后的2(n-m)-1位上有 n-m个    1和n-m-1个0。如若把后面这2(n-m)-1位上的0和1互换，使之成为n-m个0和n-m-1个1，结果得1个由n+1个0和n-1个1组成的   2n位数，即一个不合要求的数对应于一个由n+1个0和n-1个1组成的排列。反过来，任何一个由n+1个0和n-1个1组成的2n位 二 进制数，由于0的个数多2个，2n为偶数，故必在某一个奇数位上出现0的累计数超过1的累   计数。同样在后面部分0和1互换，使之成为由n个0和n个1组成的2n位数，即n+1个0和n-1个1组成的2n位数必对应一个不符合要求的数。因而不合要求的2n位数与n＋1个0，n－1个1组成的排列一一对应。显然，不符合要求的方案数为c(2n,n+1)。由此得出    <code>输出序列的总数目=c(2n,n)-c(2n,n+1)=1/(n+1)*c(2n,n)</code>。</p>\n<p>当然也可以看作第一对括号出现在什么位置，如果出现在1，2位置，则为<code>h(0)*h(2n-2)</code>,出现在3,4位置为<code>h(2)*h(2n-4)</code>,当然这里不可能出现在2，3位置，否则，左边h(1)是错误状态，不可以再递归做下去。所以原方程为<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">h(n) = h(0)*h(2n-2)+h(2)*h(2n-4)+...+h(2n-4)*h(2)+h(2n-2)*h(0)`，这里将`h(n)-&gt;f(n/2)`,即 `h(n) = f(0)*f(n-1)+f(1)*h(n-2)+... = $latex \\frac&#123;1&#125;&#123;n+1&#125;&#123;&#123;C_&#123;2n&#125;&#125;^&#123;n&#125;&#125; $</div></pre></td></tr></table></figure></p>\n<p>另外矩阵连乘，出入栈，人过街区问题和这个解法类似。</p>\n<ol>\n<li>矩阵连乘即<code>a1*a2*a3...*an</code>这样的矩阵加括号表示成对共有多少种方法。首先可以选取某个矩阵作为起始矩阵，在这个矩阵上加括号，例如a2为起始矩阵，然后就变为 <code>a1*(a2)*a3...</code>然后如果a2与a3相乘则<code>a1*((a2)*a3)...</code>看出来括号是否和刚才那个左右括号匹配的问题一样？所以这里共有2n个括号，然后求放置正确括号位置的种类有多少。因为最初的一对括号无用，所以这里其实有2n-2个括号，结果秒杀为</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$latex \\frac&#123;1&#125;&#123;n&#125;&#123;&#123;C_&#123;2n-2&#125;&#125;^&#123;n-1&#125;&#125; $ 其实就是g(n)=f(2n-2)=h(n-1)，带入即可。</div></pre></td></tr></table></figure>\n<ol>\n<li>下面是问n个数出入栈，共有多少种出入栈的方式？进栈看作左括号，出栈看作右括号，然后瞬间变为左右括号匹配问题。结果依旧是<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">$latex \\frac&#123;1&#125;&#123;n+1&#125;&#123;&#123;C_&#123;2n&#125;&#125;^&#123;n&#125;&#125; $</div><div class=\"line\">``` </div><div class=\"line\">因为第一个括号对就决定了结果的顺序，所以是2n个括号，这个与问题1有所不同。</div><div class=\"line\"></div><div class=\"line\">1. 然后是人过2n个街区工作，看作方格子，即左右走向n个街区，南北走向n个街区，但是这个家伙不会穿越但是可以碰到家到办公室的对角线，问有多少种可能的道路走法。这里因为没有通过对角线，所以走了k个左右走向的街区，最多只能再走k个南北走向的街区，否则就会穿越对角线。所以可以看作是栈问题，塞进去k个数只能弹出k个数。所以结果同2.</div><div class=\"line\">1. 凸多边形区域划分三角形的方法数有多少？划分的三角形不能重叠（除三边可以重叠外）。首先选一条基边（因为划分必然要用到基边），一个顶点。图1中选中一条基边，一个顶点后，左边剩余1条基边(红色)，右边剩余n-2条；图二中左边剩余两条基边，右边剩余n-3条。其中n为凸多边形顶点数。则有</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>f(n) = f(1)<em>f(n-2)+f(2)</em>f(n-3)+….+f(n-2)*f(1)。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">1. 圆上选择2n个点，将这些点对连接起来，且所得n条线段不相交，求可行方法数。首先选择两个点，左边剩余0个点，右边剩余2n-2个点继续这样连接。下一次选择，左边剩余两个点，右边剩余2n-4继续选择..</div></pre></td></tr></table></figure></p>\n<p> f(2n) = f(0)<em>f(2n-2)+f(2)</em>f(2n-4)+…, 令f(2n) = h(n), f(2n) = h(0)<em>h(n-1)+h(1)</em>h(n-2)+…=$latex \\frac{1}{n+1}C(2n,n) $<br> <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">1. n个节点构造多少种不同的二叉树。这个问题可以转换为括号问题，与连乘不同的是，它的第一对括号决定了它的树根。当选择一个节点，左边可以有0个，右边有n-1个；左边有1个，右边n-2个....所以</div></pre></td></tr></table></figure></p>\n<p> g(n) = f(2n) = h(n) =$latex \\frac{1}{n+1}C(2n,n) $<br> ```</p>\n<p>下面转载冷笑话：</p>\n<p>从前有棵树，叫高数，树上挂了很多人<br>很久很久以前，在拉格朗日照耀下，有几座城：分别是常微分方城和偏微分方城这两座兄弟城，还有数理方程、随机过城。从这几座城里流出了几条溪，比较著名的 有：柯溪、数学分溪、泛函分溪、回归分溪、时间序列分溪等。其中某几条溪和支流汇聚在一起，形成了解析几河、微分几河、黎曼几河三条大河。</p>\n<p>河边有座古老的海森堡，里面生活着亥霍母子，穿着德布罗衣、卢瑟服、门捷列服，这样就不会被开尔蚊骚扰，被河里的薛定鳄咬伤。城堡门口两边摆放着牛墩和道 尔墩，出去便是鲍林。鲍林里面的树非常多：有高等代树、抽象代树、线性代树、实变函树、复变函树、数值代树等，还有长满了傅立叶，开满了范德花的级 树…人们专门在这些树边放了许多的盖(概)桶,高桶，这是用来放尸体的，因为，挂在上面的人，太多了，太多了…</p>\n<p>这些人死后就葬在微积坟，坟的后面是一片广阔的麦克劳林，林子里有一只费马，它喜欢在柯溪喝水，溪里撒着用高丝做成的ε-网，有时可以捕捉到二次剩鱼。<br>后来，芬斯勒几河改道，几河不能同调，工程师李群不得不微分流形，调河分溪。几河分溪以后，水量大涨，建了个测渡也没有效果，还是挂了很多人，连非交换代 树都挂满了，不得不弄到动力系桶里扔掉。<br>有些人不想挂在树上，索性投入了数值逼井（近）。结果投井的人发现井下生活着线性回龟和非线性回龟两种龟：前一种最为常见的是简单线性回龟和多元线性回 龟，它们都喜欢吃最小二橙。</p>\n<p>柯溪经过不等市，渐近县和极县，这里房子的屋顶都是用伽罗瓦盖的，人们的主食是无穷小粮。</p>\n<p>极县旁有一座道观叫线性无观，线性无观里有很多道士叫做多项士，道长比较二，也叫二项士。线性无观旁有一座庙叫做香寺，长老叫做满志，排出咀阵，守卫着一 座塔方。一天二项士拎着马尔可夫链来踢馆，满志曰：“正定！正定！吾级数太低，愿以郑太求和，道友合同否？”二项士惊呼：“特真值啊！”立退。不料满志此 人置信度太低，不以郑太求和，却要郑太回归。二项式大怒在密度函树下展开标准分布，布里包了两个钗钗，分别是标准钗和方钗。满志见状央（鞅）求饶命。二项 式将其关到希尔伯特空间，命巴纳赫看守。后来，巴纳赫让其付饭钱，满志念已缴钱便贪多吃，结果在无参树下被噎死（贝叶斯）。</p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cj3jjjbaq0000k5mj0rgcw01c","category_id":"cj3jhpasl009jpcmjsa9s9rlp","_id":"cj3jjjbb90003k5mjyqnw85il"},{"post_id":"cj3jjjbb20001k5mj5tewg403","category_id":"cj3jhpasm009mpcmjvfaynyxe","_id":"cj3jjjbbc0005k5mjl0wfu13i"},{"post_id":"cj3jjjbb60002k5mjx55w8thd","category_id":"cj3jhpasm009ppcmjfalev8q8","_id":"cj3jjjbbd0006k5mj77nd868g"},{"post_id":"cj3jjjbba0004k5mjjbj55z40","category_id":"cj3jhpasn009upcmjkdd6i64g","_id":"cj3jjjbbd0007k5mj8apeewks"},{"post_id":"cj3jjpb7o0000zumj37nm4ga6","category_id":"cj3jhpama0006pcmjvyefgb6d","_id":"cj3jjpb8q0005zumj5xsxbmle"},{"post_id":"cj3jjpb7o0000zumj37nm4ga6","category_id":"cj3jhparj0069pcmjzlzf2z1l","_id":"cj3jjpb8u0007zumjphltuql2"},{"post_id":"cj3jjpb7o0000zumj37nm4ga6","category_id":"cj3jhpasu00ahpcmjqttgke9n","_id":"cj3jjpb900009zumjx8rxoni5"},{"post_id":"cj3jjpb7o0000zumj37nm4ga6","category_id":"cj3jhpaty00dypcmjwrxnalnh","_id":"cj3jjpb93000bzumjoqr41tqr"},{"post_id":"cj3jjpb7o0000zumj37nm4ga6","category_id":"cj3jhpav400hjpcmj2044b1nd","_id":"cj3jjpb96000dzumjbo5d7gz7"},{"post_id":"cj3jjpb7o0000zumj37nm4ga6","category_id":"cj3jhpaw200kipcmjq6j1hqyk","_id":"cj3jjpb9b000fzumji7x15zz1"},{"post_id":"cj3jjpb7o0000zumj37nm4ga6","category_id":"cj3jhpax800nupcmjiyv71ibe","_id":"cj3jjpb9e000hzumjoypfpn5i"},{"post_id":"cj3jjpb810001zumju7ycjegr","category_id":"cj3jhparj006apcmjh3fqwn43","_id":"cj3jjpb9h000jzumjv494vfrb"},{"post_id":"cj3jjpb810001zumju7ycjegr","category_id":"cj3jhpasu00ajpcmj3778p5fs","_id":"cj3jjpb9k000lzumjouw4mk6l"},{"post_id":"cj3jjpb810001zumju7ycjegr","category_id":"cj3jhpatz00dzpcmjpopws18v","_id":"cj3jjpb9p000nzumj76xe48do"},{"post_id":"cj3jjpb810001zumju7ycjegr","category_id":"cj3jhpav400hmpcmjifmzd3oh","_id":"cj3jjpb9t000pzumjvqvvwu3d"},{"post_id":"cj3jjpb810001zumju7ycjegr","category_id":"cj3jhpaw300kjpcmj739ebyze","_id":"cj3jjpb9x000rzumjivoovgn4"},{"post_id":"cj3jjpb850002zumj1v3zm7b6","category_id":"cj3jhparj006cpcmjjdcflxz4","_id":"cj3jjpba0000tzumjw1yqyoik"},{"post_id":"cj3jjpb850002zumj1v3zm7b6","category_id":"cj3jhpasv00anpcmj3ogez5pz","_id":"cj3jjpba4000vzumjwxomdkgi"},{"post_id":"cj3jjpb850002zumj1v3zm7b6","category_id":"cj3jhpatz00e0pcmjqmly6ok4","_id":"cj3jjpbaa000xzumjo0an6zb4"},{"post_id":"cj3jjpb850002zumj1v3zm7b6","category_id":"cj3jhpav500hnpcmjxjm3bxxq","_id":"cj3jjpbag000zzumj95ipiun3"},{"post_id":"cj3jjpb850002zumj1v3zm7b6","category_id":"cj3jhpaw300kkpcmjnmrquspz","_id":"cj3jjpbaj0011zumjiu736nk6"},{"post_id":"cj3jjpb8a0003zumjxcr4xp4g","category_id":"cj3jhparj006dpcmj7eei96bv","_id":"cj3jjpbam0013zumjv8jpiy37"},{"post_id":"cj3jjpb8a0003zumjxcr4xp4g","category_id":"cj3jhpasv00appcmjchv5k41r","_id":"cj3jjpbap0015zumjo2ql60j5"},{"post_id":"cj3jjpb8a0003zumjxcr4xp4g","category_id":"cj3jhpatz00e1pcmjppi1h7wa","_id":"cj3jjpbat0017zumj63s1k2he"},{"post_id":"cj3jjpb8a0003zumjxcr4xp4g","category_id":"cj3jhpav500hopcmjjw5s52l8","_id":"cj3jjpbaw0019zumjvczjmo3r"},{"post_id":"cj3jjpb8n0004zumj8s1u5sja","category_id":"cj3jhpark006epcmjldebqckq","_id":"cj3jjpbb2001bzumjepl5s3n6"},{"post_id":"cj3jjpb8n0004zumj8s1u5sja","category_id":"cj3jhpasw00aspcmjm4qtellf","_id":"cj3jjpbb8001dzumjzyuksuez"},{"post_id":"cj3jjpb8n0004zumj8s1u5sja","category_id":"cj3jhpau000e2pcmjzc3ail8b","_id":"cj3jjpbbd001fzumjcrncobis"},{"post_id":"cj3jjpb8r0006zumjfavhpw4g","category_id":"cj3jhpape0030pcmjk05ot7zs","_id":"cj3jjpbbh001hzumj2pu0144g"},{"post_id":"cj3jjpb8r0006zumjfavhpw4g","category_id":"cj3jhpasw00atpcmj78vyfw2b","_id":"cj3jjpbbk001jzumjdm26urrl"},{"post_id":"cj3jjpb8r0006zumjfavhpw4g","category_id":"cj3jhpau000e3pcmjgwfjmuze","_id":"cj3jjpbbt001lzumjbhzqifbn"},{"post_id":"cj3jjpb8r0006zumjfavhpw4g","category_id":"cj3jhpav600hppcmjapw7dk3q","_id":"cj3jjpbbw001nzumj43kz0oas"},{"post_id":"cj3jjpb8r0006zumjfavhpw4g","category_id":"cj3jhpaw400kmpcmjvb3zftro","_id":"cj3jjpbbz001pzumj5t27d732"},{"post_id":"cj3jjpb8w0008zumjux6sscz0","category_id":"cj3jhpark006gpcmjl26kwb6q","_id":"cj3jjpbc2001rzumjks8qoxkm"},{"post_id":"cj3jjpb8w0008zumjux6sscz0","category_id":"cj3jhpasw00aupcmjlyn2j6n4","_id":"cj3jjpbc7001tzumj938bk98y"},{"post_id":"cj3jjpb91000azumj6lui0ajx","category_id":"cj3jhparl006ipcmj1ejt9032","_id":"cj3jjpbca001vzumjedln40wg"},{"post_id":"cj3jjpb91000azumj6lui0ajx","category_id":"cj3jhpasx00axpcmjojhcvcqh","_id":"cj3jjpbce001xzumju1obi9h2"},{"post_id":"cj3jjpb91000azumj6lui0ajx","category_id":"cj3jhpau100e8pcmjdsfwrl15","_id":"cj3jjpbcg001zzumjik4mw6fs"},{"post_id":"cj3jjpb91000azumj6lui0ajx","category_id":"cj3jhpav700hupcmj0f149yyn","_id":"cj3jjpbch0020zumj5resnu69"},{"post_id":"cj3jjpb93000czumjoa8ec9fc","category_id":"cj3jhpama0006pcmjvyefgb6d","_id":"cj3jjpbcj0021zumjz5l2s16m"},{"post_id":"cj3jjpb93000czumjoa8ec9fc","category_id":"cj3jhparl006jpcmjm03wu75d","_id":"cj3jjpbck0022zumjzipxrgop"},{"post_id":"cj3jjpb93000czumjoa8ec9fc","category_id":"cj3jhpasx00azpcmjctr3xhim","_id":"cj3jjpbcl0023zumjozoplzkt"},{"post_id":"cj3jjpb93000czumjoa8ec9fc","category_id":"cj3jhpau100e9pcmj1xjgio1h","_id":"cj3jjpbcl0024zumjj6ngbg7d"},{"post_id":"cj3jjpb98000ezumjxw4sfqif","category_id":"cj3jhparl006lpcmj6fr36ftu","_id":"cj3jjpbcl0025zumjnwb4qdcu"},{"post_id":"cj3jjpb98000ezumjxw4sfqif","category_id":"cj3jhpasy00b1pcmjgmbjrair","_id":"cj3jjpbcl0026zumjee1m50nr"},{"post_id":"cj3jjpb98000ezumjxw4sfqif","category_id":"cj3jhpau200ecpcmjae13cl59","_id":"cj3jjpbcl0027zumjalgir0bc"},{"post_id":"cj3jjpb9b000gzumjoi7v8sjj","category_id":"cj3jhparl006mpcmj8eu96ayy","_id":"cj3jjpbcl0028zumjph75322w"},{"post_id":"cj3jjpb9b000gzumjoi7v8sjj","category_id":"cj3jhpasy00b2pcmjzlcocij3","_id":"cj3jjpbcl0029zumjhn9yujwd"},{"post_id":"cj3jjpb9b000gzumjoi7v8sjj","category_id":"cj3jhpau300efpcmj05rpakst","_id":"cj3jjpbcl002azumjt5i1wv6n"},{"post_id":"cj3jjpb9b000gzumjoi7v8sjj","category_id":"cj3jhpav800i0pcmjumd6605y","_id":"cj3jjpbcl002bzumjopbh7s6h"},{"post_id":"cj3jjpb9b000gzumjoi7v8sjj","category_id":"cj3jhpaw500kppcmjntrn652n","_id":"cj3jjpbcl002czumj157vefw8"},{"post_id":"cj3jjpb9b000gzumjoi7v8sjj","category_id":"cj3jhpax900nypcmjkrorwfin","_id":"cj3jjpbcl002dzumjt2jmit2t"},{"post_id":"cj3jjpb9e000izumjvngvdlu7","category_id":"cj3jhparm006npcmjkj1geng0","_id":"cj3jjpbcl002ezumjn4ulnhuq"},{"post_id":"cj3jjpb9e000izumjvngvdlu7","category_id":"cj3jhpasy00b3pcmjypax9s5m","_id":"cj3jjpbcl002fzumjpmss6vkt"},{"post_id":"cj3jjpb9e000izumjvngvdlu7","category_id":"cj3jhpau300eipcmjcd2nrtp3","_id":"cj3jjpbcl002gzumjdezxhgh9"},{"post_id":"cj3jjpb9e000izumjvngvdlu7","category_id":"cj3jhpav900i3pcmjkoqfshzy","_id":"cj3jjpbcl002hzumjad78uhhj"},{"post_id":"cj3jjpb9e000izumjvngvdlu7","category_id":"cj3jhpaw600kspcmjgcb7gxdl","_id":"cj3jjpbcl002izumj6u9r92ql"},{"post_id":"cj3jjpb9e000izumjvngvdlu7","category_id":"cj3jhpaxa00o1pcmj53sgvmyl","_id":"cj3jjpbcl002jzumjinpcnp56"},{"post_id":"cj3jjpb9e000izumjvngvdlu7","category_id":"cj3jhpay800qkpcmjxp67logn","_id":"cj3jjpbcl002kzumjx4z8tro7"},{"post_id":"cj3jjpb9e000izumjvngvdlu7","category_id":"cj3jhpaym00rqpcmj896kddtb","_id":"cj3jjpbcl002lzumjc5oi3dxl"},{"post_id":"cj3jjpb9k000mzumj7aq8363c","category_id":"cj3jhpans001gpcmj5qadzvka","_id":"cj3jjpbcl002mzumj6kziqnp8"},{"post_id":"cj3jjpb9i000kzumj4hglabyj","category_id":"cj3jhparm006opcmjrw6n84fp","_id":"cj3jjpbcm002nzumjfewyyh9b"},{"post_id":"cj3jjpb9i000kzumj4hglabyj","category_id":"cj3jhpasz00b4pcmj96s4nx33","_id":"cj3jjpbcm002ozumjbkw1ze7q"},{"post_id":"cj3jjpb9i000kzumj4hglabyj","category_id":"cj3jhpau400elpcmjo943oc6h","_id":"cj3jjpbcm002pzumjws960lop"},{"post_id":"cj3jjpb9i000kzumj4hglabyj","category_id":"cj3jhpava00i7pcmjzto77hot","_id":"cj3jjpbcm002qzumjrzu10j34"},{"post_id":"cj3jjpb9i000kzumj4hglabyj","category_id":"cj3jhpaw700kwpcmjhiu3di90","_id":"cj3jjpbcm002rzumjp8becsrd"},{"post_id":"cj3jjpb9q000ozumjtn98ho47","category_id":"cj3jhparm006qpcmjjawwl57h","_id":"cj3jjpbcm002szumj4b60nod3"},{"post_id":"cj3jjpb9q000ozumjtn98ho47","category_id":"cj3jhpasz00b6pcmjel2y5fll","_id":"cj3jjpbco002tzumj2xerjrkl"},{"post_id":"cj3jjpb9q000ozumjtn98ho47","category_id":"cj3jhpau500enpcmjc8impnii","_id":"cj3jjpbco002uzumj8tn82ako"},{"post_id":"cj3jjpb9q000ozumjtn98ho47","category_id":"cj3jhpava00iapcmjos9zct9v","_id":"cj3jjpbco002vzumjocvdxn8q"},{"post_id":"cj3jjpb9q000ozumjtn98ho47","category_id":"cj3jhpaw800kzpcmjxs000why","_id":"cj3jjpbco002wzumj1eof3r3d"},{"post_id":"cj3jjpb9q000ozumjtn98ho47","category_id":"cj3jhpaxb00o4pcmjiqpfm31z","_id":"cj3jjpbco002xzumjbszxjnif"},{"post_id":"cj3jjpb9t000qzumjas69i2wr","category_id":"cj3jhparm006rpcmjwt29wuk7","_id":"cj3jjpbco002yzumjwwr5cioz"},{"post_id":"cj3jjpb9t000qzumjas69i2wr","category_id":"cj3jhpasz00b7pcmja7exf5pa","_id":"cj3jjpbcp002zzumj57488qv6"},{"post_id":"cj3jjpb9t000qzumjas69i2wr","category_id":"cj3jhpau500eppcmj7yroj2ii","_id":"cj3jjpbcp0030zumjfp95pfnf"},{"post_id":"cj3jjpb9t000qzumjas69i2wr","category_id":"cj3jhpavb00idpcmje71an92v","_id":"cj3jjpbcp0031zumjjf5zx3iy"},{"post_id":"cj3jjpb9t000qzumjas69i2wr","category_id":"cj3jhpaw800l2pcmj1qyz16s9","_id":"cj3jjpbcp0032zumjfolntanw"},{"post_id":"cj3jjpb9y000szumjet0ufvnt","category_id":"cj3jhparn006tpcmjj08g82p8","_id":"cj3jjpbcp0033zumjlrk5v9vb"},{"post_id":"cj3jjpb9y000szumjet0ufvnt","category_id":"cj3jhpat000b9pcmjpsc8a1k3","_id":"cj3jjpbcp0034zumj2gu425o0"},{"post_id":"cj3jjpb9y000szumjet0ufvnt","category_id":"cj3jhpau600eupcmjlh9gmjkm","_id":"cj3jjpbcp0035zumjedg9p8bp"},{"post_id":"cj3jjpb9y000szumjet0ufvnt","category_id":"cj3jhpavc00ihpcmjy9m69mdb","_id":"cj3jjpbcp0036zumjqiepu84e"},{"post_id":"cj3jjpb9y000szumjet0ufvnt","category_id":"cj3jhpawa00l9pcmj24mx5pgs","_id":"cj3jjpbcp0037zumj6lvulmul"},{"post_id":"cj3jjpb9y000szumjet0ufvnt","category_id":"cj3jhpaxc00o7pcmjmf5vaqfc","_id":"cj3jjpbcp0038zumj7u6qsmeu"},{"post_id":"cj3jjpba2000uzumjeznkwkfi","category_id":"cj3jhparn006upcmjclkbugyk","_id":"cj3jjpbcp0039zumjz6neo6a5"},{"post_id":"cj3jjpba2000uzumjeznkwkfi","category_id":"cj3jhpat000bapcmj54eyj6yr","_id":"cj3jjpbcp003azumjklrmicde"},{"post_id":"cj3jjpba2000uzumjeznkwkfi","category_id":"cj3jhpau700evpcmjnc7l0vke","_id":"cj3jjpbcp003bzumj3s02421r"},{"post_id":"cj3jjpba7000wzumjm6g4wsgq","category_id":"cj3jhparp006xpcmjk2pgc1la","_id":"cj3jjpbcp003czumjrdcgyj2q"},{"post_id":"cj3jjpba7000wzumjm6g4wsgq","category_id":"cj3jhpat100bdpcmjkcveled9","_id":"cj3jjpbcp003dzumjq1xwqlty"},{"post_id":"cj3jjpbab000yzumjcuwwyueh","category_id":"cj3jhparo006wpcmj4w3jszo2","_id":"cj3jjpbcp003ezumjfvhfi5w4"},{"post_id":"cj3jjpbab000yzumjcuwwyueh","category_id":"cj3jhpat100bcpcmjxn4o9e8i","_id":"cj3jjpbcp003fzumjtwo4jw1o"},{"post_id":"cj3jjpbai0010zumj832jatxf","category_id":"cj3jhparp006zpcmjarkx95bv","_id":"cj3jjpbcp003gzumjml7xgy4s"},{"post_id":"cj3jjpbai0010zumj832jatxf","category_id":"cj3jhpat200bipcmjmikbk74h","_id":"cj3jjpbcq003hzumjbpwrq8cx"},{"post_id":"cj3jjpbai0010zumj832jatxf","category_id":"cj3jhpau800f1pcmjueek9cja","_id":"cj3jjpbcq003izumjz6r4axwn"},{"post_id":"cj3jjpbak0012zumjwcu47ftd","category_id":"cj3jhpark006epcmjldebqckq","_id":"cj3jjpbcq003jzumjaxsqgucr"},{"post_id":"cj3jjpbak0012zumjwcu47ftd","category_id":"cj3jhpat200bkpcmjpknvd0tq","_id":"cj3jjpbcq003kzumjotf0bfy0"},{"post_id":"cj3jjpbak0012zumjwcu47ftd","category_id":"cj3jhpau900f3pcmje29xdmql","_id":"cj3jjpbcq003lzumj4oy7eii1"},{"post_id":"cj3jjpbak0012zumjwcu47ftd","category_id":"cj3jhpavd00ijpcmjjoinw9ks","_id":"cj3jjpbcq003mzumjvhro2552"},{"post_id":"cj3jjpbak0012zumjwcu47ftd","category_id":"cj3jhpawd00lfpcmjcjlrl87l","_id":"cj3jjpbcq003nzumj6y2luvoy"},{"post_id":"cj3jjpbak0012zumjwcu47ftd","category_id":"cj3jhpaxf00oepcmjhcj4i7c1","_id":"cj3jjpbcr003ozumjp3i2qfmh"},{"post_id":"cj3jjpban0014zumj9hj3eb7z","category_id":"cj3jhpans001gpcmj5qadzvka","_id":"cj3jjpbcr003pzumj1p7kooz7"},{"post_id":"cj3jjpban0014zumj9hj3eb7z","category_id":"cj3jhparq0072pcmjfsk1prru","_id":"cj3jjpbcr003qzumjau5ey9ar"},{"post_id":"cj3jjpban0014zumj9hj3eb7z","category_id":"cj3jhpat300bmpcmjll1s5bof","_id":"cj3jjpbcr003rzumjoucgdqaz"},{"post_id":"cj3jjpbaq0016zumjffm9pcm0","category_id":"cj3jhpark006epcmjldebqckq","_id":"cj3jjpbcr003szumjpomafdho"},{"post_id":"cj3jjpbaq0016zumjffm9pcm0","category_id":"cj3jhpat200bkpcmjpknvd0tq","_id":"cj3jjpbcr003tzumj53zcirns"},{"post_id":"cj3jjpbat0018zumj4sv0xwvu","category_id":"cj3jhpama0006pcmjvyefgb6d","_id":"cj3jjpbcr003uzumjnfxgptmy"},{"post_id":"cj3jjpbat0018zumj4sv0xwvu","category_id":"cj3jhpamv000rpcmjs41omyhu","_id":"cj3jjpbcr003vzumj3swijsvz"},{"post_id":"cj3jjpbat0018zumj4sv0xwvu","category_id":"cj3jhparr0075pcmjcc025erg","_id":"cj3jjpbcr003wzumjon6jejdb"},{"post_id":"cj3jjpbat0018zumj4sv0xwvu","category_id":"cj3jhpat400bspcmj8pe20kpu","_id":"cj3jjpbcr003xzumj4rkr0mc5"},{"post_id":"cj3jjpbb0001azumjq430mwcj","category_id":"cj3jhparp006xpcmjk2pgc1la","_id":"cj3jjpbcr003yzumjn4hrk7tt"},{"post_id":"cj3jjpbb0001azumjq430mwcj","category_id":"cj3jhpat500bvpcmj581lafyi","_id":"cj3jjpbcr003zzumjjm0c2i8n"},{"post_id":"cj3jjpbb0001azumjq430mwcj","category_id":"cj3jhpaua00fdpcmjyen1x85p","_id":"cj3jjpbcr0040zumji58gne3o"},{"post_id":"cj3jjpbb3001czumjy0hk4bwc","category_id":"cj3jhpars0077pcmj89i7yopf","_id":"cj3jjpbcr0041zumjegttwor2"},{"post_id":"cj3jjpbb3001czumjy0hk4bwc","category_id":"cj3jhpat500bxpcmjxuyy83ci","_id":"cj3jjpbcr0042zumjvwgglxzv"},{"post_id":"cj3jjpbb3001czumjy0hk4bwc","category_id":"cj3jhpaub00fepcmj7abto0py","_id":"cj3jjpbcr0043zumjkr2h81r9"},{"post_id":"cj3jjpbb3001czumjy0hk4bwc","category_id":"cj3jhpavf00impcmj9clqxg9u","_id":"cj3jjpbcs0044zumj5of2xo3f"},{"post_id":"cj3jjpbb3001czumjy0hk4bwc","category_id":"cj3jhpawf00lppcmjaiprlq9h","_id":"cj3jjpbcs0045zumjq5bw1vyo"},{"post_id":"cj3jjpbb8001ezumjm440kats","category_id":"cj3jhpars0079pcmjxe0gghtz","_id":"cj3jjpbcs0046zumjhxso792e"},{"post_id":"cj3jjpbb8001ezumjm440kats","category_id":"cj3jhpat800c2pcmj6abdlbyt","_id":"cj3jjpbcs0047zumjxy2yo6to"},{"post_id":"cj3jjpbb8001ezumjm440kats","category_id":"cj3jhpaub00fgpcmjhwk12p2y","_id":"cj3jjpbcs0048zumjzoda53g6"},{"post_id":"cj3jjpbb8001ezumjm440kats","category_id":"cj3jhpavf00inpcmjt3sm0012","_id":"cj3jjpbcs0049zumj8xvftr1i"},{"post_id":"cj3jjpbbf001gzumjb1ku47yy","category_id":"cj3jhpars0079pcmjxe0gghtz","_id":"cj3jjpbcs004azumjckev1zpr"},{"post_id":"cj3jjpbbf001gzumjb1ku47yy","category_id":"cj3jhpat900c4pcmjky5ltr36","_id":"cj3jjpbcs004bzumjnzu3mpmc"},{"post_id":"cj3jjpbbf001gzumjb1ku47yy","category_id":"cj3jhpauc00fjpcmjl9917yvo","_id":"cj3jjpbcs004czumjupitzbym"},{"post_id":"cj3jjpbbf001gzumjb1ku47yy","category_id":"cj3jhpavg00iopcmjhwtspff3","_id":"cj3jjpbct004dzumjoyzbrlp2"},{"post_id":"cj3jjpbbf001gzumjb1ku47yy","category_id":"cj3jhpawg00lspcmjvdozdx5d","_id":"cj3jjpbct004ezumjhqzgraga"},{"post_id":"cj3jjpbbh001izumjyex3qybu","category_id":"cj3jhparp006xpcmjk2pgc1la","_id":"cj3jjpbct004fzumjwac9p6uf"},{"post_id":"cj3jjpbbh001izumjyex3qybu","category_id":"cj3jhpat500bvpcmj581lafyi","_id":"cj3jjpbct004gzumj8mkfm3aq"},{"post_id":"cj3jjpbbh001izumjyex3qybu","category_id":"cj3jhpaua00fdpcmjyen1x85p","_id":"cj3jjpbct004hzumj4o12jy3i"},{"post_id":"cj3jjpbbl001kzumj9wkuun3b","category_id":"cj3jhpaps003fpcmjvhi7l6r2","_id":"cj3jjpbct004izumj1ogz6jsx"},{"post_id":"cj3jjpbbl001kzumj9wkuun3b","category_id":"cj3jhparr0074pcmj40omw9mf","_id":"cj3jjpbct004jzumjhubo3axi"},{"post_id":"cj3jjpbbl001kzumj9wkuun3b","category_id":"cj3jhpatb00cbpcmj309j585u","_id":"cj3jjpbct004kzumjom6misfw"},{"post_id":"cj3jjpbbl001kzumj9wkuun3b","category_id":"cj3jhpaud00fmpcmjnfkxyniw","_id":"cj3jjpbct004lzumjsz4cykyf"},{"post_id":"cj3jjpbbt001mzumj0ztjdj2t","category_id":"cj3jhparu007fpcmjrwewgkv3","_id":"cj3jjpbct004mzumjve4dbe36"},{"post_id":"cj3jjpbbt001mzumj0ztjdj2t","category_id":"cj3jhpatc00cdpcmjdoczpae3","_id":"cj3jjpbct004nzumjbicebekb"},{"post_id":"cj3jjpbbt001mzumj0ztjdj2t","category_id":"cj3jhpaue00fopcmjngnb04fx","_id":"cj3jjpbct004ozumjrqmtw5n9"},{"post_id":"cj3jjpbbt001mzumj0ztjdj2t","category_id":"cj3jhpavh00itpcmjme3rr9s1","_id":"cj3jjpbct004pzumj84bz0cxf"},{"post_id":"cj3jjpbbt001mzumj0ztjdj2t","category_id":"cj3jhpawi00lzpcmjrjojd6zf","_id":"cj3jjpbct004qzumjpns2htdy"},{"post_id":"cj3jjpbbz001qzumjfhr6gz5s","category_id":"cj3jhparu007hpcmj354gvtz9","_id":"cj3jjpbct004rzumj15sogf8r"},{"post_id":"cj3jjpbbz001qzumjfhr6gz5s","category_id":"cj3jhpatc00cipcmjsqwup1o0","_id":"cj3jjpbct004szumj5fm0aplz"},{"post_id":"cj3jjpbbw001ozumjvgd4f501","category_id":"cj3jhpao5001qpcmjwqpi4oxd","_id":"cj3jjpbct004tzumjizz8in2p"},{"post_id":"cj3jjpbbw001ozumjvgd4f501","category_id":"cj3jhparu007gpcmjrh9wswlz","_id":"cj3jjpbct004uzumjxht9c6py"},{"post_id":"cj3jjpbbw001ozumjvgd4f501","category_id":"cj3jhpatc00cfpcmjiobi6ysl","_id":"cj3jjpbct004vzumjpbzgm6k9"},{"post_id":"cj3jjpbbw001ozumjvgd4f501","category_id":"cj3jhpauf00frpcmjn2pd1abu","_id":"cj3jjpbct004wzumjnga7p1cj"},{"post_id":"cj3jjpbbw001ozumjvgd4f501","category_id":"cj3jhpavi00ivpcmj5377vquw","_id":"cj3jjpbct004xzumjou2mgj9k"},{"post_id":"cj3jjpbbw001ozumjvgd4f501","category_id":"cj3jhpawj00m2pcmjnnpq4hzf","_id":"cj3jjpbcu004yzumjgecgvz3y"},{"post_id":"cj3jjpbc3001szumj4ejlsmn6","category_id":"cj3jhparu007hpcmj354gvtz9","_id":"cj3jjpbcu004zzumjcmezuxbh"},{"post_id":"cj3jjpbc3001szumj4ejlsmn6","category_id":"cj3jhpatc00cipcmjsqwup1o0","_id":"cj3jjpbcu0050zumjkpet6khk"},{"post_id":"cj3jjpbc8001uzumj8umjtmy2","category_id":"cj3jhparv007kpcmjh0xi1szd","_id":"cj3jjpbcu0051zumjzth79fgj"},{"post_id":"cj3jjpbc8001uzumj8umjtmy2","category_id":"cj3jhpate00copcmj5a97mh1f","_id":"cj3jjpbcu0052zumjn0jglt0b"},{"post_id":"cj3jjpbc8001uzumj8umjtmy2","category_id":"cj3jhpauh00fxpcmjf1ytu7h3","_id":"cj3jjpbcu0053zumj6gd8s1xd"},{"post_id":"cj3jjpbc8001uzumj8umjtmy2","category_id":"cj3jhpavj00ixpcmj8zjq7baq","_id":"cj3jjpbcu0054zumjy2tuuwx0"},{"post_id":"cj3jjpbc8001uzumj8umjtmy2","category_id":"cj3jhpawk00m5pcmjc2c2lmx5","_id":"cj3jjpbcu0055zumjymd1f4dz"},{"post_id":"cj3jjpbc8001uzumj8umjtmy2","category_id":"cj3jhpaxh00oopcmjo1fl1sde","_id":"cj3jjpbcu0056zumjnncp4sfr"},{"post_id":"cj3jjpbcf001yzumj0d6td7dy","category_id":"cj3jhparw007npcmjs0up8h6z","_id":"cj3jjpbcu0057zumjx08jnkc0"},{"post_id":"cj3jjpbcf001yzumj0d6td7dy","category_id":"cj3jhpatf00ctpcmjon4jtazm","_id":"cj3jjpbcu0058zumj6dd1z3or"},{"post_id":"cj3jjpbcb001wzumjvueos0vs","category_id":"cj3jhparw007mpcmjh8lzpg0z","_id":"cj3jjpbcu0059zumjibx1vyxj"},{"post_id":"cj3jjpbcb001wzumjvueos0vs","category_id":"cj3jhpatf00cspcmjzly0emhh","_id":"cj3jjpbcu005azumjw0lp3px0"},{"post_id":"cj3jjpbcb001wzumjvueos0vs","category_id":"cj3jhpaui00fzpcmjq4igfxwi","_id":"cj3jjpbcu005bzumj1z5gmc9g"},{"post_id":"cj3jjpbcb001wzumjvueos0vs","category_id":"cj3jhpavk00j2pcmj14hbacza","_id":"cj3jjpbcu005czumjpffkkavd"},{"post_id":"cj3jjpbcb001wzumjvueos0vs","category_id":"cj3jhpawm00mcpcmjg6t2zqcy","_id":"cj3jjpbcu005dzumjxhku1skz"},{"post_id":"cj3jjpbcb001wzumjvueos0vs","category_id":"cj3jhpaxk00oupcmjclbzsv1d","_id":"cj3jjpbcu005ezumjicds8i8w"},{"post_id":"cj3jjpbcb001wzumjvueos0vs","category_id":"cj3jhpayd00r0pcmjenfmva5p","_id":"cj3jjpbcu005fzumjl3izfzcy"},{"post_id":"cj3jjpbcb001wzumjvueos0vs","category_id":"cj3jhpays00s6pcmjzug2tgki","_id":"cj3jjpbcu005gzumjdv6olksf"},{"post_id":"cj3jjqt4b000005mjt9obvf73","category_id":"cj3jhparw007ppcmj6gzzgd77","_id":"cj3jjqt4r000305mj85n54blb"},{"post_id":"cj3jjqt4k000105mjenqkzgc2","category_id":"cj3jhparw007ppcmj6gzzgd77","_id":"cj3jjqt4u000505mjhfmaiowb"},{"post_id":"cj3jjqt4r000405mjedxqlfja","category_id":"cj3jhparw007ppcmj6gzzgd77","_id":"cj3jjqt50000905mj9pkrgxav"},{"post_id":"cj3jjqt4r000405mjedxqlfja","category_id":"cj3jhpath00cypcmjtwkg6nnx","_id":"cj3jjqt52000b05mj9zj0uy1g"},{"post_id":"cj3jjqt4u000605mji5hscljx","category_id":"cj3jhpary007vpcmjt4y910b2","_id":"cj3jjqt55000d05mj0kpo4nl4"},{"post_id":"cj3jjqt4u000605mji5hscljx","category_id":"cj3jhpati00czpcmjcx6glqh4","_id":"cj3jjqt58000f05mj4zvdfcxc"},{"post_id":"cj3jjqt4u000605mji5hscljx","category_id":"cj3jhpauk00g2pcmjlumuo771","_id":"cj3jjqt5b000h05mj2s25y67q"},{"post_id":"cj3jjqt4u000605mji5hscljx","category_id":"cj3jhpavm00j9pcmj78hhx9bc","_id":"cj3jjqt5e000j05mjxy4qe9w2"},{"post_id":"cj3jjqt4w000705mjx8r4aeud","category_id":"cj3jhpas0007xpcmjv2f4jel0","_id":"cj3jjqt5g000l05mjgwl9wn1g"},{"post_id":"cj3jjqt4w000705mjx8r4aeud","category_id":"cj3jhpatj00d3pcmjt7x3dyvh","_id":"cj3jjqt5i000n05mjhkzbywnd"},{"post_id":"cj3jjqt4w000705mjx8r4aeud","category_id":"cj3jhpaul00g4pcmjbpag279o","_id":"cj3jjqt5k000p05mjq7dh7tbr"},{"post_id":"cj3jjqt4y000805mj2s24w32j","category_id":"cj3jhpas0007ypcmjpisab7cb","_id":"cj3jjqt5m000r05mjsxuk84wy"},{"post_id":"cj3jjqt4y000805mj2s24w32j","category_id":"cj3jhpatl00d6pcmjksfd2rds","_id":"cj3jjqt5o000t05mjbiktqbqy"},{"post_id":"cj3jjqt51000a05mjo78uwvvp","category_id":"cj3jhpas0007ypcmjpisab7cb","_id":"cj3jjqt5s000v05mjzhgzd2lk"},{"post_id":"cj3jjqt51000a05mjo78uwvvp","category_id":"cj3jhpatk00d4pcmj5asrfbkw","_id":"cj3jjqt5w000x05mjqaeoc72o"},{"post_id":"cj3jjqt51000a05mjo78uwvvp","category_id":"cj3jhpaul00g5pcmjr5h8q28l","_id":"cj3jjqt5z000z05mje22igc4e"},{"post_id":"cj3jjqt54000c05mjgj3oaugd","category_id":"cj3jhpas20081pcmj81c8hakg","_id":"cj3jjqt61001105mj6nesre6a"},{"post_id":"cj3jjqt56000e05mjc4vpwb6i","category_id":"cj3jhpas30084pcmj5rxfp8a8","_id":"cj3jjqt63001305mjjcsktq3b"},{"post_id":"cj3jjqt59000g05mja3ohi00c","category_id":"cj3jhpas30085pcmj4c5jiazw","_id":"cj3jjqt67001505mjqlopiacc"},{"post_id":"cj3jjqt5b000i05mjpkopu2fv","category_id":"cj3jhpas40089pcmjwjqnavrg","_id":"cj3jjqt69001705mjt4g71gsu"},{"post_id":"cj3jjqt5f000k05mjf85iruep","category_id":"cj3jhpas6008epcmj3aztkz6b","_id":"cj3jjqt6b001905mjerb8jiu4"},{"post_id":"cj3jjqt5h000m05mj8ta87k6j","category_id":"cj3jhpas4008apcmjano7lw10","_id":"cj3jjqt6c001a05mjqfl7gcws"},{"post_id":"cj3jjqt5k000q05mj000c25ej","category_id":"cj3jhpasd008ipcmj9zefyo1i","_id":"cj3jjqt6d001b05mjvoz37rpo"},{"post_id":"cj3jjqt5j000o05mjnj1nb4f2","category_id":"cj3jhpasb008fpcmjvms8podl","_id":"cj3jjqt6d001c05mjhd97efkp"},{"post_id":"cj3jjqt5j000o05mjnj1nb4f2","category_id":"cj3jhpatn00dcpcmjc75pj0sp","_id":"cj3jjqt6d001d05mj95v81lu7"},{"post_id":"cj3jjqt5j000o05mjnj1nb4f2","category_id":"cj3jhpauo00gjpcmjc1g879m4","_id":"cj3jjqt6d001e05mjibtd98fm"},{"post_id":"cj3jjqt5j000o05mjnj1nb4f2","category_id":"cj3jhpavq00jopcmj107eolab","_id":"cj3jjqt6d001f05mju7yjkpt7"},{"post_id":"cj3jjqt5j000o05mjnj1nb4f2","category_id":"cj3jhpawr00mvpcmjy1318sz3","_id":"cj3jjqt6d001g05mjyd2b1cr8"},{"post_id":"cj3jjqt5j000o05mjnj1nb4f2","category_id":"cj3jhpaxo00papcmjqeytwg10","_id":"cj3jjqt6d001h05mjf8t81153"},{"post_id":"cj3jjqt5j000o05mjnj1nb4f2","category_id":"cj3jhpayg00rapcmjouvvn49i","_id":"cj3jjqt6d001i05mjs8fzoypq"},{"post_id":"cj3jjqt5n000s05mj8lkhq6vz","category_id":"cj3jhpasd008jpcmjn7uklalc","_id":"cj3jjqt6d001j05mj4w910vh3"},{"post_id":"cj3jjqt5q000u05mj0qu6j7hi","category_id":"cj3jhpase008npcmjwf0jgsha","_id":"cj3jjqt6d001k05mjqw08xlht"},{"post_id":"cj3jjqt5u000w05mj7ertewxr","category_id":"cj3jhpase008lpcmjn6ybpibm","_id":"cj3jjqt6d001l05mjkmrzm1rd"},{"post_id":"cj3jjqt5x000y05mjlmiquwq4","category_id":"cj3jhpasf008ppcmj89b86w3r","_id":"cj3jjqt6d001m05mjrg0j8jk2"},{"post_id":"cj3jjqt60001005mj20xmr3ao","category_id":"cj3jhpasg008tpcmjtr01vdnn","_id":"cj3jjqt6d001n05mjt9zdx5kf"},{"post_id":"cj3jjqt62001205mjj7v9ezuv","category_id":"cj3jhpash008ypcmjpj8yi6fj","_id":"cj3jjqt6d001o05mj4ffu8ku3"},{"post_id":"cj3jjqt65001405mj815kp48b","category_id":"cj3jhpasg008upcmjy9ksp5ii","_id":"cj3jjqt6e001p05mjipsgteju"},{"post_id":"cj3jjqt68001605mj37a6sgs8","category_id":"cj3jhpasi0091pcmj420j9bth","_id":"cj3jjqt6e001q05mjjtg2l05a"},{"post_id":"cj3jjqt6a001805mjs5qd07na","category_id":"cj3jhpasi008zpcmjlvr03wev","_id":"cj3jjqt6f001r05mjhha3miwg"},{"post_id":"cj3jjrdtm00000emjdig0hkkg","category_id":"cj3jhpasi0093pcmjr8udkih5","_id":"cj3jjrdu200030emjetc1ro3r"},{"post_id":"cj3jjrdtv00010emj8k24m5yc","category_id":"cj3jhpasj0097pcmjnwwozdw1","_id":"cj3jjrdu400050emjy0n18osy"},{"post_id":"cj3jjrdtz00020emjzt2mlqd4","category_id":"cj3jhpasj0098pcmjbt26m2gq","_id":"cj3jjrdu700070emjese7xh85"},{"post_id":"cj3jjrdu200040emjpcz0hneq","category_id":"cj3jhpasj009cpcmjc7iol530","_id":"cj3jjrdua00090emj210kxx8c"},{"post_id":"cj3jjrdu400060emjrowqxqv5","category_id":"cj3jhpask009hpcmjg9gzc8dt","_id":"cj3jjrdub000a0emjsvfhmnx7"},{"post_id":"cj3jjrdu700080emj202rs0uo","category_id":"cj3jhpask009dpcmj7fhedonb","_id":"cj3jjrdub000b0emj8ai3ruln"},{"post_id":"cj3jjssn100000rmjawzkch99","category_id":"cj3jhpam00002pcmjx5wuta7p","_id":"cj3jjssnk00020rmjlo6pyfze"},{"post_id":"cj3jjssn100000rmjawzkch99","category_id":"cj3jhpari0066pcmjvngueenm","_id":"cj3jjssnm00030rmjrfnddof7"},{"post_id":"cj3jjssn100000rmjawzkch99","category_id":"cj3jhpass00aepcmjzg7xosd9","_id":"cj3jjssnm00040rmjli0y55xq"},{"post_id":"cj3jjssn100000rmjawzkch99","category_id":"cj3jhpatx00dwpcmj2bwgaxwi","_id":"cj3jjssnm00050rmjsysqgd77"},{"post_id":"cj3jjssn100000rmjawzkch99","category_id":"cj3jhpav200hepcmj2x52nm3f","_id":"cj3jjssnn00060rmj0ybdg8vj"},{"post_id":"cj3jjssn100000rmjawzkch99","category_id":"cj3jhpaw100kgpcmj0wbejysb","_id":"cj3jjssnp00070rmjk8cqx4qs"},{"post_id":"cj3jjssn100000rmjawzkch99","category_id":"cj3jhpax600nopcmjl3qzglz6","_id":"cj3jjssnp00080rmjhyqmn8xk"},{"post_id":"cj3jjssna00010rmj61o7aoob","category_id":"cj3jhpaps003fpcmjvhi7l6r2","_id":"cj3jjssnp00090rmjbivcu2us"},{"post_id":"cj3jjssna00010rmj61o7aoob","category_id":"cj3jhparr0074pcmj40omw9mf","_id":"cj3jjssnq000a0rmjm2iykb0w"},{"post_id":"cj3jjssna00010rmj61o7aoob","category_id":"cj3jhpatm00dbpcmjl8qr3of4","_id":"cj3jjssnq000b0rmj3spr15al"},{"post_id":"cj3jjssna00010rmj61o7aoob","category_id":"cj3jhpav300hgpcmjur361zzj","_id":"cj3jjssnq000c0rmjgyms1fbb"},{"post_id":"cj3jjssna00010rmj61o7aoob","category_id":"cj3jhpaw200khpcmjnadwozey","_id":"cj3jjssnq000d0rmjs3grd7xy"},{"post_id":"cj3jjssna00010rmj61o7aoob","category_id":"cj3jhpax700nrpcmjxbec3r9e","_id":"cj3jjssnq000e0rmjfi5v8yya"},{"post_id":"cj3jjssna00010rmj61o7aoob","category_id":"cj3jhpay700qhpcmj1y4xnnwg","_id":"cj3jjssnq000f0rmj1ce29zfm"},{"post_id":"cj3jjssna00010rmj61o7aoob","category_id":"cj3jhpayl00rnpcmjkuvqccu3","_id":"cj3jjssnq000g0rmj8qwbqx7j"},{"post_id":"cj3jjssna00010rmj61o7aoob","category_id":"cj3jhpaz400snpcmjozp5iwy5","_id":"cj3jjssnq000h0rmji0hot3ua"},{"post_id":"cj3jjtynu000615mjvtm1t2a6","category_id":"cj3jhpapj0035pcmjnry5waap","_id":"cj3jjtyol001c15mjw9smwfxv"},{"post_id":"cj3jjtynu000615mjvtm1t2a6","category_id":"cj3jhparo006vpcmjs1j1mlol","_id":"cj3jjtyol001d15mjlfx14hgl"},{"post_id":"cj3jjtynu000615mjvtm1t2a6","category_id":"cj3jhpat100bbpcmjl9yr7oli","_id":"cj3jjtyol001e15mj7kypgk4k"},{"post_id":"cj3jjtynu000615mjvtm1t2a6","category_id":"cj3jhpau700ewpcmj9hfqvtib","_id":"cj3jjtyol001f15mj5j4x9owf"},{"post_id":"cj3jjtynu000615mjvtm1t2a6","category_id":"cj3jhpavz00kcpcmjm8ww7exn","_id":"cj3jjtyol001g15mjwvm4bc3u"},{"post_id":"cj3jjtynu000615mjvtm1t2a6","category_id":"cj3jhpax300njpcmjmuz2ht29","_id":"cj3jjtyol001h15mjti0zwx7s"},{"post_id":"cj3jjtynu000615mjvtm1t2a6","category_id":"cj3jhpay100q7pcmj0cookvx2","_id":"cj3jjtyol001i15mjr0vguua3"},{"post_id":"cj3jjtyo0000815mjwc7vnixh","category_id":"cj3jhpamf0009pcmjf6wqoef7","_id":"cj3jjtyom001j15mjbfaj3igd"},{"post_id":"cj3jjtyo0000815mjwc7vnixh","category_id":"cj3jhpaq0003ppcmjvx8dah1e","_id":"cj3jjtyom001k15mj6fqku34n"},{"post_id":"cj3jjtyo0000815mjwc7vnixh","category_id":"cj3jhparu007epcmjm2dc5y9b","_id":"cj3jjtyom001l15mjfbuac9x1"},{"post_id":"cj3jjtyo0000815mjwc7vnixh","category_id":"cj3jhpatw00dtpcmjn7gc1ymx","_id":"cj3jjtyom001m15mjuwnyhrt4"},{"post_id":"cj3jjtyo0000815mjwc7vnixh","category_id":"cj3jhpav100hbpcmjpbyc6hga","_id":"cj3jjtyom001n15mj29qq6udt"},{"post_id":"cj3jjtyo0000815mjwc7vnixh","category_id":"cj3jhpaw000kepcmj1eistcsq","_id":"cj3jjtyom001o15mjoqlkwe89"},{"post_id":"cj3jjtyo0000815mjwc7vnixh","category_id":"cj3jhpax400nlpcmjkf3houoz","_id":"cj3jjtyom001p15mjlpfdgdnu"},{"post_id":"cj3jjtyo9000c15mjywb0q0qx","category_id":"cj3jhpamf0009pcmjf6wqoef7","_id":"cj3jjtyom001q15mjknm5b6vw"},{"post_id":"cj3jjtyo9000c15mjywb0q0qx","category_id":"cj3jhpaq0003ppcmjvx8dah1e","_id":"cj3jjtyom001r15mj3fphxoxf"},{"post_id":"cj3jjtyo9000c15mjywb0q0qx","category_id":"cj3jhpass00adpcmjreuqaf7h","_id":"cj3jjtyom001s15mj9i8yex2j"},{"post_id":"cj3jjtyo9000c15mjywb0q0qx","category_id":"cj3jhpatw00dvpcmja3wsya6y","_id":"cj3jjtyom001t15mjo70nlhes"},{"post_id":"cj3jjtyo9000c15mjywb0q0qx","category_id":"cj3jhpav200hdpcmj0i00i8xm","_id":"cj3jjtyom001u15mjp1169ts4"},{"post_id":"cj3jjtyo4000a15mju8ko9yer","category_id":"cj3jhpaps003fpcmjvhi7l6r2","_id":"cj3jjtyon001v15mjqo33ohi7"},{"post_id":"cj3jjtyo4000a15mju8ko9yer","category_id":"cj3jhparr0074pcmj40omw9mf","_id":"cj3jjtyon001w15mjhxfjf6za"},{"post_id":"cj3jjtyo4000a15mju8ko9yer","category_id":"cj3jhpatw00dupcmjm6y2z3t9","_id":"cj3jjtyon001x15mjki4oti5r"},{"post_id":"cj3jjtyo4000a15mju8ko9yer","category_id":"cj3jhpav200hcpcmjxr3pjsz5","_id":"cj3jjtyon001y15mjwrut6zsj"},{"post_id":"cj3jjtyo4000a15mju8ko9yer","category_id":"cj3jhpaw000kfpcmj7hjm1z8q","_id":"cj3jjtyon001z15mj0yxewp3c"},{"post_id":"cj3jjtyo4000a15mju8ko9yer","category_id":"cj3jhpax500nmpcmjyal6ogx4","_id":"cj3jjtyon002015mjqgp3ym76"},{"post_id":"cj3jjtyo4000a15mju8ko9yer","category_id":"cj3jhpay500qdpcmj6r970ff6","_id":"cj3jjtyon002115mj6nwxp2gg"},{"post_id":"cj3jjtyo4000a15mju8ko9yer","category_id":"cj3jhpayj00rkpcmjtussridq","_id":"cj3jjtyon002215mjyumhdghx"},{"post_id":"cj3jjtyo4000a15mju8ko9yer","category_id":"cj3jhpaz200sjpcmjbol98x3g","_id":"cj3jjtyon002315mjlvc9kint"},{"post_id":"cj3jjtyo4000a15mju8ko9yer","category_id":"cj3jhpaza00t0pcmj6w17mgyn","_id":"cj3jjtyon002415mjar5e3ob1"},{"post_id":"cj3jjugmd00001bmjkiuyws1z","category_id":"cj3jhpar8005jpcmj9wuoltrn","_id":"cj3jjugmv00031bmjds55cxvs"},{"post_id":"cj3jjugmd00001bmjkiuyws1z","category_id":"cj3jhpasm009spcmjuiduzony","_id":"cj3jjugmv00041bmjacawfjzl"},{"post_id":"cj3jjugmd00001bmjkiuyws1z","category_id":"cj3jhpatq00dipcmjd89q31id","_id":"cj3jjugmy00051bmjjd2nojc4"},{"post_id":"cj3jjugmd00001bmjkiuyws1z","category_id":"cj3jhpauv00grpcmjyrkxuot1","_id":"cj3jjugmy00061bmj1096h3pt"},{"post_id":"cj3jjugmd00001bmjkiuyws1z","category_id":"cj3jhpavt00jvpcmjpjmrud65","_id":"cj3jjugmy00071bmjqrcr4ocv"},{"post_id":"cj3jjugmd00001bmjkiuyws1z","category_id":"cj3jhpawv00n7pcmjwqi0aves","_id":"cj3jjugmy00081bmj9lor29fy"},{"post_id":"cj3jjugmk00011bmjvkceypkg","category_id":"cj3jhpaps003fpcmjvhi7l6r2","_id":"cj3jjugmy00091bmj017zsrzo"},{"post_id":"cj3jjugmk00011bmjvkceypkg","category_id":"cj3jhparr0074pcmj40omw9mf","_id":"cj3jjugmz000a1bmji0j6dfbi"},{"post_id":"cj3jjugmk00011bmjvkceypkg","category_id":"cj3jhpatr00djpcmjf20oegk2","_id":"cj3jjugmz000b1bmjyzl0c7bp"},{"post_id":"cj3jjugmk00011bmjvkceypkg","category_id":"cj3jhpauv00gspcmj63j9aor6","_id":"cj3jjugn0000c1bmjyvaemnsm"},{"post_id":"cj3jjugmn00021bmj9ojcwq5d","category_id":"cj3jhpamf0009pcmjf6wqoef7","_id":"cj3jjugn0000d1bmjmilbwge9"},{"post_id":"cj3jjugmn00021bmj9ojcwq5d","category_id":"cj3jhpaq0003ppcmjvx8dah1e","_id":"cj3jjugn0000e1bmjujy8qxu6"},{"post_id":"cj3jjugmn00021bmj9ojcwq5d","category_id":"cj3jhpaso009zpcmj4ehx108v","_id":"cj3jjugn0000f1bmjgy2zj7cr"},{"post_id":"cj3jjugmn00021bmj9ojcwq5d","category_id":"cj3jhpats00dkpcmjzqgyi5yw","_id":"cj3jjugn0000g1bmj6m2q9n6z"},{"post_id":"cj3jjugmn00021bmj9ojcwq5d","category_id":"cj3jhpauw00gtpcmjpawbh1fz","_id":"cj3jjugn1000h1bmjzigbrqu3"},{"post_id":"cj3jjugmn00021bmj9ojcwq5d","category_id":"cj3jhpavu00jypcmj8p6cwps8","_id":"cj3jjugn1000i1bmj3qgbq48t"},{"post_id":"cj3jjumcb00001emj5j7ibq6c","category_id":"cj3jhpaqf0048pcmjiyypj2qf","_id":"cj3jjumd100051emjzix0fwzn"},{"post_id":"cj3jjumcb00001emj5j7ibq6c","category_id":"cj3jhpas1007zpcmjgkjy8f3n","_id":"cj3jjumd700071emjxm08phm0"},{"post_id":"cj3jjumcb00001emj5j7ibq6c","category_id":"cj3jhpatk00d5pcmjkp9l4y2x","_id":"cj3jjumdb00091emjng3f6br0"},{"post_id":"cj3jjumcb00001emj5j7ibq6c","category_id":"cj3jhpaum00g7pcmjff0xekso","_id":"cj3jjumdg000b1emj4r6mhr4t"},{"post_id":"cj3jjumcb00001emj5j7ibq6c","category_id":"cj3jhpavo00jepcmj1xttlw0w","_id":"cj3jjumdk000d1emj4021zb2o"},{"post_id":"cj3jjumcb00001emj5j7ibq6c","category_id":"cj3jhpawo00mlpcmj3isnttp4","_id":"cj3jjumdn000e1emj3xphh4k1"},{"post_id":"cj3jjumcb00001emj5j7ibq6c","category_id":"cj3jhpaxm00p4pcmjhvxxlers","_id":"cj3jjumdn000f1emjbjgx1iq4"},{"post_id":"cj3jjumcm00011emj7ugbkjzn","category_id":"cj3jhpaqj004fpcmjs8fvvzpw","_id":"cj3jjumdp000g1emjc0z8ef6d"},{"post_id":"cj3jjumcm00011emj7ugbkjzn","category_id":"cj3jhpas40087pcmj3281a5vf","_id":"cj3jjumdp000h1emjplycai14"},{"post_id":"cj3jjumcm00011emj7ugbkjzn","category_id":"cj3jhpatm00d9pcmj8sdqiy9n","_id":"cj3jjumdp000i1emjb91p073t"},{"post_id":"cj3jjumcm00011emj7ugbkjzn","category_id":"cj3jhpaun00gdpcmj50jfsgb2","_id":"cj3jjumdp000j1emjup05nmo9"},{"post_id":"cj3jjumcm00011emj7ugbkjzn","category_id":"cj3jhpavo00jhpcmjtup39dnt","_id":"cj3jjumdp000k1emjmfejm5eh"},{"post_id":"cj3jjumcm00011emj7ugbkjzn","category_id":"cj3jhpawp00mppcmj8u8r8rzz","_id":"cj3jjumdp000l1emjeb1raf7t"},{"post_id":"cj3jjumcq00021emjmh4jiyti","category_id":"cj3jhpaps003fpcmjvhi7l6r2","_id":"cj3jjumdq000m1emjvuents8q"},{"post_id":"cj3jjumcq00021emjmh4jiyti","category_id":"cj3jhparr0074pcmj40omw9mf","_id":"cj3jjumdq000n1emjb0tgpd6q"},{"post_id":"cj3jjumcq00021emjmh4jiyti","category_id":"cj3jhpatm00dbpcmjl8qr3of4","_id":"cj3jjumdq000o1emj441xpmq2"},{"post_id":"cj3jjumcq00021emjmh4jiyti","category_id":"cj3jhpaup00gmpcmj2ty3cn08","_id":"cj3jjumdq000p1emjxxe26llh"},{"post_id":"cj3jjumcq00021emjmh4jiyti","category_id":"cj3jhpavq00jppcmj4gx5t1ah","_id":"cj3jjumdq000q1emji39363m4"},{"post_id":"cj3jjumcq00021emjmh4jiyti","category_id":"cj3jhpaws00mypcmj7rnpg6rs","_id":"cj3jjumdq000r1emjau6931p9"},{"post_id":"cj3jjumcq00021emjmh4jiyti","category_id":"cj3jhpaxq00pepcmj1shx9wlr","_id":"cj3jjumdq000s1emj5ftz7z6h"},{"post_id":"cj3jjumcu00031emjdj45suoc","category_id":"cj3jhpaps003fpcmjvhi7l6r2","_id":"cj3jjumdq000t1emj9x84r7ig"},{"post_id":"cj3jjumcu00031emjdj45suoc","category_id":"cj3jhparr0074pcmj40omw9mf","_id":"cj3jjumdq000u1emjueu2gbc1"},{"post_id":"cj3jjumcu00031emjdj45suoc","category_id":"cj3jhpatm00dbpcmjl8qr3of4","_id":"cj3jjumdq000v1emj6cwzlb8n"},{"post_id":"cj3jjumcu00031emjdj45suoc","category_id":"cj3jhpauo00ggpcmjfynlm9sx","_id":"cj3jjumdq000w1emjq0p2b095"},{"post_id":"cj3jjumcu00031emjdj45suoc","category_id":"cj3jhpavp00jlpcmj8x85xzdu","_id":"cj3jjumdq000x1emjp3x6cycu"},{"post_id":"cj3jjumcu00031emjdj45suoc","category_id":"cj3jhpawq00mspcmjfndaig0k","_id":"cj3jjumdq000y1emjz5owcgpa"},{"post_id":"cj3jjumcu00031emjdj45suoc","category_id":"cj3jhpaxn00p7pcmjelmyr0ur","_id":"cj3jjumdr000z1emjdhswldy6"},{"post_id":"cj3jjumcz00041emj0p1pimfu","category_id":"cj3jhpaps003fpcmjvhi7l6r2","_id":"cj3jjumdr00101emjgurb9rwl"},{"post_id":"cj3jjumcz00041emj0p1pimfu","category_id":"cj3jhparr0074pcmj40omw9mf","_id":"cj3jjumdr00111emjtfeab8k3"},{"post_id":"cj3jjumcz00041emj0p1pimfu","category_id":"cj3jhpatm00dbpcmjl8qr3of4","_id":"cj3jjumdr00121emj9ssz5kiy"},{"post_id":"cj3jjumcz00041emj0p1pimfu","category_id":"cj3jhpaup00gnpcmjw16z7iy7","_id":"cj3jjumdr00131emjr111ujs4"},{"post_id":"cj3jjumcz00041emj0p1pimfu","category_id":"cj3jhpavr00jqpcmj43ns8k2p","_id":"cj3jjumdr00141emj8b4imyb0"},{"post_id":"cj3jjumcz00041emj0p1pimfu","category_id":"cj3jhpawt00n2pcmjlcxrccnk","_id":"cj3jjumdr00151emjibqfbhnp"},{"post_id":"cj3jjumcz00041emj0p1pimfu","category_id":"cj3jhpaxr00phpcmjpevdpa1m","_id":"cj3jjumdr00161emjqnzmbf86"},{"post_id":"cj3jjumd400061emjhc1goiow","category_id":"cj3jhpaps003fpcmjvhi7l6r2","_id":"cj3jjumdr00171emjyqw7jpws"},{"post_id":"cj3jjumd400061emjhc1goiow","category_id":"cj3jhparr0074pcmj40omw9mf","_id":"cj3jjumdr00181emjdmjuodvz"},{"post_id":"cj3jjumd400061emjhc1goiow","category_id":"cj3jhpatm00dbpcmjl8qr3of4","_id":"cj3jjumdr00191emj1vk5zdc4"},{"post_id":"cj3jjumd400061emjhc1goiow","category_id":"cj3jhpaup00gnpcmjw16z7iy7","_id":"cj3jjumdr001a1emjgfe2m2to"},{"post_id":"cj3jjumd400061emjhc1goiow","category_id":"cj3jhpavr00jrpcmjsd3eeikt","_id":"cj3jjumdr001b1emjl42k9163"},{"post_id":"cj3jjumd400061emjhc1goiow","category_id":"cj3jhpawu00n5pcmjum0vmo52","_id":"cj3jjumdr001c1emjw5ku99ek"},{"post_id":"cj3jjumd400061emjhc1goiow","category_id":"cj3jhpaxs00pkpcmj0vmh5xzd","_id":"cj3jjumdr001d1emjfbupgg7d"},{"post_id":"cj3jjumd900081emjwv15ggm9","category_id":"cj3jhpape0030pcmjk05ot7zs","_id":"cj3jjumdr001e1emjqmwg822x"},{"post_id":"cj3jjumd900081emjwv15ggm9","category_id":"cj3jhpasi0095pcmjrvmql6cu","_id":"cj3jjumds001f1emjlril5mez"},{"post_id":"cj3jjumd900081emjwv15ggm9","category_id":"cj3jhpatp00dgpcmjwqq3dp6p","_id":"cj3jjumds001g1emjz7t4q6yk"},{"post_id":"cj3jjumd900081emjwv15ggm9","category_id":"cj3jhpauq00gppcmjhubct5yj","_id":"cj3jjumds001h1emjmgevnyuo"},{"post_id":"cj3jjumd900081emjwv15ggm9","category_id":"cj3jhpavs00jspcmj5mepx815","_id":"cj3jjumds001i1emj14seh03u"},{"post_id":"cj3jjumdi000c1emjic0b4pva","category_id":"cj3jhpar5005gpcmjiz1tjhe2","_id":"cj3jjumds001j1emjebvt2vw0"},{"post_id":"cj3jjumde000a1emjexegbovl","category_id":"cj3jhpaps003fpcmjvhi7l6r2","_id":"cj3jjumds001k1emjakma6g2r"},{"post_id":"cj3jjumde000a1emjexegbovl","category_id":"cj3jhpasj009apcmj37fwzl5b","_id":"cj3jjumds001l1emjkeex142i"},{"post_id":"cj3jjumde000a1emjexegbovl","category_id":"cj3jhpatp00dhpcmjd81kp2c0","_id":"cj3jjumds001m1emjjgxuhs5r"},{"post_id":"cj3jjumde000a1emjexegbovl","category_id":"cj3jhpaur00gqpcmj55yb4za0","_id":"cj3jjumds001n1emjxed7gmha"},{"post_id":"cj3jjumde000a1emjexegbovl","category_id":"cj3jhpavt00jtpcmj21e87j6v","_id":"cj3jjumds001o1emj38bf30xu"},{"post_id":"cj3jjumde000a1emjexegbovl","category_id":"cj3jhpawu00n6pcmj9ps65dks","_id":"cj3jjumds001p1emjd30gqgub"},{"post_id":"cj3jjumde000a1emjexegbovl","category_id":"cj3jhpaxt00pnpcmjf84gmh02","_id":"cj3jjumds001q1emj0gcdg4oy"},{"post_id":"cj3jjuse100001hmjw0jl4afw","category_id":"cj3jhpap0002jpcmj73z69rgv","_id":"cj3jjuseq00041hmjaevicqu2"},{"post_id":"cj3jjuse100001hmjw0jl4afw","category_id":"cj3jhpark006hpcmj7g9b70ql","_id":"cj3jjusew00061hmj8aabu50i"},{"post_id":"cj3jjuse100001hmjw0jl4afw","category_id":"cj3jhpasw00avpcmjbfyb355r","_id":"cj3jjusf300081hmjbpmalsaa"},{"post_id":"cj3jjuse100001hmjw0jl4afw","category_id":"cj3jhpau100e5pcmjm96saec7","_id":"cj3jjusf9000a1hmj1c9mhgsi"},{"post_id":"cj3jjuse100001hmjw0jl4afw","category_id":"cj3jhpav600hrpcmjmzg5k0v6","_id":"cj3jjusfc000c1hmj6coj9xjc"},{"post_id":"cj3jjusec00011hmjmic16nal","category_id":"cj3jhpapj0035pcmjnry5waap","_id":"cj3jjusfh000e1hmjgurb40ye"},{"post_id":"cj3jjusec00011hmjmic16nal","category_id":"cj3jhparo006vpcmjs1j1mlol","_id":"cj3jjusfj000f1hmjq8kny0mb"},{"post_id":"cj3jjusec00011hmjmic16nal","category_id":"cj3jhpat100bbpcmjl9yr7oli","_id":"cj3jjusfl000g1hmj15b0p9xn"},{"post_id":"cj3jjusec00011hmjmic16nal","category_id":"cj3jhpau700ewpcmj9hfqvtib","_id":"cj3jjusft000h1hmjx3zg2zs6"},{"post_id":"cj3jjusec00011hmjmic16nal","category_id":"cj3jhpavd00iipcmjx1rw5f3u","_id":"cj3jjusft000i1hmjmv192oaz"},{"post_id":"cj3jjusec00011hmjmic16nal","category_id":"cj3jhpawc00lcpcmjgig2yzxb","_id":"cj3jjusfv000j1hmjppthukzz"},{"post_id":"cj3jjusec00011hmjmic16nal","category_id":"cj3jhpaxd00obpcmjhg97dx2u","_id":"cj3jjusfv000k1hmja08z0rlm"},{"post_id":"cj3jjusec00011hmjmic16nal","category_id":"cj3jhpay900qnpcmjmzme3g29","_id":"cj3jjusfw000l1hmjv2s8ezun"},{"post_id":"cj3jjusec00011hmjmic16nal","category_id":"cj3jhpaym00rtpcmjqu1qtsme","_id":"cj3jjusfw000m1hmjmm8vqma7"},{"post_id":"cj3jjusec00011hmjmic16nal","category_id":"cj3jhpaz500sqpcmjtqjd5g9u","_id":"cj3jjusfw000n1hmjqq3wvbxn"},{"post_id":"cj3jjuseg00021hmj2phk3i8n","category_id":"cj3jhpapo003cpcmj15k43fg8","_id":"cj3jjusfw000o1hmjzrr18oah"},{"post_id":"cj3jjuseg00021hmj2phk3i8n","category_id":"cj3jhparq0071pcmjwc2th8zk","_id":"cj3jjusfw000p1hmjmnyqmjk4"},{"post_id":"cj3jjuseg00021hmj2phk3i8n","category_id":"cj3jhpat300blpcmjdb2z24dz","_id":"cj3jjusfw000q1hmjdreh3onr"},{"post_id":"cj3jjuseg00021hmj2phk3i8n","category_id":"cj3jhpau900f6pcmjp7o2gt7r","_id":"cj3jjusfw000r1hmjkznyrcab"},{"post_id":"cj3jjuseg00021hmj2phk3i8n","category_id":"cj3jhpave00ikpcmjwu0sh7od","_id":"cj3jjusfw000s1hmji9mlwy89"},{"post_id":"cj3jjuseg00021hmj2phk3i8n","category_id":"cj3jhpawe00lipcmjarjni6pt","_id":"cj3jjusfw000t1hmjyy8bs3a7"},{"post_id":"cj3jjuseg00021hmj2phk3i8n","category_id":"cj3jhpaxf00ohpcmjopvi04sy","_id":"cj3jjusfw000u1hmj5b1nu229"},{"post_id":"cj3jjuseg00021hmj2phk3i8n","category_id":"cj3jhpaya00qqpcmjx474o3en","_id":"cj3jjusfw000v1hmjk6xr7twl"},{"post_id":"cj3jjuseg00021hmj2phk3i8n","category_id":"cj3jhpayo00rxpcmjhjwx6ca7","_id":"cj3jjusfw000w1hmjxkfhkkai"},{"post_id":"cj3jjusel00031hmj33cixgvu","category_id":"cj3jhpaps003fpcmjvhi7l6r2","_id":"cj3jjusfx000x1hmj80o70wau"},{"post_id":"cj3jjusel00031hmj33cixgvu","category_id":"cj3jhparr0074pcmj40omw9mf","_id":"cj3jjusfx000y1hmjbq1xj58h"},{"post_id":"cj3jjusel00031hmj33cixgvu","category_id":"cj3jhpat400bppcmjn0sg7crx","_id":"cj3jjusfy000z1hmjpfgt38bt"},{"post_id":"cj3jjusel00031hmj33cixgvu","category_id":"cj3jhpaua00f9pcmjos8frrhd","_id":"cj3jjusfy00101hmjfcosyrlb"},{"post_id":"cj3jjusel00031hmj33cixgvu","category_id":"cj3jhpave00ilpcmj0cmcnll4","_id":"cj3jjusfy00111hmj7g2rqk3p"},{"post_id":"cj3jjusel00031hmj33cixgvu","category_id":"cj3jhpawf00lmpcmjz2ynex37","_id":"cj3jjusfy00121hmjd3bd1i6b"},{"post_id":"cj3jjusew00071hmjkqf9hdb4","category_id":"cj3jhpamf0009pcmjf6wqoef7","_id":"cj3jjusfy00131hmjn4xdmcp4"},{"post_id":"cj3jjusew00071hmjkqf9hdb4","category_id":"cj3jhpaq0003ppcmjvx8dah1e","_id":"cj3jjusfy00141hmjx54aqq77"},{"post_id":"cj3jjusew00071hmjkqf9hdb4","category_id":"cj3jhparu007epcmjm2dc5y9b","_id":"cj3jjusfz00151hmjanayi2ib"},{"post_id":"cj3jjusew00071hmjkqf9hdb4","category_id":"cj3jhpatb00ccpcmjh5a4iclj","_id":"cj3jjusfz00161hmjqusd09o7"},{"post_id":"cj3jjuseq00051hmjbj17yf8d","category_id":"cj3jhpapw003mpcmjng7tv2gn","_id":"cj3jjusfz00171hmjqj3503lm"},{"post_id":"cj3jjuseq00051hmjbj17yf8d","category_id":"cj3jhpart007bpcmjk38epfd9","_id":"cj3jjusg000181hmj9uwsi93k"},{"post_id":"cj3jjuseq00051hmjbj17yf8d","category_id":"cj3jhpata00c7pcmjqiizcoir","_id":"cj3jjusg000191hmjmms46xej"},{"post_id":"cj3jjuseq00051hmjbj17yf8d","category_id":"cj3jhpauc00fkpcmjzt30rqaz","_id":"cj3jjusg0001a1hmjnrwgchul"},{"post_id":"cj3jjuseq00051hmjbj17yf8d","category_id":"cj3jhpavg00iqpcmjsrwdi68u","_id":"cj3jjusg0001b1hmj8szmxgei"},{"post_id":"cj3jjuseq00051hmjbj17yf8d","category_id":"cj3jhpawh00lvpcmjzqx9xvq4","_id":"cj3jjusg0001c1hmjqa8ka2bo"},{"post_id":"cj3jjuseq00051hmjbj17yf8d","category_id":"cj3jhpaxh00okpcmj7w66cs15","_id":"cj3jjusg0001d1hmjlm8sznwz"},{"post_id":"cj3jjuseq00051hmjbj17yf8d","category_id":"cj3jhpayb00qupcmjjmmcgftr","_id":"cj3jjusg0001e1hmjslbo23yi"},{"post_id":"cj3jjuseq00051hmjbj17yf8d","category_id":"cj3jhpayp00s0pcmjdl5r1o2p","_id":"cj3jjusg0001f1hmjxsvg02m9"},{"post_id":"cj3jjuseq00051hmjbj17yf8d","category_id":"cj3jhpaz700stpcmj255thwfj","_id":"cj3jjusg0001g1hmjknf8fnvu"},{"post_id":"cj3jjuseq00051hmjbj17yf8d","category_id":"cj3jhpazc00t3pcmjzgg82pqu","_id":"cj3jjusg0001h1hmjtbkm9cnz"},{"post_id":"cj3jjusf300091hmjww2dqgjv","category_id":"cj3jhpaq4003vpcmjq9sqz9i6","_id":"cj3jjusg0001i1hmjsqljbaam"},{"post_id":"cj3jjusf300091hmjww2dqgjv","category_id":"cj3jhparv007lpcmj5sw52amq","_id":"cj3jjusg0001j1hmjh6ek8jzr"},{"post_id":"cj3jjusf300091hmjww2dqgjv","category_id":"cj3jhpate00cqpcmj1k13noxn","_id":"cj3jjusg0001k1hmjsce8rvag"},{"post_id":"cj3jjusf300091hmjww2dqgjv","category_id":"cj3jhpaui00fypcmj0m9bqi9k","_id":"cj3jjusg0001l1hmjy7abrawk"},{"post_id":"cj3jjusf300091hmjww2dqgjv","category_id":"cj3jhpavk00izpcmjlpavij06","_id":"cj3jjusg0001m1hmjclyehudy"},{"post_id":"cj3jjusf300091hmjww2dqgjv","category_id":"cj3jhpawl00m8pcmj2vx1iwzd","_id":"cj3jjusg1001n1hmjyom5olof"},{"post_id":"cj3jjusf300091hmjww2dqgjv","category_id":"cj3jhpaxi00orpcmjzramtdvg","_id":"cj3jjusg1001o1hmjlwxtnx1z"},{"post_id":"cj3jjusf300091hmjww2dqgjv","category_id":"cj3jhpayc00qxpcmjgxb2nb9s","_id":"cj3jjusg1001p1hmjzpclw89r"},{"post_id":"cj3jjusf300091hmjww2dqgjv","category_id":"cj3jhpayr00s3pcmjt5fuqjj8","_id":"cj3jjusg1001q1hmjvke7s9s9"},{"post_id":"cj3jjusf9000b1hmjlie1edwg","category_id":"cj3jhpaq9003zpcmjm0uj51bl","_id":"cj3jjusg1001r1hmjmukjnxg1"},{"post_id":"cj3jjusf9000b1hmjlie1edwg","category_id":"cj3jhparw007opcmj2u8g50g7","_id":"cj3jjusg1001s1hmji1m2gtkg"},{"post_id":"cj3jjusf9000b1hmjlie1edwg","category_id":"cj3jhpatf00cupcmj2p35rnnb","_id":"cj3jjusg1001t1hmjqlsctixs"},{"post_id":"cj3jjusf9000b1hmjlie1edwg","category_id":"cj3jhpauj00g0pcmjc8t0gfxg","_id":"cj3jjusg2001u1hmjopqv8r7m"},{"post_id":"cj3jjusf9000b1hmjlie1edwg","category_id":"cj3jhpavl00j5pcmj7yd3xo9b","_id":"cj3jjusg2001v1hmj9fwird5v"},{"post_id":"cj3jjusf9000b1hmjlie1edwg","category_id":"cj3jhpawm00mfpcmjyhxlo9rk","_id":"cj3jjusg2001w1hmjivgin5zz"},{"post_id":"cj3jjusf9000b1hmjlie1edwg","category_id":"cj3jhpaxk00oxpcmjwkb0a8e7","_id":"cj3jjusg2001x1hmjlyfpk8nc"},{"post_id":"cj3jjusf9000b1hmjlie1edwg","category_id":"cj3jhpaye00r3pcmjjpx1gbvk","_id":"cj3jjusg2001y1hmj39jyfzem"},{"post_id":"cj3jjusf9000b1hmjlie1edwg","category_id":"cj3jhpayu00sapcmjpo5y3aok","_id":"cj3jjusg2001z1hmj2o7tk7hu"},{"post_id":"cj3jjusfc000d1hmjvbnu0hpu","category_id":"cj3jhpaqd0045pcmj3j1slfk2","_id":"cj3jjusg200201hmjpm3b9f7f"},{"post_id":"cj3jjusfc000d1hmjvbnu0hpu","category_id":"cj3jhparz007wpcmj26draiss","_id":"cj3jjusg200211hmjzgb62182"},{"post_id":"cj3jjusfc000d1hmjvbnu0hpu","category_id":"cj3jhpatj00d1pcmjh0kl40uz","_id":"cj3jjusg200221hmjr0bqx0xs"},{"post_id":"cj3jjusfc000d1hmjvbnu0hpu","category_id":"cj3jhpauk00g3pcmj4j0uyrqu","_id":"cj3jjusg300231hmjq87lxtdq"},{"post_id":"cj3jjusfc000d1hmjvbnu0hpu","category_id":"cj3jhpavn00jbpcmjxj8u6p8f","_id":"cj3jjusg300241hmjc7sjk8w2"},{"post_id":"cj3jjusfc000d1hmjvbnu0hpu","category_id":"cj3jhpawn00mipcmjrjyl8liw","_id":"cj3jjusg300251hmjbfpaioj7"},{"post_id":"cj3jjusfc000d1hmjvbnu0hpu","category_id":"cj3jhpaxl00p1pcmjuf59p97s","_id":"cj3jjusg300261hmj8bmhfain"},{"post_id":"cj3jjusfc000d1hmjvbnu0hpu","category_id":"cj3jhpayf00r7pcmj122lsio9","_id":"cj3jjusg300271hmjqphp96ow"},{"post_id":"cj3jjusfc000d1hmjvbnu0hpu","category_id":"cj3jhpayw00sdpcmjvttq0oa0","_id":"cj3jjusg300281hmjoyik8m3h"},{"post_id":"cj3jjusfc000d1hmjvbnu0hpu","category_id":"cj3jhpaz900swpcmj64k4ewx8","_id":"cj3jjusg300291hmj0bsu19ag"},{"post_id":"cj3jjusfc000d1hmjvbnu0hpu","category_id":"cj3jhpazf00t6pcmjvdw06c1k","_id":"cj3jjusg3002a1hmj0nf7qw0t"},{"post_id":"cj3jjusfc000d1hmjvbnu0hpu","category_id":"cj3jhpazh00tapcmjwhh7xdzg","_id":"cj3jjusg3002b1hmjxja0rd4u"},{"post_id":"cj3jjuyzz00011jmj7roo8klk","category_id":"cj3jhpans001gpcmj5qadzvka","_id":"cj3jjuz0e00041jmj5gmebral"},{"post_id":"cj3jjuyzp00001jmjjjovzq0t","category_id":"cj3jhpao5001qpcmjwqpi4oxd","_id":"cj3jjuz0k00061jmju43x5qa1"},{"post_id":"cj3jjuyzp00001jmjjjovzq0t","category_id":"cj3jhpard005rpcmjzbp0ni20","_id":"cj3jjuz0o00081jmjthexbj0n"},{"post_id":"cj3jjuyzp00001jmjjjovzq0t","category_id":"cj3jhpasp00a2pcmju65slgun","_id":"cj3jjuz0v000a1jmjbbdifui4"},{"post_id":"cj3jjuyzp00001jmjjjovzq0t","category_id":"cj3jhpats00dlpcmj2zkshsyl","_id":"cj3jjuz13000c1jmjwbubh9jc"},{"post_id":"cj3jjuyzp00001jmjjjovzq0t","category_id":"cj3jhpaux00gvpcmj0zouggz5","_id":"cj3jjuz1e000d1jmjv7cr3eds"},{"post_id":"cj3jjuz0400021jmj8sa3ztqs","category_id":"cj3jhpaop0026pcmjmn5up0yx","_id":"cj3jjuz1f000e1jmjnma5wu27"},{"post_id":"cj3jjuz0400021jmj8sa3ztqs","category_id":"cj3jhpari0068pcmjjtg4iapm","_id":"cj3jjuz1g000f1jmjyn4n5wvb"},{"post_id":"cj3jjuz0400021jmj8sa3ztqs","category_id":"cj3jhpast00agpcmjaoy7n9vw","_id":"cj3jjuz1h000g1jmjm2ggjy14"},{"post_id":"cj3jjuz0e00051jmjwd4h3i28","category_id":"cj3jhpaou002bpcmjuzp1nzks","_id":"cj3jjuz1h000h1jmjcr57sm98"},{"post_id":"cj3jjuz0e00051jmjwd4h3i28","category_id":"cj3jhparj006bpcmjchd9pjlh","_id":"cj3jjuz1h000i1jmjtaxaa2ta"},{"post_id":"cj3jjuz0e00051jmjwd4h3i28","category_id":"cj3jhpasv00ampcmjd0a8wp46","_id":"cj3jjuz1i000j1jmji1wwhkn1"},{"post_id":"cj3jjuz0700031jmjuskcg6la","category_id":"cj3jhpamf0009pcmjf6wqoef7","_id":"cj3jjuz1i000k1jmjdf82lcge"},{"post_id":"cj3jjuz0700031jmjuskcg6la","category_id":"cj3jhpan50010pcmjx2pxcmwd","_id":"cj3jjuz1i000l1jmju0rxsu0n"},{"post_id":"cj3jjuz0700031jmjuskcg6la","category_id":"cj3jhparf0062pcmjvl93gzjp","_id":"cj3jjuz1j000m1jmj2e7hg8bm"},{"post_id":"cj3jjuz0700031jmjuskcg6la","category_id":"cj3jhpasr00aapcmje7u0nk3z","_id":"cj3jjuz1j000n1jmjvb7z0bzv"},{"post_id":"cj3jjuz0700031jmjuskcg6la","category_id":"cj3jhpatv00dspcmjb077u4nk","_id":"cj3jjuz1j000o1jmjyjlwy10j"},{"post_id":"cj3jjuz0700031jmjuskcg6la","category_id":"cj3jhpav000hapcmj05l6r4p3","_id":"cj3jjuz1j000p1jmjliks02w9"},{"post_id":"cj3jjuz0700031jmjuskcg6la","category_id":"cj3jhpavz00kdpcmjoo7dm5au","_id":"cj3jjuz1j000q1jmjbxg4f2yt"},{"post_id":"cj3jjuz0700031jmjuskcg6la","category_id":"cj3jhpax300nkpcmjlx9uaf4a","_id":"cj3jjuz1j000r1jmjob01w9mv"},{"post_id":"cj3jjuz0700031jmjuskcg6la","category_id":"cj3jhpay300qapcmjg17av3k6","_id":"cj3jjuz1j000s1jmjrtgro3ik"},{"post_id":"cj3jjuz0k00071jmjyqd02qns","category_id":"cj3jhpapc002wpcmjnfotiro8","_id":"cj3jjuz1j000t1jmjzzs1vs20"},{"post_id":"cj3jjuz0k00071jmjyqd02qns","category_id":"cj3jhparm006ppcmjcpgj1ltu","_id":"cj3jjuz1k000u1jmja80u5fpk"},{"post_id":"cj3jjuz0k00071jmjyqd02qns","category_id":"cj3jhpasz00b5pcmjg0eazkao","_id":"cj3jjuz1k000v1jmjmiy7zw9d"},{"post_id":"cj3jjuz0k00071jmjyqd02qns","category_id":"cj3jhpau400empcmjh1hgu090","_id":"cj3jjuz1k000w1jmjwej738qt"},{"post_id":"cj3jjuz0p00091jmjt4gp6pln","category_id":"cj3jhpape0030pcmjk05ot7zs","_id":"cj3jjuz1k000x1jmj99bn3ray"},{"post_id":"cj3jjuz0p00091jmjt4gp6pln","category_id":"cj3jhparn006spcmjwrw6rq0l","_id":"cj3jjuz1k000y1jmjewtk1uxm"},{"post_id":"cj3jjuz0p00091jmjt4gp6pln","category_id":"cj3jhpat000b8pcmjwiezur7g","_id":"cj3jjuz1k000z1jmj3tw54f2b"},{"post_id":"cj3jjuz0p00091jmjt4gp6pln","category_id":"cj3jhpau600espcmjg86qczpl","_id":"cj3jjuz1k00101jmjsbxvexnk"},{"post_id":"cj3jjuz0p00091jmjt4gp6pln","category_id":"cj3jhpavb00igpcmjw5k8xs1r","_id":"cj3jjuz1k00111jmj2hz6m77p"},{"post_id":"cj3jjuz0p00091jmjt4gp6pln","category_id":"cj3jhpaw900l5pcmj4u8y6w08","_id":"cj3jjuz1l00121jmjk0a1pv6r"},{"post_id":"cj3jjuz0w000b1jmjwnhiaewi","category_id":"cj3jhpap4002npcmjjxaj6aou","_id":"cj3jjuz1l00131jmjtacva3lu"},{"post_id":"cj3jjuz0w000b1jmjwnhiaewi","category_id":"cj3jhparl006kpcmje5q6cew7","_id":"cj3jjuz1l00141jmji7rex7r7"},{"post_id":"cj3jjuz0w000b1jmjwnhiaewi","category_id":"cj3jhpasx00b0pcmj60vmgaq8","_id":"cj3jjuz1l00151jmjauenlcv6"},{"post_id":"cj3jjuz0w000b1jmjwnhiaewi","category_id":"cj3jhpau200eapcmja3q9cmf9","_id":"cj3jjuz1l00161jmjbe8ufzd0"},{"post_id":"cj3jjuz0w000b1jmjwnhiaewi","category_id":"cj3jhpav800hxpcmjz227sj8g","_id":"cj3jjuz1l00171jmjb73ft6x6"},{"post_id":"cj3jjv4iv00001mmjznb6m90j","category_id":"cj3jhpans001gpcmj5qadzvka","_id":"cj3jjv4ja00031mmjx10yur5w"},{"post_id":"cj3jjv4iv00001mmjznb6m90j","category_id":"cj3jhpaqw0050pcmjkl77lr01","_id":"cj3jjv4jc00041mmjw7tdiepr"},{"post_id":"cj3jjv4j300011mmjueoj7pty","category_id":"cj3jhpama0006pcmjvyefgb6d","_id":"cj3jjv4jd00051mmjxki9r3a4"},{"post_id":"cj3jjv4j300011mmjueoj7pty","category_id":"cj3jhpams000mpcmj4p7i47lk","_id":"cj3jjv4jd00061mmj5f9up9wr"},{"post_id":"cj3jjv4j300011mmjueoj7pty","category_id":"cj3jhpaon0023pcmj2xq4yjig","_id":"cj3jjv4jd00071mmjodsz1gqi"},{"post_id":"cj3jjv4j300011mmjueoj7pty","category_id":"cj3jhpask009fpcmjgvt1x7bq","_id":"cj3jjv4jd00081mmjn8l6im38"},{"post_id":"cj3jjv4j700021mmjc48pubd0","category_id":"cj3jhpama0006pcmjvyefgb6d","_id":"cj3jjv4jd00091mmjhcu5pfex"},{"post_id":"cj3jjv4j700021mmjc48pubd0","category_id":"cj3jhpao1001npcmjq2aan8x9","_id":"cj3jjv4jd000a1mmj90ylwe97"},{"post_id":"cj3jjv4j700021mmjc48pubd0","category_id":"cj3jhpara005npcmj9a6o8gby","_id":"cj3jjv4je000b1mmj16xj8z0a"},{"post_id":"cj3jjv4j700021mmjc48pubd0","category_id":"cj3jhpasn009vpcmj5zss7cre","_id":"cj3jjv4je000c1mmjh7qzxehx"},{"post_id":"cj3jjva2n00001pmjzqx6ho42","category_id":"cj3jhpam00002pcmjx5wuta7p","_id":"cj3jjva3900041pmjnnhiwstv"},{"post_id":"cj3jjva2n00001pmjzqx6ho42","category_id":"cj3jhpamh000cpcmjlv8i2n84","_id":"cj3jjva3d00061pmj3bbfyvri"},{"post_id":"cj3jjva2z00011pmjnirmbq00","category_id":"cj3jhpama0006pcmjvyefgb6d","_id":"cj3jjva3p00081pmj9szs3bv1"},{"post_id":"cj3jjva2z00011pmjnirmbq00","category_id":"cj3jhpamv000rpcmjs41omyhu","_id":"cj3jjva3r000a1pmjk6qsaio2"},{"post_id":"cj3jjva2z00011pmjnirmbq00","category_id":"cj3jhpaox002gpcmjo69xcqtl","_id":"cj3jjva3w000c1pmjby2yewyl"},{"post_id":"cj3jjva3300021pmjvnnn0thd","category_id":"cj3jhpam00002pcmjx5wuta7p","_id":"cj3jjva40000e1pmj9bqdujas"},{"post_id":"cj3jjva3300021pmjvnnn0thd","category_id":"cj3jhpamh000cpcmjlv8i2n84","_id":"cj3jjva42000g1pmj82z64s78"},{"post_id":"cj3jjva3300021pmjvnnn0thd","category_id":"cj3jhpanp001dpcmj4sgb9hwc","_id":"cj3jjva45000i1pmjmx23blpn"},{"post_id":"cj3jjva3300021pmjvnnn0thd","category_id":"cj3jhpaqp004opcmjxrc2m0c7","_id":"cj3jjva47000j1pmj6a9yyrdx"},{"post_id":"cj3jjva3600031pmj5xhqvsjb","category_id":"cj3jhpamf0009pcmjf6wqoef7","_id":"cj3jjva49000k1pmj408fopk3"},{"post_id":"cj3jjva3600031pmj5xhqvsjb","category_id":"cj3jhpan50010pcmjx2pxcmwd","_id":"cj3jjva4b000l1pmjkli5xqi7"},{"post_id":"cj3jjva3600031pmj5xhqvsjb","category_id":"cj3jhpapu003ipcmjiudrsu20","_id":"cj3jjva4c000m1pmjek8rb1uj"},{"post_id":"cj3jjva3600031pmj5xhqvsjb","category_id":"cj3jhpars0078pcmjzhjgb1k4","_id":"cj3jjva4c000n1pmjw710ctkp"},{"post_id":"cj3jjva3600031pmj5xhqvsjb","category_id":"cj3jhpat500c0pcmjxql5cyvq","_id":"cj3jjva4c000o1pmjgap78l33"},{"post_id":"cj3jjva3a00051pmjwlcbpfe5","category_id":"cj3jhpama0006pcmjvyefgb6d","_id":"cj3jjva4c000p1pmjwtxt72xh"},{"post_id":"cj3jjva3a00051pmjwlcbpfe5","category_id":"cj3jhpamv000rpcmjs41omyhu","_id":"cj3jjva4c000q1pmjrqzs35a4"},{"post_id":"cj3jjva3a00051pmjwlcbpfe5","category_id":"cj3jhpaox002gpcmjo69xcqtl","_id":"cj3jjva4d000r1pmj2qxe5jqf"},{"post_id":"cj3jjva3e00071pmj5wyyznl9","category_id":"cj3jhpama0006pcmjvyefgb6d","_id":"cj3jjva4d000s1pmjox66i4n9"},{"post_id":"cj3jjva3e00071pmj5wyyznl9","category_id":"cj3jhpams000mpcmj4p7i47lk","_id":"cj3jjva4d000t1pmjkflrmksl"},{"post_id":"cj3jjva3e00071pmj5wyyznl9","category_id":"cj3jhpaon0023pcmj2xq4yjig","_id":"cj3jjva4d000u1pmjp3ywzy1s"},{"post_id":"cj3jjva3q00091pmjjwg479jc","category_id":"cj3jhpamz000upcmj0u0jdw0q","_id":"cj3jjva4d000v1pmjye7r3zib"},{"post_id":"cj3jjva3q00091pmjjwg479jc","category_id":"cj3jhpap8002tpcmjn76cz79k","_id":"cj3jjva4d000w1pmji5l4m2o5"},{"post_id":"cj3jjva3v000b1pmj2oycp5q1","category_id":"cj3jhpan3000xpcmj839h38m1","_id":"cj3jjva4d000x1pmjecschyw2"},{"post_id":"cj3jjva3v000b1pmj2oycp5q1","category_id":"cj3jhpapm0039pcmjbdxzzjpv","_id":"cj3jjva4d000y1pmjfet8ikfu"},{"post_id":"cj3jjva3v000b1pmj2oycp5q1","category_id":"cj3jhparp006ypcmj2k0hxj9i","_id":"cj3jjva4d000z1pmjb931m83x"},{"post_id":"cj3jjva3v000b1pmj2oycp5q1","category_id":"cj3jhpat100bfpcmjxo03b3oa","_id":"cj3jjva4d00101pmj03qp604n"},{"post_id":"cj3jjva3v000b1pmj2oycp5q1","category_id":"cj3jhpau800eypcmju1nctx95","_id":"cj3jjva4e00111pmjqr76ue11"},{"post_id":"cj3jjva3y000d1pmj1fveqr5l","category_id":"cj3jhpama0006pcmjvyefgb6d","_id":"cj3jjva4e00121pmj64alqypj"},{"post_id":"cj3jjva3y000d1pmj1fveqr5l","category_id":"cj3jhpamv000rpcmjs41omyhu","_id":"cj3jjva4e00131pmje09xnvj2"},{"post_id":"cj3jjva3y000d1pmj1fveqr5l","category_id":"cj3jhpaq1003spcmjs850sm5f","_id":"cj3jjva4e00141pmjqwo86rgt"},{"post_id":"cj3jjva3y000d1pmj1fveqr5l","category_id":"cj3jhparu007ipcmjpw1sqf4w","_id":"cj3jjva4e00151pmj5p5v3rqj"},{"post_id":"cj3jjva3y000d1pmj1fveqr5l","category_id":"cj3jhpatd00ckpcmj59fxh91h","_id":"cj3jjva4e00161pmj5x3vofal"},{"post_id":"cj3jjva3y000d1pmj1fveqr5l","category_id":"cj3jhpaug00fupcmjv8w1hjc1","_id":"cj3jjva4e00171pmjsuuhktw3"},{"post_id":"cj3jjva3y000d1pmj1fveqr5l","category_id":"cj3jhpavi00iwpcmj9kde417z","_id":"cj3jjva4e00181pmjm8wxct6f"},{"post_id":"cj3jjva41000f1pmjhqlda0hn","category_id":"cj3jhpang0017pcmjptzs4f9k","_id":"cj3jjva4e00191pmjvh6csjri"},{"post_id":"cj3jjva41000f1pmjhqlda0hn","category_id":"cj3jhpaqb0042pcmjw1v7oczb","_id":"cj3jjva4e001a1pmjaj1839o7"},{"post_id":"cj3jjva41000f1pmjhqlda0hn","category_id":"cj3jhparx007spcmjgkbmyhkp","_id":"cj3jjva4e001b1pmj0qizyebd"},{"post_id":"cj3jjva41000f1pmjhqlda0hn","category_id":"cj3jhpatg00cwpcmja7m9ebns","_id":"cj3jjva4e001c1pmjhq2v5kfn"},{"post_id":"cj3jjva41000f1pmjhqlda0hn","category_id":"cj3jhpauj00g1pcmjv4mteau7","_id":"cj3jjva4e001d1pmjform2uyh"},{"post_id":"cj3jjva41000f1pmjhqlda0hn","category_id":"cj3jhpavm00j8pcmjf1a1clsa","_id":"cj3jjva4e001e1pmjdg7g8i90"},{"post_id":"cj3jjva43000h1pmjhvgjrct1","category_id":"cj3jhpanl001apcmjn6dbwpqj","_id":"cj3jjva4f001f1pmjjr2a4ul2"},{"post_id":"cj3jjva43000h1pmjhvgjrct1","category_id":"cj3jhpaqi004cpcmj3l8l4u6l","_id":"cj3jjva4f001g1pmjvhm1s90x"},{"post_id":"cj3jjva43000h1pmjhvgjrct1","category_id":"cj3jhpas20082pcmjzjdcrcgs","_id":"cj3jjva4f001h1pmjwkccn29c"},{"post_id":"cj3jjva43000h1pmjhvgjrct1","category_id":"cj3jhpatl00d7pcmjm74iggoo","_id":"cj3jjva4f001i1pmjpu0yls4x"},{"post_id":"cj3jjva43000h1pmjhvgjrct1","category_id":"cj3jhpaum00gapcmjksrswjhi","_id":"cj3jjva4f001j1pmj3g2y8sab"},{"post_id":"cj3jjvy8x00001wmjkodwxvl1","category_id":"cj3jhpare005spcmjk1146kzw","_id":"cj3jjvy9d00011wmju1w7kti0"},{"post_id":"cj3jjvy8x00001wmjkodwxvl1","category_id":"cj3jhpasp00a4pcmjcoq4uelb","_id":"cj3jjvy9d00021wmj4hrabz25"},{"post_id":"cj3jjvy8x00001wmjkodwxvl1","category_id":"cj3jhpatt00dmpcmj2xogct4c","_id":"cj3jjvy9d00031wmjqj8wajxv"},{"post_id":"cj3jjvy8x00001wmjkodwxvl1","category_id":"cj3jhpaux00gypcmjsxorxdo9","_id":"cj3jjvy9d00041wmjqb1a3xi8"},{"post_id":"cj3jjvy8x00001wmjkodwxvl1","category_id":"cj3jhpavv00k1pcmj8t1nqwl6","_id":"cj3jjvy9e00051wmjnlwiosvh"},{"post_id":"cj3jjvy8x00001wmjkodwxvl1","category_id":"cj3jhpawy00n8pcmjcfmjbzkl","_id":"cj3jjvy9e00061wmjnzjnof9u"},{"post_id":"cj3jjvy8x00001wmjkodwxvl1","category_id":"cj3jhpaxv00prpcmjvgxsivtz","_id":"cj3jjvy9e00071wmjnx8urfpx"},{"post_id":"cj3jjvy8x00001wmjkodwxvl1","category_id":"cj3jhpayh00rdpcmjq5yst938","_id":"cj3jjvy9e00081wmj4hv817vy"},{"post_id":"cj3jjvy8x00001wmjkodwxvl1","category_id":"cj3jhpaz100sgpcmj7p5hswml","_id":"cj3jjvy9e00091wmjiln9zi32"},{"post_id":"cj3jjw9ff00001zmj8pa8iqqs","category_id":"cj3jhpare005tpcmj552zuzen","_id":"cj3jjw9fx00011zmj0u6ryxdx"},{"post_id":"cj3jjw9ff00001zmj8pa8iqqs","category_id":"cj3jhpasp00a5pcmj1gx0616w","_id":"cj3jjw9fy00021zmjpdkwsrtb"},{"post_id":"cj3jjw9ff00001zmj8pa8iqqs","category_id":"cj3jhpatt00dnpcmjwg97ujy5","_id":"cj3jjw9fy00031zmj7uksco3o"},{"post_id":"cj3jjw9ff00001zmj8pa8iqqs","category_id":"cj3jhpauy00h1pcmjyk5fpucp","_id":"cj3jjw9fy00041zmjc1p6nxyn"},{"post_id":"cj3jjw9ff00001zmj8pa8iqqs","category_id":"cj3jhpavw00k3pcmjrxn6lwde","_id":"cj3jjw9fy00051zmjkkxzyayl"},{"post_id":"cj3jjw9ff00001zmj8pa8iqqs","category_id":"cj3jhpawz00napcmjrb5pqulq","_id":"cj3jjw9fy00061zmjvh2xkxw4"},{"post_id":"cj3jjw9ff00001zmj8pa8iqqs","category_id":"cj3jhpaxw00pupcmjdgbgp3ow","_id":"cj3jjw9fy00071zmj7m08w3qb"},{"post_id":"cj3jjw9ff00001zmj8pa8iqqs","category_id":"cj3jhpayi00rgpcmj3ip7ncfo","_id":"cj3jjw9fy00081zmjdvlpi00i"},{"post_id":"cj3jjwf9p000022mjoma8xsun","category_id":"cj3jhpamf0009pcmjf6wqoef7","_id":"cj3jjwfa6000122mjwd07m534"},{"post_id":"cj3jjwf9p000022mjoma8xsun","category_id":"cj3jhpaq0003ppcmjvx8dah1e","_id":"cj3jjwfa6000222mj2klyjcbj"},{"post_id":"cj3jjwf9p000022mjoma8xsun","category_id":"cj3jhparu007epcmjm2dc5y9b","_id":"cj3jjwfa6000322mj4lu59qc2"},{"post_id":"cj3jjwf9p000022mjoma8xsun","category_id":"cj3jhpatt00dopcmjqxsix4z4","_id":"cj3jjwfa6000422mjpq2eha1r"},{"post_id":"cj3jjwf9p000022mjoma8xsun","category_id":"cj3jhpauy00h4pcmjhwjly6qs","_id":"cj3jjwfa7000522mjyw8lvghc"},{"post_id":"cj3jjwf9p000022mjoma8xsun","category_id":"cj3jhpavw00k6pcmjk46uy9au","_id":"cj3jjwfa7000622mjbz85f39i"},{"post_id":"cj3jjwf9p000022mjoma8xsun","category_id":"cj3jhpax000ndpcmjjhu41zdv","_id":"cj3jjwfa7000722mjsvqqvy7m"},{"post_id":"cj3jjwf9p000022mjoma8xsun","category_id":"cj3jhpaxx00pxpcmjy5c4i1ts","_id":"cj3jjwfa7000822mjsgqh7biw"},{"post_id":"cj3jjwpo6000026mjxt1ep5bp","category_id":"cj3jhparf005xpcmjxd8ksmkm","_id":"cj3jjwpon000126mj2f8mq8ff"},{"post_id":"cj3jjwpo6000026mjxt1ep5bp","category_id":"cj3jhpasq00a7pcmj5juzchht","_id":"cj3jjwpoo000226mjqccfdx4f"},{"post_id":"cj3jjwpo6000026mjxt1ep5bp","category_id":"cj3jhpatu00dppcmjuns3umsx","_id":"cj3jjwpoo000326mjn1c1n7hs"},{"post_id":"cj3jjwpo6000026mjxt1ep5bp","category_id":"cj3jhpauz00h7pcmj5nzr00rd","_id":"cj3jjwpoo000426mjjthl33vs"},{"post_id":"cj3jjwpo6000026mjxt1ep5bp","category_id":"cj3jhpavx00k9pcmjaixyy0i9","_id":"cj3jjwpop000526mjhdax6v1k"},{"post_id":"cj3jjwpo6000026mjxt1ep5bp","category_id":"cj3jhpax100ngpcmj05o2p4ij","_id":"cj3jjwpop000626mjvqaekqja"},{"post_id":"cj3jjwpo6000026mjxt1ep5bp","category_id":"cj3jhpaxy00q0pcmjetr6lkf1","_id":"cj3jjwpop000726mjvbt6ap4s"}],"PostTag":[],"Tag":[]}}