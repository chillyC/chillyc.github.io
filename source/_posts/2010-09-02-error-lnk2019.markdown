---
layout: post
title: "error LNK2019 unresolved external symbol "
date: 2010-9-2
wordpress_id: 316
comments: true
categories: ["c", "cc", "code", "error", "gethostname", "lnk2019", "winsock"]
---
<meta name="_edit_last" content="1" />
<meta name="_su_rich_snippet_type" content="none" />
<meta name="_su_keywords" content="LNK2019" />
<meta name="views" content="2408" />
Today I have found this problem :

<span style="color: #800000;">error LNK2019: unresolved external symbol __imp__gethostname@8 referenced in function _wmain </span>

<span style="color: #800000;">and </span>

<span style="color: #800000;">fatal error LNK1120: 1 unresolved externals </span>

code fragment is :


{% codeblock %}// if this code fragment can be compiled, the result will not be your expected.

#include "stdafx.h"
#include &lt;iostream&gt;
#include &lt;WinSock2.h&gt;
using namespace std;
int _tmain(int argc, _TCHAR* argv[])
{
	const int len = 256;
	char buffer[len];
	int a = gethostname(buffer,len);
	cout &lt;&lt;ａ&lt;&lt;endl; // a will be -1
	cout &lt;&lt; buffer&lt;&lt;endl; // buffer will be filled with unreadable code.
	return 0;
}{% endcodeblock %}

<h3><strong>What's wrong? </strong></h3>
If you don't add <span style="color: #000080;">#include &lt;WinSock2.h&gt;</span>, the compiler will report :  <span style="color: #800000;">error C3861: 'gethostname': identifier not found </span>. But after you adding this header, it will report above error again.  First, you should add the header &lt;afxext.h&gt; into stdafx.h, then compile the code again. Code will be compiled without any error. Then run this code fragment, and the result is not my expected. a is -1, and the buffer is filled with messy code. If you use WSAGetLastError() function to see it error code, the error code will be WSANOTINITIALISED. Yes, I have not initialized. So we should call WSAStartup() first and then gethostname. And WSAStartup() will check DLL version. And after having gotten hostname, don't forget to call WSACleanup(). Here is the whole code:


{% codeblock %}#include "stdafx.h"
//#include &lt;winsock.h&gt;
#include &lt;iostream&gt;
#include &lt;WinSock2.h&gt; // use winsock2.h is ok
using namespace std;
int _tmain(int argc, _TCHAR* argv[])
{
	const int len = 256;
	char buffer[len];
	WORD wVersionRequested;
	WSADATA wsaData;
	wVersionRequested = MAKEWORD(2,2); //version 2.2 
	int err = WSAStartup(wVersionRequested,&amp;wsaData);
	if (0 != err) return 1;
	if ( LOBYTE( wsaData.wVersion ) != 2 ||
        HIBYTE( wsaData.wVersion ) != 2 ) {
               // only support version 2.2 of Windows Sockets 
			WSACleanup();
			return 1;
	}
	// get hostname
	int a = gethostname(buffer,len);
	/* if there is an error. use WSAGetLastError to find it.
	int errcode = WSAGetLastError();
	switch(errcode){
	 ....
	}*/
	cout &lt;&lt; buffer&lt;&lt;endl;
	WSACleanup();
	return 0;
}{% endcodeblock %}
 
